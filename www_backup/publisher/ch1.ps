%!PS-Adobe-2.0
%%Creator: dvips(k) 5.992 Copyright 2012 Radical Eye Software
%%Title: ch1.dvi
%%CreationDate: Tue Sep  4 09:23:33 2012
%%Pages: 33
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX10 CMSY10 CMR10 CMTI10 CMMI10 CMEX10 CMR7 CMMI7
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o ch1.ps ch1.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2012.09.04:0923
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMMI7
%!PS-AdobeFont-1.0: CMMI7 003.002
%%Title: CMMI7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI7 known{/CMMI7 findfont dup/UniqueID known{dup
/UniqueID get 5087382 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI7 def
/FontBBox {-1 -250 1171 750 }readonly def
/UniqueID 5087382 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI7.) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 105 /i put
dup 106 /j put
dup 110 /n put
dup 117 /u put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBBAAB71645535A2B
6F0F22458E1429F4A67307E01F0BCF6F337E0E2AD89658D880B04C26306F8179
C8121B958459B923AC3B05B594D8AB95F75870019130442FD29578D44F5690BC
7281357A5041C8A809A59D0DEE108E2A07D406656BC74A9F3317CB887E712318
46B2ECAA341F8692ACC2D14ABABDFBCAC6F35858355F1D3228B0223EC73AC56F
3C987464DB829F243E304F4C59CDE3EF6EB53A4EF9BA91510CB89A3407261F58
A2AE66880BA98FC1EF546112892494C85A2C39F9DCCAC5766725894A7AA148E9
42360AE64BF3A4F1F9F0A0D0C1AAFDC4D50C52233AA595B7D0CE557D4A010D86
6E6B76A7E9523E8A6633DA9348BC3F59302F72F492A30782AE7EF220516893D3
DE836CDE311DED9262AF01C506040541EE84AAC539B404B23033EF56D4BCE6BE
B05F79CD633FE75C6728114D2749E39FD7454050F67763AB636377BA8E1867C3
996C7D7D4A4A02BC49D1AD7FF174C1F49F1F205BC9D5AE42BCB02CF8554E8F5A
D1876C9285B6CCD7B8C165F75843B0AA11D8462B57077AFE75BAD086E9D9F91E
30ACFF91776132F3CACAD1CA5E08B17B36A0E45ACBAC52393B9AF9089BD821D9
CD5A9CD9BECA59F7445D63DECC1B4502D299DB85B6E2EE7C69A1DAB91E22A3A5
89B524FA20AF6005E7A586B90A2C6E5A93C9EFA4ABEF5F7E4C7B81363FE8D2B3
0AD637FA863DE787581ADD7CBE463F7866C40F4E280260ED0E9C8453E5C7E668
FFF058B9742DD3F131C264F8FA102CD0DA05F3114D13D34D422799181453FE23
2FC6EFB01BE420C930B879D671F3DFB036197874725220644A5A52DFB467BB75
8089E4F40CE9401777B9FE1D0AEE02E782A6EB2A185A454AE9394094CDFE7CFA
C03C23A78EAF242E4F811E4C83B59EF4DC5ACE4AD37B41616B46C263358710B2
6137314545CA6CE89119B42A3518EC85C68DC07D26839C68B1FF55C4A9CD518B
A1FB32F9C475BB6110839FCCB94156E7B3648F27245A00D2966FC4DDE3996BFA
F463A663CB6935B596B1582ED0ABBC648AAA8A86068BF0038001C753C8BAFA0D
2058041DFA720B528E2D4B16196DB1CF30C779D3F4800FE662D5B60B208341F2
A66EFCB8448C2FCD12DF0DD899911A8BD96C9B670054D328790E5D388518B146
8CE92E368EB1DB3CAAFCA4834CC9D9D9DCC80FB1F34F39DACDE643052C977A7E
A95C5FA8DFED9B4DCE769E4E46256D6DA8FB18FD7FA4E4CED5D486803538F3B4
6D3F5B3C03184F5C26C66DBB4C724918EBB6A89C4602E4EDDA81EEE2BD18B683
FDB459F2CE0A9CED23DC208EAA8BEDB304B00E093DEE926A7B32FDB2EC70DD85
94B9137856DDDABB402B2C76DBA87149051ADC6007018EBDD571BE1D092EBD95
76D4E063AD7D5F62E6C26EDB88D38678F2806A1F4900B0ABC4ED034A818119A4
E618F1A902315BC98F26775E59555A3DCEA1D0F8B20A9084920ECBE3F7F245AC
1182A40B518B194669D95DE968542BFF80FDC89669BC256C44CB66A2AB8CD7A9
E42C69956CCB6BDE8C09AD22EF3196939B3B84EB23A6E071A36D702909E019FF
058F27562441EB5CAE87A4407F67C4390810BE89BBE867D636468E73677B84C8
5A1228DD7DC8EADA221B1BAD5F43E832F20ADE7ADBFF170AB306F5B711816FD1
39B7882556E30F002977FB88D8B28826A75DE0D20354A2D41F2DA8578376F7DD
F27B0F59D4DDDF5790E11E3957491DC74EEB7625CA49FAD90FA47AD8E0BDE824
FF326A84846A47A21B70FA549BEE307F9C6970009F963B49A504F0115777826F
1D81203F655C242FFF15BA97E3BDDFBF435B10E74CE8543C98966223818839B3
6BF3BC63F882B0AD0FDACA8C56A570277952E1D83F18BEDF084D2AC004E2B09D
70DE1740D7D220E92B54D2FD0DDEAF1E08C41FD321A8D474982DD105B23166A7
AA9E0129DC88065B1E0F9382BEB4B4E1DAAE3EA5489BDCA921AD5A8175F2841F
9400478DFA99C5E5553F383882664D73FBDFA29BF32E52C28DCE80DAF4839434
022FA515679DBC13FE98968D2894DF5DD69C49BD23D00F5D858B69D1F220F968
F0700E13873579B3CFB658972098DC61F1DD580105BC27795DB4AF11A871CCD6
2E1B9AF7F0DAAD4CE315379A7B42CECB983DAC5A2B9426B4E5E0A7F7978504C1
DD7E30063AE3CBDFB24EA2BCCDC478AB82084FD30A4793F4707D9F8F9647B413
F8A5C5AC6D5EA0E35628CE1096A434FB8286F4617CB4D0AD30A4A0B255A5A356
25AA5A947FD3C4FA44B4AA80BAB44C48CC1E2C6D0A711365A37A58C3483D07ED
301A83D2650A2E8CBA9EE62FF5C2736EC82C1402959F64527F9B640619F112D9
8E0F4A8A3078C72ACF3F34AD855AA4008C96E30D9E8C414607C34E06E29AC5B9
2EE5DDB823E8C3EEE6A8DE228313D476A7F39B5DFBFBDEDDF7C45C1C88EE6D01
7FB4F7BB2CBBD5DF7F0CBD98DC287FA6940FBFE1B3B136613A3CF16634CA7B90
53D5FD5776515EFF5D37F8FCC62D8BEC8EE2216503D54D6F2032D3C2BF861E15
FD1B45B71576F15852EEA65DD372E911EF4CC18283CD2FF4196A3F1A9D81137F
F1820EC604D6C61AF318C6C5AB6DA1EDF305CADEF7CC0183B86D31310A09972C
A4BC37D110C77ECCA614D1A281EE1C2040B4A5ECB31A3FC61760F608E44332D1
D2C53C7891B505A3020E9E4915F3618588FCEC80B9ECC5E637D8D0F3C94B1F2A
C53FC46CAE0AFAA7E12266C212A73AAE60199752C042BD55A5DF1CD07FBDB830
C83E7832D8554AD9C9CAEEC7CED1DAEE622090897641CF2E5B34A353D83264D4
4687522DB290D3BA927BA315EA5D25B0D7B69350C6C180AB0C322B05E01F7C7D
F2F48651567F0C1B49AF3950E43C94D78F7B184BF2946B924BC4279AED28F3A0
17A7D8B235698A516D3FB5DF0B18A422B2410C385E7E9439C6D60917EB3299AD
E31471616251FA40C9FA098109BB31A54D9C03B2F12947E4E9252A0851B81C4D
F39E7FC44752504B589C3911571B1D3EC3BD1E1807F99CED1DB20270E483A805
CA2A016E7283550D1B1D35C226FAB63F983CED41A4D02A2F228FA9EF065027B3
CC69D6F2E278C0A2D238D3A37154B0D22281F62C61D9182A69657B027BBDED64
11E261E47620602F865221A534C5A32E2BF5B93A187911A146F2E96538B47DBB
7BFA7EF406FE940F4DAD17E6E4B80C4F031D71F65657C2F5C8233EEAC68DE8A7
E1FC3055C122C1795D0C71A0284F89A9BF04837F61C9E08DB42644A490C97D34
A5D3CEE475B8D578205005A0D68AF94AD27C0E855BB8EDB74775690A4EDD6543
BCC10CF13283D6FA8A7CF3FE6C4F96470A11FF0B0160D3F9816B13B0BAE0D8F9
B84C7631063FE658D13D108D6FE24A89799FABA72E6A6D1C943922CBE676C1B6
11A4106ECB4F1A7F8A84B2783C2E6A109C58D63FC0B74D8C8A1CB62D527441AE
E656D94B1AA8581B4F07B653ED6486AAE1F8ADB30FA8D8914AF24721C74B0908
D84F2EBB91144ED4BD7EF533F2584048DEE37E17CDE5FBC2992A6F924FEBAF07
B626F988599DECDAB43C931CFECF99FC6EBB72F8E542765C26295902DFF60B7C
7B9ADDB4858BC9D808B7F0909690CF8DFBC59A786D48B891937C31A219842A43
234425B4963062DB4C4E9F534C77F4243408805B5A6B8BBF428632CA4AC03A7A
E336DD181CE0CF3E742079E2919EAFABE16A63299771BF276EFA8D85C920F995
5B9D4E8F1ADFCC5C29AA89BF90C186C5DE7679906B2FD4DB279D245D27D08837
D3A8D541FE37415B706EC585C05804108C1D938E543B8B63E275EE85CE9DD843
0A8B9163144B77DA1A552A25D5E77E94F29CF252BE9950F4E627D5F72536B6F3
3278D4A45D10759F16AE42BAE8460865FEE84537F8EC9BF4813570E883B826FD
1ABF3F4E66DB6FEF8366E07BCF290EA67D39C9D81B2A7EA48E0A228FE3D5AA50
1A56CCBF229C9AF2537A8FA70EEF41096ACED34CC7BEECA4EA1F23B39FBC39D8
CCEA93E63F508CBE6722C11467A3D0D5C4C52031DE43C449333E4295104651CE
E13B821D7904653346067E971BE0042C571ABF40C3A1079A675FE4264B784D46
1B8FAA4CDE9851C4EBF69ADF51A7B68CC8706C08D13A44909D4C1D78DB0E0B2D
0E0318304B229DD2FDC968027CDFF65722059C62154304D6F9C3F06DE22914EE
928B7D1BF1FC7E74B4D882998D59BC086AA2D4EAD0AE39F6B75B5A3FB9994506
E21731E1A15F0F2D12F88724BA72898197A80FDAC00243A3038871EBD2F2BAB1
C616278BB78490CB86F552CBE5DD0862F3793D72C68AC16AF8E38FE1A523A5FA
9B0428745B1455671CFA1F6BFBCCF9CA23C833113C2948E7A6AEFFF1A83509FF
C559BB5EE7F92BB43F7F37A371E661C826F63DD0C1B25E34A8119E71EC82FB66
23C7B126FB6554E7560B1B69F2EDBB742F3B20D1648C151C37A8570CBD330A9E
7592A8607D2D727F3AAA0FF2057DF4E2A4C7D3B658C6CED38824A770420D89E7
F6AD385DBCE9C9A9095CF0042052A67AB804A6675BB9373A99390CBDFB715984
A069DE543E4C6ADD7F1EC7A15392EF834EAB4584679A43443953427DB13E6959
0F2F5061C99C6D00FA5327FDB5330AEDE19A53DE3AE092634DC6AEEAF63A5BED
990F8A117AEB1CA0E7F7DBE02CB3D86465F1613B976D1CF6F3A1E69740A2FDC8
062ACC45EDA6B863B60015F276860FB79C31D28F97A799568E66D0A8757B2C41
E939337B467303041D0F4C59390B2E41E5F298F275DCC699D27C459ED4D5ADBD
02539F00095D7E1872862142B46BE06513D3EB1A406E6BAA64BE795122100F09
C37E5D1834218EC1D11B031C7DFC9F5AB071A8F4DC08203821366959E9191D4B
289682D915AF28CE5858F83338DC51B6B0DD052A181D9133FBA50CF18F70EE65
C33726A0450EBA9D0E0C3662AF6C2121AB7911AA9880D6BB6811D6D7515888E7
199A0E632104059A88C9D85B19BB35EDF4AB95E1515BB2339572928BD5FE8CBD
2D4DAF55DCFE29FBC4C3D56336277BA0C9A889A129F9FA7052AD1420B8705163
1A808EC1284C888D78CEA2B4BAB71AD76289F5F4986008FA9BF328E8537E6C91
E11DBDD8447E1C9ACE18DB0EC3D5742C264C8EFA445C5D16C2930FB43669774F
A2CA52144D99EFA8FC427DB4128CD4C036A8C611B087335C780740FAA419D39B
5DD68EA89C95275F9254D947EB3683D0130255269B10C6CFF29EA0BE484C9949
96188FCB747618A8044E2E37DFFD2DB8ABB621B34DC024259340677095B6937A
78EDCF508AC91D4CEFD872AD73F50582DC8807143CEB9F109C84DC5DA30B64E2
E56DE973088A9D32583D6946DB4F3523902FB1781D993B89D5F56D79D5D98CC1
7FEE73FC3A7D1BCCE90179AE450829E228B4DEAD3B2B4C79A400CFF899AB26F9
048B0875EBC871AD23BA96F88CDA8B87FE5809A13889A6AC349ABB25E54ACAA9
C213C5DE2D01BCB9CC0D7BBD384D23AE12E289FF8FDF1F611F5E14D4B20B15A3
42D9B3B37A83A9CA39B5DB6C8316C51B70F211530A56CFE54D63E88169CF5233
D1A7B2388025B3EBD2BEE0716C3A2D589EBC7A42B3DA602AC4E2FD9C9052C922
711E44408DEEA1FE0C9FD50A39AD46D437F61F284A2EFD42EF158EDD71A1486D
4865D6B5E20E60F4F4FC3D646909FF1EE2D7573665E4CD8340A1B232CAC0202C
C35BA9BB3D2267C7E78518F6711633F888EBEF72DC750AC2CB362D528CFC8B2E
A1AE1C05456F50EED8CAA768DEF47FF85C4322F02D7F9D188C6F285C674EF589
251B0B913339FD701FDB281338D96704ED7ED908BC113B4275A24D058955890B
12CCDD5572D63688426B0E1E9A40D6AAECFA5555C1CF9DBEF8C04CE1E5A63F14
969D39B6DAE8A91F6AF4CD1E2DA89A4661DA34E272B6032C442C031F081F5DF5
858F4620885773D8A2B2F5EB6DDA74C1408DF279900450E4A3E80BA9A9B1295E
F24EDC3F6EFD81A741EF74B0202820516C4FB720687BDD915EB2396128C3B262
20E3075DA153D6FD36E1C05B855929DAA4DE694B6F15EF2145C63250B24B031A
4CF0AFDB225E91D99828B83BD90F1702D3906D45872587A3A116B138AD9627CE
E778A949C392202823C670FDBC56F1896FFFFBCF52C4B400F67BA36B5FCE44A5
F18EEB8ADFC088C99DFF8E0A593E81A5ACA2E3693005F723C7D3E0AE2BDD3805
8C6007A00542DEB2539709558A88B21003CE4B2C7817AF207ED576B25A41DEA0
FC55A459BEB00ADB01309B35920F04F84B7B64F95AA99EBCB843A06CED900D99
97BEFD7CCB9F4D85876F10160C8D63E2FDE82B7A8D945F37CC9933ABE0FD1D76
268296B1A5AB06B2E814691128771694224781171DC6266BCC290FCE1AB59416
85530368115BABD4F1DE45952918D1945D51EB713C283DAE8EDD559F437CD886
A4B1DA6120D685C284673A3EE489FC1AE4297A3623B339B7D886B6B4B8F9F4A3
7BF85E320A52FDC6323B51879B98A14C33C567BC069D9B44616514EE1BE36F90
EC5FA33E1B6B0A46945D876EF0085E74935DF2560A03321861A752E59742B9FC
5C501FBC64BFB1602459885B63873DC857ED37F8BE1A9C6E9517B9BF5A6161BD
DEB6DB0381FFB34A8A96AB4AD48BEC40D4C198ABC599C3758AFF638AA75BBDA4
8545D5F95FA426FB25587301A43E176F6CED7851E815AD907F2443E70740DD2D
4FBD5D978B9B37F59D6DCF0ADD0F90825DD23558FCB858513602C8BC82BFA383
7AA6DCEA4009961D06DF233C5381A7F9541259926446B2F03664BC5978A1B6CD
EA6EBC9FE6100A65959513EEE32E69D47B55BAF30A893D77142F943982019C01
715CE29923795EA01C58A798979939B507C5B29A32881877EF7EF0C5CB3DE591
6B9A6C3F3FFA847F396A396F078860B59850BA4CA3115CA2376AEE6B30C05DC1
6F9DB6781ED0F9D45D10E096C33B1B7CD12A9D57C6E49AD833C4B093DC82811F
16B3BD902BE764A1680831EC5A6C1CED84AE0DC0A65678EA5270BF20931E6409
7AA44EACB22CCA11098F8A51096BE83A1ABA56C9EED4195D5CCF24FDAD92E823
C439DAAFBFD652157D728F2754F28304710D3CB33763156D76A259D446647A11
493FAC70DD28063A4CDDA162F72542368E1AC2826C4BFF7109208F66371910C1
068F21779FC39DE03AECF1C9FB2F417930C22791961D801284DCC89B0833B6A8
D63F153ACBFB7B7D547924613BBCCAED37D90BAC5B0264ED31C7B9DA5A2BC620
9B20CA48424D0FF58905BCD6190BF4B5FC6ECCA1BCEF13426920197CAB41C4E6
E82E8EE7BCB23C6BA6F8B58001533B225ED721D6CE3D6E89116EC33CAA6E905A
649F8C6A1AA187A48E20DB864596481976216DB78F0F57543DFAE3CDC0A6FC77
2CAA49442527A5D94DC54BE93C875690CBE52EAA4EDD9F2A511361BC0F0807EE
96AD0D26B62D809E82EC14EDB158EF48A748A6FE0C3A7EE5D4479B35425F35AD
3EC7444F6FA75CEA5011AD571078293448A33C7647611CAEE87974B0A756DAC9
4E1BA78DEE477FA59AD50BF5C52E068A5E044A4A4994D5B24CC5045F768A3C51
D4F65E2A5AFD271A7666C6835E28C60751EE528C0742433165AFBE71562A3016
F59676D56B0B5F7E4984D664BC3ADDAF24B4205752EE21D4B57057A943018466
09C3FA5D2C5BCBFC22A643586BC9E7A965DC34C0A7D272B5B1617BAC2B0CB510
5DD5EC6F7ED1226D19189FF547776698FD48B7A6A038131F869A9E24006A4FCB
9FDD5E4A6DA9C531E1F1D1F0131CF8BF06B78BD2C6109E3D5251ACCAA6661142
7E0CF66D8C1998ED3DDDF69890FB2039F35BFBA2D9E6EA42F2E2E88E8C66D0C7
6B2A404F1C72AD3C0A327A90E16092E727CB2BAA0128995EB7C99569C8CD11C3
77C294DC2CDA70D0CB20DC0EA68FFB6BA42D64A1609E07F378A1AE072D1E66EA
6A88B6216A65BB5D731DF9B83A7A1136A9CE874779495E7C1D5CBB3A4F47906A
09156C93994992C526D0C9BD0129976B790F553FB2400B78F2857FDDA9C4AFF2
AF6A3334700FB3733F881FAF164591DCF506611CBDDA1E075026F2E98E581366
76C64A391601CA4FBA8CA906ECD13A23F4B7E7B39B39088D010DA238CCD5FBD1
DE4A90C188432793EEE6100D31754A7E35006BE1525B491190A9349D56CF1571
8CB1A7FADB595012FF87C7C9D63D48DA49C6FF1DA2DB4BE5C17C3390FC33FB05
F07F8B7B0C388164D3921F15FCECDBF93C0586A35C24855A60ADC7338067BDBD
E1DD30CEB2A8B8C8F0AF73C3469EEB3DF1C9C8F8C48ACDCE7E1866C96228D08C
EBA4B645F56127F6A6E8F1DDDD12B335698086A769F4EAB18B90153A9E57DCAD
1C91B582AADF9C8290124F1FF5D5143061A0EC24DF43DA769A841FF7CD2EA08A
778CDED5B5EDD1C3143E255D4D8D354FCA7569EDCC74494E6F88D9ADF1DF556F
8DCD3E667069978A64CC6DE3C2A906A18E0E207E4BC44A945A046B836C7AD548
49FD856963557B9C6932E46F483D4C5A9AC52FA23372746669D56F6579693CB6
D061A4D73F74618BCA57FB8211AB1394D708490FB2AD84194FBB5F59AD176B36
4924D896B22288E9F468617345902DE381C5527ACD6BF32DC7D2D41B8D013C6F
5F7DB4BB83451784BCF41343BA6D6E1CBA1114CB0BEA6C0D89BED6A4C10A9D5D
AE779FF27D862A601F72D92A5D3893C27147621C98B8B72C2AC0D37C1B72FE31
F86A9EC948B43B13F6E7F6B79E39E8318F3F77E556C08B786CEF1EC628E9A67A
9107E1DA17E3EB09E7D9707B7DCB885D6BB5ED150BEADCAA4014D8E3D69DDE7D
E4552D5C518F7ED172FFBFB4AE310DA099CB9C3BD478B82C3AADFB7806F74AA7
699CF198EDB3D878BA388FAC973DD02E573511C23BCF5186147E72DB58728D09
2C35277F2D0B21D1C79245579904A715A36245141F29CE7A1DC8BF88366F110E
32A153903552F38CF2DE1987DA2972C40E97F89A4E2C493D64C7B7B020B3C7DD
02F421BA877ED2A80C43E1BFC5A7B0640FCB5FE51F4B3B0588FFF96E084F0735
49F8296C0FE9DB1740B17CC7206BF5DA160BDECC43F7FC64C0F8B693FCE9B985
783CF805F54C400A603DC761329150A2F642B36E253176FD4C2D16191D39F79C
6530C1A5462E1889D9957E17708266E81727F4918AEE78102AF4C2A832445BBC
7B667A9EC11CBEF98175E1B9F6761C55CDC91FB4C40652C878022E3EC6B5B0CB
3BD7EB5670375F17BE9634B34EE5A3297C9D90F5A8C85C2AE26E8AC5D6FDE46C
9FC415314CD3AF03418E5F026F6A399193B9657E6250F0418241D59328057A45
3A4FB7F372C6F85E4658A2159DC211F2DD0D83C1A25336B88D0142A964B6A8DA
770CFEB7A874423737D70ACC3BF574303FA11BB17AC2C978770A415239765CAD
96D8D6284C0758B6EA627ACEAC662C7FE64676BF1A1441189CCC7CDA0640DD64
90CCF587861319E17990883CB484585AD140654DCEDD479BD66EDCFA6D1E03FB
5C0C53448FF8AE750C4510381A7D54910827126BC08D0F9156B792DB4CFF3549
38C51DA82ABBD1DD91F0F7B5836C81F6151830C9ED7D3E5E9A211545424CC58A
E6EA382A21423EE14B1F635A19647D6AD22D76A9C7B0B7C2B5293BEB45745D49
B6802EF28AB9737C4CC68ADEE7671319F71F20D685DA8FB730242175986F1208
1292B0661EC22D3E37AC24DDD5794DD7C19238CE1D52A50BC437464E8E5634B7
33B089C880CD6208548736508CC04DCDE305E65317A4D73D3F6F74B9D080D36E
5A5C8C0B95C1328415BDC1C6F26ED9185D1F9FA6F211863702D2CE9D03EB2EEF
CB0FA11062CE763221373EF6A41CE9AA5226DC6712BE7E77062B103A5366B9A7
25E27C109A93F851065B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/UniqueID 5000790 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163A7E36B833D1AD45BDFECA66E5573877FA45E206F5075D9565C2970DE92
E3B0AFD624E645623364A01628270D6EF698A08006C10C4E73CB2E4EBCF70184
397B5B03C7586FE626F65D0C7AB4C6AA162A2A354103228D5F63EF59C0BD5E59
AF663E9B30FA57D34F626769057BDCFED0CE96844403E00EC4CF7419A7816656
8C0997568E0C7CE61B7DD5E883C4E7348AE4D0E4DC6C847D17B63D27FFACDAA0
4F4484593AF4786AE4281D0902010F99BD51A02F6000E5625F8974DB10BFE2D0
AE52D1D9781CC6A92B15D9FF28B10A24A1FA476EB1BA68581FD95633CE1D7AEB
83A8BCEAFC01A91493416D13F1EED38EEB5B2EED79A9BFA6481F0FFB08F78190
A93AAC12F47257CC6CA7D638274BAE608882FE63B4FC0493F07A401B1E9C2C37
184C54A0DDA135524F4ED3A73DD9C74C180C58C4C24F345842461F777F51C734
A92133AA7D2E50297B9380110E4B4DE528A3C5588A14412A264B48D1EBEFE607
0FA28F3EB27D657E8179C3CBAF8FB68C961697653BB18F3A71F6AE55D5A6E239
97D72E6D8B6364D58ABAB1C317BDBCA7684BF407B2F155907B8F8B47E3EDA1C4
D16DE6B851D09F758BE687B6E223F9D9882C1FFA2B81811BD61CCEDFAC709035
EE2F81CC6DC8C926319B0AB65BBF7F6E49E4FCF17B8EC6E5208251169EB0869E
F44815631D73315A971E0D1C4FBD71A2356E1B376CB7F1D6CC7FDD19A39C5F7D
160BE21493A0E11B31B15C054983C4536B0BC6E0D346853DA730EC5E8DAD9DD7
6AA351E668AA100C0A62E0B762BF86CBFEF9A538B4EBC556843D7B151D8F9934
B505978903F7AE7343498C568F1C92EE1BD532E590AA9257C9A97CD2C23BA6D1
F48867FEF9F5B61530E92C1FFC962E0996E41BDE029CC4A69683972370E59BC1
B019208BEAD01A110B5C3F0C8F579A0F85BB672D9061E694EAD9D838D5D4EF4B
30C72A960708CC97597B34B8847AB1053F4DCD132BC0656E8402448C328678B1
C7EE32F3BB03632BBBD58A66371DC57572CAB7EE64DC4A3D0680384EE8797641
097BA7EC278464F4FDEE09804419BAC105990AB611C083FD8B1B556E0ADAFBC8
F227B2D8909645F502BF55C6502AC693541A7DC097123A4FCF770A751D27E982
D6A6F5748587F30FDD1C14CBE53716B10DC0B63158A5366283E39369916C5E37
992BE19D00AC4E5C701A0B124CBE2AE61CD23921814A9EC71F88B780AA09E61A
35B924427A679C0D015FC4167E42FBFF2E1C487F45AD6D4775992D6A588F3463
B3416139E91BB75D5B7CE0ED7F63B2E820CBE26B62707E116D1C3183DFCAECDC
6A1776C6C3477B8322BAA7D15570F6C98353F31559CC1D072B7B55154D6E81D6
270A3C28B87636AD8E8C75B6D915A1218B4FAED271BC9D03071E3466099DD9E4
28E85F7C5296F1E605E9A56FC7D3F665F04207B82AE9F183F77C6BB790DAE31C
765B1197E46CA35B0D8F157706482C3DCF4483F423F0DFC45B4B1E37B6C9C627
035E8694584A5C698E434EF379D9E4CE8B7029E668485C25769128145484177D
EA0B74EE62AE0E1C917E9345B24E96EC0C724803CB3096FECF90847B8D0FEF18
E6D5DC2369ECB0F4E0E17CF3A5984C1CA7DC424C65A66AA2FC71DAFB257A8B69
27B247CC9C790509CF360535F2A1BFAF0498D6ED7E6F1573C7F82F137CC937E6
CA92EBEEAD1236283C5BA26CBC6BE8B62A17605177C79E4F90A267B173049620
CC663169C2A9B5EF7881DFE091CE6F68EEA82D2D171C336597F7FAF2D8DD7B36
99FD7458FEDFDF75684F1FAC4F73C1ECA78FBF0E23072BEB64BB6FFA6EDF0259
0FA0A90AAC894D9298C88ADBA12C0C6A106549CA5AC85D45703523779326BB70
1DE37FD8AC8EB978FCC66FC7A5805EBAA91F7BFDB3B980B62C91E750B69099C2
BDE741769437D0DACBA83C8E9C15E3DF4F55D1F81C34BD1FFFCDC73F61166162
C01D2CAD0791CAACDB471B09401C7EC3394593C5B714D1D6585D94680903E2FC
9BEF444DC5B584B0B334E7D710A2BAF1F0C13D21EF5F6F35C538D338F3DADC75
9AAD7010571CC2F095E4EEE04526784AE190873C5E7827FCCC485798A723397D
7C0A98E6806557F9E2399F6CF1AAA3FB6D4F9869ADAAACAA039B029BEE53007E
75F88549A10B1860FDCA0C4D9623B3D4A78CF8833720CDE68CB55C6EEACA831C
CE6F151954DF24788784AA1CBCAA91263E6AD692F6E3B7556D27B7BBF361195E
23BAB53D1E6A183AED0E2C50FFCE40AFD1632228CEDCAC3BF263B7258DD052AA
CE1D8748C6C30D5C38A77DE84E4DCB6009402654708D16F7ECA90E9D820306BB
2D51E1AD1007E8D7FC34296BBE22E6904D58F24E4A13A60FC748E5C6DD0E6585
048425B5EF5655F531DCC48E9F907AB25002EE14573F7F50C42EEC2487BDB01C
C06D24E47FB19EEB830744CEFDC51FA66FE6C52A0988AAC132E6065AF542B5BB
9106FB16794F6A4547F08A186726D662FE0831E0FEF6B6B5D2CA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/UniqueID 5092766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 26 /braceleftbigg put
dup 56 /bracelefttp put
dup 58 /braceleftbt put
dup 60 /braceleftmid put
dup 62 /braceex put
dup 88 /summationdisplay put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F0B1F91BB33D169BC54F45D5CA872DB5B46B0B
A029964C2E1D66752E114A0B3B5AC5FEA689F9C07862F709CB1A7A5326BB7402
8AD4E32FD94E15EC41D4432EA6B6C929A92C24149FAE626D8D71B4C1A2F14735
78D67F088733BE0D3D071BB0A4CA61AD7DD660DC1F69C450424EFCCBFB16D8BA
FEB6CA5CFFE9EFDCEF3AF73DC199EA602E98AD1D83B2BF0B8AA910D25E23EE6C
7DCA297A6C22D8AA159AF0D6BEA498FFDAFB1AF3B9B0136BD2CE4D3626B01611
045D9752AADA7A2EA07CFBBA32D729F20C7464BB4A57B3F47BC88A6FC88BE459
3138493E22814CDC5CFCC5B7F62DD08FD99B1321025D62BFB6A646A7DF98B9CE
251C140B6F0FB2F706C4357BD8DF0AE397C65A0AA9D4864EEC5B580B1C249B16
250491C8413871C4D5C14170C38F92DA0D1FAB95C55D42A361CC2F973B0639A3
2351D9A95CA98553D8CC2A6E6800D91058DD68D85866F8CA456D5BBF9B3F3BD0
BF5ED7BD548E6DF42294750443B6F192E475298552248915FA7B9A12F524430A
C5394101B7668DCCBFC92C16F58B8554679E765FB47C68A76B43962950E4F22C
E34A7F9523361992620824EB2EDDB88B1F1C954071EF810B7F9A5EE83D931C2A
5C01402D0C42A172C419F1F83EBA3A2954C353DEBDE82B67DDA5B61485D149F6
641AF628E6FF758001EC361B5CC01A41FA9D9E266D8A564E5588C1B3C2962D50
4F8F96D3C96963CD2636A7735C865F32D2919A812CE074D8DAE84F5F2923FAA4
49FD3D1C48D1CC89158051D371169EFD50C8A8E1422A5C246B5111966354ED99
41AB2EB2AD32878C2022C57818C3FE49A77627111B95CBBFE9E185DCD43BA6C6
0EFDC3749E433FC33460B77BFD813B0F25A7CBC7E026F7016F9275F767B8FF38
AF5DD7650A5EC16258048D5FE9D3C2BCEBF603AA1CEDF7978BB524B845BD952F
D8FBAC9F08B335FD779932CB221C7818BAEE20C43F59D93E1398381A83D8C8E9
736A81A26AE94BEA02086FEF1A433D0AE23D92BC9B7FDCB84A89F1350905881A
D689B36EA528847FAE475EC79E4B79F60E8ECC3748E984468BE50C770EF46B65
936CC9D46E26A2BF8D70EAFA0529166D187D47766EEF5980E11B5D6B7608CCA0
A6766232ECA99D5B024385B60D179E61ABE43D87C67B4DB10B7F8082E06E7497
7C9E5C3F53A548EBA8FA9D8748B09D15CD0692478DB4D414CC5BF4E82A2281B5
B6ED1FD8F40112B35FD521706A8BE702E175838C3D3F14CB228C63E5AD638397
72A1E8A2D65E042B4C736648157337656D68175AF218FB31CBF3900CA4D2B8F1
151E9C1250E97FF1E5DF6FA8B2AE32A597E7CD07C21F704CE36F1351C1C21985
316327530A79522EEAB9871AFC74DF5876F1F4E19BCF7AAE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 72 /H put
dup 77 /M put
dup 80 /P put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9042537872831BF5F1F340A
8D3E6DEA1D9675E87B3425FAA0172DBEFD7C28E30906B9FBA65517C9B58FB6BD
E0D474E69BB90B0D130A32C4130974A1C961CF064A5BE8EC1056858553FFCF7C
0D78627BDE04E5D0B9F6F72F92B61A915DFF7AFE7DC3807891D039AECEAC3F50
0A09579E661D3DC3022206061E0250B09A05CF198DF82D4F28FCD2A85F717630
90740F78F242019C349B65C2A455597DEE127E914C372C6EA0E250402117B903
1D7D6FC7153D77458569B2E0E6FB978B06AAD616BBEB70B58E0BCAE1013D4405
873D2AA3C41309993563E652BCF2B244451D8FA1305BD9BC2C57BCEA7F065670
A5059B0B17303312E8B787E02152FA92480CDED118924A9D490B2BCBF9A560A0
D4B55DC4968ACE1019CC2840E1AA0596F8E8D4BF7119B047E55B0FA01C69B9A9
F79DA6C9C9B49EAD94943613151247423679B7A29AD2C71BD077306FB9EE0AAF
9AE4B268C8BEDF3CAE8CE885ED53184F9BF2F55AA05933071F536B7180F6301C
A04438DB5BE00037A8145A44776747968CE5D04D650A2DE535523F36E4889EDF
E0910EAD0CAEB0B85ABB32D64FFBE347DAD2E5BC5B79B191EE15F207EAD73F70
72879D47EEE2B94EBC03B2E68C8AC384776679CF674BC0314812B93C44822049
3CE5C799BFF6CE45832BB3B6EF4FD106CEDCB34206E4A3290D53B21BFF2651F0
216C9E91748888B8EA8AC33D39D36BC334436518FE2EACF35BB734FE74D18313
2FDB1CB25072A3949300B1900DCAA4D920CADBC1CAEF4F8AD0FE141EEB6AD3C0
3891BCF145E095C7D4043762456991F6143BB13CEFCB91A5CA892A9C95EDF56D
2D45BCCBB38B665E11AB56CEB60FAC9B1404D236339FFB3150B8420872039DF2
9635A0F5DC489018D718A3CF71D9BA8F339532DAC8D9EC18C6FA3ACF73EB8C12
2790118C136E91B2A6103D83A4AC840DFEC19078BCCB5D7FA8B2C95DF751A861
BCBB21CCFB072E2F9F3A3B6F3E0B237C4137A8B7B55E3C462A071AE4E3E4B875
DDAAA286B4AF48306FA675A2C6C4CFBC3ED117337FB7FA7DB84BB694AB41B7A4
8C389C5D5FF1F9F159416F0F4E25E3A5A5BA402ED393026EDF440935173EB83F
D223ECAE8210028956096F817B7D4D787F8BA427C9DA74AC7BAB8FF61EF7E1D6
D4571DBE313480FA967C4E3924E592C4880A8F13DD7B6BF19663437F24B0C94A
3F4F8311CB801133543ED52CAD4B1955FA271177C309E32AE5E123BAE57D4605
994E329C88B8F7CEC4382E7D2547C9B478A0FF91AF49BDFECF4B4D8E73A6AB90
3210FA01EA7EEF07CC4DC2840E25D845BE9A8058AAEC16190DF247807CC7D3B2
EA23EFF7B221C314447C8D869E78F0D290743D9BD5A1B88B4CB78788006FAE89
4A9C7F8FFFA8BCBD4D5DD222793E9D5276CA664BC6BF589AC32F81FD48A42BD6
C9B5BF3A446E0A69CE7B77028465AEC4121FE74BB34FB29104F81893539E7819
0950E3DECD37E518FC4DC7FC7420761E055EE7BECB86D56AD66F0AD3E6DFF080
88024793C1D5EF16870430C518F214B5B5AC3E4D78B889FA1F931BAFF677EE27
8616E0926025DB3FCD485EBEDC51FE08FA1D493D9F5090F22F75DA039D413E00
46DB1F151CD7AB6C79E33F89C3BD6DCA447F897E02B65BE74B4AED9E204D0089
58C09BE960BBB9723EB002DC7B1559225AAA06990B50C2AAA421B65F63CB8F2B
07C5B8EE3176FADBA4205A6F1BF6D95058802291352C65369C6ED934853B2F09
6305745E466A37C5F49F77F1812F9AF053286BF42975317AA6D9B57E165D3380
66D54CA309D9BDD504FD47E90C86DDC277CECD323201A830573946245FD7171B
E7AD8E90876203F62834E6AA6F612F118AB18B2D1D5A65FEF333061A89345F78
682594B5304B764920533D18E877EB6022106F4C42EF9724E4031DF3D1B35D5D
8EFFFDAF2561B4D965704872926B937B1C54D233740B0025332EFEE5EE6A7F83
05CFAE4813192384EB8AFAB17D7913650F55449B348DF4D5E4AFAD03A70C2EF9
E82F0B4A66A02EC9EB27FCDC91FEF5C542CEF8BD96F26FCFDDF4DC62A6B52B6C
64FD60AABDC0BED6B1D3537759DE4A01A68232DE0AAD0BB43FFE6C49192F61F2
090519B1BDA97B8560E4EFBF1AB415B455105E795849B834BD09594B5D15DC9B
234681A6B1C60544EBD39D11683882C3DF7D7F7354C80770E8CA7128B3F1467B
F6FB85FA6992E9DD683714C41C4F2E1A61FEBDEE07CF49460BA57889D90DFEF9
77E3C2585CA151B539A98B69076F7242067B8D028B1010881D37DB105E2E1D17
B76224D309A8DAA39877420855025509003B86421096AB36580977E9322EC785
96237F2841ACD02B95E3A7973BF982493F0F6760E61C0521E25EEB03EF304DBA
4743939E1BF2F08888DB1C54FA4DC9387D010B095229B83D1377E1D5BCA5C666
1F8E27675E5516EB441BC09074AEED2D32338EA32A7E7834E0E8E7CD51974E6A
D2D7DFAA3500BE19A01A05B5D207D9A7AD364466E82C6DCE8A0DEA2313DA3441
E877E806B3DA3A9B48B935B9F9ECB8F13C81BDBC3769F762191473428C58FA87
796F829338F777C30A0E03D97D2A5C5F2DC1247919DF7218E8C4A49796A4670C
D175CBE87417CF35C0E0174A861AB8E216A2D3825BEA48E54A4270B24688FA57
2F4608EC1B5CC2A79D225D11DF436E11D663E96D500A491FCA415DBD3F04182E
A043F1012C3C7FDAD9BF55526C31F288D5169F86F016849C12484138FD51FDEF
B8A18BE944260921BEDE010FF5A6EB19960FC2378E0E635580EF003054A9E27E
222FBC75823961F52A3DCCF2CE216C6313D97EB1C1ED40A88C1F5B31310A4590
493F380C67793FCF57D1580AA3BEE52BA2CED3786F0839C3A1C0473ABCEF6965
589EA3F7CAC7C381F93F7F4F3AF0537474C54F81D6B5DF4050221CC668540FAC
E3CD8D7F5F41D93DD4806BA6671C744C64FEE0071C98E55364C4534F77D89C6F
7FBA8CD3F61BA70E46BE351F2C63A13487EB0DF4398CC744B48CF978779166FE
00F9FB15916A2D19AC45B22EB6243E96ABE0723B9069890CC2EC05B90C79852D
EF5DDD9887DC5ED17653DFF7A8A607AD3EB007D0B5D25141DECE10E6CA09B5D1
DF0EE738324863D4B703A1EF7719F6E4383C8ACC7987615E8CE3EA8382478D56
2BEAA3A1335C2282310EAF85265868A6B5ECDEF1FCEC0A9389ABCAC277547143
EB070FC88CAAD35A4148CF5B715AE8BF75C0383EFCFF5A88F5E3317CEA042A03
418A5169EC8F67A143114483B674D61212B290AC0BB46F17B12D2FC4B7DDEA1E
A967D0F8794CA5D31CC53676CAA6CD5A3984E869C2081B11E1557ABB26EBA897
A34562878B080F698C0E495ECC038BB61143FF1C95FA1DAAE120E4C5883CD94D
6D95880A35D668E2CA4F3822A36223B87D1C9798C7171AB7C8D6C83A23B2904E
A8668EF6945AD6C855AFCF2B9A2EA00350257CA1FB991B471D35FFB2B1F92340
F894DB21EBF61978F197CE05B94C17984323090464981767B846BE3886CFB96E
7FB3535DE76F8BA4CD35C24B2E9F8440E8093903636C4DAC7B25CBE45828824F
CC3D8161041B547D1B98FE0C7A6FF024260F6C7802442EE6D3C791427E74BF79
1A6809164532691E6A69064D09BEE2F2213A0535B5507791CB37F1560EE11F54
A22C48F3249A0D1A63DCF3E59AA7C9AB839FCA88F270FFC12922E82598D04FC9
0B9D29C2EBD9254951DFB931E382D0D821286A0BC3C54739CE96F1021A9421AA
965C7558971D4B186E0D23F85FCCC3CF65F3C23DB1AF866BF94F3B962F70D6DA
B2FD09523436CA8029F41875303FD8E7C91A7D30EEBCB822B6B4E25E0AC78A37
1661E38042265682F0E01EE6497DFE8A381C59A774E51796AD2C27276FCEFD62
14F17572611B6E665A4AF214D9065ECFF9607FBCF2A41AEF7241380F959448B3
9F454CAE5D4B821DE61DB270BABF033D05EA4F3F46D621DB4EAADB1B7BD6BCC6
515DDF6691E9677563FA02B7F72A4EB33E33531F2C4577230E69519E41FD90A5
A6BF32C1CD1A6FE96EAAE190FADEDC612B40460FCA653DF28304F22BE3BB7E63
9E50B557045B2EB8C61CF925565A4D40C42971D9ACE768377ACE47D6AFCF8603
179D7720AB2483EE8841550E7275C1D70B4CA00768435BED479A6211D7DCDE90
70DDF519E3EE583491E710A1E5B95CD0C17F942D9D05FBB556846CDEC0E40763
136E2CA175BEF186B04290DD36FF3BD34455F029F3A769005C7C849A8B87EB73
EC689169EE14A9B581B10D130E845ECCC4D8D11F6F51994A03B7C7C89F363DFE
6C9B486CD9AD347A9D4A6EA3BABD20D31AAC89B65D1BA24BF296F4F935915186
4EC101E2D174766075BA04259A144404391DBF6070D06E78920A31FB5ED62A74
3F015931FF216A6C4C86722C1000E3A34FEF81133DDA6E7E5C9110EFFAC82D31
36462D4FF69F88754B8C7BB221C51082CABAFDFDD96E311644A14AAE91C4EFC1
2E07D9B5837D7AE155DC277EE5644A44D47E431339A7312A491DB40A307C05E9
76CAF5EE0F7489B7EA8668CB0C15ADDFAA6842F2E2662CBB6B5132F61986DD37
FF668EBB8778FBC2E55BE483B999468FE2097499E573AA4D134E98E1E057FB68
2AFA31D48FB69B3EE43F257278443C770654D116337C56E8BC3FB678323C2B7B
9CA21DED8CE5BF9CC668CA5E1EDB8FF4E4D441A76593AEE7B399F4C04F15BF23
24975D48A34C143898A8EDFFE35E797F0ACB9F13EA9935F41F45ACF846953220
B0B73EE09FDA1E569FD237D786851C8EE43A81FCB26E080055C15A7BA7BE61AD
CE4A837D27871CE3EA434DB9520C5179B625BDB8C6C650E34CC77E001F3D8BF5
D5E565A0CDF3730F5F0BFE4F0D625FAAA234D6A938883E917663C6CC1D1661B5
B8A8426DE39AD7F097F0E667012D70F2E95827EE3456ADA537F96590FB3CE5CC
B9F63979FFACC036C6689BDF49FE7474C4EF4F49AA5308D98EED7D36F0CA16CE
351F9E0706B60F3B24C8CBDF3EF843E51B37729A8CF9418EA2383121482B7727
558E31169E6F13E5538CD37C09C4D6B5AE0057361E7ADCF9819D0D1B2D1A1F80
473A0FA660981E8B4339ADA0506B3C142E6CE8AC719C649B6907B965A6FE63C4
4C6A872C26268C291DD0DD1C43C4F4FA0258DED873BB5E2FCD24760FF0D24976
11A1E354E2B8D85C9E1204A393550FEB28DB3FC68CAA477073AEDCBE436F4149
D021B1A487B895E0E36BD23D1126E34E917916078FC810C09993576A81708E61
9B5116A1B19E4D909C6AE2036A6AD720D1D1E1A4CF29759E51F8BBCCD0815144
6C505336287BD56BE70E365F311E780F4BFA9EE81318635594F39856F79FED74
2C6219E28F680E18D10237FB1BC17295311600187860F40845330C7EAEB0E24D
3235741577E29E0C29968A228B873469048D84E5B054018A20ECA912EE5F520E
CA003A5A0F770FC014E62974B83A5A5C087780E1C4D71A6A624F7474A85C960E
B7C718EA7F4CEA6B1207571A820DF146F35ACF23AF0B10C387188ED22FE2686E
9036ECF55876F1A547E792D1593AE2519A91428E437DBEEFE14F74038589C383
70A0FE8B13FF1182F89CAC75B525EA25F7631BC85691288FE31EC56BB796262E
17DA9A6A832725B36A7BCDC9A8B4AD45BDC88926C08C80D6A3939AF4F3A2D4A0
E828D226407753E9F1AD261E88FE7240048EBB0A072287C8DA27FA9FD9C44D08
FF6A388FB0C1578B15A14C5DF4E77FA9CA9CE47A0675DBF2E89590E33E5DF129
6800D6F096CD7E3AD1C506AC7B609A940AD00D629FDEC2E5AC6B30AB24A9E271
F22EE900FA4F15137DDAA0D4A7C16A8AF8943260928901D7DAB14ED95EF6A3E0
EE90D29444C42D375779C474CC9BF4AD52421CF4E0F44420D641A7DFD8B69BEF
2011AFAA0710243E64A90BDE7DD96F5DC1423D34EDD4B5D12F0B5E54DEC4D66F
AA5E717EE799C33144F9634B80282E5E1D0F7AA1CEEFCDE8C8C759DADE1E08CE
19F7F01F0402A8DDDF8F64D567152A5764A4904173E732FC1E1D161DAB4FB2DE
952009CC82A9BF584A9A890EA81CD5C0220CD6116D1DE71D1B458CD677345993
BA1DCEC4F18B3A5592C640D2A9768D9CAAC7B7EF137672C0C5C524113EE346C5
E4965B027888944008BD99A21109939D4393FC15EF359AEBEFE98FF8F6AD720E
CB926D455F423061F4060F4AC3052A542A7CE93A007AC7F498C501130C027261
C4F279514B465A71577B6EC60E1B11BB673007AB4DBC9E5200B92AC2576182CC
6A283607C1FA3D0AB7B0D323DBC0A755CF91F76BE51A11B2F661403FF1915DCC
31CCB6C509CD0FDBB069F77BE2CE65734ED13F03017DCF569148742276BE4217
F1784C26C3014863D84D13EDD146343E1A78ED44D6C78298A25D83A94ACDF2E7
C73A048C2FF2C5C9251DE965CAD148C008361893009FEBF5C1CA7926F26F44A4
4A50D3E4748202908939A6A740D2ECA5FABE181876E7B73EA1BC90044B376211
50D186C2868082901BD9C293C5977566EDF525A04AE0AA5C304EE2C4CB3DEC51
4E218D3E6CB5E1F0F1D1D4977899B62AA6C5C82209E958CF4E1454EBB9BB5B39
49526B1B8083CE632D26E10E3DEE8C09A990F5BF5C98015A48270EB59E7C8235
3CAB02A9E152AC364F99C440BEAB7635D7D9A4BB7D9B8D2BF3D14A9615537D31
0C2298072A2702651B147A7CD12B1A8AB09107FAC2938E7F10B8A1DB27AEB4A4
477171D830313199A42014732BEA93E149D2ECFAC7F231B96B21E98E3EA2218C
863E0E73535EDE32BD8CE7AB640D4DB1DF8B4A2AD2DEB9E93892573D2037F5E9
F8BA6C78BC6698C207B63BBA5B6B54600FE3E4F92659F8C9A6456FC70BFD4382
2ADCD2EAF534FBB676BB7A64C7A455346BF4C4B8B877F6265AC970197B1CAB7F
2098C3563471FD15749194B65C05D1AE531D8650372D51F722C5CF99CE99F8BA
CBDD23388738D40C0F8D1CA0F37C3EE7E49D5EF112F67F13CE2F2C5F390DACDA
09F3B7611638DCD4B2443E7C721C6608147C2135E3ADD2F3629993131123D4D2
D2B84298AA500E2D875902AB47D9A2A7FF963D9C9AD0AEEB970B1E9B2E501B26
5541DB58E236B49FC53233766EF97B73FB82C94C74A6154B07311EA1C3D1B603
4697E0A46AD73B8E3C68276E71937C3C043BD832645182A406B9C9B92D0AA5F5
B6C49AAC54F7D2571FD60BB73CDF59603C4B9D88C110ACD25246598F6AB92922
0C9484C72B1B52042510D341FF61AA91D1F7D79A8C92C934607BF07CD43394A8
A35B1E754A39E085346DD4F9278EBD8CB1A8F280AC1D7733A4236673D0CF83F9
8182202084DCB83C4E9699A349E02FF17446C2E0166C641D2C8965E89C586345
167DA6220F09B08132BE31B6F83DC321355551AB007D38C5510AAF7C6F557F70
7E2CF7F6A47B380842DAF7A66FFC7BA801C4BFAD3D3A9BB241FA9AE351BB69AE
7ADC54ED8E8F40DEDFE2916FEE33F2236DA3850768ECAD81735FE4B2260B32EA
43C2AED4F2203E28D35B56D60C075FFFB8E7C136C7B951A34D387CE63CF0996F
9DB87F898AEBE7DF6DCE659A99ADD995727634D372FCDA0E589B95944D651DA9
9DE203B9286792899DF7D59EDE80273ACC270BDE30B2A0CCC913479772B13E71
CA14F1F0E8A455C85BFABAA13481DE538F66438A10D2C171D4CC607E7EA0F222
D31F3A87A6F5A67BFC9A3CE38CEE1B9DA24072E45DD5E3B5F36526EE1B772C6D
4C9C718707E87D165F6D9A9FBE7C5C805942EC4637A6A7ACB2AA156302B08134
F4AAF9E76F1A14352151176EC06FF7C92EA4AA1C55B507A6B130EE32C3B8EC8F
B52C892F225B12E91C1F302C99B5D81E4CC2945E4FE32E5683FDB1CECE335C0C
27706BE3F106DCE89915AAAD19D178D4C1218EE038E5158E0AAF0BC2DB81E065
59EDBE21AC02F7638B4EFB3B8E539F9F78C1FB80DE04176A69DD75946ED72D97
F169379DA7A9306D628BC332ED6D724AB8227ED94346C81A9B1BF283CECBEAFE
3EDDB6195ACB80C7E70BA3A7A7B17898D003DD0F21DCB558152DDEF92F10D7B3
C38355058469C376D47B2560333ACA3AE05078F3B7FB8DBC3FF5A62DFD2DC6CF
4021D7E6401ED96C3EE7C729E67CA7275F76CEF6F2D2A9D717D10F1C28B9B6E6
A96AE88B9F2D7919A0DD6249B75461E2880E7851E08D6C4810474C703652EFD3
E4E242D747FCDB6F1578AE25F6CEA6B50B7DB9EBA1E069A40C4BF398AF876DCA
E5AD0E98A8F16A5C5C552AAAED34548E0CBF6B6ADF46694A0A45BB0D5B815206
EF01BE0EF912BA7B9AA6032EC309A38B9948452EA106283A11EDB412AB19A94F
0823B679D97239E847E6559811C5C5A0F2D6A1A4874CC85CD32EFC247AEEF7AC
74B4B4AA9EA7A89F6718752DA6ADFB55E5F9ACA09D82A789809CBD0F73FF5380
56B1CDA73A65262A67530B2F73EE555790BBD2EF3F8C799EDF43209CB9BF4871
EB1B84508B3C47264E775F8E41B72906C468968E9948DA3715B7D57E97D804C1
F1B96EBB1EA73D2146C080A6B5699FBD3EB7AE5135842FD95F0CC760C34E90E9
B6FB68265095E8910DDCCBABA5037A006BB85F6D2C883FB9F7B47348A56ACB81
B1F4DA5CD7B6B3A581B2F22AD3C7AF9B4F983DAB1D6FF713BD8E1A052DE37524
37F79F2889B970E0D18295D3D0A0C81B1006F2251A28719523ED58C93DF8FBF3
3FF1721733B5F87F79052AB13D50547E3F33D72C84151F3DB822E79B325AFF5A
1BC64CFB85B1C6F1E14A2286B5E62F10EDAA1A1142F121649D3373116FCE9F6F
1D79ABEFDC5F983CC18F46DA830891226183459C6FBB645CA0A76392AB7B8902
4E1A6C03C3D132B1446B224803078A620EB092BEC608D87AFE64F9AEF4BA66F7
844A77BAEC874CC94DB3F92E8FA443EB25B000A4566A4F1B2DB7E360311573A6
FBDB14A11F36D3E0BC35C094161950966DB1A9F71C91BF4A9DA752E8CFD421F4
FA6F90F118F509753A438D3FF532BA0A753C71FFEB2E1C78E2E6B08EA858E5EA
8FA5B2668C97CF0D2961F6FE2B8FFEC630A0C4D588F15CE70C754FCA2E2091BD
2CD634C53F75126661425E028034C0A4C303579E6977C064111DC18C6643D7FF
F505DFAB5186F85F267B287308B7955F7B3B5EBA85BFC8189901E79C877034F8
367F7D2EE1E3C97EDE93A1417491AA995D8191932271310917B9DB208D130BF5
16AE1281DFA09BC5CE1C2AE6D8EDA8A708B5C4D7BD81D0DBA1D547385E539756
FC8775BD2A60FE5A85A63191B0367A3DC422BB684366566D1D4ACB7BD19885BA
8142CD45499495FD8C71BACF13C41E466676BA36D672C49737F22051FE5ED2CA
084C688E497B5D4B63AF3C840EF6B48FA257898CA1937217B685025D9B6673AB
FC7782E590C8D30D355A41B71B31495DF8E06F9B74BADF855ED42C8B3806FA06
18AC1F99012CBA8DF97B654F78CDC235ABF086BD579443779CC4848636682BB5
CFA2011E547C5941C16AAD37207FA205438A7B3623A97DBA38CAD8EF29CCB772
D8F8D7C4B46CCC51189EE7C853C15A715B74551EEE1A75CA6C89F882A5490047
B7C48AF5913412526FE29632828DDCD453024B75AD09B8857AE7E1CD10A998BD
CD2D99A148E64DF01A76C8F98120069A047BAF9CCD2A04C29302C14D1E384C9D
A53BFF5716FF6DEFD12E82678A55E044F212074DED1BE4C96701C022CFF9E938
3C5F4C9324B1E19AAB1450064767DBA18972C660E322848A2A777500703F51F4
45BEC52710E77FC07BA9900F5BE759C594EF7ACF5BE9FDCBAB8F1CF967123674
9C1C8506E9A52D7E40984A4BABD2BBE64724ACF437413EF3648EA2B2208C0238
1FDD3D9E8BDD107B5599505D6E58894C1FD2C9A7E17CC6D07BEE6A7653F67BEA
88A5B16F2015BB7A27A7E5D5A6392B20DD39EA072643DC59139C740AC59F5A4D
BF5AA07A39E1FFE11353C5F869D0EC628C5B92B36373B35052685716512AF77D
4EB08F64FDA51D0AA092A15D3640884CF93A9FFB66FB14ECEDE053979C0DD067
3C8FA0A7E6EAA1EC8F67284B71CB9DCA9C4C8963F2E4BCCDC824AD8DC83C843E
4E7033570CB68A5D0A18B8FCB507698EFBF2BABBDBC84171E18BF921FC713FE1
1D4D2FFFC4850C372AEA3EB951C990FDC007FCB570A019D9020C81077ACBA7A7
7625C1696EBF153742787E84A27BF8F079CB166C0EEB508920FABE02A7D61187
1751D6CFCA95340852789C1BB22DB5022120CB8B8EB40CD1E66755422A5CDF83
44A13EAC7030FFF3B7A28BA19C04280FA27CCA6DE6C339B8E3ED3B48212F9F6D
2B7CE6E00979FC20825F0A17C83E14BAEF5F31BCD18AA41960847E1B29BCA068
A00671964C47F6A40AADD6C8194E34B746A55CEF0FD5630FE10EE91D49B33277
0653001730B47B12F5ACF925E36F5EC3045AEF3B758FD4F65F6D03BCA3B2C89D
6CF2DCBB97194637475A1C5F93A8B9A32C823ABC056B814A9B4EDF1024C90DD8
75F01EFDEBACE41E78B9B68944B60140B1B374D4A21F882F5DBDFB84504A65FE
D1BF12068F81EE116BBAA4068870A53E4C43F623616F03313FA07E10973C5048
1430EA17FA2814DAAA7FE5E620478BF432195372BA5390CB62E345E492B4F1F1
4173842BEC062B6BBDB1A73601EB4F50EB2B0002217431E089FB85E47AFBB67C
F8C7F3CB476692D2DE4EF201185D0F753D2BA6C79A478E8C6425FBCE90FC1FF7
7E4EA8C0F47360B7A3BB3A924303BF997011FC4CBE95CFC2DA9A2C07EAB78074
CB53CFF0F32F7D5FFB5A0C97BEC33AD9D2EA3A83D4220960633B59CD8F6728A6
4946B6E2FA551BFCDA43009846C6317C682CD43A837DC9F52097331D38F12130
BB7D3F32878DC818E4CE97C9EBE57902F3EAE7C1E5695AB1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/UniqueID 5000768 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 121 /y put
dup 123 /endash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DCD1C1BC03B83FF94C60B1DC71CE8A86B46DBE661C9F8F4677F8A2C7CF1
E41A91EBDA2304735147BE66CDFF2673F09D408297302124C127F0B35690CAE9
CE1679120CC4D582FB69550AD34A047DDFCD9D411724554CCED753DB52D6AA7B
22B0C55EB698ADDBB0F8ED15C971AEF113C74B9E25DA29199237B98DA4023665
C2A63A837E4CAB38F8DF37DBAB5DC80C0AB25B56BCA5D899F1575E61ADF75676
F48EE26C054AD9A75FD88A3E17498AC26FD4DC8000A125D6DD423540B8A98779
B28CE97C9CAFAC45693FF43249E4B559E7F19FB349F94B60AAAAF05B5FBF244E
982B4B51D997DA5811CD43E1917DA885DD96133A5CE1A290DBBFD88AF285A879
D3136C41C839FD2276760A7B4F21F4026AADCDAB3F113FCCCA9588C7FB72643E
AB8F6D8AEAD1DC3DCA6E436B3DF24E7DC6AD37137B49327871EA80F3B8AEE932
D20D9A5B4779DFFAD7B3E5D447023D6433575F8F5AF589D7E094DA3786555D0C
046A427ADF128E00AC7B458D5A131A130D6F49A7ABF47833791F172D69FE6393
EAE0E90E7FF7BC2333D4E0215D5201E4B209591782F8A664335F67B9DDE36DBA
793EC77E5EB405862D14EAB6A99218B3F66F11EA2F345629C402BD8FD9CA0AC8
FB5A2E119DAA9F80083C9BC54F4586C44320993CB5D9CBDC8F8522001F82A16C
E307F175B794F4426E5D273581A6D2844444D82093FB03482B270D693391DEA7
CB26D4A418E48A2989167B7DCE251F0D53D5C9B29D359A568FEDB965DF31CBF3
900392FE739A2B43BFA2363CA74FA72668FC761D1A17B9C0B56D6172499CDDCC
90EA538A5526FD5AFF81D04BFEA703E5DA963B11042723106704021C1B90557C
B7AA96E076842E2C5F929FDA6D05E0B91B5548006EB4A6EB262077411083C2EE
D51D0D237A85D6480DA41A9D8DC24EAEC0C849E0D53D9FE1E54ECD82C957B8B9
ED68D7B29A43F369C28272083B7B4E700546D293DEDAC7E74EEC946B4412B0B2
0639AB78E79402C787F50C4F78991DBC12D73F5B371BBA2CD9535EEF0550084F
40A4B2C4D178C0C001E63E08DAF15D064426F6F24C49E02AF5417D18BB7997D1
46CD6476615EE2F496EF2D2E5A6DE68ACABAEC2033F9F3689D9F8CA23483C81F
8E9CC42B7AF2BC3FA80B68FD37E3B87FC27AEB7AF6D2DFF9B4B7A60D26292AB2
36461A349D3BEFAAB8918729204873D7793A647387156252B5A1B975639E02C8
9715F8B4853B592ED9E467BA41B32363ED0D7557EA0AFB8EB093B4CB1FB3CCD9
3369A67A60448575C7CE305DE7C1B59DC21DB0132F2B67B7B31EA068C5942DBD
7D1BE9CBA33107AA60AD033EA5B3618B83BEBA01BC0DB592BCB0796AF520E8EF
BAE6CBAA5DAB5897040D6CB1E3EEE78A98B59897138A084E64E116446EDAB213
46AF2FED3E303F05D7EE630434645AD21B410AF8C1808A79F96CFC56741F62B4
431AD2FD90CCF0A876EDDE18506E73B4E390C752DB45A2E8BB824F2E0310C59E
864A74877AB522D1B477F5A3D7ABF80CC031C2F2BE5D633E49E6D10EB6EB8434
F17B15274840BEB842587F3B9AED05B97DD603AAF94D5FA688675B55D40FA43C
6D97741D9FE5F54C7D441AA62D48801769531ED7EFB3C438EFB1B513E930FA50
51B3D743AFEFD98A368F8A67BED1F89DB11BDBF10BD7C453B4711475E3D8B36D
38F6013E88D476907A47591803200911E2C91D05BFFFB6078443809546E9967F
2C28133CBECA6A46C69EB060253966788EB6B03FF7440121976BD13CF41A65E3
37735CA90366719B4BA72DA3AA9ABE687E00081AD5F370ACB8EC00E9A2608E78
5391C67AC9C3B91DF9A4D4CBA46CEAF0A879549CA69DF46E64E255F1FFD5F183
D3F0D57CC92CE4B9717BF0D529670457E00E1DB0091E05B3DCDCADB1E695F8A9
643B73234CD7CCFC906FF77FE1AEB7996F9BB0941764AC80BEAD3AB69689DD71
829FC2DA9FFD25C55A4F377ED8E0339C3CE89784152C25462CCF12E525B25FF4
3162BA21E584BE4744B3AB0D1D8702B3E070D395A24786EA7C0E671514A0C34C
04242B86A8ABBD44EE1CDF1EEE5E014744D5DCA956F1D0FD53A6826B19AB6FE2
B6725D8EDA0FA3EDEC3C9FC0BFBA6374EA60EDDDB9BC7FCFCA76A1653CAA740C
848CE2BD10913B1C0D56C31229D9BA0A6773C8686D59B5734B563FEB90C2AD89
B41A4482CA1EEBAA5C23F65B4433252909EE79FE294598331AFEF847A863E137
6EF97AFBB87EDD3875AF98FB1FE6F8D8C840D4896A183FF4E395EB7A69DCE16A
F779DB5DECEB45541CB32FF7D147CB85CD34424CE13529BC008B07C5D4E3FB13
343F286E50D0E1C5C6294304F6DE699987694C2C554C31B5DC282F94973EE4F7
F6CB979D1F833A7D988627BF757E7EB41FF5421720E7677FAF7F5B3F108C3259
AD24C4E3568F66F15D2B2A9D73007D02FB25DA53070C2BBB4491BF12A6070CF4
16CA6A8A1CF3C9C525A99A138FF64C26509E5A8414F1DE38B6197DD8D11FB10D
C168A78AD39F674929B5CA52529A0943657E521EF464B036392F4234435AC61C
F55E02385AA48B228CF68EE003ABE571ACD364C5FB0D8C228BC7A3F25D01AAF6
F48FBFCBFA62794496BF3E3E81985D350AAA08318765F176B08490CE3A67142C
45F58D9EA0360C0964B7B212364259B91096A56BD0E793F02264142AD1CAF3E8
D35822D785C9CFBE1CE2D9EFB82C89095AF08B79F006105EB6DE44259EE9BF70
5C6E0EE6A07FA6EDB2501056EBEB0D9B5DAB1C8D20598F579B415541567E42DE
42EE97B97F664C4E305372C98E9401739B3454D2C121F96631EE73EAF3BE24F4
799D0520DB3E0D66477F3309BAF7334BE4825A689E15BA0AC471F50DA2B86551
0896B0133C1D0C2CA2204D441DE5C130420E468CA64092D1D03ACD2FADCF17B3
6116420CFAAE8DE28CFED91459D645C92FFDC3103333656C79DD1C174C26DD97
D462B4323F33B410DF5688199749C1033BF3AF5145DB173893CB13E06F29ED38
79FE573B8D71F623B9DDBDC3D963E6BD1216310F9E985BB49A95FBA4CE012773
9A7DA46B0786D3EB2CC51897FDFB7F0584A27B8858AEFBFD489E95ED63577DBD
D11ACF5AADB51C830DB3013C710E64F79C9A3BF0D8FD11C624D47D855A697253
68619710B6D441D479677B8D2445E89188D4C6E30E071838B968315F4DAE4B93
182EFEB487A03399B7388FF1D7990C7022449B767A53B1F7A6E323FA469B9A79
CB3DB10C2CBEFC6EE7C3910BFC8A7F035020F22A24E5028F75BA9907504610E3
FCA106B6354EEEB39DF382A91608E6E18CB5B301C30552196E990462063969F6
EB3AD5A1FE45117A0C41ACBC43774A41103397A70D335D41F59317F44A60ED73
DAB72A2F1AC1DA27112B3B5BD9EE970A2FA1D95393902793AD1EE7449EF39334
3EA3CA06165FA1B97A103553E65A2E7BC2E0E314F947ABE6115070223439752D
6F68BF8C58D876D19E4EBCB30E13B1118FD1A2852505D49C1DD2E8EFDDDBA23B
B2E122DA14EF90423285C4B2AEE0E0AC90BB3BF0C993A463C85C7B84E28B6530
76CA53A959BF6B5D832E47A32043643ACE7D7A6C034DF78B7705482F835A9B13
5A2ADBF33C3567BC7577376DE977EF041E8C7CBA75E31E934AFC237FADC20659
B5FFC23D6678819B0ECFFF5D5FFD4B7E393D0C0087260DB997935F0EBF3B02AC
CC687DB7121310F0585CF385FF18BCF6690415AE872823D8DDFFCCCF5CAFD705
3A236404661DE55E772F5982E78CCADCFD0F1E7ED98F0DBA07B832A01384E9C4
BE1C89F8850E8E42ACD39AD383AD1C88F8A6095792FBC22E3475CC5F0868FC16
70AA36319BFB524C43653393F079F9C6D50E67276A6561CD437E2F807EA88EC3
A71BF767AF2CFFAAA7F2F7C36C8D1379D5E50809FC7E1269F6B0B975FC09D8AC
EBE423B40140F7AB6FBC84982A912BCBF17E8709D2BA620993527700DC510B03
8A6AF5A1302E74E310656B8E39C664C378B22F5BEB0A7534B520BABBEDCEF166
2E2BA4F9908402DEF9AACE7BD76B3D4A244E3AC74FC0995E07B3C24E75C142A9
70F63BC1014A091DC95B23529623BD472E3A7B05FDC80205ED6680C2F4E222A0
EAD9838923342D8B23AE0864DE92FC7EA1F45B8D26F5D0E0B32CE919AF44BC79
5F1238BD8188864A5F5A783F3F855D27819EF080C9B5913F80809CF1F2FC7336
D000D8AC826BAB89FC12A217AA0625E906443E427E221C2C3791A6FC8AB6B6D8
BEB584860123DB51D12D4C803FE4CDC21F5246E6992FEAEAFEC323E0D97980F2
0EFD85D3B873272AE559DCC21BFE3D54F53D172A4AE50F0BC23663AF47C3BD6B
B8302A9620C234133A0680B0D83A2057D1F2D9B65DCC871C87CED90DF2A94089
BD3B44900245ED822CBD7859E312EC3563B8CA99DC6A38D48B52041B26D4D233
AACE89DDFD7455301FD2C587864EDAD418FD3076330D9EA8252F218088CFD430
BBFE2C4EABF95D5F8CC9B67F1347DD65C83C9FAFB63E9F92BD34EF4B4DAB06E4
EC1C5909730D1E2CC2F23731BD0857DF7A10D6A55B76761960C9D14BCA9F1B7D
29984467B505F2AA64FC889EF35E8D13F8CF5D941C5BA8990577CE0A28374E0A
1E7F567B7814B47E093E86F019AC689421843A92A708C98CDEB2F01FC43A6410
02581BD0563381E12170A7A155E82C24A556CEB029B309F3E95212FCD6084557
2EE6948DE06A4C6202CDE84B7A1188A4E638509DCC99B22C1F2054BC7DA9DD5D
7D25D477CC58405FC6465DA65843B19D683DD1C63DE5B212F8924047E125DE97
3107DA330D2A02126B2CE72AC322B4191D546E96FDA7F21ABA0386820DAD7D90
A5B0053C4D9B41B8FF694DE315D30E3C6C1E13E6D1965716C88FEF42032D7952
C072F447599D1EED3916B4BEA55EFF51787846B142A7819E4512AA48B1D62296
1D56D7208B504657101DA740019EF8E287C3763CEE1339DEE9990CBBBDF67CF1
46CE1018DF8835176F3154E8A2E20E9D60EF82D8180353DC8253518EE4C862C1
8BDFAB957F6AA5287B60CAD7DC4FC1E20A83DFAEC0E72B308DD29EDE0601AF3B
6DFA3CB23A9F50EADC87FB020FE9E3C4D3FB4B8A8FD2F3C95C4AD35E093DF0DF
3D9EE86EC958C3694CAA6A16E934B1D85561A933E2E794289CF50217EB54AF1E
70815D5A996659BBCAC90D5AF285D3AB639DD3A50BDB2C49CAB8E6F1E6B4D8A9
7D21A94386A5705E1CDF40B99F86827AE03473473C84FF18C918F7956F6A1C4E
B08CF2DB0BAAF48C78524922C2A519CC9BE7FB446FA6A80CF9B1C75E1FC33057
E3C39BE79784D5EA0479E711936818C237B17EABEDE4E2B64DE7EF9522F0C345
AC8231849EBF95EFAD6BC8332B87FF97193EBCFC8278AC5C2197251DCFD4BFEF
FF1ECA4023E53687018858F46BC3F99955B125BF7D754C5AAF33E4DF81C08AB0
7B83B1800E41062245A4C69DD19A8D017841E15DFF716B99FAC759FE873B260C
588E1014C2289498B693B785292AEA708B1B02D6C667A48CFCBD4D3FFC0A1A58
2F800452942432D8D63DB5444670642B80EE3564C2C5EE2ACB522C4DD6C2AB34
E17029BED738B56D0FC034B0EBD0F5484B01B0D4B7349E246406A671F11D931F
D7965F4E9F54DD117398C28BE185383CD793FA520D36F07EE8E121EC0A2D8191
74950064632D82810FD48E9CFB9E0DEA07C9E0182FF20437E7388C795010B5FF
A11D8359C3E167B2A8C6D2A4A3362AFAE1B8D94B1E09CBABADCF6FD0466EBA2D
8D3FE03376E42F7C9F89D5D044274CC0834332C65A51C856321B58B0A917C885
6C0C852A6C5BC91F01DAE807B121507468B3B80C596EEC7529CC6867B6731432
6BC05CBA632340DD0C85655E4CC2D04E140472F87572AA357AE11BED849B00B4
D00D2774FD9F29DDADA413EE3589EAD481789521BA821A26769D598631A9890A
96398B3D07839E69C532A8116D97CA0B2C0C4E15AD7CD83029D69DE8C7962EDE
D385517FF48DAA8CBDA1933B567EB50467FE8BEB152E53AB978855AA772E3DCC
3254806ABCD602E642AE652BD6B739FF33CEC9E526E2C1E072F4D8467BE4C9F0
B9B76E8E041A1810CD9765C59975174CBBE48063C1163E94D79561799A18E0B8
548BF1F41444504902485E5C7C2471737F7AA1D4B56C6EDC31D9488902C41E1F
C46535009CBCAE47148B13E2981AC3273D9ADFD9563E2BD7167E9C7EB2447BBA
D6E5702B7044B34487DF894EC02BAA6165FE5780A62102639F452CD265CD93C5
EEAA088FF2ABCE6606DE93DCB28DBFB21BCBB92CEC7CBB02674CEB256CF243DC
B8538D50CCA83E55BBF1B418A72000FCB72E0284DF686E4E3B82332DC6D39E5E
A00910135227321AE10533CEB4002F7BA12221EC01667D1FCCCC62F605CAB020
68889DFDCE0506383D5C240D578B84233D8BEF7202A91AB7F445EA34D5B5951B
02A69D078BFB1F9FD5C738B1162176F5A315FFCBF253AF0FBD5EA26113DD18AA
CCAEEAEDCCE9C8050DD31EDE9960652C47E2E06C7252C920B42D54FBC44FFBB8
390607E0B275D48C92CAC3F13D566B851BBE7ECA6FC684C26ED24A07B1A6E3E5
369E2B79EF92338FD22D5B62141D6173B2AE65776074F0D402ACED2B7DA36021
98476926E679BB1D7782FE393EE80B2B5BF34B1EA6006EF8F3747919631E2648
E5EA197BF281A4A08CE9554680AF43DBE63E6F9DE97C2D72A1EFBBBA3FB5863A
43498E4566E4368DD7CE82920C07924D635C29727DF8886B19DC4662E24B7504
1A079598D9DC23E2E18985685C2FCF77BBBD2FD82060289887D8AF480629AE37
CE0AF7C4ED41B24762F13A24577CDBC62636C12A13048DD4BD7563B6F58B6251
D8C2BFF94AC78B644718C471A99CEB742B9526E0E7F9AA8F340D4FAEEC1E2A68
0389C830AB1BB79FA1FFADDA0E3521AD4ADE5C2662FB77D2AF6778C1EE53C722
1538521427AB0DEC09C3E64A81FD97BF8A7877E193A89E55AB04967A86770821
152F5C437821794A4FD97371A4D0BD9206D7F2D911EF64E145FCA90CAFCC94CC
7F685CF1CD85FE32C3D4210153F7927F7DCC92FA4BB1C8E47705872F8988A23A
930DB45C924E693364BAECEFA2F0B36B3B266263873A016131EFD27E047DB34B
0E99ADEC2CF3A0416617A0E9E201EE626C63D33C081A6EDE54773B3878A4DC68
BB99970BA5997518C5C604731196711B981597FDBD0302611DF1903134A088F3
33D800E19D8CE05E3669385378D0DC031675BDF4FDF29849E7F785A8C77E4A6E
83151BBF93BD0C158CFF38A9429621B2E7EC9552237BEFB54AF35041727CC18C
2A6A6B4BBB0EF1C401660C7EE6DEA14D19F72B5C042049D59A9076810BCA0C5F
B7BFFCFD7498AE0F542F334E19CC8E910E4592D413F86781578EEC729F486C45
20B2E7EF22D9D4AB64A5208F9C9E5F1C64459E12D4F255BAAB10D6F9F78F44E6
28F7BA90EE404BA425438E6ACC1C2E1D452D9B74E9E37F5944BD3E270347F50B
78C6141C7123C33AB3303A510CBCE5B3853997C4C59D450F5D6A7C196DD3D5CB
8780B7E53B95D0A85B319A595DF57ACFE795E6CD35E6530A76DBCBBC041BBA32
52FC8EC7166D743EBBB29F67273D27516A64539B4C85D6FDFC4B53496473A5E4
C8F97A0A78BAFDC8B383297EB67689711B3E53B92A6D2967AD372C9D4470C9DD
2F1FE5970AEDB7066AF829C315CE614C57203B96D74B93A911C22ADCE19156F2
B893547A9ED609660A4397F293A774C528DA657141578D8EE6835CDD8C8C0BDA
1C62B8DB6D1415C1EFE948EBF3AA181179EF2794D74C846C02B8A78923E7F1E5
180664714592279FC9007D2D2F6E30E357986E13BF36C590EC633BDB02962459
065BF10DFCD1CB67ACA4BD93240AA9A141219E2D752CDB9DA25C4C147D061CF6
0788386ECA0A3E8120308C4C40390CCA9D08486308DA0D4DEDABCEEFBB54344D
C4ACC939057078F3AFB6AAD5BE458C2167420936BAE36800B3362449F79B392D
620C583164F0A1BDC1F1882C6E9D64F5C37906A09A8DEF7729881B3322E27D12
5E3FA05C5E77B7FBB87A0CCC0E0BAC06088F559FA09AE56176BD343CCE6C9517
2BCA1B13F165B8F3AE1E232F4A9C7C63DCB1ADB059A35C930B6F729A40F48DDB
28A4644E5F6908B745F9C2FEC7FCCE3F72728E7222A320DE99F0BA95B2A29E90
BBF186F07A12221DBE02259D1D50FD3E9AF444617F3BFF10F1C5ECF695AD8624
BFE86A2DFEA9BCFB93DEE7433B0AF56A12AAD591F8EF1F362D0B7584E018E98A
DB4D3C6D7D37B237955AA2148B46720A43795A1FAF10F02FDF30461CC1D97E6A
C4EA5007A4D3607C3B1EFE969C01201DAEF3CF49F3E712EC33B16514DC6EFBEB
95213695FCE58488233A80B1A791CB45B8F1858F2F80130239B07CD363D96BFA
1A09AFEBE4A224B7C3774E82AAA008403E430631F16C93252EFAC7E2C8E0F279
4B79DDD6A10EE0ECEFBD6A8E7EA9FB8DFF9F03CADE1E12547E700521B6F1B54B
8C217F46FB9E44A64CEF473AE1AD1A5E9317DC6AF37242576CF7C34E2642A9F7
574136288C0A662F1E13DC92CDC42B669261098646B72D8BB166FE9A43739521
891A0C6F1EB53D90794A070FDC749EA94C034E3F317B13C648E33E88C72AA8BA
F01CC103CC6ADBE580CF1F52C61B7DB85B603FDC3A9DE3C6DFEA3B8A2A6C4051
97031CE5F05E1DF2C48AF40D5A227919DC65D36B17FF45BBD939E003DFBE3263
FCCB1FFFB7038289254DAB7565BA003710A2B8B7FB1145ECF9C2969A3B063141
10B68B0FEC8298FD92BBB109F312321BECF97BBF432C6F9010A3B8190B151DE3
A5F9AA69EAE941F3890C83E101F5427EC63BA38AA4FE0413FD0CB2EDFAC7FF6F
948ABBF1CF3BF3F9275F7CB5722C48C952723FA6025FC99FE65088267203BB8E
CD2E8A88EE377153BAFB2D6562C1BF27C41C317C9F84E7F6E4982A76297197A6
E28D2E80CF47BBAF3B40C4E9C51EA4A709502F4C89B591E2942D3A7E73C13B2D
6044B26C5B07C42834AE43EF3810D694F44A9576D3A05AF4C8CFF9F5552624D2
DD9FC2FF843177F87A79E9AF662873339673B746ABECD69F8CEFA2FD06FD2ACB
08B6B9EA7B3A4D86C1A6C25328085A1CE0C1BCF66C65D75514F6824BE86F5E07
39409804EB78A5F3B8FE44323651550753364E145FEE880967B1D56D545FA30F
1AC19858038F8017203F59E8F48EE60BBC48C732299B40805BB38AB8D92259BE
C30C500DB57B7BDF4E36C80242E2FD7DFD5B6807C07E40BA8985D395F67F6DA8
417877D89D36CBC0A675B3271CEC149984AD79ECDC434FB27916820E1CF6F889
CA1FAADE24C42F248B4D08E2F09CAA66BD8D18055A28F3C108CD869642B80019
BA7DFE7FABF295DF1A4DE46DE2518199823EB9E1D4AE0C68F0BD3150CCD56A9A
0EA8BEB2F2EB535A5656C9C6EACD0B060A537FD0E9FE7DC2A7D2B6BEEA04DB2A
ADB60C4770A083DA86215CDC888916EC1898787C41F78325CA190CBB8148BB3E
1F147A22C50E8C25B9623BD35AECB76E56589C67C28D69D022CC105CAECB8239
8F30F5F7288F1BE068CA6868E73057BE970033E00A674881C67AC63B39B5C7A2
CA89268FD02DA734005CE7E2B383F401C584DD2B58A0634D1C41D579F56BC1D6
60748B8152BB2FE8146AE752C6FDD63C66872878B3255B6EEFA7B23777DB6962
F3D5942AF1BF6DD4B18BEACC4C9B1D7FEAAE52BC1DEDE57050E3497189B30E56
FEDB80260146C4B8B844AAD48C84381C07A1E590DB8093D580CCA5E933E9941B
12875AAD0DD0FD8183DA2608C9CEEEBFF7E61DC2F799E49AA34D42D7A8DB824C
644C9DE8EE7DF81E12C0235D2BB04F2777919CD5AACC73E04EC394826535AA4A
8C75989AFED7DF87077D1BFC4B58D86BEE849BE3D5967B23D08E30B0900D6FF8
6557DAFF1CC841DA401761A7F403EF9AC36C06AB1A0C02DF45D309FEA7435ADD
30439A50F378C023DF7F3A412D21BC04EBC863FC6FF866F7C2DCE9200C1BC8BC
9C6FED770238DB4FE7E1534345BA303CC36FFA0A37559B76586D645925C04CC5
CEF460E641EDB82A766583216465B3F2A29D1CFF757E68AED13C2D67BCAF4FE7
230F39A771A940E683754F74E4AC16CA36690B723C0BD43EEB61F68309C4146B
B5AAB8FDC73717C811A1027944393D2ADFD4AA550398241A9A6E6BE917C2146A
8AC8AD05C5D9A1C9A0CB71B5A0CE9AB1236EB4B464321A61377A19E5F8C45C0C
BE0CAB8C4F383570170D5F9236781B178A186480F3EA132EAB284CE2889A8523
A2E1D5FD8162A926295A995571DDEF61ED48D8D2873A865042BB92E77D467A4C
36644D320977FD2E7E9C1E1B213917D2E2EA7A91CCC7CD83B285B1CCB5C720AB
DF56298B30C3B00A9B980954F8538536C84C87B4D11FCC98EDFB1344C7461079
93C2338D9C412A882E2613EDF6A38B6E08A97421AFA053F3909D031EA1917E99
B07FD427D16F3208E6B492805DA5E981E67A4B4994548EB6DF3ED4D970C7C385
012DAF513F8E0AAC75E9BA697C1917FE5D7ACE0CF2465CE945D910BA969B8D11
EC7A5446F6B9C848E0B96F3A720B7A5767E3F5B519C5AADE0ECB32A9513B8852
AED8014A404CF632BDB34AB0B5F55D0E134251C6627751ACEAFDBB5D973B60FF
11B4761B2BD877CB14732A70B091C73EADE9BD7A786DDA5AC3579B7F4AD0A1BA
10F01B66917BFC9C82FDFCC267897E75094A3BBABEEC8357C8700DC37389C208
C105F205239F0414EB2544DB866719B7FB751B1FFC594B11A3776D760983B280
BC7D482FF0E9C42F158167C6BA509BEDF4FE3136BA613F59508226883745E347
55CA4A6DED8D432EB1F58155824AAFF8ED61ED8397F2D592E266C967D7D423EC
8DA5264C9C136186C998BAB535397FA745DA5799D96A5C3898E6CA8574A4D7D1
7C7295DD4B93660AE2C3A13DADE1DFFD8609CD1B40A05012EDA2AD87DF23A6E9
8ADE54C23B41747C1012F7AC737E3184A864EB4B0C0F434D3682E2313A806A76
41F2D73EA19B6CACD3A4C1D57B2C0E261E7A9EA079100DB962398BBD3D279A80
187CFB522225629C0267FB8932B19E8E609614131EEA9A4BEABB1314531FAD85
174F3ED78F3F2BFB4FD4B26B76FD3F04866830B7A630AB88BDE92A16D26B4893
EA2E2EE0264B3AD78DA5D3E7DB7D37BF5DAE9741FEFA98ABF614BF3154841304
FB9462FB15FFB34FAE312192CA9F83748AA0753FFF5A0ADFE3093848E6C66CBB
D97FE5FBEE0409CD1F62DE0362E791F64CA4D37B3A22B1EA544EA6652341D2A5
5D103528A79957F0B2412E313759889F537AC9004273A7F1D41ABB8D6A5D89EF
270594D79AD5883CD1D29368C5931056FD4B4985E7CB0457B61C8DC518AEE042
58362695F8A2A09B098016622133600FECE330C9F2167934E8A733C238BCDE9C
FEB0B6D349CDAF37987DD31A15884170255DC1B5FA8413B15503D0294EF37818
5CBA92919CCF9FB7921B0F943B905CFD3E5960DF7D19C4F7D97A0615E291F375
744EC68F1C37449955001593BC4A380295AF968EC3F76E46A03A40D57B9EA313
2FCBC9221152C62084FA5B24443FD0E57E77A1B478B7CB003BEB2F183CC965F9
3E9719ECCC20C9A127357E315CDCE67F33F25AD405A88C8CE8B62BE3410236A5
6648454C3069833BFF73A7C52E43213F1C8034EAF48DB4F06FE2C902EFE96D33
102FB534451BD7104EDCCDBBA26005F74B5580C43613C3626844AB2E60E0A0B4
2EF8D0E3C3A8FB3D0D5053E13AF1FA15BAD5EFC839A2E2D86DA1C6763781841C
225B2FD9E68AB94BFF336AC6CCC12E1C3086DE25F7EF084F8F011A68892B8CD1
62568EBBF88817F36BF0D63D83FB9A6DF4AC90754E43DEAAB080D3D21EB67AF7
5DF6E73CB25E963BECBE2AB3C78B8F01DBE5C5DC368EF2F24FFA46ACF8377B29
C9C57AA9F80535E9255C68852507A46B4F9373E858A27813D36F262CDCAD2A23
6E489DD382EC9278F05C484DFB289EC05F59E54A6706DD2260A0D3486DD4BA86
06148319AA12412D3938708007895EE5573CC97A17F8A9D9482F5CA85AD2AC9B
FD6AEAF163BB23D2B939D3EF97BAC1D47A64B6398DA48F4BEF2BFA3C7EEDB4D5
423CBE4A6002E95FBF311F1D3F1EF6CEC035E31164624FA88B5BB39302CA5DD5
ABA94EFBD2DF0B40F7BB58387C07B45E26488843EFCF53A07B835F308A939431
3D9E202B814379A861F14F69B93109816A95A968F7B0F3EF8D82069350E17D9A
22DB049A7518974356E8AC483CB2F4257A7C0C9AEFD37F34F7A43602AEAE1F5B
257AE0F3D2F5AB16B560D0BA1754A7F8C6C14F95595F033B63BF0E5811315CE1
8CF7251E6FA5528CD20B70AFD66F23D8B860C39C6B958323EB7153F4C8D24BB6
90092FD597FF8180CEEC58660457BDB41C3CAA30F1AFD1B1312FF3ABBE8EC207
3B0A7229523C5A4B559768B34E3BB3EB04B57BE7194A3233845DA1E4BD034349
B6105C33C8F812E45701D8AF4A4DB0CFCE1FEA7B19990E989B49125E001B17A8
D8FED63EAAF33441DBC093A730F75E96C15387A9888B5A860D605813B5AD407E
530112B5A144275190C2C2FF5CC9754E6B051FEB2AEDC1E8A3CAA54596A26CC1
88F1F561E7BFD3DBA84F1A76320A11DED567CD78628C6B125D0410BBEB2E681F
23A5C7A63D2AB8BA8415DB20D5A63DAF9C9E258CAD4C0DE0F6F76349D1B57589
27CDB632C495406CB4EB2CE4B59A585F3E8F097C5EAD577E122B99097A43B892
7176AA91D5CC679C365023D40D576C55B7F9BD77629D8416A9AFA8749D69439E
B36352A2ADCB9D10954494F9E9138F651CA88DDBA30342BFBF5A1C186A3B2B5E
627094D6D1669EE62CD40885CAE8A36912C45A4AD19C3A6EC864AE38C2341DA2
0C3D092BE8CE7E9C4A4513165F31F6269F110ABC2F0936EA1C6E517ED2827FE7
45A16F765AC85214A03397F994A7ACF1611B82DC6A4ECE7A2930F9B30F08EF8C
6026BDB1E9F50299482AB7A5D9AC1B6BA12820FD2EDB4BD2A36AEB669D344A58
268C0C1187BD365228AAF171CF6D5E9A917D75E0D720FA0DBF1DC979BAF454B0
A754A583F6F3D8E2B8FB0DF6B5FB6DFCFF307A89AA0C32222BE14EC9C0A2A8CA
063A0559CBE58D213FCB1093125542C7E73304FD56C02749C6E6070B3C86120B
E413D9FA16F4F2FE28AB0178EE623E346E6853ADBEFC444ABB9FB82B85826F90
629E160879C860871988A25B462DBBF21E9A2B9EE9E1B61ED56438902EC541F3
BAD1127FB51E3A71EB921EE01FD54CBFB9B37C7BB260937BC42676DEE1D0BD5F
8DAF46836BEBBDBA2541C6C3F07FF2BF71469F8670BA5AC639533F2F09E9862C
F8C12FB74B271AC247964A5614916FFD30109A251C8EF36F7AE8D5B6C8E35203
7EE42DB415186A1A10597F84E27EE599E3813913F63CE3FFD2DD1070DE59E8DD
C85727B1E8084C77BA1FCDBA012EF7C8569A880DE67FF0C73C9C3072AD6EDE24
A290C0F6E1593A5BCAFC7725B0FEF3F2D78B3EF074CEFE48B040D71A5500EBD3
E32C6AAAFA0F8DF3FE8B121E3FBABEB0AB2E91ECCB6C83314564A2B3F7F8DDEF
05A0641524FE344D635DE655C9CED864624E5E0D55B6997C786B8E45722A2BC8
83D01FC02108FB18FABE463881B708AF0573D9C0A3428C3FE3CA84B17AC03478
9FC25233692FE2AD5FE6A5D9D4F7B31383AE8634C136B10838C4DCEC7EE8A864
101C89059C831731CE57B7A3FA3119BAEBE54FED2C5784E07204DC6C2F95F34F
2FBE3C954FBC844DBFD5073247DED6635F724D22DE2389BEF8637576D03DD08E
F9F43B3DA0F5AE4C8145ABDD8028B5C13B3D3AFBC7610B9CC17AC8945240D2E6
35448F2FD46C3C3C70A43C4208C426689ED99F01812616264338577E3FA4CFB2
75C009EAC918BD9B9C951C51ED051B3C064E4B5A20CBF123C900228BE816F5B1
23EBD5015BC12CC49A7B6DB44BB0A0685F46E7D43FD21B237BF25EFEF724FA30
7EDDC32AFAF5BE2EFE1453C282A229299C455AD942D81A7FFE08868F76E5F061
98708AA76E5B2D9990F64D057D4BE72B640433B1ED4B01D8B4505EA6BC357252
7F62E549614C755EAC282D449BFCF4A67CE9EF4548D247CD347F88F9CDDE0F46
F899143247EF437AC7DCBB01FBB4329A5C88D0D500AC8060E99B9ACA92A5FAB4
479F6351E0A48D5E16D1348ECEB330BE3C94AB04910BB2CC18A377857994E11B
554B13EDB9EC511D225930BE4884A9B7775847C69BF6917F24361E6EDFDBA2F6
D4CDFEB252AFE777BE9EDFBCD294C6D2662E8E049E2DA1FF714C0C56F1546DC7
75E8071E200C21A4DD6A01D8067F4A968B267D232B894E97177A355439834B54
2261ACBECF098D962FF47FDE720EF674D1E48E1A813FB0AD7496AE78F7B8C213
50530C7224E549CDB86BEC5AD96982D14463AB45D6DD11C59CF7459D71369BCF
6ACAF6BB6ADCE6163BD9B259BA320F89EC6613BF3F852BC47FA6D7DBEB0414B8
E489AB6E88F791EF0F1D13690FBAF56675AF89ED6493534B54067BA5DF61F2D2
44273F092A89416109E08C9D15B538F7D5B79E8C3427A37CF8199CF094643280
4E1CC635CA4D3854FBBA55487B414A39B0EEA4064B477552736FA924DFEB6271
9AA9ECD9A820375CA62625CA531CDE29DE9884A4901E861A53DC4AB001FC2B62
FFE2862EEEA789D116BA57DDF99C6ACF3841E967F39A993872718C1FC3D5A875
E05835432C619D52F7A9496227A24236E300BB170AC2357E6ADF9AD8C35ED954
0617A3A0F60BF621D8AE69E02ACE566C6DE4735C5D0C5880E1DD6E33287AC398
1C7E96367BD71D378150D8D5FC63B6E2258DFE57DADD866F2F4C3D6C719077AF
2CB43A624956DC5E1BC9001160A0E64A136F93340016A22E647A647A657FE23A
3B74225552B2C9D269E1E11140B622CB97A46E7A58FA175338A7AFE0FF028FB5
72EC920BBB8874972A31473604815E43F13957A6D6BC5BA6FD48DF18E885A7F1
E8A2D4D5116C9EDBD4804F0958E9F5972B6D9FCC3F55DF453114A55A68014EDA
EEBCAE90AA2A02A9B5CF9DA4A0A58CAA58297ECE38B2DD13A22E5BB034BA72DF
8E0235A7C354BC99CFEC53983EFCAC0F3842BEF460A9AEBEE7715987F730A7A1
8CA4892D103A1F8A7B3841090FFA9A00B9D9AE5A944CE10F9F6893FEE8686EBB
543B62289B5AC17B8E6F770FCCE6A71D5CD84A8276FE798B8862B0CBCFF20E38
21777C2083977BB748918BCD4C42491FE195357E6DACDE6601BDF835285F3A06
2464AF608AA23992AB643108204E0DFB50CAC57683CFA916ADE77543A6D78701
9BAB3C7A1082D20E6BEB8B20FEE050B14E2F5F9B257F1500200F74344C049F57
F35CC775FC57C732FF7B84479254045EC75E862CDAA079DAE4EF14F9E60E48D5
3A370186883598E3A9DB6CAA91732485AC7BA1E85B64F56B02AEFD016D594517
A664A5BC94203DEAD1B13C2D49D4E9A9598143170A9C39B6A7930A149CC66B52
4BA90A2E39692E80F616D92A1A1CC8689BF3A61412E071A019D7DB942D3C4008
83E3543CADD92966E389AA256A92531078ADD828089EF086B6E1B4F0889712DE
F06B0BBF207E5AB1321A106E5B8BE4934A1727CC8F41A5026652307E61EECB2C
4D62F36C8F60E864D6C9D0B3D22F0426E9F73A337F45A82ECC4A6EE1BC5DA19B
B5CC570381DB329F32CE355B8338BA92D5FBCED14B55B006853A8AC82AEA4A1E
A0EFA7C61BBC83F9FFC83ADD0028BD07B2BB0C740FE9B75E2071DA3C6BE78AF0
9DF1A3605A6343C5A3F507026F0F9A75DAD22FD480C8A32E3E204CF1B4489E89
0D0689822578797F885B83E739BA58AE272468F076ACFFAD4C14C6B2DDD4D4BE
13BB5973F90DF16697193FBF9C693E55B0850F82A0A05BF124D0EF1C86819DD5
BF3677220E41274E5B2E9254E498EAC77BA2011642A6212067E5222D64017602
CA447C38FC870F153C52459CEA0B5631106270828CC293B8AFACA663F75D3412
C881379143913A054B4BC5662028B9C89395762E2CA39FC940F57936B9F95B3C
3310A65090B5CCB74AC9EF9B9182BCBF56DAE851425D4854C759EB62744DDCA9
C8741084C92F620EF8D27EE453DAD7EACAF1DA3034FFA6161B0A9AC1E354B8E1
3BC5BE6B6C4E92751A2241EFAD0A095E8E29BE5E0374BECB7F730DBE96F93614
AE75761B3CA50D749F14BAA3261103B9E5979F06A46B758526D7E79440D3E68A
44A628F384E4860A19E57F00B5E73ABF0C0FF513C665399C4E17A3AAE18EAF05
28F3046CC0C9E452A07AC306D7F2B6C8002485CB219AD287EBCBD39059010CEA
F4FEDFB5249074B39BD3E8D15D606E0383188E744DE1BE2B9CE6FB91DB3939C1
6D554BD3B79869F3DAB1052BC387A17DB2316016F6B3583C3938597107C80CD0
54624826831241D4B722917A9C0C76834C95E5E19700ACFF7ECBBDE1477BCD9F
93AD5FD26ECA389CBA9A415C8B85982427DBEB305C7335CEBB5771C7A207F39E
B89FDD7968DC0C9BF4BDA1F1011A96E2836D6AC054BDBC4BF85C721677F9DBB0
A960685F067C468A45633CCFF869E2DCF973DA9205B59BA0FB279041C1F575F4
A979FF04F11DD36DC180414D66802FC07965A21EEEA83CD8681497A73F698CEF
90863620887DD0EFB2785A5E8D3AE47F77FB32F34207D66855E69B548004DD77
20C07718C05A0A610A926E4D43D1B20C408C893FE547C55857393F848DF55F22
44CAEE6CF8B91CF8A4E04E9D612D642C9604A7ABB729A81D0508FE7AF78EA5D0
271E0918BA3393BE562D495B762F842A70498BA0ED3AA4E3DCD575075A9A6084
9FEA4AE8090FF671ED66A0DFDC827C8A5E406662165F55CB94D2E55E6C7A52C3
C7BA17B31DA818FB61C69FF6ED5AFCD7BED33AC568C311E35F443B945683381A
B6FC63F210C492C94864C8A153176F236B06FA7BFCDE1FC30C2A50314B0EC7BE
CAFF65215FB5835408D00EF36E6588C6ADB6387C7D2AF9DF24D57A377B51AA4F
2812F1B69B506FA6BB738ACD398B9A084CFDA936C6204517DF48605C16094EBE
16C356E38EE56878EA32C3655A68FBF402F3E67ACEF48A0CBA68E612C637B7B7
4CCE05C7B1FF5933340C80A4826076C05C63A754E4162ECD62C39D5E3AA4B16D
2C6752446E376A251E5FAE1B400EBDBAA560E7B19C705D6D814C5866588295A9
7DCF0EB22F04042FF931A4EA1BB7343BB74BEDA2590971895AECAC51CCCBBA57
66E43C118CBC9A64B5B60B6F3C5A15CE4D67B6FEB51B73112B1DE8E47FABA8AB
BDA1AF8D0EE47ED81350F372E939E2C1EE9442889AD251CF0F31940EBE615725
5E17A904F1658B743A43D9ACA2F6BEF2C3F0AE679877E3E9AEC3148BEEF6592D
E337568E97201126A5B22A6D0E7F95D6F8052A6D20D945A5A703E18AB58E3FAC
7D307DCAD69F967794775866DFDFF20FE89227764C67D0C8DD4DB0A02CBCAB7F
049B50334A81C4512495C4BE7A848403B6BCE76F08A955A2FE6F9F67C2248ADC
978B2A1C54F0DF774073D4E7051B1C1AA3DFA1DF42AF59EB8E8B4CA809EB1523
BF4A835588EF26B999B28B4E6AE051F50C616A34698F97AD272A4EFE8A05A866
D37553A9EED6E850F1417B082E05C451E7D9855E01803A2ECA681B45098332D4
357D11FE53B4B587CA9A6493399DBB8BCB5A3E7AE2CF008719A4E6A00D99747C
99C06CA50F6F9AF93F714D3427324208E827A6CC52EA4E289316BBAAFF189BE3
60C5A11811E905739F8C2A3C8AD44817CE0E730CD6BC588852F0F8EB87A17818
120FE42C47F835D27068C7A2BA1B68
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/UniqueID 5000828 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 14 /ffi put
dup 19 /acute put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 58 /colon put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F2034B2E69DA5061426805353EB4D80E20739BC4C510
6C45275B8261DCBA10DE1D104B12F46ACD230977EE7D7D1D35D2814139E38C4B
CA6937CCFA653349B1EF64A98457F7B4B5D8F2978F16ECCEF7054905863AA46E
DD524CB33459220C71E9EFA7845A3A760A507B3D3ABC525B35930B613710A13D
098832C58EBBC8B0CA6AD516E6385792C59220331D0922A1F6F838A8DE13C337
900462F952EABBDC2EB1FBF94A66186C177501453CD3FE3582073DD86F04406B
41B6AEB440DA475E13240445D46726A6D45185D56BAB8807CEC8A8F7CE1AD149
7CE2E1BB5DE4E5B9592241DD136479A65905FD0062C91DFF7349874BFEA5D9EA
2F610ADB9AE7757B2307A1BB9D6797D9F9C4844A59841C7C7682105E23A374BC
A91885E7410F56F60C29AB8B417E2D6092F8BB70A2DD5DEDD4BA1077D7CC62FD
EA43428C6F79C332342E15F75B08A1ED360CD1885730E570A3252A5ECC419A7F
D124C3FB3A7D58C0EF6AC117F50D7D4B6CD852200A1F3193BE101CBEF414F60F
85935BDBDD23254648DEA12B95871AC8F859AD8C9315B258E525FA7BB0DD294D
497646805C3CFC1CFC72C17EED56FC5E7A5FA54691474DEA0C85DD18ECD59923
619117DC6AF37242576C4E9A56BFF2D3E717DFA750607BA2BE87050F8AE8EA72
8056655F9D9DA1ADBCB07A6697F6664AC6B6C1F5650255776305892A6E3D986E
10A3F76B65763C33A249C23C8616B866CC56D8440C501D46E821750FAFBA1CF3
06101C7D563C43EFE7A7AD8D402F232034B7BCEDA9C49AB562DC60CEFA521711
DB3D81E0400F776034AA7370C867BDF8F8CBE2F2E59D2099F8627118EFD202D3
51B7AC1FC6D959ED360DC88686071FF45FF4893C8C58C4BEC02AB175C3645944
2931F3C13438B06171B814FADD837552972E4242EA058517C5E2C69174395C1F
913209EA0C72D6FC00F57428AAD3852D2B22B8A80BC62BE33B6810E923D71611
9830DB44FFAF36266EDDB105E92B6E0BE02CC9B501B878415E9950C6B84F74CB
7B5F8460E0240962086B547540264F9CD029F40E734EC9E8B0C72335662D0BA4
2ED66B3E5649529D21E3B9479DEB3053E25D96514DE0885D3BA5976E4D90C21D
B094A39F0AC8535F07BA31C71CA5D158A149F9339F2127B3C69A0ED01AC4044F
9CFC6DBAE9427BD16A47984402E72783D4918D2C6FF35AD436D828D913DD08D5
F199F9EE9ED19941FE693D1733CE3672C8A584A6F1ADD85A2B273D46EA84D990
85AA9AE8DF53A2A2EDEC89F9C9A6A5C646AF571DA905DE5FC792EE9FD4292B4C
730C54CADCBEDD838CAD24FFB5D67500F54A2C3A15DACFF65AF7E7B919E34D90
637B34D44320B723392E3F9B21849A2F8520C2D0698C337B7E95A5CC571361AD
B8E5C86D33E381E570D50EDC85B763C354E8017CD117CBCA2B8E9FC3FF3B65E9
3F62EEC686AA23869A4BCC126E1586563641730867405783AB204281F94B9D06
542B9F983351C0D1260E2DB6426A83FAE409890C9FCD1B636E55AA94D596CDE6
C5F8B14B9524994033E46EDA743CE5D7BCA6AAC5C893E83424A3BC1ED0858347
3B21FAF6359E2D858001D0F08DA33F1161523C76692F213E2BE3E179B674BAC2
F5366DC1BCB3CAF7324E0A8A36BD3EF07DF9FCA929E0834456AA86D0F24F8E33
BACD0F4D746442D1034890909374FB13DF8ACE922C9190928ED4EB3D2083450D
C0675C45C27CF2B31641EC3F2CF6D0C964CBCF8B75E77E0DDE0F9ED874963AED
D63D790AE6B2D6166C5D7190F2C24F9A9A13961898AE5DC311A762B8B785C659
9C81446DFCB6B336847052277997867DA5CD0DFC35BEE83ACCBC73C481D12695
81D4B3D5003D79CDA6134495F480B392129D179CBD57E02DB1E6D8AB3B6E6936
B7611F7BB4A88FCB0B58939C7AF1CCE46D69A9E54B3DBC11A99B50F00D4F0240
AD2BF3132F9E10835BD48AADD04772AE1D41629906B92CD90B1D7BB7D34F77E8
A16C7A3674160275B835F2D4FC98DD0F344E13F39F4399172A6DE7D6700FC37F
5BB99113342112ABE3C88BFEFB048C4FF1C5CE51B521F225B704F87DE9DAC36F
1BC313F148C4BF1BB8ACB4C2A1FA49CD56323E649D4419E7069A9E7E1B9CABC1
73D49B4B4855817C22860F9FB1970F624075304BA29FA32307DB49C6908ACCF6
E4222A3BF369ED22F6F4C8CF8587EDB0874A4551E00462CF53D08212F92E74D7
0CBF83B142EEDBC007FE06A06D8DD4E0D8791537B917935B4B9BDE9B86784FE0
B45DD898F54B9EA2F95687D1D9ADD22E09261C07034EDDA896D6075C40E14352
2151D437D555CB1FEF886C3FFC610649345724C7C9D0AAB585906C5E9366F5AB
636082E7EFA02DCB8DBA1612509A59F3447A2465C460E3DF20C9B5E742635403
B3CC004D592193DF553068F1DF66B627B992CF9BB68967704D31695637109405
150D9B3A9D82BE7BC57EEB19D151D290E50A0B9EF24A5ED767F4D533BA6F79E2
A45DC54B2B25B0996CA4EDA63B5EBA0D36732EBF2690ABA9E34F3C88F3283357
A738A3779DDF7A231C59272BAD167479F8DD75489F62B54C8AE4D3A04CAD3775
FAD0264F387E38BD7E652C4F43C0AC856F2130F5F65F789FC3138CB301F978A8
94B55988C111997D59FBFB266293A91BD3A0BC085676EADB90FCF67A96BB14B6
D6BCFACAB919308FEEE55CD86BEE849BE3D596BAB3F486C9B7962A4101D95634
E87EFD36FA1F6D4A974B8FC75AF179CACFC2956AF712636FBF39967B1244BFDC
F381B5E376A5B95B3B4381D327A03F1199DCC87B2852DA990487D6165509A02B
F4CCABE69FF691B2084D29E8864FB35AF94ECA0EC3D77BF190EE5B162A4EE61D
3D3729F8B50BC694C6E84C61AD12BC43B47628183DC1549570EE7C0926AC31F2
3F00DD5D068BEA06FDD99F2DE284A12B56556845937D28F1D758495D9CCEBC40
F8974781D571CE205FA5E36DB66995FE38DE5C877BC59EB94C58EAEE6A45C1ED
3B4AC34B2DDD8241337A1D76506BABB77F2C11B7C940EAF86039E14FEF37038B
AED573A012ACAB3DF573E005A106372EBCF24A31BA490D3A53282C028E75F84C
6EE26A54B4F6EA557367AFD9647F41B7E442EC0076C7E00A075AF744EABCFD60
FF2C10BACB8322F5CD3404E3173BABA6445B543ACD596265935F6D5876990BC8
C11FAC22E1A4B7B09C92D342F4E2CAC9E5FE8A53056E184494BFF552DE7F8FE7
945BF4CE1F4345095C92E96ABD1C14BB07A46F63286E2A1712685605F1DC96DE
EDF93D578DDC01C91F5AAD9899974A5D8958665B88ABB56DA1BFA1E9789641FC
538A681CB79FE7265624B5744B9FFBF9F4CC9ECF053B00AE6EB449E290CA0B96
D23436B6937D0F1B15E4CCCACCA9782ACB97505156B704E4274805FA9EEE3AB4
F5E50B7C7E5806CD23C1F5A9B2B6C7F9627D62D8091C6B723C22C20B5E3995CF
196B8589E2A63EFB3542C08FB016B907B2C6793F795A32E013DA18B71D79CCB1
547421A69C9662AD4DB29028B52B62401818CCDB757BC7F6E8870A4AE6C24494
BD5B630980315A73AFDD22FD0273EC15535266A1731C780886F74BDA6CFBFB02
6385A2799999BC70D02AADD600616F85139B85B264D90CF2447F9C9EC606CE51
BE5C171FA30FE0AD3D8D5BBD2FF904EC7C98F01744D397F32C1B9B6F9110AD27
952AD92D5E908D139C5E76C1038C9A053AF848D2F0B75376020F67D25518CDFB
914308EA496F2B131BF17D520F08FFEC50F6AFC0C970D14132E815966DF3E920
F21553396BBB738706FD125E7EBA151CCD6F99AC59DBD87448CDD310886CFC33
1C93F914CD8296CB7EFB546DAF1AB41F7481D2FDF12F7E9A9A56D2FAE07C70FF
8B810F28CB0A289B810ADF6C2ED6E7B2479FA2DEE264CD967AB6B697F197AA7A
23C23EE973E7CBECACEFB4CFADCACC33730157DD3A29E2B1E3130C8BB4259C9E
37CBC78003710FD20486C53BFE95030A0B9632AD7CDB59442126C4F475513180
836BC2BE0366936E038AE633272A24A6CC57CCB537A70F9439B5E846E11B4B12
0171BA24ED159B2C730CBEC652ABD27676F822A585F8430B9CF7B4B2230114D5
B655AA80396ABA51EFDDA8FD02B4A2373AEBF507EA1E42238F882F89B1E4A4C0
E5C881D00227AA9C36EFC278E2580DE5FCBB5B56959744454A8750FCD9578A3C
FD97B11AF90B221BEE63BE96FE836930D8746E7FFE2F7CB942A7664D64AFC4AC
7E27BDD19C17B58B1C1CACF349FB837A3983159AC37A3071C8D81D5F2AE1F634
E852337575D78C3CE4866886662B50CA55695970C7A1BAF6B531E2854C7F5A25
90A72F2065A892A5830761CF81EDBDE81CFA2045ACF7E88C0768638284C704D8
95D617DEAA24678220F50D14B074DF8D24C82C55F56F5E37E3D740AC4AAB73DD
53276046E0D13242971975F59DE1C257D7B73ABD5D959082E549A0718E00B33E
3494E493861C36E5952468DBA5DBF79462CF166E29E26C35E7E9A2137EAFAAF2
1D8842A85B744D492DE6717DFAA94C465D155CE0EE333A001522FE4F64975FD9
B64D430DF80E77DBCA1B38CA651C6ED7E2997621974C96FC0FCB1F6EF07DE9FE
15F8F3C6C9875260423761D446864C6AE19BB3C222C2EC00612B4CC905356D92
2A22229CF3D929D1CBD7B767517372EC886850EE96EC39313E787775C436A475
EADFEC6C003595FFCADF7C929E758AFA1AD70060BDC205578080FC8A36D40BA8
ABD2B1BE2CB67865AC586221917F896C09E2A1B919AAA0C87FDB04AF82DDA0C7
0B3C16B80FFCB2F56B02535AC549BFC2786FAB89C5F8822CB081EBE695191DB8
42C70DF5FA375577AFEFDA80EE8F9E43DA93A98616753E08466441AB05A2B3B2
6BE40C54C783F443D9E28B1D53E6760EF764A3B989D2DD6189BDA15E0E82E47C
51C726A716ACBE238C107B7922F440924FF7E0FFBE1E72A8E04D1D597972A827
6DF7570C5289218D585EC5F8060C529FCA857162EA3F1AB110B33A759D2AD07D
3CDBF105ECCCBC1558887DA70A0186E111CD6E76D66694E3DFCCDDB664BAE63E
6AAB5C4297B5131F98D2AB1374569EF776440C3E53961B0C72DEE241FA20FCA4
C1772E03AD7618EC8B17593EA8245D341F7667D61ADF45170071042DBC1932FD
2EB1B8A12C5CAC15FCD3704F30BFFE1EDA59E134CEF841B6BABA43CCF55DB4DE
BB50CEDD75EEE0FD55394A10670C31A03DD55A13F186DC3698D10035FEE5CC52
56F091E740350C650C18287C6E435F196280092AD16F28C1AB9E7C9A51F62C0F
43059B7978D7A57A0C91706066C9A76A503950EAEB095A6C818E62C26199ECE0
026BDEE9DC9FC58AEEF78279819F2F677974BA7A206E244A6DAAEADC3E584579
99CCF750965968DBF22D7840E85B8BFD0E6E628B9771C197ADDD82CFA492FA9A
8D74DC7863E433117B0754B4376842926A6BA819EAD792102357C4F3C439FBBF
30C0E6394D79AEC6DF23177D88B222909816F7710309114F83D27DE4C6A2AAD8
CF9196E046D6C693F7C55C4FC3E13DD9ADF2C8B9E30F950CD211D7065069E1DD
C58C942D575B262D3A0A485E346A6A1F4B93A433A830F19419D5B30D9896E3DB
07D78CE919C5A35150B295F61B2A06C3098EC9A2D8DC865A162A2DAECEA884CE
0FD4B0A393DEA2C41103D611591030B012C40907B760DC61089ACF8261AE7866
BF7DA08A75344A0FD4156455C2C4B2F1B2014B733B77DECB29860E877C123673
B2F90747FB00F2B35513AF056C2223CA3FEC0AA4236640118AE1E0FCBCBAA73A
E432F16FBD6BACA72AFCE813657B428993F5838397F84F46C1CEE4EE9C2DAE29
8731D898E448D732F1F473CE802E77061760C4B425FF8967B38478FD9AE88041
4C0D687C40E42DFF449FD74541F85F0DF856FD845D2589A159C48CBD6401DF37
AC16A87CA2DB5D01C7E5AE3D9F8E112CE2298217DD5EEABDA36EB1DD5D045CB7
F053D513F19A4F42E505014581E8FF3C50A1615138C64C2F7518E73378DA4D32
13D837E1CAC0116CC9428E17DDBE329A5F96F105A77840EAE64B84E5DCF88C50
FB1DC788AE082DCE629E61E2EA64398FF855B07E6A90A5A37C5AD57E9A2A5570
0F7E8872343E7DFC9417BBF5B4DDFEFFEB6C2F1BC20CFF9ABE3F236C891497B6
D7EE4071F4A25B26BE40181B01694B58BB35279694E80ED7F6D24115A05223E3
5312C239337ADE12E11C8DA485FE5593809F283D3E8BC8ACEC11882124A1755F
9D9539E550121DA3449172421BD11BF5E2BD90E2CBAC96F92AF60F657E09E526
30ED1E719DD22E7E4C205294597B0938892B512A81CCEC32A3D83A120F0BB6E3
AFAA15778BC9343B10030958032928650CEEE0F37ACB053705EDC8458D896EBC
5CFBD72785040CBB3ED28CA3FA1DDCB4045D6BBE9D262569FF3E615665856C36
740F0AFCC6EA0D9949B24AC70B20BFD2CD55966E5E8C08ECD114C863B4BD623A
084BD586DA0FB0AEC1DAE9ADAA0962921822773EFCA4A737A050A17CAAE5F521
81AB17CC0EA2DC5FA95A5E5D045A0ABAF29A232550B2FAA22BEC3758A99C2931
9951CD7BA01E3835C5EF2EBC32860F621B75A471B9A77A8B4B66F3599473942C
ED518B0E4B658C39BDF9C8EDA523D122DDB0567DAE63521C8603C3AE552CAE09
4CC399E83FC70FFB8669BC600E45A7679CA2AA74750E411EE46E679F57A162B9
69A0CC23AD84A0EB9CB16621C8B67E52395B8159326134993E2250D6CA530F36
8B26414B57222D9EFCBCA5A9FA5D95E93B5DC02D71F461C961806F6A985DF742
EA0C58CD6E03EF1C5EA9CF9C149768B4EB1B385ED06CFA12086212120D9CF8B7
A30F69D3CA7CAC2E210D26AE594273F275BF204A909A726BEE7C20B6F8D2E5C5
72E7D1DD33A6FD5AF51C06ED1BF69D13168D312A04231FA0AEF2304C68F45C1D
A25752A096344E4C8948EE3D40D3C48A6289BFE1FD81E3B6002AD0F5C24B3C04
3F7C53023B950D4C2233A43844196A5F53AE808218C0D33762C74EF24B967188
C039A9BFD2155B693D90A024673A62F3A5AAAFA37C03680CD3DC019D201705CC
E02809CD85A9D4D71E037E678D7AF5A49CFB3604C3BBB4FD66D5F03421E74778
6C0F76217EEBB4B21038DC29B3203DBFC8CC4D4120B54F9DA9D73C81AAB2AC2B
38447BB53C46CE60268969776880544001C2866F33D13E12315FABE22AE11FE2
4121B8B84C490D4C1062F1CC230CB82AEB9A6EF792C8F7B568C0D9706F5CE81D
DD142486D95F5A7B5A9A1E11583C2F4A650C899F63599BC88EBFACA63ACF6FC5
D1ADB83C6C927B0972CC3EB41FF958048B82B912B39FD23F318576E1825061C5
0AC243F4CDD4408027821318460F574EDA245B37153D59324E4A78C35E95D715
BE0E06C02D82F727F6F71CEBE441E000C56CF5484A16AEA560328A7C522C5110
C5FE47308F4A0D7A7E65818D0E3E5CA5F4770814BEEAC98759F3550E3B27C0CA
0E9EE11649B0148BD786C273627FEC4C616B36E1006F2B6B4DCF8F00DF10175A
9E7F480D0D6396A93C9C4A1CCD7575BFDDAB8318C82D99ED7EA056E94BD6C77A
9909974D8CA12C41CE6652937C475003A809CE4C6F0270FA06AED84538C8EB44
5641315A8D7BDA628C75C0DDF5E5A2DEE0B36E201795835AF4F5EC3AE71C9099
A2CBF3DD02ADCED65A2F35E2BDC7037D0B1FD96F694D225CE51553C61D4FAE0E
DD3F67112D3FF9A2288FA610527406CC9657030365821F312ACC38AE1C249B1F
12C3F4DDD7ADAB73899ECE934F0B01ECE46D2AA7C6258EB171F51CE1FF60370E
D6796CBAF3D5BBD7BA068B4E180B20C1BC8DBF770E0BDC92091AB81FB76D4368
AC86080398D904A4A3F53521E1B99368FA8B65BB5F391EABFDBF48D1538E885F
9552266F6FB5E48F7B435D8EC6D4E51151562C3B592BC962165BB709EF8892B3
DA340C23EFF9195C3F3D59A03E715AC1329D7065B864CC1B18508AC80089191C
83D5B3BE75B4EC54265DDB0A3D1D9009DB753FA19103495D1E9DDB07D326E3F3
444F36D921272A194F2D35952FC83132D0C7CA832ED20D95B163F42B2C38685E
15667DA452F6C2580AF35E3191B6785161B0B104BCB18D0635247419DDCAD01B
A14A50F1796151A1AA8CC53FDB7C8F5D149076239CF4493BB24A138F8E0FD940
CAA1558D16DDA869C3C1C0E05C787D2452CC8DF12307E9464E8621A9A9C0513D
316BB51A30452B3B39BD49697D30B8BC2AAEA87DD804C84B98778C3C1225C75D
1BBC2D63CF061BD05C6095FACFD1CD182BFBD1729F77204483811BA37E2B4567
526D960AC7D05D35CBDF7445B6528E4E2B1D1B76798BD53852AAF1E6B50C8399
D3EDAA7240C46EEE0669B6E6595DBDD0C52155E844C754F6A087F166CC90A4A7
1BB0B5CE6E41BF33AEAE8AE16ABEEC15E2012D13D723206325117176A6C48920
0526D272124449F2466231CD6D0902B2309B1F2A8CA7A67810C2EBC5485DBB58
8CA8BA7393DF7FE1FA2FB6AF8EDF2745694201965F74956D7C9B33DFA5176595
605289874A1ABAA84B68BFE6EC2AFA72DE64B89E1BC33AC3AD6F863E2F18A8C1
13BE5C0119E28C6730C18B30B27E088778696BF0442BDD4E0BA1E86DE5F89E5F
6EBB107E50A10584EF4138337B9E72CFDEBDC5FAAB3A54F31E0423F7B79A9465
C52015084FB36B79A1F314DEF45536CCA757C107BF28BD3BF8C8762279EC2305
CEF3791BD2013F583BBB27B7AD6028812B29C0EDAE763D410FC4A3D98D9393D7
C102C69BB8B1E4BBC02BC2E88308472A88BA008A386F7448411D82EF627D8664
EAFBA0C7E2BD1C7C20B887A28B6618B2221A11C335FDB7FFC4A495C1F56BE0FE
5F072F9536DB767D0AAC18D0B88E5D2952F674241CC3B7AC0BBD67B955C0DE29
CA7A6C4EE3B38AB58BF04C80FF0F91C37C117E502B25DD4F0D643DDE9A103FBD
0646507FC8CC4B60B97851E79289F2FBDDAEE261D53F2C26FAE2F0CF2998EAE2
71A6DF77C65C1ACBD18FC15EE2A2F01B5EEC5A63A3718309315D2B46647CD449
5CCC67E9B2E002A99E7564AA1FF016D4039AE07770393C6FD9AB311F0DF5AED0
7615C7E69A22E7C2CF8AB99E0AD2E75C7DDFA4569470D30E9C7A135EE79411FC
D5A2D963D09615CFD53D0FC18FE2B20F1590662CA2259AC97FF1EB7ED60EB276
122E67FAC2F986F4D6672CBEA4194D86633B67DA228B5A6982A90B5F93CDFB80
C2DD0F3A9A65CF07BA4BF39BDBFB7200D2E062574A53D6DC972219E07C48EE51
FAC480856000FAC865FB6995F3B2F17B52002902D6FBEE234E676F0C44992BED
C161EA36ABD684F95EFC02AD89E3441615E3C6F2F0D4DDE76B22C2A8DC7A65C8
F592E8E7FF641B2A5A9883982B36021439D3A8507B4484A068327E1212D7F249
079B3D8CBA6342073BBC33EC6B01A28F487867911F8CFC4DD0D36B87CE197AE6
12F5B35766A65C9562F5E4A6AAF1FB94419F04107D301592CBAE0353B2CE0401
74894AF2DC6EA59FDB522AD75EBABAB408AD0C21E995FBA373EC97501DE90472
5AEE4013969B1C6309492C814D229293013668D7CBE92D648143E1E5663E0336
5DAC892EB3822156FC71583F43BEFB295AE115DE2E2DA9FF53AC6632A6B8622E
1AD652B2F49D2970834E9C1D22177F17A9F0DE9864981D8F2F5A5A251EBD91CD
F84D59A375DAA8903247AA34564AC4116B32DAD08A87116D7B321237D5683C9E
936AC26AB4CACB70E1D26B0A4424E2CCF460005C7D35BC76BF89FC9FA3EBBEFE
AB24BC645CD455AFB660FCF9AB79F2AB6D14E10408D9C56D2E125785DC7B0859
56E26D23551B27B889A44475C1A4CF8417781BCBC716C9EE3F290FB00C42F011
51E0FA9080481CB53CE9AED2F4E74D191E4CD809C5C0E6D3CD83E4F9F536CD78
DD9CC1A6AD91C24A659834E3CF3D0168350B3769309993581DF4DF9B8AF6E416
EF0229EF8BB16BAA6B10CE9AC52A0BC5FCED5A9408451D3B5A4C57616A1A4D4B
FA27C3F9533E45889511591B071F9E4226AC32838AEAB0BEF5FDDD4910D6705A
61FB971868C7B2EF588DBE0A37373E462EC90B9356860666A42F92FFAB5E6AB8
6B7048264B51C62E5DE2400023DB27251BA8082D7F548CDABC7EAF70B0504217
A2100EC992EEC593F7EB20E43115C116A027DD1A7597A6AD39251647F3EFF443
E833CEC5E1040105255C0EF3864452DFF4FCB0A5595E832DD69D146AFD61EB6C
DA3335951060875838FD6E12CC871C17FFD86CFA70040AA92732E312CC6E7102
85934D974354A42A61D18D175B698F5A0385305F5CCBD5648AB7859959835660
606C0B4C38BE5F6257308D0DC3880DAE74DCAA3E8F924C95D2B6D01C7F4B74F2
559B84852854FB528B7B7AE2F70A7B75ABAEC173C9E3E0C78B43C424029BFA86
4774602EE354A0A88997BE2733229EAE7088E31D7D153CE549EBA80AEAB531DA
0E9F1ADD61EE8C01969A9AA2E3A598778EEE335291620138B7CE13A4E308ABAD
B027E3052E95E894BFB73C63C0E58C61AC44534170D92E091BB34D36BCB804A6
6BC5B9025D257624B3EE5A7A3B0945A0D7E2A20FF34066333D1F85F27DE678F5
871F880A2F409A9F831C5D97BB3C1555ED5BC924B03CC714CEE7FB587D25287F
6C2124FADDF974192CA75195EB8F9ABAAB07C6CEDFF94C37A8CDA819F6D9771B
138066F3286C7D7AE9EBEEFC6C6E30841B1E60EB57D2268560DCC80D48A61A14
D14CC54C1F57F0FEF91E28521CEF8BC958E1F94F7A5CAD1AF9E792E6A8FFD79C
EC223CB333BD46762F3655320881D8D79784632B25D1988CE389EBA0937AFD18
9E06B5E3F8795463835EBC8C3C2754C5F3E252A941F9EFBC7EA7E2AAF36D5E30
821AC7D70E02DAE2F5E9251E4E5B3E365DA0039CDD7C1E25ADF50D70069EDD0F
89F733919FEBB9B0965E687E2BA310AFFA57355AE0C129C501D810F90E058F56
16F26B25A7D4A909465BEEF35CF2B5B59AF41F1FCE264714A54ED588899D7CAC
16980F85415764E9CF047FFF2FA0441FD030CC6676FAAE0A1DEFDE76D76D0084
73CAEBF65267AE0244CABB59BFD6B5FE352C3E83CECC31F40503A42BAA26E3E8
9ED9FC7A3732B737EBBBF30159AE32B9D04FA398F9C08AB4CC9E72472A66FD9F
519185C5632D8252F84BDD04743513D5C908C5888618296ED2358010E4C8B37B
97E0BA9E540947F02899BA1CFDBDD730D63300ED248A21C3F7060EFAD5A79097
BCC91F543198A799C897DC2EF8B859E0C891C87253CFD71F53E3B54B085777F3
D6033B9DBBCE6146A46AAC528D3FFF561FBBB680A77111B6B05AB5B06DF104AC
DD0A553C6EB5440E508BF651F925CF0AF1C077D838C00167A59667D1F7AFDECD
6037EECB45D99A5102C311DB57257E54FDE6C5C3CA62C8C39A14FC78030841CD
97D5A87CCF3AE27F6F721B9D13ADF6C216303106E4848AE882B643C987305264
4138BA11B504BD0AD1064A96F3CDBC2C6D3D59E28FAEC86C4E7C5000FA19C7E1
7C26D3CB4E56409B7CD441B152C3AC2A54E6437369C07025D089F6E5A299FA4A
DAA96385F5C1B936EF03C530B881E7BD8086BC15F479D7BF831291E2041A347E
FE6F8406B0B64E0ECB9DBF2C61BA9A0A3834F60A5355AF1564B244E63C68A7C0
541ED51F70F5CFDB550977F1F0964DBF608281E003131C96D7A4409DD7BDECA3
47CCE72B6CBE21005F0AC12EB233F2CAB4266A2D6A8CDF65E86FEF396C97EFE5
467B384D7BD3900A2E64E19600B5F9D5BC39EBABEABB465EE3AB24F81AD2E031
050BF8A5F3C0488A8E98FB4BC2B4DAA465FE382059722AE4E50EA228095BBBD0
C0B901919A14841A146EF2394884820ADCE4DF7544BB10EB9454661DD90B0ECF
9FE816B2413FAA8F1C8B00CB3808A049A44FE681A8F225DFD4437AB8DB636934
FFA610E8102691F2BBD8A865B49FAFAEE9506DD3C9439D956E23C05410F06F1F
37FA31A3C85B251408268EEF7622205EFEBF7D208FD582E7777898AA49BD8420
A162F2E5AC1708FA59019D048F72AD45DDD4F1CEDD4C6AB267B2ED868773F7B5
E12A1346931F5D89C4B0810FC1A6F1EC89D961BD2C14609443C0EEBC94C56968
3F5062CFD9C6034D5BACC468EE3733001F6671A09CA55298ACFC818D1D07B495
0B8A618B3486CD4BBAEA06A8EF68E78CD703D42A3707351E0681AF74E39EDEA8
563EB615398C12A6714A362DCAECAF28A0542307D143401CC05FC36376F2A18C
4EA6E5208524E9E7B5759B160592EB40BA86B2EA204FB7C65474499DE2A9DBA1
7D23E730A070DA1A6654613DDEAD7EB7FBCE73DC0B72AB93E9EA49089F7C76E9
8032D4B63990CF10DECE3F71FE06C97E6EC44EBCB19A43DE208E66C7450AE992
B320A5FCA5EA3128AEEF8E3F3ACA9A389AD443629BA2FF3FCDF2DB7DCEADBB8D
3CA6F4BB124E04A1DFAB69DD4B83244B20F5C92EE963DB375BD683048D36D503
CCED885841ECE79E8066C2F4777B00CB286FBD9461B1868986F2DEF77B5A9E61
545A40C0046B1C94DCF00C050BB8B4CDC4A547F92090F35941196B0402A90922
D3BC8AB4C33A0F4781EAA3E27AC40290F2B0F317FC6703512B60682D69891C33
725AD2AAF8D31C2E666DE2824B4424C1B2013213511776C709DFE59A031AEB56
B6BF668C0E9B20CF563BC402453D43A66F341C7352929022AB2AA423E2458D5C
3AA9831288DF9D8E24432E2DB703D9615141117C642831D77B28EDCB875E3BFD
1B495EBAFD47652654E1E1C9EFDF0A74189A5543393D8E24CAFD34C178250875
5F642D43068CDF02B8C8C64EEF814956A6024F9160DEB38D8E236620A7EA4DE2
CCF2093D4903D845B12C1195B7B3886FF738252000F80EDB159E2237C4D0C30B
679DB5C1754AE023E08DD632ED25B421045EAF4099259DE87F63E6F2EA0612B9
85AA1BB8A70B7C9090A181737CAC187661B364DCDF5083C15DB9E3BF6DCEC609
0761E577F36DA24723C527A015C38AC3AB18F7EEDF364065DA32459800D90A88
0E462F8394F998CB71DEC3B41454DFDCC5CA2DF5601C3508FB5329DCC4D8F11B
EBC63DD38AA2EBBE59DD2E8B72AAD39B19E5F5ED3C9117E4CAD8895DA700FE2A
71C7564A4193C83CA0AEA21D2A485E1479CDFEB317A4AB3EB1DCE0796A17FFF4
3FCEED6D9E806C5A0421E4175B019784226FAE526B04E77F2DA7F120EEA68FAB
2D8AE8232E1B372F628C42893FB9EFBDD443DB3DA7D20E225ACFEC8265707343
909547776E8E94E6E00EE851758C962C90041C6E3591B27E210308FDEA299E57
46EFAB73B56AB445E3B4B4F3C06B18162A2509EED95EED3DF1B0DA25DEC61C78
D4935D67B0C483867F7AD5FE87B50E877E06E6D3F8305E41A6F5E3A6A0B9C384
8FB470EB24480C780BB36B9F057A295E39475114A1A512565FD9A64E7BB00502
6BDEC98578D6B37F93165976498A33A95E16DAA6E1610DE4A1154103E4074E02
4974115F5C7FC50F5B9462BF5283C2F31A7FFB988ACF1B03B914203F352774E7
59CBA78264BD4119113981082DCA04A3226046CF77EAE57C67A7C1AE0765F660
27F3CA32E4D6DCEFB92754D899617BE28B887A49571EE520CD7718A5CBB10DB0
AF8BA3C25AA1221C93F83F6F17D06CB364AB483B41330C4DE34D9F7BD8767B3B
B98C19276A104C87700EB2DB55B45B34F67D02EF6DAB9424F7978D486322A4C7
3D647CD6E2759CFAFB539F1FA482B4CE2F379F4A8645D91CEF4EEDE6981A775E
690D637B87ECADDF6595261B4FACA197E3D751EAA0D28CE140C9EF753403716B
D7840E0461FCF0733CAA301DF6CE245B73ECA49C987474B3EF2462F50454842A
67DA6500A02668D1687F234CEF79BE52B91061B62A43871CB9E8A5FBC4A17F9C
D173D098E1EFB6C7843C088E6EED6F671A5A0A81ACB1189B4E166870601CFBEB
A1E8DCF1D9701095D71E25308D81DC29AFB27128EE30214740B43B49F06DFADB
8E700CC6EA6E61B0482F8FF93BAA0A574E6F4EE14042EAAEA220C2240DA9F265
2DF2C4BF86B968ADE511EB78F2BD0E246302FEC4D14D29332A368A0B20161109
21477F7374DE7DC83F2B5ED94DF59B3222FE3076A85030C67AC9029292762343
69B7FA74A7A5FE72D0D71861E613D216F7E20ED0772C3B16BD0BEF429D23FCDE
BEF9026D93B549890855B5F89A4BCAC1AEDB27EC04F9713CD2A27130EF31B567
7350E685C0AB4684E51F1096A0AAF9FA36ABFADA486F5ACDAAD7DD1BC2DBE2D9
8B7843C854B53C43CB62BEB36117FB376009142A4800C52054E348CBB3069AA2
E3D1C3964D8E87362AC528DF618DE60FF246AAC1EABC31AFB231BC3E4B0B49DF
BBA6C8A07B5B6080E3580E84A5DC64A06DC919F2D6485EA276162396DD2F66A7
4813F7E1C9BFD54F3C815D79E9FDD5E5C77A87508427FD1598B652E01C03A3FC
949362D594846B09242C1553E231BD585D16199364E4688FB498C10236E51633
0DEB129FD42F450DE90E15FA6052F1B2FFEF26CC080F636CC3A8A77B68D22907
D7E3A08516C349588EC932438E977B63D9BD14D09B0687822B11EAE321198BF9
A3748A527DE8A9FBD843820525250F97C7FF5106FD688D4A487FC11B365E98B0
57C536B7FCF17472640F5390AA0B783527FC67574BECDC012276FE52BEC1AB99
FA4507768818FF54E58EBCBD4CBF7A118BE4F2D2F5B4D637B291808DCBEE60F7
48536B0286A19D94DD60E7C17F16DF3137B4CCC992D2F0ECDC5B8F11C9E933EE
B594195F0C90B1CA170AB093A83F952B71E9DD9BB47B06F2A9183BE2BF2F5B57
756CB4EC238026C0F2726CC0EE34EC20E35612019D1549D1BA1AE70EEF478122
DB7000DA128665E42EE6B6EB192D42256834B9DECCBD477C21554B272E14190E
99EF0719BEA9EADBAD6D726799897B1C6636075A1FAC5B637E0181C4B4C0F93C
056494D42C3EEC9A61435B276E94103C2DCF64C3369DFCF790E7BD909A6D9B8C
279452A100BB5DD76DB5FB827E7F3CD3DE67E293F52DEE0ED708767AC1F00D81
289320411122A45CE736447A0EC26A142848EBB7B99666DA44C6308AA4A3AA04
C511E6B1492BDE68EA8AEA234A69F474B0461939FAB6FE072B56E46FA6D0A604
A38652FBC45F0B0DE32B424CAB2EACCF138AAA6EC9F7E189385B50598AEBA673
889FFB439ED8587DACEA71AD9D6AEA0B6BB009D91279D231D916C04260E5E779
016771BF918D49EFDA50C031BB2DD7AC85E788B7E355D9C72AD22551ED624743
E34D82B25A2A429E3DDADB46A4EE0D80226EE81D9026421467822C30EEFBC855
DA61AA7970FE0175A9E1987596858F24227D2702DB352D087491C3E8DF3D34BB
F1A238388EFD04B32D523F6E85B040FD6EFD8DD13A430E08A35E59BA73211562
2ACB6B92564F0FAD705BAC7B0B22017599623F67A9D4964AD491DF504797472C
8537EA86AFDD95838928A1628363D2E80B33C383C7A62DE610F07325C991B929
C2B9782A143E12D728A774DEF6E8AD465D842AAA86E146C4003D0631A44842C4
87CF9D32C55FC3C18157FA87A3DF40FFF3C0A7A2006894EBD697CB3051237856
9537A38B54C5186E206F2CFF0BD72CB5A4E10A4FA3815BBD7289618730BB61B5
A7FAFA381327CFC4744DDF78B07854378FE5CA9D10043EF17D153B1B11B51F4E
CF603BFCA776D744A5EA39A40BF5F5ED4EA305C8E609941CB6C1898E2CDC7F4E
71B752384316DD033126E2E2BAB40350200188B7BB0B3B0AFB8FF094F416C5E6
6242EEEBB43D72C3133BE07AE208416F6C2E4FFF9B10CF12554E4D715C97DB94
7FAD876A455D888CA8A3B820498F14C712A53DB49BDD062160546B63C966FD54
58D14AF7900CBFC31E7A5FFA9EA96775DE42E9D9FAC68100B09EAD3ABC2E8196
5039A64D4D6C2E3A319EA0FDBB433F73A42A38C103A7C039EC112DB5EE583C01
EABB422BFD5ADB9F6860E349F93D06AACF4E089EDD54BE40BCE265D2A473279D
1116A7774E5FC2120B0B93C2647C8977EF59120917030C32EBF25E7D74D23A0A
1436AA5A8700389A8BBC10D12530A5337568CA25EBE9E7CA9EB2763D8B4534F2
8918FB8510F16D97DFC3DB5AE738EBA007BC9A9E22E2BF57F59610B6F59D85EB
A2CBB7ED66D731E8F570BBCA11A4A122D6A20A8C4599199FF3FABB3F714D45B2
5D11DD097EB0065B1EFD19EADF7F4CC0D736D44B70BBA05F56D8E304C5752E38
4BD1B4CD850D82466320F097410F38B927E9A5985320F12BD6E1CB00E72C4A53
643B8BCCE1E6A8004DCDFC174CC00F4C92FE322048E9239230E99A9B5D784C56
729C7B9112908B0ED45A072F97BBC06E3FB2496420C70DF09D2843C42907E210
FA3D35B9206C54AE9DB744323FB5D08811FE26168DA7D933A5C9245652103E7C
557E4F4F55A36BC26F38615614A8EE407E8C6C6587DC48C081E317F7C1449E4F
6C5FFBAECECE58218C83A0E4BBF7E162E99BACA5E4EA0D1C94EC0C90B279DCD0
CA356047120CF151DFA9F148C307CDB3B96DD40DE38CE21AE55A4715295445B1
A37618CF647ACC79CB466C2C9EDDAC25086188165FB56C038F5C1698AC55A8AF
82DF578EC1CD264C7A4B4972C45173B718F52F5B509E096063082F7906AF75E7
DE56E149A9E8C103E6EE33238B18297B45DD4431E7F48933523448BA310080CD
8484A858FBD31CD985CA5A1F4C86E08BEC0AD4E1B338B584E6C799CFD0E01E04
780D0E235C97CCDC1564861F4B0369AC5DED7B6913A8FE3594A472E3A1FA3FA3
F67574039DACB7EE8586571B39AFA954BAAD4112FEA9BB6343B8F0FA2D2AFA10
1107D079A917476FA54E156F98FCA84855329AC6B7FCA86FE6B9248DC7837179
9014303DE0A1666400BA6D4283F025DD1FDF56247DD3F123CF9E03679A94E587
7007D76611BC7D042A849E873BC5DF6E21F014A0FFE917405030B2347D3F8140
9964E0868809A579DAD34F15FD17533EBDC9FD44881681D95C97EBF8391D3F92
AE2CE6E48434F0241A487DC44CF40A82F0F1DBCA53F00E4789D5E27A7AC51AC2
D2EDAA68CB5EFF0FA75A1808E7B0D396362FD37DBD768FCC172026A8B78154AC
FC69EBECBEBC1CFD93731EE7455C19F97B3539F1AE6276894693F02E57AC4994
CF5A203CF277E954B9CBA04D1041647BAF2D54A258424262D18BA806066048EC
19E28B5519DC9E842FC830D537801988775F5F0F0296DF2A277050BEFF6795E2
7FCF015534554B0D8809829501EF0A6798F5C9C9425EC2EFAD45037D49368036
8BD3039B94D2F94A2C4BD76BDE145F3879837981F132FDE117B796C99E39AB2D
10476D9E66136803F64FF38E349D9125251238CF90D5F99F4C043A2802F41551
909D36F2BFD6A3DB6F4B9F518D63DCEB410248AA32C6E60972E80AAC299B0A31
74D3FE8FD8BEE3C27A2D8520AF4167F7B9AB49392CF4DAC80A3B6B0FF1716428
78E32EAC264A5D3F1C7C384437AFA24B00D7C819661AD55F92094982C4899B26
40331DC947DFF1A437C4E7D2A201D78758BEA3C5BC91B262FF409CD59C028D49
97DC94F8FF24333BBA77A55CCCE283A99BE79346B80F48A55E3BAFFC5B3766D5
9A362B1E7BF117DD47326279AFDD7DBB00977AAAF5E358961C372B3188E10E45
C0A9EF70D01ECAE09DEED144A7F9F02535908F49196A763DFE46AE0DB6777E3B
F435A6AAE29CD0AB74DBAB3CCA93A8B419963650A00C1715EA1EE35BCA313151
0C8F1773143890FEDB83658B36D57ECF482B1B91F3585D2B9E4AAEAF8AC829F1
377F08A367945E77777A8E20E2F3736F157C089D8C522F24935ADB6A1CE40C0D
01A72806B49EF7C76DA05C8A7B0F4A7924B5CE9D3A30B0B0EF55DAA1A3F30E16
C6379324C64933A69C5DC7C67DD034582FF744477F7ADD0198C3BFEA09EBCCA8
87D42F2952B8495AAD0FA5E8FA651AC48350EBD41CF165B638A3F2D675CA8F68
711FFC6C447413C726A7FB61E8AE443837A2E527A5869964364E9F519652F96D
0B09FC19A9B4757839C58089468A326629FAA60BECF1696D890789051671DA97
0858197865A93E5ADD9530D8CE8BB47B5B4C3A2E046655B410F33AEDD97A7709
7B91BB52CA254664A36F340DBBAE548110BC14528A1FA02895BC32F702802691
FBF16D44AFA217ECF51D7EF4465AB61DD954D821E8DEF4823502E660A6DB1A3B
98902DF44DD82A55C3E855AB9D646C8BD4F050443F5743537B57F71291F48C5D
B34DA2D39899D4AB32CC0F12801ABAF05AEEE14230CFE1B7764ABC4218955645
01162CAAD4AE943FF5313DF922ACCFBD5CB37A84C99AAB81D702A3527310A240
490456E4332B4E2C19FF5F593FBFB36F0A2503598D2E5D381E6DD1ED7FD66288
1294595A3512F3556042AF167D844802CD5F251726F1FE33E7D35850E3634396
AC2622D92FCA806655E3DA0CF7CE571FA63C37918E6AE2B7C9E086E984B4F7F7
A1DB340FDE520E6436D9FBB01D87407A30367E7F458C7706447CD8647B37D575
BBBF16FA85AEEC27224A34A309E2ADD5A9093F62F5E4A50E0C98C0164B153F28
9657AED4761A3479EA351BC4EEF04AF7B897F720A3C2D98BD87F5762C239B90C
8A652BCCA90716C0FF76484E8CA95F1E7B8F14AECA7B5641EE148BF1E1D21E9C
F2A556E1A5F4803485FF17991A6BA7706F4B37AE0F9B99950ADE1344A0421111
A3A71433F72DDDFA8A6E895737A3D8231FE8514B8C2A89F1CD6D94622807DFE8
63386FB9C66F3D0BC37C947993C41BCEB4036BF9C9A5404CB0D840B53E28A2B9
64F7B8E5857CA921C4CB41EC2BEFDEA194BC96F6CD1B0139CEC2EC79A12A8F9C
834FB6C4DF2EEDA5F817BFC656B724A0226AC41D12D3049F29917359B91F5DA2
32FFD294D6A514F515D1E4ED4A936174A01582823DEDD86C41A8B613FC93D6D2
95CD77A2C5E245853AA3FDF608E5307904A82BB682C3A6D479EC5B3BE2C9D569
0237335C4C140173F5F4961FA41E09E265E90EF6A705DE44387BC977B23CDA80
9586347D6C0ECAF118C23C227ACF06EE1F9D33C4B65CA9B6F87EB9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 24 /cedilla put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 37 /percent put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F362471AA58488620156F3474FA59CA080EA96FE995D2B3DEEADF3
3141D157481C66507725ACA5953CBBE1ACEE7E3F02C72C6552D15EB3D612730E
61A06A43575568DC3CF3844BABF04CA767E2995196097015E0C4F622C4356B6B
F41DBAFD797A4B9D7AC22332C552043EF98913D0D9B50CA6B7CDAF903BC5C04F
D20A952BA5CC35B646ACD0A287C956B98C450051AF6AAF79DF37F8954473F8F6
652BF03AE2AE82B99D820CF93F5FC0BA17EBD7AF90313E70594EB5C354023BFA
07912408F1757319C7288E99872B907D5AB583B082EEED8AB079C63E38B07D11
6744856E689A479CB3A8BC081F33CB06755926204981DC0A45B3ACC18F6865BB
EE2C50DB43B62E3630FC1D9B1FFB3BFFAA6D0A20C0381ADF48E4D916BEE85BA2
BB40F538F55C11D50F882B73913840B45161262BC8B0012694C3EF26452F9B77
2CD7C7AD6BFEEAFE31C8A721C2D46AA00C10681BA9970D09F1E10DDC250E2AC3
9A160EC8C9654FCEB36AC2B586E978D54744FC8A0E963D8EF6E228ADD22D093B
B889C940206F504F14DD921D909BE06EC9BACBC23EB9E9D137FBC983570FFD2E
CC5D2EB5D2A4A8604A4AD418B800EDC6B89809E0009760E9470F037FDD15E649
93E9C8FCD9436AF02447C7F5AC380FBE69D1405189E8DBFDACF0E7DAECFA095F
E6AE1A2E9ACFC032BA9A5DEDE9DDEE22A88D9A1F1E0FD9BAE2D88FA168386D43
4B93EFF3AD84A9C05A80462BB3A940B2F7311CF7054F501BDD4F1347213C9327
5653B73E9D78866901235C66B0C49CBDE3A1BA3A11991E6B8443117745D96020
38F4A74D9676E4E99291D4420C519E5C9C7439AECB922F531C2ADF25F29002B6
A61BC223B0C55EB698ADDBB008F2C714421551C5C0EC6ABE3DC33C4FC6396DB4
85EE83847C478012FDDBAAC1A010779DE56FAF0E6EF309E6F8F9075A64847244
3F35E31A01783ED8954C5B86EF7AE3D016AD55FEC144D688071444C6EB26299A
169EC653A46F2C2F1F5F11E14530FF3F7B4020B64FF37AE7FAC49EDCD76FA9C4
8822F17C100F0749832DCB3B6984052193CCA7E7756DA9833020A9D3345495BD
8ABEFA3D85BF7B6D182A51BA56186F64352EF04774FE6CFA52B7876F4B2D209F
F74EED4D5E357AEDF8BBA6C18A6D1E61955DD3251C43B948E32C4529FDBDAEDC
E7792F6B9CE988E49B6432AC7F317F9391851B2E558D185971922B703C6D55D8
DB84FB19A69C5B2F56F799FA98E9FC6346774B125911B5E6097DFAC64341A16C
F19FD93995A6716ECC967BF3983FCE912039E4EA6B6DE7C2418EEB63B7E3ED1E
5C8E77FC94210A147B05E27F9AE87CF8A3004CC682DA6A52A4DE356AEE02D53F
1DBC5E51E570BD135E3CAADE82CBC290E97DC05939753447BE62C3BEC821DE5B
74B6178D281CAA541FD3F68EA21CA75E5E31C34A63AF41E0C8FDA9386B104D4E
2193B86AA31F887A3A95E13EEBAD4F21562FA00F891AC2B831FAC8B35A709561
266A83B96E52E992ED02086002EC2E4F2047A024CB83BB3F1E154BB2DF3EBD6F
B671801FEFAE655AD62B6860C3899A5D6D4A5C3C028C43720E3EE0C13F4A88DE
2D7515B5B7EAA2134DB8B347918C4920C76ABE933B36D86076C995DB926AAFA2
8EF5F264553E799F6EAD48DBA338B09BA9E071414C808346B7C97C619E7BF8D5
EFE7A90B24544DE1F2FA21DC40AF15C299D106B6E743218068DE7987BB55D05C
BD1A90D72A1790C33E9C1A2D5F410DA41A4FE88655F94A935CEABF0EA6EC704B
F556C274C0C815503DB16E32D80D94CE082C9B9A6C7AF788223EFB01D8675632
47D9E22BF2869A9A97398E0C20F5F017CA9DB7BAB3BAB4ACC8394EFF0ED85AFF
0B5A4DBC8676E0847506D0FAFE7D3B099BBA054CFCF3626CC3C6DEDC1CD45FAD
EFD8ABDE4AB15356BCA61DF0426619FE5F40B4EB3B22534E88AE8D7D0020C1D4
C99000EE0A1BFEAD06E64C575FF8CDDDE264E04EC3B405A65559328EAF26373E
931425A36178781D7FA15AE5E3255BF6273A4B09B49DFBB2C31C4F8FF8BB1841
E7A76F9AF66413EC719F80D117B81B5DD02361FDCB53920E25B0506E42DB9522
329B698729A632B301C7BB727CACD93ECB158051EA750068C312DF34689D4F3D
0983194B19FA8DADD21640483D4C8A29D85586F1E197DD77B7F87C26EDA187D2
D5A83711F8850845648531D696EE446F18D3521FC918AF87D5282D8D3DBD2C09
43E101CBBEFE76C52AD8F062C2D2B4973E4E9FB1DCAC39C40426E565F6E26250
0B0209B25E180A74C40EE3B496E05EBE0CD7CA56CDD4BE840AB7599E30032434
2C9778CA9A030ADD671B746BDF7CC9C606BDC42A069D8C8F533EB349361386E8
4E7C463B1B949E0483449C421889066A22AB057ED97CB679DBB3EC55E1F756B3
BA3EB42F6BE6E1B73CC8A3AB2D91A621D87B12B9D936CDB96B049595E65C9EDF
05D020C458C7F7197C8651599448EA77982CDE0165A7DCD85B597C4E24FBE7C1
131BAD1F41918CC086D5534097225899D5473A83A3AEC0C01CBAA10C00329673
1D05C096807DCC02041AF9498059036AAB5A23A9A53CD7E7C96B8EE9211460C2
E7308C6AF57344A82B622327EA309222C54C084399C82832766DD5EE9C64FACB
2DF3175DD6700FB2B2B346B92CDE3C520683485CB302C7121D3586B09D9BDF4B
F9BDFB28B4401DD4CF570A31BB41BFDCBAAA5E39F23E23146DF1245EAC891F6D
DACE97846EA21E467441815EF07992BE269C6833F0F39BE0C94CAF9E029F2ACE
CD068ABA3B0FEE759D82A5542CFC4A772D8B7FC02D9E176802ABC157CDC60DAA
EB4E7B46BE8B9E10AAC2CD972A2B3AF7AA92631C0D4EE2087A0A489FCA954A0C
135929FBFC6A0398156AE3FB3294C8BA32E2984A9283235876ABC21FC8499BED
9A06F7924D563C43658942BE3BF6DF3D26FD66960BE65A3217938C17FCC22709
2457FA75E88E3DF0E9D16CE2829ACE16179FBF4D80433243428F1561CF51E39D
F3DDC87E92E2751F8F05E48A2331A31F2F04C357BB71217D7845860121C4BF9C
536ACEBB6B7B4EA53FCBE67F1885D8E67EE508A6CCE146159DF5BCC56985CC1D
72D201F6E6DC038F5023B66E8DA8B952053C409CFAD4B1B44A5D2FD3AB3692DD
4A0412F678F39F820CD1102A8A685ADFDBC219274CC577D3C5C7267BEFE1DA60
B0D287F04F2879F06400ADE2C219F02EB8161B74DE04DA7417C94C592D18216D
1A74EF9C325ED3050E5FA40448CC96D88958874D5461C1876690767124856905
4F42FC2845A99356F39EC3901F46DF20B8B5E3CF1C6FAAF664E3C3A19FE227D7
45E2849193A6B19EDC4B17063BB8B17C11463A393EF2722AAE21260A02319521
97C0138223E72A8DFDB3F6A96281564D7ECE44ACC95E346AD0BCB540FF5DCDD2
6D5DD44FA834C7E9833E6370671188F88EA354E15D253D774B33A39C6E994BD8
68067AF63A6EA17D515B2649714882E76ABA6E8F895261BF1FA37BA95EEEDBA6
1A5123DD12DBF444E3818EEE8F728A21F1F8678220E8486A0597156DDB966926
488E0DA2D094C386ACD65831B8E50C195D0464BE5F491C05BAEBC80F28B62ABE
BD11E75772E0560A7FBADFBC26EDB2678C3E34B413BE03DD60EC9EDE2E31F837
DF86019B3C35F0DA688EACA58E8350DFFF00F385231334914CA40584B298711C
B71774713F92FBF0CCA7BF4BADB8D45E5E5D9CB3B145E8570578AC6B220E410A
EED38AF53404A88A57346228A4405CF085BFA89BC3FDBFAC570AA612046D1462
D420B3271B286E99A5CAA8300AE42117C0F37BF73AF147BDC94A1061013CBAD5
C69D594EA1113072694096F5A1747EB06F64794DE47B279943CFAF2CB181A777
5EF86375D6BBA24E6192206EC0B60E603A2609C152D2A2A1C606E5981D94885D
180CC7AC808E59F69D1E2772152D0E1E91454B374A92C8DD3673D57AA5DC285E
A30F1EA1FC23FE4C1AD48F8B63525A5F5FACBBD82BB1EA56B324CD24C9867FBE
553AD043224B3CD5900AC4D0CC007DE32403361CA7364EC959CA06FACCDF2B99
DFF685DDDE7C213C62B0EB28766C0B807B8FFD46DD5E18373C26C2B8B8A2A9FB
654E382282C2346A6F65B83850216F71C803F8BA54D931B5A817A570B09E4CF0
84E7544D8A7615B9044E72A626827A53E0D6B3B1A2370B1C2251736A27654BC2
ED094EC408FFA9F80839F0C7FB7B8DAEB58FF01C3E072B9F0E440C61768263DB
233A29CEF45257DD154237C96D108520D9CE911359B8D42F969E3B66EC3AD7FC
0E70B2C090CBD573725719C1E3330622E64B31388226B54B300B53555E975251
A9B170C4460031ECBCD6563EB1AD0A0C486BEAA10B9C4CE4DDCBD988974A73DD
16563020634D81823B7D5430B39CB5EC916B7B7482B2DC1DBF870413913F3181
E1805BE55228692CE7E5FF911D6F2D85A50C3B0AF143D359B081A7847F88919F
CAF407425B545DAEF7E23147AF7057156DB09F742A10CFFDABEB1C3212BD3509
108B61ED33B18A73A04B5F96F94EB6D7EF61A1824A5E51E73652B90298449993
D41329B9E529C2975785F5940971B2CBE92620F1E22C6AD943FA3926A0959EEF
A94645E1F60443A5976A1D85ADE5481E8ED99C8495C842EB2D45D100B0415CF1
C6F1315F1D969E44590B924B9783DB2F7E2383BDC56D00E7D880717717DB055E
4F3278F4B4AA08FC266E193CEFA8E6707CC035E56D8405B20E3AAE936FF91341
0B99BE4D167E38B73DA5AFA7D366AC7BCCCC703958B21845A18C0FBB1293D515
82B5199BEEBCEE61E253A2903AE16FFFC7A0A30784BA7A89410123C239F97E12
BE7A6DADC90E41E94B66B5CE1E206E88618720A0E9115A61A0705B22C68AA420
371DB91D996CF57BB602DE027C6FCF44182A5947BC6FB99ED41FAF2D1CFC2F68
899AD27EB02982BFBCD90A5B6E210A3F2FA1D88A32934AFBECBC8527A737E27E
FD9EF32671FF5B4DEECAFD11161485B7A6E4E4207CF1C9816B4A09F57A662DCA
A70856353DC333680B3067FD3EC2F84D051E3DA7AE134145C973ABEA5ED9B384
DA80C7A963E407DB8C9074A1FFE55171F35F8964AE83711237019A2A8D0D640B
725738C78441553CD20C53698EA7F79EDE737FAE94E90A6796EB5ACFD9AD10F7
8F9FA60539291B9B8004F2E342F2384D4426BD18F933846F9E7AAFDA96785278
0DBAB1D0BEC56D42DBF175D185F6A0BFA4ED6C77763127B07297E1AD68270782
DF66BA65DE15BF69090B7E15B46B29962E535C4110F79EAD41A76079481D642E
69283D2C0839F63C35A80B0FDBB331D290C12A4122A663A43B0BE4121F54F310
FC12EE2CC5A2ECE8A079FE58B5AB4D311D86802D0BED5FDC378F9CA52C1093F1
9442849F4021CA494EF63DDD00FA6DE071ED9C1FD357BA4147CFEA3FBBFF4A66
B02D7E50126C273DEB29CECD0D0D6B1A9607289A052531848E9E2998700CA1AB
6ABC6B7E906BD51D8494BE01F51DE0923D0D9684BDE6B699C48869CE314935F2
CBE26C22EFAB437A48B1D71F9F8976E735EFCF48D99EB533866AC79980AD5041
7297F290962F429CCDDE51210189B8CEBD196E2811FF1A51E1A5C21FB27B2715
4B7544FD29DDD20055EA1577408984F0FD85CF46947EFCF84E934EA39A963EA1
A485A703790DA0FD66E144E15F9E15D3924C3D40246B0908821C9D6644838488
5754E3E29F540FEB8E98EB9DC854BF3744B15B883B0CE67E4CD921C830553625
193CDD39AA7CAFF75016B38C5D12D0A1638DFBCE9EF917509A4936D15E84D18F
7D800B9F902CB587C26DD4CB186A3091C5F1DE6C8D03C0C4262FF0D6B06125CD
2A3F2A328EA642B445771D8651390F0977B3A1AB87F9EBC4F8C55557420AFBA7
A84B478C14FD45DEF9876AC804A032638CE8E586990EFEDC5B0B878E10E9D1E1
0A4A39BBDCF6A2FBCF901CBB102CF2EAA92194B464B9D996437C972793530F0C
8E9D453C6309F14269015A526AFBFF8DA57DEF2B45AA7724712432C399286907
833238B50FFF0D8EE70E16FB4F0788FB1458099AD2C05D6BE979DABD191FCE24
850A43535F7309D60328C9D42A3D22BB412A5A54CC003D3DAEC06B81A5509884
7AF104450DA4624F34E44463EA5D805BB4A75F797E54A694072B6E14359E98FA
F0E2B003F0A7D610F01823C2D677314641B0DEE5FA01071D2ED7B0B91790B72D
3242FC84A3FC85E55F700B5EBAAFCAA395EEFE5E940C49C6553E45C852A654B9
E6D624475246E5F12BD04BD7B3D96D5D55C6784E24F69B7514BBA3245FA5EECA
BDADA70EA02FE812CF0A27F44E3A059FD113A4E693C191425B3F2CC4247D854E
2A4A9A9B790944BD944C1A34C783B229685EF7FA07E575571CF70D6A24C013D9
1259FF07739297692A36A0361C6E570B640C9573F1733D303B36ABA10B85C85C
5E59F176DDB6960847E22B9039B6E190009FCB3F1F83D8A2B4E13FD58ACD74CE
BCC5619F4E031C1D111E629E9CF20BAACD3BA21ADE50163F1237C963908C7F37
7CE4FF92FD8910E44C33C8501B20F007863E7E50AF68514EB506CD19B944759C
5009F3CBC65346A296E72E459F1FFF34E6A62C4655FA5FF17BB97FE80D5BE8E0
71586C5EE46CCC1D0F0F9CFFD139DE2998121BF507D641599339ADEA1A1F6BD8
1417C6B144E4F47BA9353E3EF006A9EC7D853C8EF23E7486A79BEE0A6B48F993
2A57B7422E2B644DE42F12B62C2D0982048F0D1E3B8AC703545134AABC1AD809
3DE95B8A3BCDDF1B86E3012C9A6A6FE0DF6DD00C2FA47EF04F4B1C6BDC72D747
D2FD7E9CE04F7BF07CDF8062DE55A7906CD50CD2F4DB24CCD29FAAEAA3DEF3FB
0C65AEE04A5D93C2F9CDB39AB3CFF2F660A6EDE710C538590FB411000CDB8B7D
50D0E68A8593818606D8E343BFB1988A26BB121214C2BF1825315CE3A13A5462
9369BC4B436533A1A3F11311CE0BD2F17293B9C86FECCA0DD3BBFBD687ECF90A
1CAA83241B7725E74D23512D1BCDDB30C66046EECB282BFF44B071FD9327C7E0
27A1306B6043829627E830CEFF3A591D46D5CD05B9863E03A1CAA3EC336D751F
F56647678964017B0D0F1274EE8DE184C36DE5AFD4FE784F9923830826EDAE90
68155217E8856DEA10247E58E3CF51C47E4A7F568D0A724B64BA0CE5F3527809
95CA819B1BE44B663C4E6D37CCF5A8607215B4877B06E50515B0890847C8617F
E277E3D39AF038889225C6A6B9432FB2ADBACF5CE038F9BE7DF07DA89B3E7C0D
3DAD901B8DC18B1BBB130DBA6D44419E75BCF92B529475C48C7285C72091BDC7
D9AD3E13E97557598D2C645B2C98A13156AD800C6281D0E9F6968892D4A43B85
685AE1827B1655F3530F8334C21171207667D5979230BFDD8ABE7F930263C77F
2ECA548AF6AA744F0DAA075A5EB0C8E682435F2ACCE49FFEE44F3E38E3703B91
75D69CA155F665D2F98A9DA4C9C855B58849A6BD0D3D0DE97B1FD93E455E441C
863243392785AC6C8E1CF12D726A9537E412A385ADC4E4DCB8F829F244FAC910
BE9CF79C00F6DDBFBE18FCCB4838D91782AA745F99E86B850B6E5D5EC0104963
A10B2D1916C328FB499C55673A102CBCE429C4ECBC3CE51AB94579E7AFE27D24
6CC4033DD54778E9BB3BC8EEFE4CB53632877DD70C00D6FC80A550C6967C1739
6519F13AF9583C2DF5158F0A3F313A4C671583A3411455AB2E62B9BF709B556D
52739E3D164AF7198408CC4BF66D0BC6C26D8C7E4D93D44A1E8AC3AB4FD9BA3A
CEA61AC82FF09A9704C6AB2F42FC835895EDEF7C54EA07F6FDB1547EA97E601B
75A66D6C332DBCAAD46A682A855BE5DEFCB2E6235283CCD910EFB0C61145AEF2
DDFBF0C820B80B9F6FFF16879795D2A2FB31D664B5660A42CE02C7E9DA0955DF
D3536A6877685961756A6116003A1D4BDBBDD17690605BEBFCF65D2EC6092A94
D4027BFA5DCD8207756C81C027599C728FE46F009CA82D8AFBC204C7439188D7
1A4F8110588308889D729CA9CB3973586C25C2A231F74A7C42899D0D49B20FAA
EA25D43E46698F7FFFA8E132377327DBB640A25787625B144829659EDBF454EC
438DF365B91F3CBD5FEF5314A81C8FC0FAFFBF50B9810678BEB6D54E8884C0C7
00AC092384742EA76EE27F7915B2AD4C386B61F537070BB2C913116C0A2363B0
414020B454B25FA96C7419B1D70C03A190EBEB9D8DE29276FFF0613BBF825193
14583EEE576DDEDF69626BC22B74BB97AAEA3AF3E2D1C7383C646A89ABB5BA50
4E747065EBC314963A2EF7896230A1509121E7EF93AEAD2D4A7E08FBBF08B17F
304B102C331C4ACEDFBB60EE4001385D897A617ED0F6353331C679345BB27AB6
960F115CCD5340778BB0194EA4ABE2100C3BEACB4854799F3F4AE3AF79D96C12
2B4183FDFB5B7B7573816388BEB11567DF829262ECD2959CC5596BCC3AC42897
912EE71A4638B879E7F25432C99944962E09541FBB9F3CBA3DDB9FDA000B051C
B35340ED08F6A39258A89F49A09A26D4A371082CB06C0D6C98CBC730FEBB0063
FB3323EB773A5B6E02A16D566E74A71A3F0FF1E99D4A34FCBE3EF98E9A7894A8
5465FE4B61498732F84AF35AD0927C8C32DB762A906CF6D4754A87C8CEE9E1EB
66FA5D2A1CA42458516F54E76239170D82A1EC5B246979CAB84B58C71C52999A
1507CA22E275357FAD177C4A406080388C1ECBCE58B2EE36ACD2A333A01F1DCD
5423C1B728829E533B33F63221606342D1CB7C914B5D279333059D3767702734
D45911449C127541B9FE553E2903E8290ED5177B21079CEB5A5C3230F9B67110
FAE64143F5A1FB73E3C7106DE30A0B2BA990603E4534954FE9C3BAE692AC1F7B
0F5DA041C87035923995ECA6299BC2F0E2583DA719097DD85DE05293127992D8
3778B9A2AAF0503999013E4D63BA206698C655467DC179B85648DDECBF2B6124
A6A3C52777262B68EC6AA252936602210F7324AA05505670EBC3A5B4D1BE552A
84D3A3718593AB2FC44E23D8F9D252CCDCA647ED6C5C69AFCBC82AC32F50B6B4
75F727A05E19E946C65C6567C4C57965380722EE3070711374A0799226AB20B2
3F68EE9FFD27E36E27BEE9733B8E085E0825AADF5C3B87C05BD8AADCADC35AE1
2BCAB1759BE784E7F29D5272C475C5E6AD538D5FAD991B1E20F202321AE86980
CEDACDFA080E101FB1E452B8704332F0EC765134E5013D75B347F918247C5A2E
208983DFE38A8D2BC828FB6D7202D81E086186D389F8900A428B3943B81601AC
57E07F3F941478E9A4FA130564647370712283059E7C3A6D36CCF2222AEE1708
4E92B434F988AFD2F75D43A0FC0676CFA12E0BFA3F81E297E7AEA3EA55F8D9E6
B17774B08DF4FCC1C5FCF76EE1484E2DBA0AF7434FA18A6B5A1A02BB232F4985
69779F7443ACED2078CA7C65A65AD8F5119E2654EA3AE7DB42C41150D3144610
49B5D7CD4A02D6CED7372C2FA850646B89F141BA8BE52B9AB0FE9973A6AD3880
A008A0A483967F30CC5DCD23B313D9C854E868333639DA41040EF3D95D1E5C6F
BF7A858CA26074E0F2D329F768DD8705419FAB3546F7D5EE20738DE07BF2CB85
FBB52FA1C4FE785EB1B2AA5CF877E7ED98C8497CE6223B66C14268B0430FCC99
BF818EC3ECB76F26C4C77EA9A0F6A4490178B2882D62F17E173951C3FF1ECAD8
5AAAF6F5B979F43D2107A4F664092B1C9C897A1FB512FC7584B909E8178BA286
44787DC965AC1F60721DC73D3166ED9F1172071A711DD87BC427E3E7313AE910
CF60A7C2D0189E446DFDEEBED46731EC8168C65248BEF56FA7F5E9C7977B7ED2
C3E287B6C8B0AEF5AB92325E211CD79EB994E59151EF098EB562EF4944654C5F
10DCCDB7AD2FC8136F4C4530A466AE32DA6E054F0709EDA1CD083D1607E0E005
087376F1B9FB0EC9B0D8D8D4514ED4862534CF614E633F6AF57AC82D14090D8F
1E98E72CBEF73DC0838C1917ABDEE9BFB211776B944BBC5508246E48F8EA9139
58BD1AFCA029B0B7B2CD9D13681B302660276599ED23207570DDAA87AE46F914
9F9F2B2767D0F1C5D13C0684D8A824183E7ED97F8C8B11A574D6345C4F3455B4
67674B5B0C4613C48D62847AD8805608337F311111291E5999080E33F812F9F5
AF78B11D7C64D68B24D0AA7BE0EC607519F0A271B6100222847F42717A74459B
A44D3C66A998F901A163ED4821848094662A1DB9DA711E73F6CF45F3BAA03381
BA4EDABB195B34BE07F83EB45DBAB6ED9006A264D9428785367854AC6707835E
87854578A0D7B9567609FBEEF1335DA4772E7BB2D1B7FBD12BC12A67C680E073
62CEE41FBFD08B2F7D99D61756475552235B19B2CA34EFD68F43823010F34E25
B4E32E3EA90A320D16BF5D765B040FAB6F496EC9474A87FE80AE2102EF13A23A
3DB9C3C8967C866A9DD6F1315C0F112CC860A42D5FB5B3FD23B78EFF81C40BCF
AC539A1C3D6B78D45AFB5694DE60AFFAE913AE82F29294543E4FFB0F4AA69DF1
E7ADB4398AF5B1832DFE35632F0EFE785DE2C80157B79167DFA0BDC644E6668F
C801E501CF0C0A918855FCABEFBF52F55EAA2D535C5EB7DD0EFAB0AB289F5E21
E43D2150EEE26A64F3EABC8BA8F76C82EA657131C844EC1C1E995B60B0F07A89
6B1A759AAA6FDAF66C0F53B9CE66295CF4841EF0E57BD43BE202BD4B2CC8EF08
38FA197188BC3DBCB7621E42291DCD1CBA5D4F9DCF709846CC090E752DCDCB42
463B489484E80A3E0DAAA309D7805472CA66ED22D6EE085642DDD2F52DD3C125
5DAC1DB39F58F82E412A2E9EF75111F7EC60FE2C4CB403EC4CA5661D7C9CFCCD
E6DB9CDEABEE3A828BD4905ABB6810647A0D453452E4D25A0C746FE7721339CC
AFF1621A624D9781C0EB3368B36B7E62D660E2FA1024896D6894086E181CE6E6
B9AEA4B484B7AC370C008C47F823E69487C6171C3392BF703493A6FEEE198041
3950EE433765049C57B73401E477F9038A1DF92F56DDBC3B751F78D305615875
8712CC60C839DC57E30FC3866B7A4470BA7885105B0FF9D5B688355E490BD140
7D8BAE5568BD16BDE3B264A5867BAC653218BD69CE27D0FEB2116E373EBA9CA5
801B469F0691DC4134470CF6AC9092B5E6C5EF643E7F3D2EE6FEF7A90C826927
C6B1E684B3B6C374B061E1657A83F7E27B3D499E240A951064F2032C3A51451B
3DB3B3E80F695AC6F00250584A41C1EE14AEDAB18488CE47D4F3B6B2A7FCF406
4879E9C3B69F2BE7FFFD57E49E54F16526B1A20F56D84499BFD7BC371265479E
3E59D571BEA5FC9849FE71B2A418B0ADD7B73B899E6E1512DE6B28DEE876F580
2BF5C5B24A69EADFC458BF0A59A26D346A868F1F8A716424A32CBCE90CB54260
A5A82A06FC203245246BE5CAA7E383A567AF26B2B058E605D5292EC39E4DB854
DFC5276B8DFC553F5CBD165697948220A9AC85F1078808E55DF2A90BA4B8B6E2
FF739058221B29C79ED924025F2F7E4DFF0597B3F25E68FD634DDAAD4CEAFDE1
A56EC3E33BDC56B4CA05634FF956FCF62C05C18547C4509C906291E563289D14
CAF0B08185E4DCE266D6108EBF8C2A69DFA1565AABFF00B1F3786E4E2A3C613A
EF7E2A2AD23FA4B1211C5390C6C4962EE564AC972810188D40471A0CDFAE9816
3444CCCC6275FC0BD5CD9D8720DA365BDB868365B900DB6E7125B8B7653D2818
BE9B3ABAAE3472D6E8D957AA788B894EA36ED006B19CD525EC15D78643A45872
5283061630CA5CB4007824D18F7C9C274A3AA3DB0414567AA9460203A147052B
EAECF0037989E6AEDB77D9C38F16E5AAB9ECA0E68ADD3D79FB4FF2ED75D4FB58
44C7BA024070CAD0710EC374D0A7E27B674D51E58C50D882541DA56770FC148F
10C98C2710525F04F208D4D769A2917DA686213C0CCC1F354A1E9EB6B8ADCCEF
C37436F67A258C69B6E5DF55DEFE440C1059D572CC5FB3E1FCDF8151FBB36DEA
43E817642644CB6D868BAF04521E395F75397A6805927F693E8586A6B5BA300E
7D215663869CB1FE58785CBF7726411F66B0E41001EB6B5C2A510FDA6731C4C6
5249A5D41ADB7F3B3B6E13DC539CF4ADB13E851F9E69DBDE9B4F85941D459617
315189022671280F9F6304645DC2A9FE214BE7E24A17E97FD536EF1B0DF71010
DDCE41047A2A4284D700302C28A70A0BB311B4654EFF7B1A1976D7E26DE91C20
BA06A17894841771179C222A27F7438D1DDBA2594E17543F17B38787713CE44D
44F91FB840B3BA8A36C2BE5055DBCB9CE69BC32596B5A8C00081E75E3955AA93
81FD4B2DC853832F0727DEAFF0D1D97877E871FC702B5EBE6633698AFA2FB809
0E26DFD07B0B69C21271DFD11E7D688B6B1D935992B26CBE9406C8A3F01D9184
9E78020B020592CCCE9292E1C5A4E8F922B3127984647929AC835D7DCF8AB9A4
0861071149EF668F33D4FBAF05FA024BF545139B436060518B94C813995DCC55
B07706DA244B8DFDC8C201006BC0FC4E0DC9249C18B46EAC5262AC9B43E81322
319859D705AB09580AB92577413C15EEDA89C00A53833E96175A456092FE6503
508CADE67E7CCFF8900C631D5AD2A0977EB7DBFC2E54774C9211CCE308011142
A8495833D25E759BD4990ABA7866936A6D98FD24911F499FCF2AC6CF4A0E22BB
8808B6E4BEDEBB7A5E786909C026E809EC219A156C3AC00500904BA6187339A0
491833B020333974E1343D49699401608724F5CCC2DF872004FA832E5A04882D
AE1EB8B2DEE18988076BA589BE8A1D682A525F3F20E9071D0DAE9C475683AE82
A1B9BDE691F47355299F214EC031C16CD74B966126291711D5F20B16ACBD0C77
D34AD246A8F8E15A91F9FE7EDDDF2B828896564763241FFFFA5E4B0F19607551
69C1D5C2AADF0E96A0590C5A16FAB36B7BB13DF9BEC7ADBD05AAD0C6BD98C7E2
ED12F10277C8F98B14E6694CFF0E5DBD09B84D738E2010116F9F3343DFB5300A
D7651B9E25AF61D6F9810367B35B295FCF650D0158B7042987201CE71838A1FD
2D63C880EDC11D5CA9A09B9A86F0802A6CFFE8D6D157B8D4F9EBD444B6953134
D60007B75BB5B785D2AB6863AAB1612D579ED6AFB60AE122041C0D94E5C03F0E
131477C70EDA1FA10A578B75493862F8D5815657B270837C04875ABA1F0AA4C7
D5C415583798F55A7C40B18AA8ED0B40F6328BF436AB89B235805C624A02F374
BA4DBBD110112A78FDE33B3D7F9029D448ECA16E840290153B8A612BB8E53D51
8AE7DF6FEAF3260206C9DBD025E48D5FB9B27FB0BC934B042D49D2B50DAD534D
89F7069922DF3E09E837015B593F3D83F299E93D55750C4E1FFBF1BAC1B1DB7F
79D7BD5C3B783F48CC545A5B5824BACBD02E66F5F84453F09FDCD0C074893285
A7C4777F64934C3F532719364FA25FBA34B804DBF498E020CD3DBC2A9D562F0C
531E2B93DF0EBC05AB0DE0C6E88606A37D2F98EE7CD37A89A680FA563CF41C6D
FD6416275AE8404FBB3846057F8412F7A719DF88437F3C251211F90B27F22CDF
48566D480FC0F9271F18425FC7831B3FF7FFD969D0D04578A2BC11D9DF558B6B
840FA46D2AD19BD551135EC884D61EB2D41D45AB7602D626097579DE7434A180
1E022006DFD948A33474E805F01AC117710D63075289F2F12033A0CDD8D3F994
7A3DA4142B1BD66DAC44A2DD03B513387A89C84D51E4D02439CB41B9C35D4A87
4C5B2ADCD15995DA48EF54AEEF926FF3ABDEDFBD1666A4907B0370B12A1AC82B
E9ECC97E57DD70A11715B5773E87CA90C0D4AFF40F498315D434ABB79D5EAF27
B68A9A86D34A899E5AFB448065FCE03C6535C329FBDAA79CB09A9740013734F6
9D504B6B219E384E5AF2823981E7AEF6A9FF545151C7A4FBCDEE24AAE25BFA3E
95D4F5F5F60624C997B9A0AD0E8628C58B20CA4E568D013DE58858130E397F37
46F10D10418624BFB3F22A8E9DA574E27FA410AD27382E02E333C4DFA53B0DE0
5265E78426C0A80CD1708B347FBCD65969A035D1C7F93C0C422CBD6F419F8940
194176E30453CCF0F4F478C0EE179E0947618E0BFE3290D563F53FF277D55719
D0B29108D0E642992BCA768FF02DBED8877A16D5532B2D705B03741196DCBE8E
482EC9A5B03A5BB00BF1AD8C5092611940E2E293694356E7CB04C53E0C338732
32AAA5B91A448ABCF995ADADEA58AC9295249DF911E21D7C892E040BC99E5184
15781FFA7CC1B125323A26F79C027938D2E36C6BC73CE6D62F02A8499FA328A4
4A96D9E944F2DE8E56BDA7D6FD6B001DC6F1579F44F4F615D355B1DE1D32145D
398861F06F7C923E93AECFB80E84DD59065BC3858D7C3916C31ECC9EF412CE26
0DDCCED54929E0179377833075BCC1A96BEE902C439FCE739998059320DED07F
87F3C74F6DA5FEB60CF31F742C8FCC411A0F4EF3CF8F0FFDE28F8ECF80513ADE
696C8C24A530D0F696D4343C4A7E327850D2713256DF20A94A50DF333EFBB102
B9B0A09755456B3710ABFFEBCEFFEBEEF1FAD22C453E09E2E4A0DCB8A2B2DB3F
058AFEFCB829B40EB8F29BF58F759F040EBBA29B4D8F371DC7AFB56D7ACA12B4
7D3E5DDF9D8FE77C70786D867F72E827F68A5A6B97EE552B50417B81A631A805
439659B8E575C89C6B37FD7D563275417258DE4099B7949B1B33CC85D798713E
574ACFA4EB360FC8F77B69FCB0A54E6AD4BBDEB848B4CA8236188385E528760C
CAE5542698B5042D0BD5E1EF46B60896B2F4286DB2D768FDF2D09CFA5FE2E84D
C2E34143D2C1D5EB5BC2066D8B4709DC87534DF17B86F2FF63259E332D06F3F6
9390D2D45FD7E8D8EB50D20EBC45FEA78F66257495E8D97FD955EC1F9792BF69
583080D8213DFD1609B9FD36EC7375C74CC344A9A9F00FE5BADA5AE5B77C6242
604DCBC08678D1F479E674B5C682F2495C2B152DCB1CFC20DA411C85D874BA68
EFB2DA3B7CAE6007BD0AC0218808EA3DA4C8421F0CAF04C66750805A663BB212
97201C85E0D20F0619A08C34922A1CB12601A78E5B573A12A2077034BD7EFD26
EF24BFC285287B314B99ADCD2BC8895D9FB4C4811ECE37ACBF659F42C6F2E02F
AADA784F9FD0B51EBE88B3656B9A7F15AD8273B59091D7E40A2657AC770E61EE
83A924F6B9D288FD076024CBE7CFD2E1B3CBE775A5CA5C9F943DAF1B03A5FE58
3F99E1AC95BE3039A43547DCA3F87E8A038DA27820306DA225B2EFFA56649229
C9A7A1022F0D818EDEE9A901528C75262EF6C5118D400CAFA0122DAFEA656E65
6008BA7D5F0DDC305CB586D6F805A447AA28CF0CF1397841B95ACE1498B5D068
0E38A4BF9554144F0ED86A019DFD9BAF3AEF626E1979D4662E2C7A709590E4F8
4FC604C36E1872D03B9302EFC79CBB99E82B17757C5209EBE0B499183BF6062B
49CF5570EEE36D2E985D3078BDAAE13AC034CF9D8218AACB0D1C7419D59EB760
C8F0114D196F04F490243BA3605FE4D96C3B142AF1DB43B065F2291A7CD9EF21
0A2B039898E3AC4415E60983E6E279D53DB2E0D14A1C3A3BF3FB5E96CBFBED55
8A755A0CC79D0916C38DFD21F329613D5D9A077C1BA42739685C3E1DED43FBF5
E726B9B8E01494F8E4A1A9CDC5F13421A765640AB5F1664D6D74EFC7351AA62E
6595ACAA2EF2CF23AC3823295E784CE2562909445673C32D95E92A1881676219
8FF41D7724353E87DAE724F4665D032C81BED16CF8321B9807ED153A93590486
9C1BAF6BF66B8EA3A6B104A8E7453FA8CC73F83BF14A335C7293F13700CA6E38
2FBB3B8717314261755B2781181CACACFF27F8557E154C7D4931BA593D7F5849
1BEDCD8FC98A63A60437125530BA574AB7D2CBB8E76D84493B2332F0792B8DFB
B1DDD299750531CD27DC429A83CB9DF0A8F4576E7E9FF40C1A7B78B4AA7C7CB9
D20C11550976A7AAE5C1AC45FBBA8B37C83C4BBA12AFC4C0EA55BC9AAC0D540D
9201CD79F8D8DE296D8C644FF291219F72570FF4B77FF772367F8B52BB1A6BD1
CB0BB772E2E20A40CC02A99F2993783E6936EA1F7761CEEA068C6565EE5EBE83
830A267DAFB3CDAFEAB3817438C0FFFFA065889BAD25C37C7986ECE5CE9DAF45
6C447F9E485377CAA1B7C7D658BD255EAD01A912941A52336F8589EE17870C41
2369EC3A4A9299C60E90843A8F3FFBF70D7A8594B399863B634704C4FC38D6D8
8DA72C2867997B9E542A12458C942F5254628324C2914DE0AF78CA0F6E3D46A2
099524F362A18868286917861E358F078E4FDD37BBE4413CD9CEC9D7A6B6A0B4
5567BC8B00B7063C172D2A6458F2FF31841D3253823F62D8E9B9ECEEAFBC91ED
86F7A44DCEA92DB031CAA4960F49822F4228AADA6650DF1D3443FFD73E1AA55C
077845214AF876F3B3967A431B78D033B77AD252692318C3A237037F99EB23CA
906C516B8339516D5BA1CF1A58396FC25B9450A0ABAFA8C7D7A9BA01784CC31F
DB3274995801FCE5A50FEEA3CC3D11A56DD42F738E05BD43E3CDB8989F185939
BC9768E1F501CC93BF46555DD613C58445F4D40E7D40542040A7AB668E988709
8F69D4349711FB0A5A66159B74525E02730E77C4B1898897DC69615A6D46ECB1
637C00E9A80A7A6F72795790458DD304942114D9EA0B873F0BBA2073883C723D
900A79B75C4CF350B1F38F4030E0E8BCF93DEBFF9C2873EA9C1C6E9ECB99C7CF
07AE2774B5D36FC89A21C204C3C9344C0DC2B32247D91211294288563ABA0B94
C14C975EB995771623E04664E80F13849A56C3E372F126A22A22A6BBBCBBCE08
BF5229808F6CFEE16AA13378DF7C87BCB5F07836A418FF278D4B96EF157B1009
23091F50CC33E6F07AC685FB4845FD7D9D9AE46A3001242870F20B88D22809E9
8CA0BDF7964B2703DB1A62DDB80187CD661C3F1E6094F4D80C1D42F703276C18
1E97C103F25B2A752BF584B4F57CCA7296A1F7267A2C30E46A4328B329F85C21
71021D6DB33F96A84B576310E5FC92838FDC67A7BBC4CA3472668951B2B6C292
4A6F3B0A4DAAB58144B2B72BC2650124D22A5FA4EE2B9FF5AF7EF7F10AB369E9
646F9E0C20A83CDCC38C1F672D5785AB97A8B6AFE4131E0ABCCA67D6C5256EB1
1057091DF644D2AD32F68B2B8A2D48AFE6645B8C2CF92D8078016DE7BB0C8D27
F02FB5676650AB14F19F929BC833C35BE8E4AE4285642C3807DDAAD974EC082A
8D9EBD776C16E9F5A9D1186ED403ABE41E0BBD91234DB00675E0B654D6E93E3C
A54BA3756189DD6985EEA3200878E854C34EE7129FA76B091BED174F38AC6F9B
77BC231707C936062A95A5F120F6EC9EDE5DAB46F8C9252FD864A807B1B757B4
72DE4E172FFC6646FFD5C53A138A82787E71E8459F98A45DBBEC17013F77CEBA
D9BDBC2D5B925DFC00D058F581C3D98CADF1E924E662D51AF719BC2008E0F251
3390D338271AE2299A5266A7E272340058F194BF155BF1F308C2CC101CAD3032
BC7C22789AD7D0B0F422896522B8DEEE60636ED84CAE5F0EECE686A666F5C81F
924FCD218AD2EAB79A7BAD40D3187122B9DA46DE9CE603F4E11F57653C808E10
EB8B2D004A50C3D2BB29A7243AB456DC1E17EF1F9E73CCBAE41AA5B25F1F4919
F372011C0CA6F8C4E36F037B54F798F931E48C7AEA47FF8A923E6DC806793FA8
8EE3DB77885CCE4C0D3DB59468542F15C9529F49CEA38F6A8F363109F13808A9
06DEBC1457C148D71D5EBEF7161454C0E223FF72E289472F4FE25E5706A164A7
1AA182531FBC5C3C41E4F554E972C9616046F430428EB003706227F6771E2698
0682FC085B1C360AFE5682D03B58A53EA899D4A664BA53F5B4A9AD0EF90C27FD
C0C049C6F91B770AB0370DBFE14516D72D3ACF7F4748189DEB6C9B61DCF4E245
F88DE125695D94317CFEC6CFFD9EE4F7BD7AB88206E470605771BFCDB9471664
D4C1C6A2C23CE34714E98CFBB3D497E728F9181FF3D2F637A0B7ADDE1FA42103
2C5769781CB84E5EBE038CA85FDAB5831D67D9B94F595A8A521964DEA90EA603
EC2C19197ECC57AE8D2804CC1A1981B3226542BC45FA94A880182FF924E1F067
C6F7FF1E5926C2B81878D1C5700530E0ABC3513EAEB3A94FDAAFF1FCE1F9D889
3ED868F73EF374CA8DF6471638AA7893E4801DD3B928514F3F73746EAADA0AC4
939BF2D4DDD42FDA202D674F6F26E25FA181965D8B5EFC2E01FB5F362970631E
519FFDEF594204D16B5905103E6348E6FA0AB2E42998C79C4EBA02D0006E652E
DD710B648CC7B53743564EC18D22155029C11CF5459AEA9990165AD6842B14AE
C7E7BF1D61AD0D5BF7758FF0453D27F81B4E69D8282818AA3B6FD54D90606182
B96CA85707BA8053A17C90B50E75D5B434F51EA47DF061E1C6481EFE98728E54
81A4E3BBF15197FCEA3CB8154ED0B286C89E12EAE2B0D1EF574824D594EE0063
9B96C14F5A3128BFF3A4C099E2DEE80CCF0C32E387FAFAB74F8DC5874F1BD844
F7A1380BEA5ACC00DE6E2AB4115F1AC5063C3E10D97586D9BBB85BD281ECF876
4526C2760FAE17D743A9A9AA41666FCB29553744A81766FAD0CAB42432EAF1DF
DD276F9B655FF1D163BA16134C119EFB0349CCB82360948D2D0D9F49D794E6CD
368AACCF595C255670A0DE6841021B75BFB03386ABE52682D62DFAC0E9496689
6043BCD08B10BCCC7D2F9BC9BFF631B7C6A9F8FAE87542DA5F9F33C135A8AE82
E5FAB08BB26E725697DD816CA489E7C87DE67C9DDC943FDF372E93B0298C1AD5
0967CDB09094B75513E3DC4AD6D353C481F0CE1AA585D8FB0D0FA7856D76EC4F
F584521E34BA1F98279F29D01FAA1DF60ED3C6C6192A649C12257413FDBB573B
D1F9EB4DE1008F8F7CE4E029ACC3FD8734DA3F66B98D5C51BD394E023EC7CCC8
309E40C405B5667EE167A78FF14C7B4B506A1A501E9C0351D3CB8FA0D7761FE7
14D9F0F49A1C91CEF961C45E7ADEF5118CFB1EE6500F0B042817EBFB01EE7307
05E4ADB4836312791A18AD5EC2C44C045338AF74C3EB969FC6D7CE3E2176AC93
69D0B6DDC53F51C0A8322E3A32B262317B536B5A017A188854B86121EB36FBA2
6306D307DDBF52E27B7584AA85523D8043DE4D8436FB8D46412FF686718BCDA4
AF5AA2140B13E4374E3F7388891ED00CD36FF85AE80B88CC37F2C38EE7D91CD0
46958EDAC3F300AA4CB2620D7426FCBFEE79E0D435530641CC9D964840CA03DE
38BC62C4E1C49BEA420C02E0FBF49071E7C888671ACFFFB50730AD794F8D32C6
FE66D8105B74249016D705678ACC361A0CE00FA176F3FDEDC6A4B89C4CB967DD
CE87A2D1946916F05EF04A348CBA3C1EEDEC8689A98633C98EF07C5476C7FEEB
5F9C5BF1812D438A1313887869CCF19908219A6D87005702F0E8EC32EE906B4A
09B7A404955696DABA2A4417CDB47C3F9D038486031655EAE16D54094AC59058
F24C50E69DE46CD6A25A46B1A23885AB9774D700CDD3F2344A40A6F0025D1769
57DE760219683F1BBE4CFD58DF919BEC3D4B0E085301DAA1AB9EFA443D032965
A7A21DB756DBF8240A8343236E51F0DC7EECB57FA94742E5A879C1DBFA2B4E18
76B2CF737DD37BD1460A27DC18714ED2E323602A173D29E874230C33CAC153C2
CBDA19566164E25CFC900171AAD7C18A3239B0FB7C3E7743FA241055C0A5E3DF
79B770A78717BB017CEE8480AF316A63A7A2CEF88E6DCB9A5BBF3DF11D28D712
C716A0C43E895BE5F81596B10E05FE316AA6E7CC7AF0B8F669CDFCECE1AF059D
ED43C2ABD7C01A299A0F221A6447C1D86EECAC273122A4D63FA6DEF194C39E80
09CF631C7F7479965E822765D92DE5897FB99DE341EBAB77182C0D39564CCBE2
2D4599F2F022E9B7AA6512A0A4A31C30E45C522F0CE1B4C851D2EB0428408D5A
760BFEBE3E6A320CAF57E116EAA802E6CBA5D7835A0A58CA9596A83F8432ECEB
F9AECA0D5B88CD59BE57CD9DB90FD85AB248BDAA001995A741453B9BE78F10E9
1C6F32F42BDD9B69148CECF098018AA66830A4D4728A85C4333A6DAACDA9802E
49911D2D05ED84AD3E15A351BC0FF2DEC407FC760EB8BE506BD5639999907C9C
A8CC09EDF77A61F0DB070E233698D754E364EE2B37FEBD476377A75A721E6558
C86DAC65740D582887865781A7A5C9150C43397593FB238C09627BB4976E06EB
95CFFD9BACD1663A3D9466AC6207D5DDD920C696C6A0432198FBF2278FAB865B
27CE8258F5F9D4AEE726289C39171F59D3ED9958FAE210C61CF5D9A2D66439BA
5FD321E7F4C3B2C10A9F9755BEC9E73B3D6780969D640E62055E67A66D0B7D52
C330EC72FD6BDF8F26F391494A5816C3871B4740D497282A0E89E97600DF0FB8
E43577FCAAD955DAEF48CA4F7CA22CC75141080BEF96F76A4240CAB96487587D
D604D4F4E5D9DF360CB9CE9EB6435E0981A33F988229656E5A89D4817FF517A1
FACB7AFF6706A33422EEA2E1292021352BFC270ED5DBEC59150235181E1463CE
D6243E338BB724018C7E2F3A51C90087DBAD0AF8E746CF0FDADB743556D78E6A
25800C4287AA6666860A02BBCB235008C2C7501212B04E49ED9304BD92804989
0BCE548015D18D84F2EEAD9CE66222A3F363888E2C465AD71590243E930212ED
10FD4B4531AC64403F984937A3B55A8807B84317DF269D63998E0F60F1A7D524
2F7403A9690C3277EED02EC4E891A78B119C4EAE9A4215738DF17B0789245056
C999B0D4DFAB10935174B1ECC3B35A5275A9B7E394592638FF165A0AB7907D02
76A6D74E07908FEA78BBAF2BD420FB4C273D89915BDF4F446789022703C69B74
A6077042905A515DBFAE34928B94762AF5750925D7EC410ACAEF9F86860AF67D
5938CE4150F5DF7EE85816E7E2C0770DA1074B70DB998D0C37BDFB6CCE33FEA3
8D36582B08BFF706229835F6C5E2B64C88984E3D55BEFBC9F23F6F08860F6D53
4450E8DFC48FC15ED143354CD9D055E3CBF18D75440D43A1842CE1674FDC0DF6
6D731744C617F16E2A9054144394D785042350043054A1FDF80F84003769D945
CFD4ED2CB438F3CC18BE1D10AF081C1F56A5503E236FFCC6F8C2FD02B404388F
E351B5C88088E658BCE09E9DF3547DFC48CB7DF7C42B836200EAB96C54010AC9
D82C4418DEC991393167A05A7E012725D493A30322C6F008C08918D86D46AFBF
E5A1D989DD6B8D5CC83CAE17A7A8C96AA68D40E91094EC3AE9E7B9F2FC4B70FE
629CA65D15298E0948257B3934B5BA7A6DA9BE6F3011C0CE689BB733E86B915B
95BFFA4AFF2C9E28BFB3D78411D194A831BD0405CD5BB99FF8E6A2B4AE55F66C
28328452077516617D116852ED5689E93493B6C29B70111D3285DF830700B58A
D25DAC980E43F7D4011AAE2D2BB7FFAAA2CFA1F4E61D16E55221A095B0CF57C8
19FCA53DC163437C60B2A68DE133FBD0C18B03564EB61AA18C4ACA4C2093A102
30E49749FAA2E7C6BD98A468C05C36BF55E72A67CD2FDA360622977091F226E3
C11F04E66FCE1D95B91B7AD403D2220118330054A6C03D68238FDB930BD889A9
FCA6C0E794F0B9FF787C6742A9CE0E2E3C3E56421CE7CACAE98AC3491C32B267
F88F740626615FBD996CFB7C79E44A5FAEBF0932BFCE360F4F41D961A6433610
B4DC6993FDD1D2F8481474BEC87B7917B914C42D4875E11F3D429573E6B1BA38
28B58C1D9FC20A3E78B0D8580BA0666A7D62EF6D4F4887AEDB8CC0CF41107139
BF697173D625FD923FED8E6AAF386452D56E15230B248FC25883791BECCA5777
F3F4F1FA6E4C6D8326F91A6FC6DAC6E010805EEA8B95AB7BFB589520890BA8AA
60994A604BE0FF069DD38912855FF4696E0E17F185E00D98886837B44B73977A
13CEFB9B0700CC4586B97856ABB2F498319BC3268A67E617ED9120AE1C49B944
55469D7FA4F4C7F1B2E7964316DEB3576FFA5314DFD7C9DB40C703CFFFEE9976
EB2B7A5F2D02B115C7FAC063CE5F1D530109478E74A754DAEEC62F2CD6602430
4A1B17B016E269704B8B935612975B81D79A08F7DF8C1AA6D56BEB89CDFD1DE9
8B898553370DFDEA1ABB511D64BA8D3B6D05C1156906CC4ECC7DCAAB8126F6A6
44A4C281A9F1F8F7C79489BEACE1474C6B49EEA31741C1A45D2A2C91406A98EA
3CB0F122F371734A2CDA2A8EE19653F6A1689585BE0F14972C23555EB3AB855A
54035A6E4B2424DAE1E5308E7030B2D1DAFE6FCEEC2F30F2396843ACD4CDB6A9
1C2AB4D82925E9794F5729576B388AFC1D256B3AFA4A3DE33F3D7F0495D38B03
9FBF31E35895980516E1EFDE9FAE5B97F738675784C191B4D2197B200262A01B
7BFB1A4C13934F9906ED5D4C027C10AEFC4F29C7A95A0957FFB6A00009AF9EF1
EAAFC446E52BB72DD2653BAD0694566833C4E93599B816849794839B9EB98E20
BAB35BE1FFB63E583D8D680E931CB15AA1283ED84CF257BA1CD7F20B5B8D51B7
752DE1B392D33745CEE452D96802567C0C1B4639E1C311934D8EDB3543908166
20892A1DDAE059AA363CE9243D1C1C64813B18D7F3473C1C010BAEBDD573611B
0699215A4E5293B7C576431932B1BEB11D7DC0EE256DAE1E6EBE26408FC74E24
95E47088230F437455EE483A5A61A1EA48027EAE757FBC23498C63B6BBDF77BB
81ABDEFCDEF350C4C9EBCC844F3E7016F0C7BC731E9FF085E73A7EF6A5820F44
28AE15996C8615EF49518B3ECBFFAC25060E35AC987943E710945F40E787F19E
97F97DDC8D8716E298360E472DC698C418EB77816E04B0F1B1EE2B4ED02D0104
63EE034368396F95C690B6CF23A9C60B57AD25EDFBF87CB5E54CB6F1A94F9B66
421772EC71A6540D1B3DE053952E13042DBD4C654C249CA71A7DFA0DD1644D8E
B46399B18C7C2419D64240A2B9B09F0064A59D79BE024BCE96B3714455A6288F
1825C4737242FC4E844B302E96830378250C4FF880D57C1ED12DFCF8BECA3E00
4ED322586B179142A0265964D67BA3EA46B27BBD1B70E322055DF473AD577AA9
23199F345AB576D504CB2F31279B97A281C2AA91E1F127952A16D11D798F32D0
627712A5022239B0E4AE6CFFBB5755596A422F6C909149CE8CC909F279DF39B3
3FF0D49673EBA9DD43CC0752E33D325C782BF58D787BBA07E993594C38E0F327
CA0E35A448F80041603CE71AD954E4FBB23D29FFD7DC7D539760E50305389EA3
A68A7085A557192DAAC41F20B3C00008C0950EFBD08BD93B82960A3C04D127A3
A20F1EC88941900FCD7BA16F377AAE06AE5E26F09D41B5DB6C5BFD202EB2E5D9
7272D2699B5EF18B980CE9652C88B6139CCDA07C7175D8E9BACDA9AE06989107
0A7F320E8B9F187F5BC233692FEA6C88210479545D6B723E1A47ECB4B101B896
054341D3A2F98111C5447D9BE5BF8C514F0509B826A3F23AEBD5484D04AE29D6
CA43EA9F622A9527CD23C6B2FE4F94725F8F59FE56AB8BD32FD00B47E5066F7C
8CD516AA1FAC0C9393C2715C5C2D1BF748E9F924DFC6B35B93E9264A65D409A3
9D391E7E208781715E1935A6AB1FF64D3A48635FE2BC8746460920B0E47AF7AB
46A048670D45B4B0C2ABF8E3278F741872962CF2D8454676EF706A48A5E55937
368D2AB63866A8BE55738CCED0D1ECFF25A0C10223AF53A16B1D6A1A9A4F9868
9E7E83CE914D567B44396307C3D445C301A4BE7F9CFF5FEBA7AD4FFC8F401E2B
1213548385B5C38993185BCC95277CEE850EA5C82CCCB853DE1F5BB463E578C2
5E217399BD11EF98CDF3329F7DC2BAB933411AB399841941C4A257FF462D5C48
563B802AD398CD7DE54D51B6711226C55ADAE019E0E7DA3BAEB10A9D47FE8EFE
0731FC6476E5B6ECF5190C475538CF08E20EED7B0830E9D51F92A8A694A9CFBC
1AEBEDEFB199E885E6EBB09C4C0C68B225F611901E6E965E58EB63AB2045E5F9
519AF9B300943B379214E9D71AF004D136ED823ABBD55B46FF46948DEFBF89DB
CC3B7B222583794431449F1D94CF154CBA54C0CBBC23D1CF5A88C839FFB79535
20BDEF9E2105C52A07B787A41AE1EC968CAD951385947A773DD8484960D5D797
8A1D3ECDBFA1574FE7FC43FD0A036940FB8A9A4C2052414C02DA2C95D79CBE47
A22CBF6CAEC6782914110BFFB119DB0728FBBCAA6914BE7A21CC0C5D36FF1E6E
8C0E441C7C405B20692A76590394E7667CC2610F51AE75796A76E338208BC450
04C8F4A73D7654E12B011492ADB51EC95DF87560DE7A46F5BEBA6C5B0838E404
F7F891C9C6D4981C1DEF342983881D1737896683425FBA1CC2E80D7CBF3C6346
5499234115E0C62D30B5CA94CFACA4DE7B1DBAD2DEF843FDA55FFA9A48A3E244
DC1AB4F51C5A4C23F56E4CFE418732F0F2A671F394B9C24A646D55401048FEF9
1022C2490D4859AE73C83A73BCB1EB147A16DE909F8B5E50AFB50FE8DF6C08E2
A413A688201BADDFDC28AF2D35201FC42B15789C5478E31E3E6A9C16995E9BE9
76EABC96CF8E2AF36899284AB9293BBB8BA949629DBE0F5F8576B477970D02FA
62691A721963A24F91A5830DB04A1B3BBE36168BFCA1C39222094F5B480D388A
33776AFF312D858A491AA8FD114C97975F783D52C8FF150DB885C95C85CE18D9
68FFD3CBC5487059F1F148B27C9FEF8F331539359560489F36FA807E59D77525
C9BFC184BA28A4F90A71F08225644DE9DB42240F31C2688EE597F029E1E28726
86182EF141ABB1C0D4318A088E8FB5C682369257183D8F9AF6C6B9FFA26616E7
B550118F4E5138D18B2B8325932C30DDB70797C045CCEC4D47A99BE7233F6FDF
E83920D4AF06D7BAF76B18085A0766B2BA8BF4C503E427ED255CDA808D99EB39
2AE3C257D9A97DAD8B35E8FD3EC4FA6A2E2D5D9E2B0882DD888F9F7A9A1B4DAD
3E42BE427E3C4B0177D07D92B77F13570290E846D24F2F62423006DA1DE1A229
607E5DDBB091EC2810E2F8C3EA53645E2EE3C40A04F65E739905A6BBA916BAB2
0B412A9A2419F1CFBE5B18F83F1E882112B29EE7E2F7DBCC307DD5B122ED1555
C63542163CF5B9A2FF2E3994E9244186E5D57BCDBEE6137E5184C9C3BE7F34D7
AADBD62ED909022C3C1FD673E605FA1762FF96BFA9AA3742DA034F40FB8E8119
445FF7FB2998DAAF0793C640D5246F0A8944666EEEC02052D5A48667A6E266CB
4EA0DC43D2FFCD2482D3C651EBBF2D3B5084F3D61439B38D2FD519E2340D4B64
3F3D851D4885AE00D365B3EB3E4EE126FBB4653F570F6D1FB0B3B0AB597B7B34
254E408ABEB7C994243E640A31D4260035D2AACCF3DBC310F5222C1756186CBA
A8BDDE3EC03FE392134EB121246339C82CC0EF62B760E68726462026313BB6E5
3CC88BE2792FE2743A6E116B5946B8136ED9335F5AABF093210053B75B1F8F5A
38ACA70974C39DFACC060EA965E40659E2376B23B897150102869A214E65F7A5
4E14EA3D7BE794DD9D29A8500224B314D72D86BA66E4CC6DB3F90B13B233E98A
C90809352B8CB0F7AD69E4149B47A15E0237F7DD7D6770260483A2A4626091B3
660D9F6CFB1064E6A6E832822E9A0CB51EC9045FB7A0A924C098CD7E803382B3
5D893B0882F130E9338B7909CE7EDEEF938303DABD5171E1442400CE0645720F
FFB04DDDC4CD36C75F6D9D5C99CFB7B0503B5F3E96F3816834BE59CAA430F076
C3E2439CDFC2D8C9C14DDC9A4AE78F56AB57E8DB99346896552362D63C2B0BD1
C5368C74142DB54A5683022CB38E0925971C48AD57418A5E5D2C9BC9F6716050
F31194199FB5E38C6B4154E5C1C2E579AC3BC155D6E552092E5345E245ED1E1B
F705DEE83D6700CEE2A7E0362594A778CF52A40FBF35E261D817B0482D6EF231
521B7B7BD2A64586284337B86EBB1D4F88D30AE4FD838C08B56124A81A0A934D
5976441E0476D5155752EFF6651FB824D1F38F3C6C05EBCCE178E6D48B9BFDAD
C05E3A01F5C5C0F1B1EED3C52EFFF711CFA8A84BB9DD00A4BF5D41BC7FC79E3F
154AB790C3225548DEF8D55EAACD5C38FE8713A3DD200D31F6BA872A4B5FF7B7
58D7F0BB13AA5F4768B61865EA25F65C3634589D84A5CFF42D02D765E39A63A6
9F910F3BCD31338291E6A8D6A88B0D5736986FABAB6A844BA69852DD42CE0784
16123EFE57601A8B86AA4BE88942DB19D206334E8809F86008883E9F28B99B95
C18071BA26321523B5E3BA09A0565FD38A1DFB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 2 /multiply put
dup 6 /plusminus put
dup 15 /bullet put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 25 /approxequal put
dup 33 /arrowright put
dup 49 /infinity put
dup 54 /negationslash put
dup 106 /bar put
dup 107 /bardbl put
dup 112 /radical put
dup 120 /section put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE105BF5F504AB332FC17E568681
F423D1125A596766BE58ADC658888DB39BA74F67CE0E26C392220832FB036E93
7587E96684BFB78BD035F54AF71B2408241AAF548F996AD440155624B3EDDC79
2102EE58E1E27EAA0675F1F13297A4CAF514CB319E58D424A820B8F48984987C
4AFAB7EEBA3DC3D864BE3D8C5F8CD44E74DD018D45347C0CB8E42A71C602DFF0
08BD507398237C594876437A8F157DAC640E2AADE5C6B0EA56507C3D9D64F455
BD2FD9C8C621582C7B45A8D060264AEFB6F5EF78EAF7ACD969B0B35064891491
86634935157B874E974DFD7E79F86E7A26727D5AADFB9BF85173109B17C56D13
65DA81125AFA7D259D84DE3B39AD02E72208B9B60FE9F269BCAD34846F1D246E
F948EC7750CF585C90579EEE9F2C1A5A6395CD3C94A251683A3F9C82F6530C50
1595FE1D18E575C2F36F0BAD5DFEB5D55B1833B85A1F6AC7E6679E8DE53D5AC4
CDA3ABEA1F4660C8EEB0B3C9685B4039FBE7C639020B49207AFB0E7894693E03
082335CF2DC047EA62AB826A708C49B203FA8B037099F05853F04F96BDC90D62
33FE1F2AE5F256DF319616E64C8AF4BF87D357DF3ECE81E13215489FB1374D45
0CF81FEC1EE2862845228BC19CD09F58AEB8C1D924ABD7EB014CCCECBCCFB95F
E1D05CE4CB1533E4F074D29DF85049DD5B9952B85F83820CD5F21A0C15D3B7DF
CB53939576B514CDD56824680C57282C48BEA0488876BBFBBF2E8A1B1269664B
977E412D558009D58DC118E319CF2138007D35B28ED58F8557A23CBD6E683E75
C346DFFE34DEA53EE82B237CE44EC3A546993DC866523064C5C8B143EF5DC887
B6182E8E407963CB86D66631896845A529010F9F38707B9FD93C5E88C9BDF04D
F72F295595CDE16967E3121182A6139D08E15D10878C82CBE6414249A0013465
13D4DA51C3AEF41E0F225F06EB9EC120431ECC1F98FE69C6BBCF62A1F0313FD6
5B71A17794A6EEE2660BD9850F1116415D748C205EFE11E41F70B4B26165466D
23627946B58C961A9BA87BF322488C16F5F5F8BBD4DA5A88D9674A65609FABE0
6301D563FCDA7F885E158BE49CB0AB2D13ABFA03B03D1B54887CE8299F546BDA
AAE6A44E24674CB6B1612BCDF0DDFDAC26FFBE49FB4D55067B17696BBC603C38
04D01D9344976F78E72D0F8D855268FDDBF7DD6E864062FCDF9F4DACAE5C7EF1
DE99A6E4BA2D3B26E1C2B67B15CF3D8A9DEE89480077DC623DEEDC76341A6B1C
E2689ACAD7E869CA4CFBB7376BC08A3717334362EFC1431F5E7D20194903FD4E
331CE70B1E1977C827A14B0FB410F7B4FBAA533CE85C01C6D3601E5640C3AC92
63359ABCF1DADC1CF256DA2465F1032773C913B29C8DEAE4ADE466E1A04A4C3C
C1994D64648150AA8B2B32DBEA1F02825AE7EFB4197AA596151FCC930EAC8645
611A05E1AC3ABC98020168A4A56A00E3E59302B99FC0830EDDF4520B87B80C3D
11E8219AED4A281C4119A9A2501632EB888984B5C4BCFC5C8D5F98D79146CE99
9E9C87D8398A77D9DB2FF2C56AF78D960116CD7C451BB936479F7798E291EA16
189A7ABAB7F2466B1683149BDB16A1AFE71E2C2BA1E5692F62B96EAA835A5C43
D66D1FCF3C0A145511B16E258040BDA6B9E783E21300FAC81F5C58069A46B47E
4DD2A6E18A967F2CF0678313755420A2C1DDA943D7CE3C9D5FED7E7B31FD52F7
C46BF3420B5462D2CE28F11C8F7F28019DD6C341719AFE0F81B3BA96DE357317
8A584AEB876F198A7CB38D03656592FE20531814F10457DA1B8BDFB99D414607
281AC3C3215B828F5166FA5480EC8BE07503EB0E41A93CF38A039085B08CD185
C546E67F9FAF3CAF98AE0E3CE4A6B961FFDE24221D95823FD7F898F756695103
69E12DA3DE43E6C7C3FF717B6CB293E3D70C36B0A3790984550739AFF58F75F4
3A866DCAB422E10A1D854873658E375659A55FD644F500E8178A95F1135713B6
293BFA682E78ABCA22055DE1DE6F4150A2A8D2A94B871DCC9666945813E308FD
4092450A6AEE5337052B9394EF30BC820B4E67A7394BFADD3E6DA73E6741D761
E852FA9EECBF40F78F9F6C2F8057BD2B10A8A875D18815E05371799A16DC1107
5B8C58F772867687604D762D5084463BAD70C512A0F8E00ADB1194CD7000333E
FC4B21D857562FA0F69A94B5777C5D513C646D7FFA335D25EBA0BC7DB7649E78
62579533FD199284D78B2C3DAC95EE737AAC6187FD3174E475CE5ACC2EC905ED
99D2087CFDBBA7CD9577F28952C9A554DB14103287CF0ED5D2F4D23805CB9620
828EC640103F9C51F8775F608AC64A9C7290563BCEEEB27E153AD30FE129EED1
321B38BD7A8BCD1A71F98E29E3E85F809CC635FCE387C5C1F4F91004C2355222
646562342EE1ADC3CA7F49EEF2F33D42C5458DC5DACDA036EED7AD3772F84E12
1127A16E83FDD2A8CA5D14A24FB4A23C07F0EB77FFF365701DD12EAD2A1F4B84
C94A20100D0AF85B101BCC60DCF24567F67B0400B5FB2E08412FD73ED082D8F5
13DE8B63C7D4F6585EF73D5260ACE04ACB11B802EC09DB2566DBC6FD857BA9A2
ED4B5CA4BFEA800B98FC8A24139ED43860B2D1C3FB33488ABBC99BAEB12FCE31
0AC534147FFB10BC59302DB580277A6D0C1A12C5ADCFA957E8819477E54F94F9
C2ED6190B645AA7484C2F3F18326FC4FC1B88879EA9B6AABF26C317208FC684E
0407242F1C6A238AAE1E54BAD6F090D2858F441D4EF6B313517B68F362458C6D
D2F13260153065E3512EA0BCA8007DABB979382CBB86FA7B8D5F8CE8EF719A01
ED78EBE201A522D7E603485C842F09754BF79C030757FDD446F1892A2A79A033
53B95BC417F7AFA87B854533032FE8D0C6BE5D78754CABE1EE4B64C2C924154A
B177153E58C392DAEB49A9CB6F6687E40358332196F43EECA4FBB4108FA9E363
BDE8B927C6ABB244B70684B57D47EE9693E5B966CBA2CA95314DA57B8F10E4B7
AF39E0928B31A690E76617CFF8D0415C20B5112A38F35654C01AE0C056984451
FF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1100 600 600 (ch1.dvi)
@start /Fa 133[35 4[43 6[45 3[30 26 45[22 59[{}6 63.9269
/CMMI7 rf /Fb 194[56 3[36 36 36 36 36 36 36 36 36 49[{}10
63.9269 /CMR7 rf /Fc 167[132 25[81 1[81 1[81 1[81 29[68
26[{}6 91.3242 /CMEX10 rf /Fd 133[42 45 52 65 44 52 33
43 41 1[46 44 55 80 27 1[38 31 53 44 45 43 48 40 39 48
16[59 2[89 4[76 1[59 1[76 65 69 68 2[71 46 71 25 25 46[58
11[{}38 91.3242 /CMMI10 rf /Fe 132[53 1[55 55 1[55 58
41 41 43 1[58 53 58 88 29 55 1[29 58 53 32 48 58 47 58
51 10[79 81 73 58 79 1[72 7[82 83 66 69 81 76 75 79 7[53
53 53 53 53 53 53 53 53 53 1[29 4[41 41 27[58 12[{}51
91.3242 /CMBX10 rf /Ff 133[37 44 42 61 42 49 30 37 39
42 47 47 51 75 23 42 28 28 47 42 28 42 47 42 42 47 7[68
1[91 1[68 65 51 2[62 70 68 82 57 1[48 35 68 71 1[62 69
65 64 68 1[47 4[28 6[47 47 47 2[28 33 28 24[47 4[81 1[51
12[{}56 91.3242 /CMTI10 rf /Fg 131[91 46 41 48 48 66
48 51 36 36 36 48 51 46 51 76 25 48 28 25 51 46 28 41
51 41 51 46 3[25 46 25 1[68 1[94 68 68 66 51 67 71 62
71 68 84 57 71 47 33 68 72 60 62 70 66 65 68 1[43 1[71
1[25 25 46 46 46 46 46 46 46 46 46 46 46 25 30 25 71
1[36 36 25 1[76 46 76 46 25 8[41 9[76 51 51 53 11[{}87
91.3242 /CMR10 rf /Fh 135[67 3[49 50 52 1[70 63 70 105
35 2[35 70 63 39 58 70 56 1[61 9[130 6[86 2[120 76 2[48
1[99 1[83 5[60 11[63 63 63 2[35 46[{}29 109.589 /CMBX10
rf /Fi 135[41 7[76 4[46 25 51[0 4[91 15[91 7[71 3[71
71 4[46 8[71 3[71 25 71{}15 91.3242 /CMSY10 rf /Fj 138[111
78 1[83 2[100 111 4[56 4[111 89 25[76 23[100 49[{}10
174.346 /CMBX10 rf /Fk 139[67 1[71 1[95 7[95 2[79 3[84
29[124 67[{}7 149.44 /CMBX10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 768 a Fk(Chapter)30 b Fj(1)0
1152 y(In)-6 b(tro)6 b(duction)p 0 1211 2700 4 v 0 1511
a Fi(x)p Fh(1.)56 b(What)42 b(Is)g(Linear)f(Programming?)0
1650 y Fg(P)m(erhaps)27 b(the)g(earliest)g(examples)h(of)f
(mathematical)f(mo)s(dels)i(for)f(analyzing)0 1759 y(and)43
b(optimizing)f(the)h(econom)m(y)f(w)m(ere)h(pro)m(vided)g(almost)g(250)
g(y)m(ears)g(ago)0 1869 y(b)m(y)28 b(a)f(F)-8 b(renc)m(h)26
b(economist.)38 b(In)27 b(his)g Ff(T)-7 b(able)i(au)1550
1846 y(\023)1536 1869 y(Ec)g(onomique,)28 b Fg(written)e(in)h(1758,)0
1978 y(F)-8 b(ran\030)-41 b(cois)20 b(Quesna)m(y)g(\(1694{1774\))d
(explained)j(the)f(in)m(terrelation)g(of)i(the)f(roles)0
2088 y(of)j(the)f(landlord,)i(p)s(easan)m(t,)f(and)g(artisan)f(in)i
(eigh)m(teen)m(th-cen)m(tury)c(F)-8 b(rance)22 b(b)m(y)0
2198 y(considering)31 b(sev)m(eral)i(factors)e(separately)-8
b(.)47 b(F)-8 b(or)33 b(example,)g(there)e(are)h(\\The)0
2307 y(Economical)20 b(T)-8 b(ableau)21 b(considered)e(relativ)m(e)i
(to)f(National)h(Cash,")g(and)f(\\The)0 2417 y(Economical)g(T)-8
b(ableau)20 b(considered)f(in)j(the)e(Estimation)g(of)h(the)f(Pro)s
(duce)f(and)0 2526 y(Capital)30 b(Sto)s(c)m(k)f(of)h(Ev)m(ery)h(Kind)f
(of)g(Ric)m(hes.")183 2636 y(The)42 b(nineteen)m(th-cen)m(tury)d(F)-8
b(renc)m(h)42 b(mathematician)e(Jean-Baptiste-)0 2746
y(Joseph)d(F)-8 b(ourier)37 b(\(1768{1830\))d(had)k(some)f(kno)m
(wledge)g(of)h(the)f(sub)5 b(ject)36 b(of)0 2856 y(linear)c
(programming,)h(as)f(evidenced)f(b)m(y)j(his)f(w)m(ork)g(in)g(linear)f
(inequalities)0 2965 y(as)41 b(early)g(as)f(1826)g(\(see)g
Fi(x)p Fg(A.10)h(in)g(the)f(App)s(endix\).)72 b(He)42
b(also)e(suggested)0 3075 y(the)34 b(simplex)h(metho)s(d)e(for)h
(solving)h(linear)f(programs)g(arising)g(from)h(linear)0
3184 y(appro)m(ximation)i(\(see)h(Chapter)e(8\).)65 b(In)38
b(the)g(late)f(1800s,)j(the)d(writings)h(of)0 3294 y(the)23
b(F)-8 b(renc)m(h)22 b(economist)g(L.)i(W)-8 b(alras)24
b(\(1834{1910\))19 b(demonstrated)i(his)i(use)g(of)0
3404 y(linear)30 b(programming.)40 b(Ho)m(w)m(ev)m(er,)31
b(with)g(a)f(few)g(other)f(notable)g(exceptions,)0 3513
y(suc)m(h)41 b(as)f(Kan)m(toro)m(vic)m(h's)h(1939)f(monograph)e
Ff(Mathematic)-5 b(al)42 b(Metho)-5 b(ds)43 b(for)0 3623
y(Or)-5 b(ganization)36 b(and)f(Planning)h(of)g(Pr)-5
b(o)g(duction,)34 b Fg(there)d(w)m(as)j(comparativ)m(ely)0
3732 y(little)28 b(atten)m(tion)e(paid)h(to)h(linear)f(programming)g
(preceding)e(W)-8 b(orld)28 b(W)-8 b(ar)28 b(I)s(I.)183
3842 y(The)37 b(fortuitous)f(sync)m(hronization)f(of)j(the)f(adv)m(en)m
(t)g(of)h(the)e(computer)0 3952 y(and)44 b(George)f(B.)i(Dan)m(tzig's)f
(rein)m(v)m(en)m(tion)h(of)f(the)g(simplex)h(algorithm)f(in)0
4062 y(1947)35 b(con)m(tributed)g(to)h(the)f(dizzyingly)i(explosiv)m(e)
g(dev)m(elopmen)m(t)e(of)i(linear)0 4171 y(programming)42
b(with)i(applications)e(to)i(economics,)i(business,)h(industrial)0
4281 y(engineering,)36 b(actuarial)f(sciences,)j(op)s(erations)33
b(researc)m(h,)k(and)f(game)g(the-)0 4390 y(ory)-8 b(.)76
b(Progress)41 b(in)h(linear)f(programming)g(is)h(notew)m(orth)m(y)f
(enough)f(to)h(b)s(e)0 4500 y(rep)s(orted)32 b(in)j(the)f
Ff(New)j(Y)-7 b(ork)36 b(Times.)55 b Fg(In)35 b(1970)f(P)-8
b(.)36 b(Sam)m(uelson)e(\(b.)55 b(1915\))0 4610 y(w)m(as)41
b(a)m(w)m(arded)e(the)h(Nob)s(el)g(Prize)g(in)h(Economics,)h(and)e(in)h
(1975)e(L.)i(Kan-)0 4719 y(toro)m(vic)m(h)26 b(\(1912{1986\))d(and)i
(T.)i(C.)g(Ko)s(opmans)e(\(1910{1985\))e(receiv)m(ed)i(the)1327
4938 y(1)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 91 a Fe(2)91 b Ff(Chapter)32
b(1)g(Intr)-5 b(o)g(duction)0 311 y Fg(Nob)s(el)24 b(Prize)f(in)i
(Economics)e(for)h(their)f(w)m(ork)h(in)h(linear)f(programming.)37
b(The)0 420 y(sub)5 b(ject)20 b(of)h(linear)f(programming)g(ev)m(en)h
(made)g(its)g(w)m(a)m(y)h(in)m(to)f(Len)g(Deigh)m(ton's)0
530 y(susp)s(ense)28 b(sp)m(y)j(story)-8 b(,)31 b Ff(The)h(Bil)5
b(lion)34 b(Dol)5 b(lar)32 b(Br)-5 b(ain,)30 b Fg(published)g(in)g
(1966:)183 639 y(\\I)k(don't)g(w)m(an)m(t)h(to)f(b)s(ore)f(y)m(ou,")i
(Harv)m(ey)g(said,)h(\\but)e(y)m(ou)h(should)f(un-)0
749 y(derstand)28 b(that)h(these)g(heaps)g(of)h(wire)h(can)e
(practically)h(think|linear)f(pro-)0 858 y(gramming|whic)m(h)k(means)f
(that)g(instead)g(of)h(going)g(through)e(all)j(alterna-)0
968 y(tiv)m(es)d(they)e(ha)m(v)m(e)i(a)f(h)m(unc)m(h)g(whic)m(h)g(is)h
(the)e(righ)m(t)h(one.")183 1105 y Ff(Optimization)e(pr)-5
b(oblems)25 b Fg(come)g(in)h(t)m(w)m(o)g(\015a)m(v)m(ors:)39
b(maximization)25 b(prob-)0 1215 y(lems)39 b(and)f(minimization)h
(problems.)66 b(In)38 b(a)h(maximization)f(problem,)j(w)m(e)0
1324 y(w)m(an)m(t)27 b(to)f(maximize)g(a)h(function)e(o)m(v)m(er)i(a)f
(set,)h(and)f(in)h(a)f(minimization)h(prob-)0 1434 y(lem,)k(w)m(e)f(w)m
(an)m(t)h(to)e(minimize)i(a)f(function)f(o)m(v)m(er)h(a)g(set,)183
1543 y(In)39 b(b)s(oth)f(cases,)k(the)c(function)g(is)j(real)e(v)-5
b(alued)39 b(and)g(it)h(is)g(called)f(the)0 1653 y Ff(obje)-5
b(ctive)35 b(function.)46 b Fg(The)31 b(set)h(is)g(called)f(the)g
Ff(fe)-5 b(asible)35 b(r)-5 b(e)g(gion)33 b Fg(or)e(the)g(set)g(of)0
1763 y Ff(fe)-5 b(asible)38 b(solutions.)55 b Fg(T)-8
b(o)35 b(solv)m(e)g(an)g(optimization)e(\(maximization)h(or)g(min-)0
1872 y(imization\))42 b(problem)h(means)g(usually)g(to)g(\014nd)g(b)s
(oth)e(the)i Ff(optimal)h(value)0 1982 y Fg(\(maximal)g(or)f(minimal)i
(v)-5 b(alue,)47 b(resp)s(ectiv)m(ely\))42 b(o)m(v)m(er)h(the)g
(feasible)g(region)0 2091 y(and)30 b(an)g Ff(optimal)j(solution)f
Fg(or)e Ff(optimizer)g Fg([i.e.,)j(ho)m(w)e(\(where\))d(to)i(reac)m(h)g
(the)0 2201 y(optimal)36 b(v)-5 b(alue,)37 b(if)f(it)g(is)h(p)s
(ossible].)57 b(It)36 b(is)g(not)f(required)g(unless)h(otherwise)0
2311 y(instructed)22 b(to)h(\014nd)g(all)i(optimal)e(solutions.)38
b(This)25 b(is)f(di\013eren)m(t)f(from)h(solving)0 2420
y(a)32 b(system)f(of)g(linear)h(equations,)f(where)f(a)i(complete)e
(answ)m(er)h(describ)s(es)f(all)0 2530 y(solutions.)183
2639 y(The)43 b(optimal)g(v)-5 b(alue)43 b(is)i(also)e(kno)m(wn)h(as)g
Fd(optimum)h Fg(or)e Fd(extr)s(emum:)0 2749 y Fg(Dep)s(ending)30
b(on)i(the)f(\015a)m(v)m(or,)j(the)d(terms)h Fd(maximum)i
Fg(\(max)e(for)g(short\))f(and)0 2858 y Fd(minimum)46
b Fg(\(min)f(for)f(short\))f(are)h(also)g(used.)83 b(The)44
b(set)g(of)g(all)i(optimal)0 2968 y(solutions)28 b(\(maximizers)g(or)g
(minimizers\))g(is)h(called)f(the)g Ff(optimality)j(r)-5
b(e)g(gion.)183 3078 y Fg(No)m(w)31 b(w)m(e)f(consider)f(a)h(simple)h
(example.)183 3187 y(Imagine)g(that)g(y)m(ou)h(are)g(ask)m(ed)g(to)f
(solv)m(e)i(the)e(follo)m(wing)i(optimization)0 3297
y(problem:)183 3355 y Fc(\032)273 3429 y Fg(Maximize)278
b Fd(x)266 3538 y Fg(sub)5 b(ject)29 b(to)90 b(2)25 b
Fi(\024)h Fd(x)f Fi(\024)h Fg(3)p Fd(:)183 3670 y Fg(Clearly)40
b(the)g(goal)g(is)h(to)e(\014nd)h(the)g(largest)f(v)-5
b(alue)40 b(for)g Fd(x;)h Fg(giv)m(en)g(that)0 3780 y(this)35
b(v)-5 b(ariable)35 b(is)h(limited)g(as)f(to)g(the)g(v)-5
b(alues)35 b(it)g(can)g(assume.)56 b(Since)35 b(these)0
3889 y(limitations)k(are)g(explicitly)h(stated)d(as)i(functions)f(of)h
(the)g(v)-5 b(ariable)38 b(under)0 3999 y(consideration,)d(called)g
(the)g Ff(obje)-5 b(ctive)38 b(variable,)f Fg(there)d(is)i(no)g
(di\016cult)m(y)g(in)0 4109 y(solving)f(the)e(problem;)k(just)d(tak)m
(e)g(the)f(maxim)m(um)j(v)-5 b(alue.)53 b(Th)m(us,)36
b(y)m(ou)f(can)0 4218 y(correctly)g(conclude)g(that)g(the)h(maxim)m(um)
h(v)-5 b(alue)36 b(for)h Fd(x)g Fg(is)g(3,)h(attained)d(at)0
4328 y Fd(x)26 b Fg(=)f(3)p Fd(:)183 4437 y Fg(Ho)m(w)m(ev)m(er,)35
b(it)f(is)g(more)f(often)f(the)h(case)g(that)f(the)h(range)f(of)h(v)-5
b(alues)34 b(for)0 4547 y(the)29 b(ob)5 b(jectiv)m(e)29
b(v)-5 b(ariable)30 b(is)h(giv)m(en)f(implicitly)i(b)m(y)f(placing)e
(limitations)h(on)p eop end
%%Page: 3 3
TeXDict begin 3 2 bop 1177 91 a Fi(x)o Ff(1.)42 b(What)32
b(Is)i(Line)-5 b(ar)32 b(Pr)-5 b(o)g(gr)g(amming?)90
b Fe(3)0 311 y Fg(another)34 b(v)-5 b(ariable)36 b(or)g(other)f(v)-5
b(ariables)35 b(related)g(with)h(the)f(ob)5 b(jectiv)m(e)36
b(v)-5 b(ari-)0 420 y(able.)39 b(These)27 b(v)-5 b(ariables)26
b(are)h(called)f Ff(de)-5 b(cision)58 b Fg(or)27 b Ff(c)-5
b(ontr)g(ol)30 b(variables.)39 b Fg(These)0 530 y(v)-5
b(ariables)35 b(are)h(under)e(our)i(con)m(trol:)51 b(W)-8
b(e)36 b(are)f(free)g(to)h(decide)e(their)h(v)-5 b(alues)0
639 y(sub)5 b(ject)26 b(to)h(giv)m(en)h(constrain)m(ts.)38
b(They)27 b(are)g(di\013eren)m(t)g(from)g(data)f(that)h(form)0
749 y(an)40 b(input)f(for)h(our)f(optimization)g(problem.)69
b(The)40 b(ob)5 b(jectiv)m(e)39 b(function)g(is)0 858
y(alw)m(a)m(ys)h(a)g(function)d(of)j(decision)e(v)-5
b(ariables.)68 b(Sometimes)38 b(it)i(has)f(a)g(name)0
968 y(called)30 b(the)f Ff(obje)-5 b(ctive)33 b(variable.)183
1078 y Fg(F)-8 b(or)34 b(instance,)i(in)f(a)g(problem)f(suc)m(h)h(as)g
(\014nding)f(whic)m(h)i(rectangles)c(of)0 1187 y(\014xed)c(p)s
(erimeter)f(encompass)g(the)h(largest)f(area,)i(the)f(ob)5
b(jectiv)m(e)27 b(v)-5 b(ariable)29 b(is)0 1297 y(\\area,")23
b(and)h(the)g(decision)g(v)-5 b(ariables)24 b(are)g Fd(l)k
Fg(=)d(length)e(of)i(the)e(rectangle)g(and)0 1406 y Fd(w)29
b Fg(=)i(width)g(of)f(the)g(rectangle.)40 b(In)31 b(general,)f(when)g
(the)g(ob)5 b(jectiv)m(e)30 b(v)-5 b(ariable)0 1516 y(is)28
b(giv)m(en)f(as)g(a)g(function)f(of)h(decision)f(v)-5
b(ariables,)28 b(w)m(e)f(use)g(the)f(term)h Ff(obje)-5
b(ctive)0 1626 y(function)35 b Fg(to)e(describ)s(e)e(the)i(function)f
(w)m(e)i(w)m(an)m(t)g(to)f(optimize.)50 b(These)32 b(limi-)0
1735 y(tations)f(on)h(the)g(decision)g(v)-5 b(ariables,)33
b(ho)m(w)m(ev)m(er)f(they)g(migh)m(t)g(b)s(e)g(describ)s(ed,)0
1845 y(are)d(called)h(the)f Ff(c)-5 b(onstr)g(aints)33
b Fg(or)c Ff(r)-5 b(estr)g(aints)32 b Fg(of)e(the)f(problem.)183
1954 y(Th)m(us,)24 b(a)d Ff(mathematic)-5 b(al)24 b(pr)-5
b(o)g(gr)g(am)21 b Fg(is)h(an)f(optimization)g(problem)f(where)0
2064 y(the)34 b(ob)5 b(jectiv)m(e)34 b(function)g(is)i(a)f(function)e
(of)i(real)g(v)-5 b(ariables)35 b(\(decision)f(v)-5 b(ari-)0
2174 y(ables\))41 b(and)g(the)g(feasible)g(region)g(is)h(giv)m(en)g(b)m
(y)h(conditions)d(\(constrain)m(ts\))0 2283 y(on)33 b(the)f(v)-5
b(ariables.)50 b(So)33 b(a)g(feasible)g(solution)g(is)h(a)f(set)g(of)g
(v)-5 b(alues)33 b(for)g(all)h(the)0 2393 y(decision)20
b(v)-5 b(ariables)20 b(satisfying)g(all)h(the)e(constrain)m(ts)g(in)i
(the)e(problem.)37 b(Math-)0 2502 y(ematical)29 b(programs)g(are)h
(addressed)e(in)i Ff(mathematic)-5 b(al)33 b(pr)-5 b(o)g(gr)g(amming.)
183 2612 y Fg(What)32 b(is)j Ff(line)-5 b(ar)36 b(pr)-5
b(o)g(gr)g(amming)33 b Fg(then?)50 b(Linear)33 b(programming)g(is)h
(the)0 2721 y(part)39 b(of)h(mathematical)e(programming)h(that)g
(studies)h(optimization)e(\(ex-)0 2831 y(tremal\))29
b(problems)g(ha)m(ving)h(ob)5 b(jectiv)m(e)29 b(functions)f(and)h
(constrain)m(ts)g(of)g(par-)0 2941 y(ticularly)k(simple)h(form.)51
b(Mathematically)-8 b(,)34 b(a)f Ff(line)-5 b(ar)36 b(pr)-5
b(o)g(gr)g(am)33 b Fg(is)h(an)f(opti-)0 3050 y(mization)h(problem)h(of)
f(the)g(follo)m(wing)i(form:)50 b(Maximize)35 b(\(or,)h(sometimes,)0
3160 y(minimize\))42 b(an)f Ff(a\016ne)i(function)g Fg(sub)5
b(ject)40 b(to)h(a)h(\014nite)f(set)g(of)g Ff(line)-5
b(ar)44 b(c)-5 b(on-)0 3269 y(str)g(aints.)83 b Fg(Con)m(trary)43
b(to)g(mo)s(dern)g(p)s(erception,)h(the)f(w)m(ord)h Ff(pr)-5
b(o)g(gr)g(amming)0 3379 y Fg(here)23 b(do)s(es)h(not)f(refer)h(to)g
(computer)e(programming.)37 b(In)25 b(our)f(con)m(text,)g(whic)m(h)0
3489 y(go)s(es)i(bac)m(k)h(to)f(military)i(planning,)f
Fd(pr)s(og)s(r)s(amming)k Fg(means)26 b(something)g(lik)m(e)0
3598 y(\\detailed)j(planning.")183 3708 y(No)m(w)35 b(w)m(e)f(de\014ne)
f(the)g(terms)g Ff(a\016ne)j(function)f Fg(and)f Ff(line)-5
b(ar)36 b(c)-5 b(onstr)g(aint)p Fg(.)0 3817 y(In)43 b(this)g(b)s(o)s
(ok,)i(unless)e(indicated)e(otherwise,)k(a)e Fd(number)j
Fg(means)c(a\\real)0 3927 y(n)m(um)m(b)s(er")29 b(and)h(a)g(function)f
(means)g(a)h(\\real-v)-5 b(alued)29 b(function.")0 4062
y Fe(De\014nition)c(1.1.)36 b Fg(A)22 b(function)d Fd(f)31
b Fg(of)20 b(v)-5 b(ariables)20 b Fd(x)1709 4076 y Fb(1)1751
4062 y Fd(;)15 b(:)g(:)g(:)i(;)e(x)2005 4076 y Fa(n)2076
4062 y Fg(is)22 b(called)e(a)h Ff(line)-5 b(ar)0 4171
y(form)28 b Fg(if)i(it)f(can)f(b)s(e)g(written)g(as)h
Fd(c)1149 4185 y Fb(1)1190 4171 y Fd(x)1242 4185 y Fb(1)1301
4171 y Fg(+)18 b Fi(\001)d(\001)g(\001)k Fg(+)f Fd(c)1643
4185 y Fa(n)1693 4171 y Fd(x)1745 4185 y Fa(n)1794 4171
y Fd(;)30 b Fg(where)e(the)g(co)s(e\016cien)m(ts)0 4281
y Fd(c)40 4295 y Fa(i)103 4281 y Fg(are)33 b(giv)m(en)g(real)g(n)m(um)m
(b)s(ers)g(\(constan)m(ts\).)46 b(A)34 b(function)e Fd(f)43
b Fg(is)34 b(called)e Ff(a\016ne)0 4390 y Fg(if)f(it)f(is)h(the)e(sum)h
(of)g(a)h(linear)e(form)h(and)g(a)g(constan)m(t.)p 2661
4382 40 40 v 183 4500 a(Of)38 b(course,)i(it)f(is)g(not)f(necessary)f
(to)h(denote)e(these)h(v)-5 b(ariables)39 b(as)f Fd(x)2644
4514 y Fa(i)2675 4500 y Fd(;)0 4610 y Fg(the)f(co)s(e\016cien)m(ts)e
(as)j Fd(c)794 4624 y Fa(i)824 4610 y Fd(;)g Fg(or)g(the)e(function)g
(as)i Fd(f)5 b(:)38 b Fg(F)-8 b(or)37 b(example,)i Fd(g)s
Fg(\()p Fd(x;)15 b(y)s Fg(\))38 b(=)0 4719 y(2)p Fd(x)19
b Fi(\000)g Fd(a)255 4686 y Fb(2)297 4719 y Fd(y)s Fg(,)30
b(where)f Fd(a)h Fg(is)g(some)f(\014xed)g(real)h(n)m(um)m(b)s(er,)f(is)
i(a)e(linear)h(form)f(in)h(t)m(w)m(o)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 91 a Fe(4)91 b Ff(Chapter)32
b(1)g(Intr)-5 b(o)g(duction)0 311 y Fg(v)g(ariables,)44
b(whic)m(h)e(are)f(denoted)e Fd(x)j Fg(and)f Fd(y)k Fg(instead)40
b(of)i Fd(x)2078 325 y Fb(1)2161 311 y Fg(and)e Fd(x)2401
325 y Fb(2)2443 311 y Fd(:)i Fg(Note)0 420 y(that)34
b(if)i Fd(a)g Fg(w)m(ere)f(a)h(v)-5 b(ariable)35 b(and)g
Fd(y)k Fg(w)m(ere)c(a)g(\014xed)g(nonzero)f(n)m(um)m(b)s(er,)i(then)0
530 y Fd(f)10 b Fg(\()p Fd(x;)15 b(a)p Fg(\))25 b(=)g(2)p
Fd(x)16 b Fi(\000)f Fd(a)636 497 y Fb(2)677 530 y Fd(y)31
b Fg(is)e(not)e(a)h(linear)f(form)g(in)i Fd(x)f Fg(and)f
Fd(a)h Fg(\(see)f(Problem)g(1.2\).)0 639 y(Here)39 b(are)f(three)f
(a\016ne)h(functions)g(of)g(t)m(w)m(o)i(v)-5 b(ariables,)40
b Fd(x;)15 b(y)44 b Fg(:)c Fd(x)26 b Fi(\000)g Fg(4)p
Fd(y)j Fi(\000)d Fg(3)p Fd(;)0 749 y(y)d Fg(+)e(2)p Fd(;)30
b(x)21 b Fg(+)f Fd(y)s(:)0 890 y Fe(Problem)36 b(1.2.)45
b Fg(Sho)m(w)31 b(that)f(the)h(function)f Fd(g)s Fg(\()p
Fd(x;)15 b(a)p Fg(\))28 b(=)g(2)p Fd(x)21 b Fi(\000)g
Fd(a)2240 857 y Fb(2)2281 890 y Fd(y)s(;)32 b Fg(where)f
Fd(y)0 1000 y Fg(is)g(a)f(\014xed)g Ff(nonzer)-5 b(o)30
b Fg(n)m(um)m(b)s(er,)g(is)h(not)e(a)i(linear)e(form)h(in)h
Fd(x)g Fg(and)e Fd(a:)0 1112 y Fe(Solution.)65 b Fg(Supp)s(ose,)39
b(to)e(the)h(con)m(trary)-8 b(,)39 b(that)e Fd(g)s Fg(\()p
Fd(x;)15 b(a)p Fg(\))39 b(=)g(2)p Fd(x)25 b Fi(\000)h
Fd(a)2427 1079 y Fb(2)2468 1112 y Fd(y)41 b Fg(is)e(a)0
1221 y(linear)31 b(form)f(in)i Fd(x)f Fg(and)f Fd(a)p
Fg(;)i(that)e(is,)i Fd(g)s Fg(\()p Fd(x;)15 b(a)p Fg(\))26
b(=)h(2)p Fd(x)21 b Fi(\000)g Fd(a)1904 1188 y Fb(2)1945
1221 y Fd(y)30 b Fg(=)c Fd(c)2157 1235 y Fb(1)2198 1221
y Fd(x)21 b Fg(+)f Fd(c)2402 1235 y Fb(2)2443 1221 y
Fd(a)31 b Fg(with)0 1331 y(co)s(e\016cien)m(ts)38 b Fd(c)512
1345 y Fb(1)553 1331 y Fd(;)31 b(c)649 1345 y Fb(2)729
1331 y Fg(indep)s(enden)m(t)38 b(of)i Fd(x)h Fg(and)e
Fd(a:)i Fg(Then)f Fd(g)s Fg(\(1)p Fd(;)15 b Fg(0\))41
b(=)h(2)f(=)i Fd(c)2660 1345 y Fb(1)0 1441 y Fg(and)34
b Fd(g)s Fg(\(0)p Fd(;)15 b Fg(1\))31 b(=)h Fi(\000)p
Fd(y)j Fg(=)d Fd(c)861 1455 y Fb(2)901 1441 y Fd(:)j
Fg(Th)m(us,)h Fd(g)s Fg(\()p Fd(x;)15 b(a)p Fg(\))32
b(=)g(2)p Fd(x)23 b Fi(\000)g Fd(a)1880 1407 y Fb(2)1921
1441 y Fd(y)36 b Fg(=)c(2)p Fd(x)23 b Fi(\000)g Fd(y)s(a)p
Fg(,)36 b(hence)0 1550 y Fd(a)48 1517 y Fb(2)89 1550
y Fd(y)j Fg(=)d Fd(y)s(a)h Fg(for)f(all)h Fd(a:)g Fg(T)-8
b(aking)37 b Fd(a)e Fg(=)h(2)p Fd(;)h Fg(w)m(e)g(see)e(that)g
Fd(y)k Fg(=)d(0)p Fd(:)h Fg(But,)g(since)f Fd(y)0 1660
y Fg(cannot)e(equal)h(zero)f(b)m(y)i(h)m(yp)s(othesis,)g(w)m(e)g(ha)m
(v)m(e)g(arriv)m(ed)f(at)g(our)g(hop)s(ed-for)0 1769
y(con)m(tradiction.)p 2661 1761 40 40 v 183 1881 a(The)21
b(term)h Ff(line)-5 b(ar)25 b(function)f Fg(means)d(\\linear)h(form")f
(in)i(some)f(textb)s(o)s(oks)0 1991 y(and)29 b(\\a\016ne)f(function")f
(in)j(others.)39 b(The)29 b(term)f Ff(line)-5 b(ar)33
b(functional)d Fg(in)g(linear)0 2100 y(programming)f(means)g(\\linear)h
(form.")183 2212 y Ff(Line)-5 b(ar)37 b(c)-5 b(onstr)g(aints)37
b Fg(come)e(in)h(three)d(\015a)m(v)m(ors,)38 b(of)d(t)m(yp)s(e)f(=)p
Fd(;)52 b Fi(\025)p Fd(;)36 b Fg(or)f Fi(\024)f Fd(:)0
2322 y Fg(The)f(linear)h(constrain)m(ts)e(of)h(t)m(yp)s(e)g(=)h(are)f
(familiar)h(linear)g(equations,)g(that)0 2432 y(is,)d(the)e(equalities)
h(of)g(the)g(form)574 2571 y(an)g(a\016ne)f(function)g(=)h(an)g
(a\016ne)g(function.)183 2712 y(Most)f(often,)g(they)h(come)f(in)i(the)
e(standard)f(form)807 2852 y(a)i(linear)g(form)g(=)g(a)g(constan)m(t.)
183 2993 y(F)-8 b(or)39 b(illustration,)j Fd(x)f Fg(=)g(2)p
Fd(;)f(x)27 b Fi(\000)f Fd(y)45 b Fg(=)c(0,)h(5)p Fd(y)i
Fg(=)d Fi(\000)p Fg(7)f(are)e(three)h(linear)0 3103 y(equations)29
b(for)h(t)m(w)m(o)g(v)-5 b(ariables)30 b Fd(x;)15 b(y)34
b Fg(written)29 b(in)h(standard)e(form,)j(while)f(2)25
b(=)0 3212 y Fd(x;)36 b(x)e Fg(=)g Fd(y)s(;)i Fg(3)p
Fd(y)26 b Fg(+)e Fd(x)f Fg(+)h(3)34 b(=)f Fd(x)24 b Fi(\000)g
Fg(2)p Fd(y)i Fi(\000)e Fg(4)35 b(are)f(the)h(same)g(equations)f
(written)0 3322 y(di\013eren)m(tly)-8 b(.)183 3434 y(Tw)m(o)23
b(other)f(t)m(yp)s(es)g(of)h(linear)g(constrain)m(ts)e(are)i
(inequalities)f(of)h(the)g(form)432 3573 y(an)29 b(a\016ne)h(function)f
(\()p Fi(\024)h Fg(or)f Fi(\025)p Fg(\))h(an)g(a\016ne)g(function.)183
3715 y(Often)f(they)g(are)h(written)f(as)664 3854 y(a)i(linear)e(form)h
(\()p Fi(\024)g Fg(or)g Fi(\025)p Fg(\))g(a)g(constan)m(t.)183
3995 y(Th)m(us,)42 b(a)e(linear)g(constrain)m(t)e(consists)h(of)g(t)m
(w)m(o)h(a\016ne)f(functions)g(\(the)0 4105 y(left-hand)g(side)h(and)f
(the)g(righ)m(t-hand)h(side\))f(connected)e(b)m(y)k(one)e(of)h(three)0
4215 y(sym)m(b)s(ols:)47 b(=)p Fd(;)j Fi(\024)p Fd(;)f
Fi(\025)p Fg(.)h(Strict)32 b(linear)h(inequalities)g(suc)m(h)h(as)f
Fd(x)e(>)f Fg(0)j(are)g(not)0 4324 y(considered)28 b(to)i(b)s(e)f
(linear)h(constrain)m(ts.)0 4466 y Fe(Example)36 b(1.3)183
4578 y Fg(\(i\))29 b Fd(y)g Fg(=)c(sin)16 b(5)30 b(is)h(a)f(linear)g
(constrain)m(t)e(on)i(the)f(v)-5 b(ariable)30 b Fd(y)s(:)183
4719 y Fg(\(ii\))g Fd(x)25 b Fi(\025)h Fg(0)k(is)h(a)f(linear)g
(constrain)m(t)e(on)i(the)f(v)-5 b(ariable)30 b Fd(x:)p
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 1177 91 a Fi(x)o Ff(1.)42 b(What)32
b(Is)i(Line)-5 b(ar)32 b(Pr)-5 b(o)g(gr)g(amming?)90
b Fe(5)183 311 y Fg(\(iii\))30 b(2)p Fd(x)19 b Fg(+)g(3)p
Fd(y)28 b Fi(\024)d Fg(7)30 b(is)g(a)f(linear)h(constrain)m(t)e(on)h
(the)f(v)-5 b(ariables)30 b Fd(x)g Fg(and)f Fd(y)s(:)183
449 y Fg(Note,)h(ho)m(w)m(ev)m(er,)g(that)183 587 y(\(iv\))g
Fd(y)23 b Fg(+)d(sin)c Fd(x)25 b Fg(=)h(1)0 725 y(is)31
b(not)f(a)g(linear)h(constrain)m(t)e(on)h(the)f(v)-5
b(ariables)31 b Fd(x)g Fg(and)f Fd(y)s Fg(,)h(since)f(sin)15
b Fd(x)31 b Fg(is)h Ff(not)0 834 y Fg(a)e(linear)g(form)g(in)g
Fd(x:)0 972 y Fe(De\014nition)g(1.4.)38 b Fg(A)26 b Ff(line)-5
b(ar)29 b(pr)-5 b(o)g(gr)g(am)24 b Fg(\(LP)i(for)f(short\),)g(or)g
Ff(line)-5 b(ar)29 b(pr)-5 b(o)g(gr)g(am-)0 1082 y(ming)29
b(pr)-5 b(oblem,)26 b Fg(is)h(an)m(y)g(optimization)d(problem)i(where)f
(w)m(e)h(are)g(required)f(to)0 1191 y(maximize)34 b(\(or)e(minimize\))i
(an)f(a\016ne)f(function)g(sub)5 b(ject)32 b(to)h(a)g
Ff(\014nite)i Fg(set)d(of)0 1301 y(linear)e(constrain)m(ts.)p
2661 1293 40 40 v 183 1411 a(F)-8 b(or)30 b(example,)g(the)f(follo)m
(wing)h(is)h(a)f(linear)g(program:)188 1562 y Fc(8)188
1644 y(>)188 1671 y(>)188 1699 y(<)188 1863 y(>)188 1891
y(>)188 1918 y(:)303 1618 y Fg(minimize)111 b Fd(f)10
b Fg(\()p Fd(x)917 1632 y Fb(1)957 1618 y Fd(;)15 b(:)g(:)g(:)j(;)d(x)
1212 1632 y Fa(n)1262 1618 y Fg(\))25 b(=)g Fd(c)1459
1632 y Fb(1)1500 1618 y Fd(x)1552 1632 y Fb(1)1613 1618
y Fg(+)c Fi(\001)15 b(\001)g(\001)22 b Fg(+)e Fd(c)1963
1632 y Fa(n)2012 1618 y Fd(x)2064 1632 y Fa(n)2134 1618
y Fg(+)h Fd(d;)284 1801 y Fg(sub)5 b(ject)29 b(to)939
1686 y Fa(n)896 1714 y Fc(X)902 1908 y Fa(i)p Fb(=1)1043
1801 y Fd(a)1091 1815 y Fa(j)t(i)1171 1801 y Fd(x)1223
1815 y Fa(i)1278 1801 y Fi(\024)d Fd(b)1414 1815 y Fa(j)1544
1801 y Fg(for)k Fd(j)g Fg(=)25 b(1)p Fd(;)15 b(:)g(:)g(:)i(;)e(m)1067
1990 y(x)1119 2004 y Fa(i)1175 1990 y Fi(\025)26 b Fg(0)91
b(for)30 b Fd(i)25 b Fg(=)h(1)p Fd(;)15 b(:)g(:)g(:)i(;)e(n)2512
1804 y Fg(\(1)p Fd(:)p Fg(5\))0 2197 y(where)41 b Fd(m;)15
b(n)42 b Fg(are)f(giv)m(en)h(natural)f(n)m(um)m(b)s(ers,)j
Fd(d;)15 b(c)1775 2211 y Fa(i)1805 2197 y Fd(;)g(b)1884
2211 y Fa(j)1924 2197 y Fd(;)g(a)2012 2211 y Fa(j;i)2137
2197 y Fg(are)41 b(constan)m(ts,)0 2306 y(and)32 b Fd(x)232
2320 y Fa(i)296 2306 y Fg(are)g(decision)g(\(con)m(trol\))f(v)-5
b(ariables)33 b(\(unkno)m(wns\).)47 b(W)-8 b(e)33 b(call)g(\(1.5\))f(a)
0 2416 y(linear)e(program)f(in)h Fd(canonical)j Fg(form.)183
2526 y(The)e(\014nite)g(set)h(of)f(constrain)m(ts)g(in)h(De\014nition)f
(1.4)h(can)f(b)s(e)g(empt)m(y)-8 b(.)46 b(In)0 2635 y(other)c(w)m
(ords,)k(the)d(n)m(um)m(b)s(er)f(of)h(constrain)m(ts)f(is)i(allo)m(w)m
(ed)f(to)g(b)s(e)f(zero.)79 b(If)0 2745 y(there)31 b(are)h(no)g
(constrain)m(ts)f(in)i(an)f(optimization)f(problem,)i(w)m(e)g(talk)f
(ab)s(out)0 2855 y Ff(unc)-5 b(onstr)g(aine)g(d)33 b
Fg(optimization.)41 b(Note)31 b(that,)f(unless)h(otherwise)e
(instructed,)0 2964 y(w)m(e)42 b(cannot)f(ignore)g(an)m(y)h(of)g(the)f
(giv)m(en)h(constrain)m(ts)f(in)h(an)g(optimization)0
3074 y(problem.)183 3184 y(Recall)31 b(that)e(constan)m(t)g(terms)h
(are)h(not)f(allo)m(w)m(ed)h(in)g(linear)g(forms,)g(but)0
3293 y(w)m(e)21 b(allo)m(w)h(constan)m(t)d(terms)h(in)h(the)f(ob)5
b(jectiv)m(e)20 b(functions)f(of)i(linear)f(programs.)0
3403 y(Th)m(us,)39 b(according)d(to)g(our)h(de\014nitions,)h(the)e
(function)f Fd(x)25 b Fi(\000)g Fg(2)p Fd(y)j Fg(+)d(3)37
b(of)g(t)m(w)m(o)0 3513 y(v)-5 b(ariables)25 b Fd(x)h
Fg(and)f Fd(y)k Fg(is)d(not)f(a)g(linear)h(form)f(but)g(it)g(is)h(an)g
(a\016ne)f(function,)g(and)0 3622 y(it)g(can)f(b)s(e)g(the)g(ob)5
b(jectiv)m(e)23 b(function)h(of)g(a)h(linear)f(program.)38
b(Some)24 b(textb)s(o)s(oks)0 3732 y(mak)m(e)30 b(di\013eren)m(t)g(c)m
(hoices)f(in)i(de\014nitions.)183 3842 y(It)h(is)h(p)s(ossible)f(to)g
(ha)m(v)m(e)h(an)f(optimization)f(problem)h(or)h(ev)m(en)f(a)h(linear)0
3952 y(program)26 b(for)i(whic)m(h)g(there)e(are)h(no)g(feasible)h
(solutions)f(\(see)g(Example)g(1.6\).)0 4061 y(Suc)m(h)20
b(a)g(problem)f(is)i(called)f Fd(inf)10 b(easibl)r(e)20
b Fg(or)g Fd(inconsistent:)g Fg(It)g(is)h(also)f(p)s(ossible)0
4171 y(for)i(an)g(optimization)e(problem)i(to)f(ha)m(v)m(e)i(feasible)f
(solutions)f(but)h(no)g(optimal)0 4280 y(solutions.)42
b(F)-8 b(or)30 b(example,)h(maximize)g Fd(x)h Fg(sub)5
b(ject)29 b(to)h Fd(x)d(<)f Fg(1)p Fd(:)31 b Fg(This)g(explains)0
4390 y(wh)m(y)23 b(w)m(e)h(do)e(not)g(allo)m(w)i(these)d(kind)j(of)e
(constrain)m(ts)g(in)h(linear)f(programming.)183 4500
y(An)38 b(optimization)f(problem)h(is)h(called)e Fd(unbounded)h
Fg(if)h(the)e(ob)5 b(jectiv)m(e)0 4610 y(function)25
b(tak)m(es)i(arbitrary)e(large)h(v)-5 b(alues)27 b(in)g(the)e(case)h
(of)h(the)f(maximization)0 4719 y(problem)32 b(and)g(arbitrary)g(small)
h(v)-5 b(alues)33 b(in)g(the)f(case)g(of)h(the)e(minimization)p
eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 91 a Fe(6)91 b Ff(Chapter)32
b(1)g(Intr)-5 b(o)g(duction)0 311 y Fg(problem)32 b(\(Example)g(1.7\).)
48 b(W)-8 b(e)33 b(will)h(see)e(in)i(Chapter)d(4)h(that)g(an)m(y)h
(feasible)0 420 y(linear)d(program)f(either)g(has)h(an)f(optimal)h
(solution)g(or)g(is)h(un)m(b)s(ounded.)183 540 y(Note)22
b(that)f(there)h(ma)m(y)h(b)s(e)f(more)g(than)g(one)g(optimal)g
(solution)g(\(or)g(none)0 649 y(at)f(all,)j(as)e(in)g(Example)g(1.6\))f
(among)f(the)h(feasible)g(solutions)g(\(Example)g(1.8\).)0
759 y(Ho)m(w)m(ev)m(er,)k(the)d(optimal)h(\(maximal)g(or)f(minimal\))h
(v)-5 b(alue)23 b(of)f(an)h(optimization)0 869 y(problem)32
b(is)i(unique)e(\(if)h(it)h(exists\).)48 b(Had)33 b(w)m(e)h(found)e(t)m
(w)m(o)h(di\013eren)m(t)f(v)-5 b(alues,)0 978 y(one)29
b(w)m(ould)i(b)s(e)e(b)s(etter,)f(so)i(the)g(other)e(w)m(ould)j(not)e
(b)s(e)g(optimal.)0 1135 y Fe(Example)36 b(1.6.)k Ff(A)n(n)32
b(Infe)-5 b(asible)34 b(LP)183 1228 y Fc(8)183 1311 y(>)183
1338 y(<)183 1502 y(>)183 1530 y(:)286 1279 y Fg(Maximize)242
b(4)p Fd(x)20 b Fg(+)g(5)p Fd(y)279 1388 y Fg(sub)5 b(ject)29
b(to)174 b(2)p Fd(x)20 b Fg(+)g Fd(y)29 b Fi(\024)c Fg(4)782
1498 y Fi(\000)p Fg(2)p Fd(x)20 b Fi(\000)g Fd(y)29 b
Fi(\024)c(\000)p Fg(5)769 1607 y Fd(x)h Fi(\025)f Fg(0)p
Fd(;)107 b(y)28 b Fi(\025)e Fg(0)p Fd(:)183 1750 y Fg(Note)h(that)f(if)
j Fd(x)f Fg(and)f Fd(y)k Fg(satisfy)c(the)g(constrain)m(t)f(2)p
Fd(x)31 b Fg(+)f Fd(y)f Fi(\024)c Fg(4)p Fd(;)j Fg(then,)g(b)m(y)0
1860 y(m)m(ultiplying)33 b(b)m(y)g Fi(\000)p Fg(1)p Fd(;)g
Fg(w)m(e)f(obtain)f Fi(\000)p Fg(2)p Fd(x)37 b Fi(\000)g
Fd(y)32 b Fi(\025)d(\000)p Fg(4)p Fd(:)j Fg(Ho)m(w)m(ev)m(er,)i(the)e
(second)0 1970 y(constrain)m(t)k(demands)g(that)g Fi(\000)p
Fg(2)p Fd(x)24 b Fi(\000)h Fd(y)41 b Fi(\024)c(\000)p
Fg(5)p Fd(:)g Fg(Ob)m(viously)-8 b(,)41 b(the)36 b(t)m(w)m(o)i(giv)m
(en)0 2079 y(constrain)m(ts)23 b(are)g(m)m(utually)i(exclusiv)m(e)f
(and)g(therefore)e(there)g(are)i(no)g(feasible)0 2189
y(solutions.)40 b(This)31 b(linear)f(program)e(is)j Fd(inf)10
b(easibl)r(e:)p 2661 2181 40 40 v 0 2346 a Fe(Example)36
b(1.7.)k Ff(A)n(n)32 b(Unb)-5 b(ounde)g(d)33 b(LP)183
2439 y Fc(8)183 2521 y(>)183 2549 y(<)183 2713 y(>)183
2740 y(:)286 2489 y Fg(Maximize)275 b Fd(x)20 b Fi(\000)h
Fg(2)p Fd(y)279 2599 y Fg(sub)5 b(ject)29 b(to)90 b Fi(\000)p
Fg(3)p Fd(x)20 b Fg(+)h(2)p Fd(y)28 b Fi(\024)d(\000)p
Fg(2)769 2708 y Fi(\000)p Fg(6)p Fd(x)20 b Fi(\000)h
Fg(5)p Fd(y)28 b Fi(\024)d(\000)p Fg(1)779 2818 y Fd(x)h
Fi(\025)f Fg(0)p Fd(;)107 b(y)28 b Fi(\025)e Fg(0)p Fd(:)183
2966 y Fg(This)38 b(linear)h(program)e(do)s(es)g(ha)m(v)m(e)i(feasible)
e(solutions)h(\(for)g(example)0 3076 y Fd(x)28 b Fg(=)f(2)p
Fd(=)p Fg(3)p Fd(;)j(y)h Fg(=)c(0\),)32 b(but)f(none)f(of)i(them)e(is)i
(optimal.)45 b(F)-8 b(or)31 b(an)m(y)h(real)f(n)m(um)m(b)s(er)0
3185 y Fd(M)5 b(;)23 b Fg(there)e(is)i(a)f(feasible)g(solution)g
Fd(x;)31 b(y)26 b Fg(suc)m(h)c(that)f Fd(x)5 b Fi(\000)g
Fg(2)p Fd(y)29 b(>)c(M)5 b(:)23 b Fg(An)g(example)0 3295
y(of)h(suc)m(h)f(a)h(feasible)g(solution)f(is)h Fd(x)i
Fg(=)f(2)p Fd(=)p Fg(3)8 b(+)g Fd(M)32 b Fg(and)23 b
Fd(y)29 b Fg(=)c(0)p Fd(:)f Fg(In)g(a)g(sense,)h(there)0
3405 y(are)32 b(so)h(man)m(y)g(feasible)g(solutions)f(that)g(none)g(of)
g(them)h(ev)m(en)f(gets)g(close)h(to)0 3514 y(b)s(eing)c(optimal.)40
b(This)31 b(linear)f(program)f(is)i Ff(unb)-5 b(ounde)g(d.)p
2661 3506 V 0 3671 a Fe(Example)36 b(1.8.)k Ff(A)32 b(LP)h(with)f(Many)
h(Optimal)g(Solutions)183 3750 y Fc(\032)282 3824 y Fg(Minimize)211
b Fd(x)20 b Fg(+)h Fd(y)266 3933 y Fg(sub)5 b(ject)29
b(to)90 b Fd(x;)15 b(y)s(;)g(z)32 b Fi(\025)25 b Fg(0)p
Fd(:)183 4085 y Fg(In)f(this)g(problem)g(with)g(three)f(v)-5
b(ariables)24 b Fd(x;)15 b(y)s(;)g(z)30 b Fg(the)24 b(optimal)g
(solutions)0 4195 y(are)35 b Fd(x)f Fg(=)h Fd(y)i Fg(=)d(0)p
Fd(;)i(z)j Fi(\025)34 b Fg(0)h(arbitrary)g(nonnegativ)m(e)e(n)m(um)m(b)
s(er.)57 b(The)35 b(optimal)0 4305 y(v)-5 b(alue)30 b(is)h(0.)p
2661 4297 V 0 4462 a Fe(Example)36 b(1.9.)k Ff(A)32 b(LP)h(with)f(One)h
(Optimal)g(Solution)183 4540 y Fc(\032)282 4614 y Fg(Minimize)335
b Fd(x)20 b Fg(+)h Fd(y)i Fg(+)d Fd(z)266 4724 y Fg(sub)5
b(ject)29 b(to)90 b Fd(x)26 b Fi(\025)f(\000)p Fg(1)p
Fd(;)15 b(y)29 b Fi(\025)d Fg(2)p Fd(;)15 b(z)30 b Fi(\025)25
b Fg(0)p Fd(:)p eop end
%%Page: 7 7
TeXDict begin 7 6 bop 1177 91 a Fi(x)o Ff(1.)42 b(What)32
b(Is)i(Line)-5 b(ar)32 b(Pr)-5 b(o)g(gr)g(amming?)90
b Fe(7)183 311 y Fg(In)37 b(this)g(linear)g(program)f(with)i(three)e(v)
-5 b(ariables)37 b Fd(x;)15 b(y)s(;)g(z)43 b Fg(the)37
b(optimal)0 420 y(solution)27 b(is)i Fd(x)c Fg(=)h Fi(\000)p
Fg(1)p Fd(;)15 b(y)29 b Fg(=)c(2)p Fd(;)15 b(z)30 b Fg(=)25
b(0)p Fd(:)k Fg(The)e(optimal)h(v)-5 b(alue)28 b(is)g(1.)40
b(Note)28 b(that)e(a)0 530 y(solution)k(should)f(con)m(tain)g(v)-5
b(alues)30 b(for)g(all)h(v)-5 b(ariables)30 b(in)m(v)m(olv)m(ed.)p
2661 522 40 40 v 0 661 a Fe(Example)36 b(1.10.)j Ff(A)33
b(Nonline)-5 b(ar)32 b(Pr)-5 b(oblem)183 713 y Fc(\032)282
787 y Fg(Minimize)161 b Fd(x)863 753 y Fb(2)925 787 y
Fg(+)20 b Fd(y)1064 753 y Fb(3)1125 787 y Fg(+)h Fd(z)1263
753 y Fb(4)266 896 y Fg(sub)5 b(ject)29 b(to)90 b Fi(j)p
Fd(x)p Fi(j)27 b(\025)e Fg(1)p Fd(;)15 b Fi(j)p Fd(y)s
Fi(j)27 b(\024)e Fg(3)p Fd(:)183 1022 y Fg(This)37 b(is)h(a)f
(mathematical)e(program)h(with)g(three)g(v)-5 b(ariables)36
b(and)h(t)m(w)m(o)0 1132 y(constrain)m(ts)e(that)g(is)i(not)f(linear)g
(b)s(ecause)f(the)g(ob)5 b(jectiv)m(e)36 b(function)f(is)i(not)0
1241 y(a\016ne)30 b(and)g(the)f(constrain)m(ts)g(are)h(not)f(linear.)42
b(\(Ho)m(w)m(ev)m(er,)31 b(the)f(second)f(con-)0 1351
y(strain)m(t)38 b(can)f(b)s(e)h(replaced)f(b)m(y)i(t)m(w)m(o)f(linear)g
(constrain)m(ts,)h(and)f(the)g(feasible)0 1460 y(region)29
b(is)h(the)f(disjoin)m(t)h(union)g(of)f(t)m(w)m(o)i(parts;)e(eac)m(h)g
(can)g(b)s(e)g(giv)m(en)h(b)m(y)h(three)0 1570 y(linear)42
b(constrain)m(ts.\))73 b(Nev)m(ertheless,)45 b(using)c(common)g(sense,)
k(it)d(is)g(clear)0 1680 y(that)c(the)h(problem)g(splits)h(in)m(to)g
(three)e(separate)g(optimization)g(problems)0 1789 y(with)32
b(one)g(v)-5 b(ariable)33 b(eac)m(h.)47 b(So)32 b(there)f(are)h
(exactly)g(t)m(w)m(o)h(optimal)g(solutions,)0 1899 y
Fd(x)26 b Fg(=)f Fi(\006)p Fg(1)p Fd(;)15 b(y)29 b Fg(=)c
Fi(\000)p Fg(3)p Fd(;)15 b(z)30 b Fg(=)c(0)k(and)f(min)d(=)f
Fi(\000)p Fg(26)p Fd(:)p 2661 1891 V 183 2008 a Fg(All)36
b(n)m(um)m(b)s(ers)e(in)h(linear)g(programming)e(are)i(real)f(n)m(um)m
(b)s(ers.)54 b(In)35 b(fact,)0 2118 y(it)j(is)g(hard)f(to)g(imagine)h
(a)g(linear)f(program)f(arising)i(out)f(of)h(business)f(and)0
2228 y(industrial)31 b(concerns,)g(with)h(n)m(um)m(b)s(ers)f(not)g(b)s
(eing)g(actually)g(rational)g(n)m(um-)0 2337 y(b)s(ers.)48
b(Wh)m(y?)i(Y)-8 b(ou)34 b(migh)m(t)f(ask)g(y)m(ourself)g(if)h(the)e
(price)g(of)h(a)g(pro)s(duct)e(could)0 2447 y(b)s(e)24
b(stated)g(as)h(an)g(irrational)f(n)m(um)m(b)s(er,)i(for)f(example,)
1882 2371 y Fi(p)p 1958 2371 46 4 v 76 x Fg(2)p Fd(:)h
Fg(W)-8 b(e)25 b(will)h(see)f(later)0 2556 y(that)35
b(to)g(solv)m(e)h(a)g(linear)g(programming)e(problem)i(with)f(rational)
g(data)g(w)m(e)0 2666 y(do)e(not)f(need)g(irrational)g(n)m(um)m(b)s
(ers.)49 b(Ho)m(w)m(ev)m(er,)35 b(this)e(is)h(not)e(the)g(case)g(with)0
2776 y(nonlinear)i(problems,)i(as)e(y)m(ou)i(can)e(see)g(when)h(y)m(ou)
g(solv)m(e)g(the)f(\(nonlinear\))0 2885 y(equation)29
b Fd(x)425 2852 y Fb(2)491 2885 y Fg(=)d(2.)183 2995
y(T)-8 b(o)25 b(dev)m(elop)f(y)m(our)h(o)m(wn)g(appreciation)e(of)i
(optimization)e(problems,)j(try)0 3104 y(to)k(solv)m(e)g(the)g(follo)m
(wing)g(t)m(w)m(o)h(problems.)40 b(Are)30 b(they)f(linear)h(programs?)0
3235 y Fe(Problem)35 b(1.11)183 3270 y Fc(\032)273 3344
y Fg(Maximize)278 b Fd(x)266 3453 y Fg(sub)5 b(ject)29
b(to)90 b(2)25 b Fi(\024)h Fd(x)f Fi(\024)h Fg(3)p Fd(:)0
3584 y Fe(Solution.)40 b Fg(As)28 b(w)m(e)g(noted)e(earlier,)h(the)g
(maximal)h(v)-5 b(alue)27 b(is)h(3)g(\(max)f(=)g(3)h(for)0
3694 y(short\))h(and)g(it)i(is)f(reac)m(hed)f(at)h Fd(x)25
b Fg(=)h(3)p Fd(:)p 2661 3686 40 40 v 183 3803 a Fg(One)37
b(of)g(the)f(main)h(applications)f(of)h(the)g(\014rst)f(deriv)-5
b(ativ)m(e)37 b(of)g(a)h(func-)0 3913 y(tion,)32 b(whic)m(h)g(y)m(ou)h
(study)e(in)h(calculus,)g(is)h(to)e(\014nd)h(the)f(maxima)h(or)g
(minima)0 4022 y(of)d(a)h(function)e(b)m(y)i(lo)s(oking)f(at)g(the)f
(critical)h(p)s(oin)m(ts.)40 b(Y)-8 b(et)30 b(y)m(ou)g(can)f(see)g
(from)0 4132 y(Problem)i(1.11)g(that)g(\014rst-y)m(ear)g(calculus)f(is)
j(not)d(su\016cien)m(t)h(to)g(solv)m(e)i(linear)0 4242
y(programs.)57 b(Supp)s(ose)34 b(y)m(ou)i(are)f(trying)h(to)f(\014nd)h
(the)f(maxim)m(um)i(and)e(min-)0 4351 y(im)m(um)41 b(of)f(the)g(linear)
g(form)g Fd(f)10 b Fg(\()p Fd(x)p Fg(\))41 b(=)h Fd(x)f
Fg(on)f(the)f(in)m(terv)-5 b(al)40 b(2)i Fi(\024)h Fd(x)f
Fi(\024)g Fg(3)f(b)m(y)0 4461 y(determining)26 b(where)g(the)h(\014rst)
g(deriv)-5 b(ativ)m(e)27 b(equals)g(zero.)39 b(Y)-8 b(ou)28
b(observ)m(e)f(that)0 4570 y(the)k(\014rst)g(deriv)-5
b(ativ)m(e,)32 b(1,)g(nev)m(er)g(equals)f(zero.)44 b(Y)-8
b(et)32 b(the)f(ob)5 b(jectiv)m(e)31 b(function)0 4680
y(reac)m(hes)e(its)h(maxim)m(um,)i(3,)e(and)g(minim)m(um,)i(2,)e(on)g
(this)g(in)m(terv)-5 b(al.)p eop end
%%Page: 8 8
TeXDict begin 8 7 bop 0 91 a Fe(8)91 b Ff(Chapter)32
b(1)g(Intr)-5 b(o)g(duction)0 311 y Fe(Problem)35 b(1.12)183
341 y Fc(8)183 423 y(<)183 587 y(:)286 418 y Fg(Maximize)97
b Fd(x)21 b Fg(+)f(2)p Fd(y)j Fg(+)d Fd(z)279 528 y Fg(sub)5
b(ject)29 b(to)96 b Fd(x)20 b Fg(+)g Fd(y)29 b Fg(=)c(1)p
Fd(;)857 637 y(z)30 b Fi(\025)c Fg(0)p Fd(:)0 763 y Fe(Solution.)41
b Fg(The)28 b(ob)5 b(jectiv)m(e)28 b(function)f(tak)m(es)h(arbitrarily)
h(large)f(v)-5 b(alues)28 b(as)h Fd(y)0 872 y Fg(go)s(es)f(to)h(+)p
Fi(1)p Fd(;)61 b(x)26 b Fg(=)f(1)18 b Fi(\000)h Fd(y)s(;)61
b(z)30 b Fg(=)25 b(0)p Fd(:)30 b Fg(Informally)-8 b(,)30
b(w)m(e)f(can)g(write)f(max)i(=)f Fi(1)p Fd(:)0 982 y
Fg(This)i(is)f(an)g Fd(unbounded)g Fg(linear)g(program.)p
2661 974 40 40 v 183 1113 a(Problems)36 b(1.11)h(and)g(1.12)g(are)f(b)s
(oth)g(linear)g(programs)g(b)s(ecause)f(the)0 1222 y(ob)5
b(jectiv)m(e)29 b(functions)g(and)h(all)h(the)f(constrain)m(ts)f(are)h
(linear.)41 b(Note)30 b(that)f(the)0 1332 y(optimal)34
b(\(maximal)h(or)f(minimal\))h(v)-5 b(alue)34 b(of)g(an)g(optimization)
f(problem)h(is)0 1441 y(unique.)40 b(\(Had)27 b(w)m(e)i(found)e(t)m(w)m
(o)h(di\013eren)m(t)g(v)-5 b(alues,)28 b(one)f(w)m(ould)i(b)s(e)e(b)s
(etter,)f(so)0 1551 y(the)i(other)g(w)m(ould)h(not)f(b)s(e)h
(optimal.\))39 b(The)29 b(optimal)g(v)-5 b(alue)28 b(alw)m(a)m(ys)j
(exists)e(if)0 1660 y(w)m(e)f(add)f(the)g(sym)m(b)s(ols)g
Fi(\0001)p Fd(;)47 b Fg(+)p Fi(1)28 b Fg(to)f(the)g(set)g(of)g(real)g
(n)m(um)m(b)s(ers)g(as)h(p)s(ossible)0 1770 y(v)-5 b(alues)23
b(for)g(the)f(optimal)h(v)-5 b(alue.)38 b(But)23 b(if)h(it)f(is)h(reac)
m(hed)d(at)i(all,)j(there)c(could)g(b)s(e)0 1880 y(more)28
b(than)g(one)g(w)m(a)m(y)i(to)f(reac)m(h)f(it.)40 b(That)28
b(is,)i(w)m(e)f(ma)m(y)h(ha)m(v)m(e)f(man)m(y)h(optimal)0
1989 y(solutions)g(for)f(the)h(same)f(optimal)h(v)-5
b(alue.)183 2120 y(No)m(w)43 b(y)m(ou)g(ha)m(v)m(e)g(encoun)m(tered)c
(the)j(follo)m(wing)g(terms:)65 b Ff(line)-5 b(ar)44
b(form,)0 2229 y(a\016ne)30 b(function,)h(line)-5 b(ar)30
b(c)-5 b(onstr)g(aint,)32 b(line)-5 b(ar)30 b(pr)-5 b(o)g(gr)g(am,)30
b(obje)-5 b(ctive)30 b(function,)0 2339 y(optimal)f(value,)i(optimal)e
(solution,)j(fe)-5 b(asible)30 b(solution.)41 b Fg(T)-8
b(ry)27 b(to)g(explain)g(the)0 2449 y(meaning)i(of)h(eac)m(h)g(of)g
(these)f(terms.)0 2579 y Fe(Remark.)40 b Fg(W)-8 b(e)28
b(ha)m(v)m(e)g(already)f(men)m(tioned)f(that)g(linear)i(programming)e
(is)i(a)0 2689 y(part)j(of)h(mathematical)e(programming.)45
b(In)32 b(its)g(turn,)g(mathematical)e(pro-)0 2798 y(gramming)h(is)h(a)
f(to)s(ol)f(in)i Ff(op)-5 b(er)g(ations)33 b(r)-5 b(ese)g(ar)g(ch)32
b Fg(\(or)e(op)s(erational)f(researc)m(h\),)0 2908 y(whic)m(h)45
b(is)g(an)f(application)f(of)h(scien)m(ti\014c)g(metho)s(ds)f(to)h(the)
f(managemen)m(t)0 3017 y(and)h(administration)f(of)h(organized)f
(military)-8 b(,)49 b(go)m(v)m(ernmen)m(tal,)f(commer-)0
3127 y(cial,)31 b(and)f(industrial)g(pro)s(cesses.)40
b(Historically)-8 b(,)32 b(the)e(terms)g Fd(pr)s(og)s(r)s(amming)0
3237 y Fg(and)g Fd(oper)s(ations)g Fg(came)f(from)h(planning)g
(military)h(op)s(erations.)183 3346 y(The)h(terms)g Ff(systems)37
b(engine)-5 b(ering)34 b Fg(and)f Ff(management)i(scienc)-5
b(e)34 b Fg(mean)0 3456 y(almost)20 b(the)g(same)h(as)g(op)s(erations)d
(researc)m(h)h(with)i(less)g(or)f(more)h(stress)f(on)g(the)0
3565 y(h)m(uman)27 b(factor.)38 b(As)28 b(a)g(part)e(of)h(op)s
(erations)e(researc)m(h,)i(linear)g(programming)0 3675
y(is)k(concerned)c(not)j(only)g(with)g(solving)h(of)f(linear)f
(programs)g(but)h(also)g(with)183 3805 y Fi(\017)g Fg(acquiring)f(and)h
(pro)s(cessing)e(data)h(required)g(to)h(mak)m(e)g(decisions)183
3936 y Fi(\017)g Fg(problem)f(form)m(ulation)h(and)f(mo)s(del)h
(construction)183 4067 y Fi(\017)g Fg(testing)f(the)g(mo)s(dels)g(and)h
(in)m(terpreting)e(solutions)183 4197 y Fi(\017)i Fg(implemen)m(ting)g
(solutions)f(in)m(to)h(decisions)183 4328 y Fi(\017)g
Fg(con)m(trolling)f(the)g(decisions)183 4458 y Fi(\017)24
b Fg(organizing)e(and)i(in)m(terconnecting)d(di\013eren)m(t)j(asp)s
(ects)e(of)i(the)f(pro)s(cess)183 4610 y(In)30 b(this)g(b)s(o)s(ok)e(w)
m(e)j(stress)e(mathematical)f(asp)s(ects)g(of)i(linear)g(program-)0
4719 y(ming,)c(but)d(w)m(e)h(are)g(also)g(concerned)d(with)j
(translating)e(w)m(ord)i(problems)f(in)m(to)p eop end
%%Page: 9 9
TeXDict begin 9 8 bop 1177 91 a Fi(x)o Ff(1.)42 b(What)32
b(Is)i(Line)-5 b(ar)32 b(Pr)-5 b(o)g(gr)g(amming?)90
b Fe(9)0 311 y Fg(mathematical)30 b(language,)g(transforming)g(linear)h
(programs)f(in)m(to)i(di\013eren)m(t)0 420 y(forms,)e(and)g(making)g
(connections)e(with)i(game)f(theory)g(and)h(statistics.)183
530 y(Ho)m(w)f(is)h(linear)e(programming)g(connected)e(with)i
Ff(line)-5 b(ar)32 b(algebr)-5 b(a)p Fg(?)40 b(The)0
639 y(main)26 b(concern)e(in)i(linear)f(algebra)g(is)h(solving)g
(systems)g(of)g(linear)f(equations.)0 749 y(W)-8 b(e)33
b(will)h(see)e(in)h(Chapter)e(5)i(that)e(solving)i(linear)g(programs)e
(is)j(equiv)-5 b(alen)m(t)0 858 y(to)31 b(\014nding)g(feasible)g
(solutions)g(for)g(systems)h(of)f(linear)g(constrain)m(ts.)44
b(Th)m(us,)0 968 y(from)e(a)h(mathematical)e(p)s(oin)m(t)h(of)g(view,)
47 b(linear)c(programming)e(is)i(ab)s(out)0 1078 y(more)30
b(general)e(and)i(di\016cult)g(problems.)0 1187 y Fe(Remark.)38
b Fg(Besides)22 b(mathematical)e(programming,)j(there)d(are)i(other)e
(areas)0 1297 y(of)42 b(mathematics)d(and)j(computer)d(science)i(where)
g(optimization)f(pla)m(ys)i(a)0 1406 y(prominen)m(t)e(role.)71
b(F)-8 b(or)40 b(example,)j(b)s(oth)c Ff(c)-5 b(ontr)g(ol)43
b(the)-5 b(ory)41 b Fg(and)f Ff(c)-5 b(alculus)43 b(of)0
1516 y(variations)27 b Fg(are)e(concerned)f(with)j(optimization)e
(problems)h(that)f(cannot)g(b)s(e)0 1626 y(describ)s(ed)j(easily)j
(with)g(a)f(\014nite)g(set)g(of)g(v)-5 b(ariables.)42
b(The)30 b(feasible)g(solutions)0 1735 y(could)24 b(b)s(e)g(functions)f
(satisfying)i(certain)e(conditions.)38 b(W)-8 b(e)24
b(ma)m(y)i(ask)f(what)f(is)0 1845 y(the)31 b(shortest)e(curv)m(e)i
(connecting)e(t)m(w)m(o)j(giv)m(en)f(p)s(oin)m(ts)g(in)h(plane.)44
b(Or)31 b(w)m(e)h(can)0 1954 y(ask)27 b(ab)s(out)e(the)g(most)i
(e\016cien)m(t)e(w)m(a)m(y)j(to)e(sort)g(data)g(of)g(an)m(y)h(size.)39
b(Sometimes)0 2064 y(mathematical)28 b(programming)h(can)g(help)h(to)g
(solv)m(e)h(those)e(problems.)0 2199 y Fe(Historic)47
b(Remark.)72 b Fg(The)40 b(mathematicians)e(men)m(tioned)h(in)i(this)g
(b)s(o)s(ok)0 2308 y(are)d(w)m(ell)j(kno)m(wn,)g(and)e(their)f(bios)i
(can)e(b)s(e)g(found)g(in)i(encyclop)s(edias,)f(bi-)0
2418 y(ographies,)29 b(history)h(b)s(o)s(oks,)f(and)g(on)h(the)g(W)-8
b(eb.)183 2527 y(Joseph)45 b(F)-8 b(ourier,)51 b(a)46
b(F)-8 b(renc)m(h)46 b(mathematician)f(w)m(ell)j(kno)m(wn)f(also)f(as)0
2637 y(an)32 b(Egyptologist)f(and)h(administrator,)g(is)h(famous)f(for)
g(his)h(F)-8 b(ourier)31 b(series,)0 2747 y(whic)m(h)g(are)f(v)m(ery)h
(imp)s(ortan)m(t)e(in)i(mathematical)e(ph)m(ysics)i(and)f(engineering.)
0 2856 y(His)h(w)m(ork)f(on)f(linear)h(appro)m(ximation)e(and)h(linear)
h(programming)e(is)i(not)f(so)0 2966 y(w)m(ell)g(kno)m(wn.)40
b(A)30 b(son)e(of)g(a)g(tailor,)h(he)f(had)f(11)h(siblings)h(and)f(3)g
(half-siblings.)0 3075 y(His)h(mother)d(died)i(when)f(he)h(w)m(as)g
(nine)f(y)m(ears)h(old,)h(and)e(his)h(father)f(died)g(the)0
3185 y(follo)m(wing)f(y)m(ear.)40 b(He)26 b(receiv)m(ed)f(military)i
(and)f(religious)f(education)f(and)i(w)m(as)0 3295 y(in)m(v)m(olv)m(ed)
32 b(in)e(p)s(olitics.)40 b(His)32 b(life)e(w)m(as)h(in)f(danger)f(a)h
(few)g(times.)183 3404 y(Leonid)j(Kan)m(toro)m(vic)m(h,)h(a)f(So)m
(viet)h(mathematician)d(with)i(v)m(ery)h(imp)s(or-)0
3514 y(tan)m(t)27 b(con)m(tributions)g(to)h(economics,)f(w)m(as)i
(almost)f(unkno)m(wn)g(in)g(the)g(United)0 3623 y(States)38
b(un)m(til)i(the)e(simplex)i(metho)s(d)e(w)m(as)h(successfully)g
(implemen)m(ted)g(for)0 3733 y(computers)f(and)i(widely)g(used.)71
b(He)40 b(got)f(his)i(Ph.D.)g(in)f(mathematics)f(at)0
3842 y(age)d(18.)62 b(The)37 b(author)f(had)g(the)h(pleasure)f(of)h
(meeting)f(Kan)m(toro)m(vic)m(h)h(sev-)0 3952 y(eral)28
b(times)h(at)e(mathematical)g(talks)i(and)e(at)h(business)g(meetings)g
(in)m(v)m(olving)0 4062 y(optimization)40 b(of)h(adv)-5
b(anced)39 b(planning)h(in)h(the)g(former)f(U.S.S.R.)j(One)d(of)0
4171 y(man)m(y)31 b(things)e(he)h(did)g(in)g(mathematics)e(w)m(as)j(in)
m(tro)s(ducing)d(the)h(notion)g(of)h(a)0 4281 y(distance)36
b(b)s(et)m(w)m(een)f(probabilit)m(y)i(distributions,)h(whic)m(h)f(w)m
(as)g(redisco)m(v)m(ered)0 4390 y(later)c(in)i(di\013eren)m(t)e(forms)h
(b)m(y)h(other)e(mathematicians,)g(including)h(the)f(au-)0
4500 y(thor)24 b(\(the)g(V)-8 b(aserstein)24 b(distance\).)37
b(This)25 b(distance)f(is)h(the)f(optimal)h(v)-5 b(alue)25
b(for)0 4610 y(a)37 b(problem)e(similar)j(to)e(the)g(transp)s(ortation)
c(problem)k(\(see)g(Example)g(2.4)0 4719 y(and)30 b(Chapter)e(6\).)p
eop end
%%Page: 10 10
TeXDict begin 10 9 bop 0 91 a Fe(10)90 b Ff(Chapter)32
b(1)h(Intr)-5 b(o)g(duction)1096 311 y Fh(Exercises)0
442 y Fe(1{13.)54 b Fg(State)34 b(whether)g(the)g(follo)m(wing)i(are)f
(true)f(or)h(false.)56 b(Explain)36 b(y)m(our)0 552 y(reasoning.)35
684 y Fe(1.)132 b Fg(1)25 b Fi(\024)g Fg(2)888 b Fe(2.)132
b Fi(\000)p Fg(10)24 b Fi(\024)i(\000)p Fg(1)35 793 y
Fe(3.)132 b Fg(3)25 b Fi(\024)g Fg(3)888 b Fe(4.)132
b Fi(\000)p Fg(5)p Fd(=)p Fg(12)24 b Fi(\025)h(\000)p
Fg(3)p Fd(=)p Fg(7)35 925 y Fe(5.)132 b Fd(x)301 892
y Fb(2)362 925 y Fg(+)20 b Fi(j)p Fd(y)s Fi(j)27 b(\025)e
Fg(0)30 b(for)g(all)h(n)m(um)m(b)s(ers)e Fd(x;)15 b(y)35
1057 y Fe(6.)132 b Fg(3)p Fd(x)25 b Fi(\025)g Fd(x)31
b Fg(for)f(all)g(n)m(um)m(b)s(ers)g Fd(x)35 1189 y Fe(7.)132
b Fg(3)p Fd(x)347 1156 y Fb(3)413 1189 y Fi(\025)25 b
Fg(2)p Fd(x)607 1156 y Fb(2)678 1189 y Fg(for)30 b(all)h(n)m(um)m(b)s
(ers)f Fd(x)35 1321 y Fe(8.)40 b Fg(Ev)m(ery)31 b(linear)f(program)f
(should)h(ha)m(v)m(e)g(at)g(least)f(one)h(linear)g(constrain)m(t)35
1453 y Fe(9.)40 b Fg(Ev)m(ery)31 b(linear)f(program)f(has)h(an)g
(optimal)f(solution)0 1585 y Fe(10.)40 b Fg(Eac)m(h)30
b(v)-5 b(ariable)30 b(in)g(a)g(linear)g(program)f(should)h(b)s(e)f
(nonnegativ)m(e)0 1717 y Fe(11.)40 b Fg(An)m(y)31 b(linear)f(program)f
(has)h(a)g(unique)g(optimal)f(solution)0 1849 y Fe(12.)54
b Fg(The)34 b(total)g(n)m(um)m(b)s(er)h(of)f(constrain)m(ts)f(in)j(a)e
(linear)h(program)f(is)h(alw)m(a)m(ys)0 1958 y(larger)29
b(than)g(the)h(n)m(um)m(b)s(er)f(of)h(v)-5 b(ariables)0
2090 y Fe(13.)38 b Fg(The)26 b(constrain)m(t)f(2)p Fd(x)12
b Fg(+)g(5)26 b(=)f(6)p Fd(x)12 b Fi(\000)g Fg(3)27 b(is)g(equiv)-5
b(alen)m(t)26 b(to)f(a)i(linear)f(equation)0 2200 y(for)k
Fd(x)p 2661 2192 40 40 v 0 2354 a Fe(14{17.)56 b Fg(Determine)34
b(whether)h(the)g(follo)m(wing)h(functions)f(of)h Fd(x)g
Fg(and)g Fd(y)j Fg(are)0 2464 y(linear)30 b(forms.)0
2595 y Fe(14.)131 b Fg(2)p Fd(x)986 b Fe(15.)131 b Fd(x)21
b Fg(+)f Fd(y)j Fg(+)e(1)0 2705 y Fe(16.)131 b Fg(\(sin)15
b(1\))30 b Fd(x)20 b Fg(+)g Fd(e)747 2672 y Fa(z)804
2705 y Fd(y)501 b Fe(17.)131 b Fd(x)15 b Fg(sin)h Fd(a)k
Fg(+)h Fd(y)d(z)p 2111 2697 V 0 2837 a Fe(18{23.)38 b
Fg(Is)31 b(this)f(a)g(linear)g(constrain)m(t)e(for)i
Fd(x)p Fg(?)0 2947 y Fe(18.)131 b Fd(x)26 b(>)f Fg(2)864
b Fe(19.)131 b Fi(j)p Fd(x)p Fi(j)26 b(\024)g Fg(1)0
3056 y Fe(20.)131 b Fg(0)25 b(=)h(1)870 b Fe(21.)131
b Fg(0)25 b Fi(\025)h Fg(1)0 3166 y Fe(22.)131 b Fd(xy)366
3133 y Fb(2)433 3166 y Fg(=)25 b(3)775 b Fe(23.)131 b
Fd(ax)26 b Fg(=)f Fd(b:)p 1933 3158 V 0 3298 a Fe(24{26.)49
b Fg(Do)34 b(y)m(ou)g(agree)e(with)i(the)f(follo)m(wing)h(statemen)m
(ts?)50 b(Wh)m(y)34 b(or)g(wh)m(y)0 3407 y(not?)0 3539
y Fe(24.)131 b Fi(j)p Fd(x)p Fi(j)26 b(\024)g Fg(1)k(is)h(equiv)-5
b(alen)m(t)30 b(to)f(a)h(system)g(of)g(t)m(w)m(o)h(linear)f(constrain)m
(ts)0 3671 y Fe(25.)131 b Fi(j)p Fd(x)p Fi(j)26 b(\025)g
Fg(1)k(is)h(equiv)-5 b(alen)m(t)30 b(to)f(a)h(system)g(of)g(t)m(w)m(o)h
(linear)f(constrain)m(ts)0 3803 y Fe(26.)131 b Fg(The)28
b(equation)g(\()p Fd(x)18 b Fi(\000)h Fg(1\))1102 3770
y Fb(2)1167 3803 y Fg(=)26 b(0)j(is)h(equiv)-5 b(alen)m(t)28
b(to)h(a)g(linear)g(constrain)m(t)0 3913 y(for)h Fd(x)p
2661 3905 V 0 4044 a Fe(27.)45 b Fg(Solv)m(e)32 b(the)f(equation)f
Fd(ax)f Fg(=)f Fd(b)k Fg(for)g Fd(x;)h Fg(where)d Fd(a)j
Fg(and)e Fd(b)h Fg(are)f(giv)m(en)i(n)m(um-)0 4154 y(b)s(ers.)0
4286 y Fe(28{30.)52 b Fg(Solv)m(e)35 b(the)f(follo)m(wing)h(three)e
(linear)i(systems)f(of)h(equations)e(for)i Fd(x)0 4395
y Fg(and)30 b Fd(y)s(:)0 4527 y Fe(28.)923 4540 y Fc(\032)1029
4614 y Fd(x)115 b Fg(+)91 b(2)p Fd(y)j Fg(=)d(3)1006
4724 y(5)p Fd(x)h Fg(+)f(9)p Fd(y)j Fg(=)d(4)p eop end
%%Page: 11 11
TeXDict begin 11 10 bop 1124 91 a Fi(x)p Ff(1.)41 b(What)33
b(Is)g(Line)-5 b(ar)33 b(Pr)-5 b(o)g(gr)g(amming?)90
b Fe(11)0 311 y(29.)877 323 y Fc(\032)984 397 y Fd(x)114
b Fg(+)g(2)p Fd(y)j Fg(=)d(3)961 507 y(5)p Fd(x)91 b
Fg(+)g(10)p Fd(y)j Fg(=)d(15)0 679 y Fe(30.)923 692 y
Fc(\032)1029 766 y Fd(x)115 b Fg(+)91 b(2)p Fd(y)j Fg(=)d(3)1006
875 y(3)p Fd(x)h Fg(+)f(6)p Fd(y)j Fg(=)d(0)p 2661 1005
40 40 v 0 1146 a Fe(31.)40 b Fg(Minimize)30 b(\(o)m(v)m(er)g
Fd(x;)15 b(y)s(;)g(z)t Fg(\))32 b(\()p Fd(x)20 b Fg(+)g
Fd(y)s Fg(\))1381 1113 y Fb(2)1442 1146 y Fg(+)h(\()p
Fd(z)j Fg(+)c(1\))1809 1113 y Fb(2)1849 1146 y Fd(:)0
1279 y Fe(32.)40 b Fg(Minimize)30 b Fi(j)p Fd(x)21 b
Fg(+)f(2)p Fi(j)h Fg(+)f Fi(j)p Fd(x)h Fg(+)f(3)p Fi(j)31
b Fg(sub)5 b(ject)28 b(to)i Fi(j)p Fd(x)p Fi(j)c(\024)f
Fg(2)p Fd(:)p Fg(5)p Fd(:)0 1412 y Fe(33.)40 b Fg(Maximize)30
b(1)p Fd(=)p Fg(\(1)19 b(+)h Fd(x)927 1379 y Fb(2)968
1412 y Fg(\))p Fd(:)0 1545 y Fe(34.)40 b Fg(Maximize)30
b(\()p Fd(x)20 b Fg(+)g Fd(y)s Fg(\))874 1512 y Fb(2)935
1545 y Fg(+)g(\()p Fd(z)25 b Fg(+)20 b(1\))1302 1512
y Fb(2)1342 1545 y Fd(:)0 1678 y Fe(35.)40 b Fg(Minimize)30
b Fi(j)p Fd(x)21 b Fg(+)f Fd(y)s Fi(j)h Fg(+)f(\()p Fd(z)25
b Fg(+)20 b(1\))1223 1645 y Fb(6)1283 1678 y Fg(+)h(\()p
Fd(x)f Fi(\000)g Fd(y)j Fg(+)e Fd(z)t Fg(\))1816 1645
y Fb(2)1857 1678 y Fd(:)0 1812 y Fe(36{43)29 b Fg(Is)i(this)g(a)g
(linear)g(form)f(of)h(t)m(w)m(o)g(v)-5 b(ariables,)32
b Fd(x)f Fg(and)f Fd(y)s Fg(?)44 b(\(Answ)m(er)30 b(Y)-8
b(es)0 1921 y(or)30 b(No.\))0 2054 y Fe(36.)131 b Fg(2)p
Fd(x)20 b Fg(+)h(3)p Fd(y)783 b Fe(37.)131 b Fg(2)p Fd(x)20
b Fg(+)h(3)p Fd(y)28 b Fg(=)d(1)0 2164 y Fe(38.)131 b
Fd(x)21 b Fg(+)f Fd(y)478 2131 y Fb(2)1350 2164 y Fe(39.)131
b Fd(xy)0 2274 y Fe(40.)g Fd(y)1039 b Fe(41.)131 b Fg(0)0
2383 y Fe(42.)g Fg(\()p Fd(x)20 b Fg(+)g(1\))547 2350
y Fb(2)608 2383 y Fg(+)g(2)p Fd(y)j Fi(\000)e Fd(x)957
2350 y Fb(2)1018 2383 y Fi(\000)f Fg(1)195 b Fe(43.)131
b Fd(x=y)p 1792 2375 V 0 2516 a Fe(44{49.)38 b Fg(Is)31
b(this)f(constrain)m(t)e(for)i(t)m(w)m(o)h(v)-5 b(ariables,)30
b Fd(x)g Fg(and)g Fd(y)j Fg(linear?)0 2650 y Fe(44.)131
b Fd(xy)29 b Fg(=)c(0)816 b Fe(45.)131 b Fd(x)26 b Fg(=)f(0)0
2759 y Fe(46.)131 b Fd(x)26 b(<)f Fg(0)864 b Fe(47.)131
b Fd(x)21 b Fg(+)f Fd(y)28 b Fg(=)e(0)0 2869 y Fe(48.)131
b Fd(x)31 b Fg(is)g(an)e(in)m(teger)510 b Fe(49.)131
b Fd(x)26 b Fi(\025)f Fg(1)30 b(or)g Fd(y)e Fg(=)e(0)p
2224 2861 V 0 3002 a Fe(50{57.)38 b Fg(Is)29 b(this)f(a)h(linear)g
(constrain)m(t)e(for)h Fd(x)h Fg(and)f Fd(y)s Fg(?)41
b(\(Answ)m(er)28 b(Y)-8 b(es)30 b(or)e(No.\))0 3135 y
Fe(50.)131 b Fd(x)21 b Fg(+)f(2)p Fd(y)829 b Fe(51.)131
b Fd(x)26 b Fi(\025)f Fg(1)0 3245 y Fe(52.)131 b Fg(0)30
b(=)h(0)860 b Fe(53.)131 b Fg(0)30 b(=)h(1)0 3354 y Fe(54.)131
b Fd(x)21 b Fg(+)f Fd(y)28 b Fi(\024)e Fg(0)704 b Fe(55.)131
b Fd(x)1668 3321 y Fb(2)1735 3354 y Fg(=)25 b(2)0 3464
y Fe(56.)131 b Fd(x)26 b Fi(\025)f Fg(0)864 b Fe(57.)131
b Fd(xy)29 b Fg(=)c(0)p 1914 3456 V 0 3597 a Fe(58.)46
b Fg(Sho)m(w)33 b(that)e(an)m(y)h(linear)h(form)f Fd(f)10
b Fg(\()p Fd(x;)15 b(y)s Fg(\))32 b(of)g(t)m(w)m(o)h(v)-5
b(ariables)32 b Fd(x;)15 b(y)36 b Fg(has)c(the)0 3707
y(follo)m(wing)f(t)m(w)m(o)f(prop)s(erties:)0 3840 y
Fi(\017)g Fg(\(prop)s(ortionalit)m(y\))d Fd(f)10 b Fg(\()p
Fd(ax;)15 b(ay)s Fg(\))26 b(=)f Fd(af)10 b Fg(\()p Fd(x;)15
b(y)s Fg(\))30 b(for)g(ev)m(ery)g(n)m(um)m(b)s(er)g Fd(a)0
3973 y Fi(\017)g Fg(\(additivit)m(y\))g Fd(f)10 b Fg(\()p
Fd(x)709 3987 y Fb(1)769 3973 y Fg(+)21 b Fd(x)913 3987
y Fb(2)954 3973 y Fd(;)15 b(y)1039 3987 y Fb(1)1100 3973
y Fg(+)21 b Fd(y)1237 3987 y Fb(2)1277 3973 y Fg(\))k(=)h
Fd(f)10 b Fg(\()p Fd(x)1578 3987 y Fb(1)1618 3973 y Fd(;)15
b(y)1703 3987 y Fb(1)1744 3973 y Fg(\))20 b(+)g Fd(f)10
b Fg(\()p Fd(x)2034 3987 y Fb(2)2075 3973 y Fd(;)15 b(y)2160
3987 y Fb(2)2201 3973 y Fg(\))0 4106 y Fe(59.)67 b Fg(Con)m(v)m(ersely)
-8 b(,)42 b(sho)m(w)d(that)f(ev)m(ery)h(function)f Fd(f)10
b Fg(\()p Fd(x;)15 b(y)s Fg(\))38 b(of)h(t)m(w)m(o)h(v)-5
b(ariables)0 4216 y Fd(x;)15 b(y)34 b Fg(with)c(these)f(t)m(w)m(o)i
(prop)s(erties)c(is)k(a)f(linear)g(form..)0 4373 y Fe(60.)72
b Fg(Minimize)41 b Fi(j)p Fd(x)p Fi(j)28 b Fg(+)f(\()p
Fd(x)g Fi(\000)h Fg(2)p Fd(y)s Fg(\))1188 4340 y Fb(2)1255
4373 y Fg(+)g(sin)15 b Fd(z)32 b Fg(+)27 b(2)1699 4340
y Fa(u)1774 4373 y Fg(+)g(log)q(\()p Fd(v)k Fg(+)c(101\))40
b(sub)5 b(ject)0 4482 y(to)33 b Fi(j)p Fd(x)p Fi(j)p
Fd(;)15 b Fi(j)p Fd(y)s Fi(j)p Fd(;)g Fi(j)p Fd(z)t Fi(j)p
Fd(;)g Fi(j)p Fd(u)p Fi(j)p Fd(;)h Fi(j)p Fd(v)t Fi(j)38
b(\024)32 b Fg(100)p Fd(:)h Fg(Ho)m(w)i(man)m(y)f(optimal)g(solutions)f
(are)h(there?)0 4592 y Fd(H)7 b(int)p Fg(:)57 b(T)-8
b(ry)38 b(to)f(minimize)i(ev)m(ery)e(term)g(in)i(the)e(ob)5
b(jectiv)m(e)36 b(function)h(sepa-)0 4701 y(rately)-8
b(.)p eop end
%%Page: 12 12
TeXDict begin 12 11 bop 0 91 a Fe(12)90 b Ff(Chapter)32
b(1)h(Intr)-5 b(o)g(duction)0 311 y Fi(x)p Fh(2.)56 b(Examples)41
b(of)g(Linear)h(Programs)0 502 y Fg(As)27 b(y)m(ou)g(recall,)g(w)m(e)f
(men)m(tioned)f(in)i Fi(x)p Fg(1)f(that)f(linear)h(programs)f(arise)h
(in)h(busi-)0 612 y(ness)33 b(and)g(industry)-8 b(.)52
b(Our)33 b(goal)g(for)h(the)e(next)i(t)m(w)m(o)g(sections)e(is)i(to)g
(presen)m(t)0 722 y(some)27 b(cases)g(of)g(real-life)h(situations)e
(that)h(can)f(b)s(e)h(describ)s(ed)f(as)h(linear)g(pro-)0
831 y(grams.)0 968 y Fe(Example)36 b(2.1.)k Ff(A)32 b(Diet)h(Pr)-5
b(oblem)183 1105 y Fg(In)32 b(this)h(age)f(of)g(health)g
(consciousness,)g(man)m(y)h(p)s(eople)e(are)h(analyzing)0
1215 y(the)h(n)m(utritiv)m(e)g(con)m(ten)m(t)f(of)i(the)e(fo)s(o)s(d)g
(they)h(eat.)50 b(Let)33 b(us)h(see)f(ho)m(w)h(this)f(can)0
1324 y(b)s(e)c(set)h(up)g(as)g(a)g(linear)g(program.)183
1461 y(The)i(general)f(idea)h(is)h(to)f(select)g(a)g(mix)i(of)e
(di\013eren)m(t)g(fo)s(o)s(ds)f(for)h(a)h(p)s(er-)0 1571
y(son's)d(diet)f(in)h(suc)m(h)f(a)h(w)m(a)m(y)h(that)d(basic)h(n)m
(utritional)g(requiremen)m(ts)f(are)h(sat-)0 1681 y(is\014ed)h(at)g
(minim)m(um)h(cost.)183 1818 y(Of)g(course,)f(a)h(realistic)f(problem)g
(of)h(this)g(t)m(yp)s(e)f(w)m(ould)h(b)s(e)g(quite)f(com-)0
1927 y(plicated.)52 b(W)-8 b(e)35 b(w)m(ould)f(ha)m(v)m(e)h(to)f(rely)g
(on)h(n)m(utritionists)e(to)h(learn)g(what)f(the)0 2037
y(basic)k(n)m(utritional)h(requiremen)m(ts)e(are)h(\(and)g(these)g(w)m
(ould)h(v)-5 b(ary)37 b(with)h(the)0 2146 y(individual\).)52
b(Additionally)-8 b(,)35 b(in)g(order)d(to)h(ha)m(v)m(e)h(v)-5
b(ariet)m(y)34 b(and)f(a)m(v)m(oid)i(n)m(utri-)0 2256
y(tional)40 b(b)s(oredom,)h(w)m(e)g(w)m(ould)g(ha)m(v)m(e)f(to)g
(consider)f(a)i(long)f(list)h(of)f(p)s(ossible)0 2366
y(fo)s(o)s(ds.)f(Our)30 b(example)g(is)h(drastically)e(simpli\014ed.)
183 2503 y(According)g(to)h(the)g(recommendations)d(of)k(a)f(n)m
(utritionist,)g(a)h(p)s(erson's)0 2612 y(daily)22 b(requiremen)m(ts)f
(for)g(protein,)h(vitamin)g(A,)h(and)e(calcium)h(are)f(as)g(follo)m
(ws:)0 2722 y(50)40 b(grams)g(of)h(protein,)h(4000)e(IUs)h(\(in)m
(ternational)e(units\))h(of)g(vitamin)h(A,)0 2831 y(1000)25
b(milligrams)i(of)e(calcium.)39 b(F)-8 b(or)26 b(illustrativ)m(e)g
(purp)s(oses,)f(let)h(us)g(consider)0 2941 y(a)44 b(diet)f(consisting)g
(only)h(of)f(apples)g(\(ra)m(w,)k(with)d(skin\),)k(bananas)42
b(\(ra)m(w\),)0 3051 y(carrots)32 b(\(ra)m(w\),)j(dates)e(\(domestic,)g
(natural,)i(pitted,)f(c)m(hopp)s(ed\),)f(and)g(eggs)0
3160 y(\(whole,)48 b(ra)m(w,)h(fresh\))43 b(and)h(let)h(us,)j(if)d(w)m
(e)g(can,)j(determine)43 b(the)h(amoun)m(t)0 3270 y(of)c(eac)m(h)g(fo)s
(o)s(d)e(to)i(b)s(e)f(consumed)g(in)h(order)f(to)h(meet)f(the)g
(Recommended)0 3379 y(Dietary)29 b(Allo)m(w)m(ances)i(\(RD)m(A\))g(at)e
(minimal)i(cost.)p 0 3470 2527 4 v 0 3602 a Fe(F)-9 b(o)s(o)s(d)154
b(Unit)623 b(Protein)126 b(Vit.)47 b(A)127 b(Calcium)1304
3730 y Fg(\(g\))398 b(\(IU\))121 b(\(mg\))p 0 3811 V
0 3916 a(apple)167 b(1)30 b(medium)g(\(138)f(g\))166
b(0.3)445 b(73)248 b(9.6)0 4026 y(banana)90 b(1)30 b(medium)g(\(118)f
(g\))166 b(1.2)445 b(96)293 b(7)0 4136 y(carrot)140 b(1)41
b(medium)h(\(72)e(g\))178 b(0.7)308 b(20253)247 b(19)0
4245 y(dates)171 b(1)50 b(cup)146 b(\(178)49 b(g\))187
b(3.5)399 b(890)248 b(57)0 4355 y(egg)g(1)41 b(medium)h(\(44)e(g\))178
b(5.5)399 b(279)248 b(22)p 0 4418 V 183 4610 a(Since)33
b(our)g(goal)g(is)h(to)f(meet)g(the)g(RD)m(A)h(with)g(minimal)g(cost,)g
(w)m(e)g(also)0 4719 y(need)29 b(to)h(compile)g(the)f(costs)g(of)h
(these)f(fo)s(o)s(ds:)p eop end
%%Page: 13 13
TeXDict begin 13 12 bop 1167 91 a Fi(x)p Ff(2.)41 b(Examples)33
b(of)f(Line)-5 b(ar)33 b(Pr)-5 b(o)g(gr)g(ams)91 b Fe(13)p
798 223 1105 4 v 955 355 a(F)-9 b(o)s(o)s(d)389 b(Cost)1465
483 y(\(in)36 b(cen)m(ts\))p 798 564 V 798 669 a Fg(1)91
b(apple)453 b(10)798 779 y(1)91 b(banana)376 b(15)798
889 y(1)91 b(carrot)472 b(5)798 998 y(1)45 b(cup)30 b(of)g(dates)226
b(60)798 1108 y(1)45 b(egg)641 b(8)p 798 1171 V 183 1313
a(Using)43 b(these)e(data,)j(w)m(e)f(can)f(no)m(w)g(set)g(up)g(a)h
(linear)f(program.)76 b(Let)0 1423 y Fd(a;)15 b(b;)g(c;)g(d;)g(e)24
b Fg(b)s(e)d(v)-5 b(ariables)21 b(represen)m(ting)f(the)h(quan)m
(tities)h(of)f(the)g(\014v)m(e)i(fo)s(o)s(ds)d(w)m(e)0
1532 y(are)27 b(going)g(to)g(use)h(in)g(the)e(diet.)40
b(The)27 b(ob)5 b(jectiv)m(e)27 b(function)f(to)h(b)s(e)g(minimized)0
1642 y(is)k(the)e(total)g(cost)h(function)e(\(in)i(cen)m(ts\),)726
1872 y Fd(C)i Fg(=)26 b(10)p Fd(a)20 b Fg(+)g(15)p Fd(b)g
Fg(+)g(5)p Fd(c)g Fg(+)g(60)p Fd(d)f Fg(+)h(8)p Fd(e;)0
2056 y Fg(where)27 b(the)h(co)s(e\016cien)m(ts)e(represen)m(t)g(cost)i
(p)s(er)f(unit)h(of)g(the)g(\014v)m(e)g(items)g(under)0
2166 y(consideration.)183 2278 y(What)h(are)g(the)h(constrain)m(ts?)38
b(Ob)m(viously)-8 b(,)1064 2505 y Fd(a;)15 b(b;)g(c;)g(d;)g(e)27
b Fi(\025)e Fg(0)p Fd(:)961 b Fg(\()p Fd(i)p Fg(\))0
2732 y(These)29 b(constrain)m(ts)g(are)g(called)h Ff(nonne)-5
b(gativity)34 b(c)-5 b(onstr)g(aints.)183 2845 y Fg(Then,)37
b(to)f(ensure)f(that)g(the)h(minim)m(um)h(daily)g(requiremen)m(ts)e(of)
h(pro-)0 2954 y(tein,)30 b(vitamin)g(A,)i(and)d(calcium)h(are)g
(satis\014ed,)f(it)h(is)h(necessary)e(that)86 3099 y
Fc(8)86 3181 y(<)86 3345 y(:)182 3177 y Fg(0)p Fd(:)p
Fg(3)p Fd(a)91 b Fg(+)h(1)p Fd(:)p Fg(2)p Fd(b)f Fg(+)147
b(0)p Fd(:)p Fg(7)p Fd(c)g Fg(+)101 b(3)p Fd(:)p Fg(5)p
Fd(d)g Fg(+)147 b(5)p Fd(:)p Fg(5)p Fd(e)25 b Fi(\025)g
Fg(50)195 3286 y(73)p Fd(a)103 b Fg(+)i(96)p Fd(b)e Fg(+)91
b(20253)p Fd(c)f Fg(+)h(890)p Fd(d)f Fg(+)h(279)p Fd(e)24
b Fi(\025)h Fg(4000)182 3396 y(9)p Fd(:)p Fg(6)p Fd(a)91
b Fg(+)127 b(7)p Fd(b)g Fg(+)160 b(19)p Fd(c)f Fg(+)114
b(57)p Fd(d)f Fg(+)101 b(22)p Fd(e)24 b Fi(\025)i Fg(1000)p
Fd(;)2566 3286 y Fg(\()p Fd(ii)p Fg(\))0 3618 y(where,)33
b(for)f(example,)i(in)f(the)f(\014rst)h(constrain)m(t,)f(the)g(term)g
(0)p Fd(:)p Fg(3)15 b Fd(a)33 b Fg(expresses)0 3727 y(the)22
b(n)m(um)m(b)s(er)h(of)g(grams)g(of)h(protein)e(in)h(eac)m(h)g(apple)g
(m)m(ultiplied)h(b)m(y)g(the)e(quan-)0 3837 y(tit)m(y)28
b(of)g(apples)f(needed)g(in)h(the)f(diet,)h(the)f(second)g(term)g(1)p
Fd(:)p Fg(2)15 b Fd(b)28 b Fg(expresses)f(the)0 3947
y(n)m(um)m(b)s(er)j(of)g(grams)f(of)h(protein)f(in)h(eac)m(h)g(banana)e
(m)m(ultiplied)j(b)m(y)g(the)e(quan-)0 4056 y(tit)m(y)i(of)f(bananas)e
(needed)h(in)h(the)f(diet,)h(and)g(so)g(forth.)183 4169
y(Notice)20 b(that)g(the)g(terms)g(of)h(the)f(\014rst)g(constrain)m(t)f
(are)h(written)g(in)h(grams,)0 4278 y(all)33 b(terms)f(in)h(the)f
(second)f(constrain)m(t)g(are)h(written)f(in)i(IUs,)i(and)d(all)h
(terms)0 4388 y(in)e(the)e(third)g(constrain)m(t)g(are)g(written)g(in)i
(milligrams.)183 4500 y(Recall)j(that)f(solving)i(this)f(linear)g
(program)f(requires)h(\014nding)f(an)h(op-)0 4610 y(timal)42
b(v)-5 b(alue)42 b(and)f(an)h(optimal)g(solution.)75
b(Let)41 b(us)h(attempt)e(to)i(\014nd)f(the)0 4719 y(solution)30
b(of)h(this)f(problem)g(b)m(y)i(trial)e(and)h(error.)41
b(Since)30 b(carrots)f(are)h(c)m(heap,)p eop end
%%Page: 14 14
TeXDict begin 14 13 bop 0 91 a Fe(14)90 b Ff(Chapter)32
b(1)h(Intr)-5 b(o)g(duction)0 311 y Fg(let)28 b(us)h(consider)e
(\014rst)h(the)g(all-carrot)g(diet.)39 b(This)29 b(means)f(that)f
Fd(a;)15 b(b;)g(d)30 b Fg(and)e Fd(e)0 420 y Fg(equal)i(zero.)40
b(The)29 b(three)g(constrain)m(ts)f(in)j(\()p Ff(ii)9
b Fg(\))30 b(reduce)e(to)795 562 y Fc(8)795 644 y(<)795
808 y(:)947 639 y Fg(0)p Fd(:)p Fg(7)p Fd(c)146 b Fi(\025)137
b Fg(50)175 b(\(g\))891 749 y(20253)p Fd(c)89 b Fi(\025)i
Fg(4000)101 b(\(IU\))959 858 y(19)p Fd(c)159 b Fi(\025)91
b Fg(1000)f(\(mg\))2535 749 y(\()p Fd(iii)p Fg(\))183
1078 y(Th)m(us,)41 b(with)e Fd(c)g Fg(=)h(500)p Fd(=)p
Fg(7)d(\(appro)m(ximately)h(71)g(carrots\))f(the)h(protein)0
1187 y(requiremen)m(t)23 b(in)h(the)f(diet)h(is)h(exactly)e
(satis\014ed,)i(whereas)d(the)i(requiremen)m(ts)0 1297
y(for)33 b(vitamin)g(A)h(and)f(calcium)f(are)h(grossly)g(exceeded.)47
b(Since)33 b(carrots)e(cost)0 1406 y(5)i(cen)m(ts)e(eac)m(h,)i(w)m(e)g
(\014nd)f(that)f(the)h(cost)g(of)g(this)h(diet)f(is)h($25)p
Fd(=)p Fg(7)p Fd(:)f Fg(Can)g(w)m(e)h(do)0 1516 y(b)s(etter?)k(Can)25
b(w)m(e)i(\014nd)f(another)e(diet)i(consisting)f(of)h(something)f
(other)f(than)0 1626 y(carrots)31 b(and)h(that)f(costs)h(less)h(than)e
($25)p Fd(=)p Fg(7)d Fi(\031)i Fg($3)p Fd(:)p Fg(57)i(a)g(da)m(y?)48
b(\(The)32 b(p)s(erson)0 1735 y(b)s(eing)d(ask)m(ed)h(to)g(eat)f(71)h
(carrots)e(p)s(er)h(da)m(y)i(hop)s(es)d(so!\))183 1845
y(Note)j(that)g(since)h(eggs)g(are)f(an)h(excellen)m(t)g(source)f(of)h
(protein,)g(the)f(co-)0 1954 y(e\016cien)m(t)h(of)h Fd(e)f
Fg(is)i(comparativ)m(ely)e(large)g(in)h(the)f(constrain)m(t)f
(describing)h(the)0 2064 y(protein)f(requiremen)m(t.)46
b(This)33 b(observ)-5 b(ation)31 b(suggests)g(that)g(w)m(e)h(could)g
(meet)0 2174 y(the)d(n)m(utritional)g(requiremen)m(ts)f(w)m(e)i(ha)m(v)
m(e)h(established)d(for)h(ourselv)m(es)h(while)0 2283
y(a)m(v)m(oiding)d(monoton)m(y)f(if)h(w)m(e)h(incorp)s(orate)23
b(some)k(eggs)f(in)m(to)g(our)h(daily)g(men)m(u.)0 2393
y(W)-8 b(e)38 b(will)i(try)e(to)f(reduce)g(the)g(amoun)m(t)h(of)g
(carrots,)g Fd(c;)h Fg(in)f(our)g(diet)g(b)m(y)g(in-)0
2502 y(creasing)30 b(the)g(n)m(um)m(b)s(er)g(of)g(eggs,)h
Fd(e:)g Fg(Since)f(w)m(e)h(k)m(eep)g Fd(a;)15 b(b)32
b Fg(and)f Fd(d)f Fg(equal)h(zero,)0 2612 y(the)e(three)g(constrain)m
(ts)f(are)i(no)m(w)225 2731 y Fc(8)225 2813 y(<)225 2977
y(:)377 2808 y Fg(0)p Fd(:)p Fg(7)p Fd(c)p Fg(+)157 b(5)p
Fd(:)p Fg(5)p Fd(e)257 b Fi(\025)26 b Fg(50)45 b(\(grams)29
b(of)h(protein\))321 2918 y(20253)p Fd(c)p Fg(+)89 b(279)p
Fd(e)192 b Fi(\025)25 b Fg(4000)45 b(\(IUs)30 b(of)g(vitamin)g(A\))390
3027 y(19)p Fd(c)p Fg(+)181 b(22)p Fd(e)113 b Fi(\025)26
b Fg(1000)44 b(\(milligrams)31 b(of)f(calcium\).)2550
2918 y(\()p Fd(iv)s Fg(\))183 3242 y(It)21 b(is)i(easy)f(to)f(see)g
(that)g(w)m(e)h(satisfy)g(these)f(constrain)m(ts)f(with)i
Fd(c)j Fg(=)g(50)p Fd(;)15 b(e)25 b Fg(=)0 3351 y(3)p
Fd(:)h Fg(Since)f(carrots)e(cost)i(5)g(cen)m(ts)g(eac)m(h)g(and)g(eggs)
g(cost)f(8)i(cen)m(ts)e(eac)m(h,)j(the)d(cost)0 3461
y(of)37 b(this)g(new)f(diet)h(is)h($2)p Fd(:)p Fg(74)p
Fd(:)e Fg(V)-8 b(oila!)63 b(Our)37 b(new)f(diet)h(of)g(50)g(carrots)e
(and)h(3)0 3570 y(eggs)28 b(p)s(er)f(da)m(y)i(o\013ers)f(a)g(w)m
(elcome)g(respite)g(from)g(the)f(71-carrot)g(diet)h(as)g(w)m(ell)0
3680 y(as)i(b)s(eing)f(substan)m(tially)h(c)m(heap)s(er.)39
b(Shall)30 b(w)m(e)g(try)g(to)g(do)g(ev)m(en)g(b)s(etter?)183
3789 y(Although)h(the)g(trial-and-error)f(metho)s(d)g(has)i(help)s(ed)f
(us)h(to)f(do)h(some)0 3899 y(analysis,)42 b(it)d(giv)m(es)h(us)f(no)g
(guidelines)f(as)h(to)g(whether)e(w)m(e)i(can)g(lo)m(w)m(er)g(the)0
4009 y(cost)c(further)f(b)m(y)j(considering)e(other)f(com)m(binations)h
(of)h(the)f(\014v)m(e)i(fo)s(o)s(ds)d(in)0 4118 y(our)e(daily)h(diet.)
46 b(W)-8 b(e)32 b(will)i(return)d(to)g(this)h(example)g(later)g(when)f
(w)m(e)i(study)0 4228 y(the)c(dual)h(simplex)h(metho)s(d)d(\(Chapter)g
(5\).)p eop end
%%Page: 15 15
TeXDict begin 15 14 bop 1167 91 a Fi(x)p Ff(2.)41 b(Examples)33
b(of)f(Line)-5 b(ar)33 b(Pr)-5 b(o)g(gr)g(ams)91 b Fe(15)0
311 y(Remark.)41 b Fg(Here)30 b(is)g(some)g(more)f(fo)s(o)s(d)g(for)g
(though)m(t)g(ab)s(out)f(the)h(diet)h(prob-)0 420 y(lem.)183
575 y(\(a\))i(Eac)m(h)i(ingredien)m(t)e(can)h(b)s(e)g(measured)g(in)h
(its)g(o)m(wn)f(units.)51 b(Alw)m(a)m(ys)0 685 y(include)35
b(the)h(name)f(of)h(the)f(unit)h(to)f(a)m(v)m(oid)i(confusion.)57
b(Indicate)34 b(also)i(the)0 794 y(unit)31 b(for)h(the)f(cost)g(ob)5
b(jectiv)m(e)30 b(function)h(\(cost)f(can)h(b)s(e)g(expressed)g(in)h
(cen)m(ts,)0 904 y(dollars,)e(thousands)f(of)h(dollars,)g(etc.\).)183
1059 y(\(b\))e(Could)h(w)m(e)g(ha)m(v)m(e)g(allo)m(w)m(ed)h(the)e(n)m
(um)m(b)s(er)h(of)f(eggs)h(in)g(the)f(answ)m(er)h(to)0
1168 y(b)s(e)g(expressed)g(as)i(a)f(fraction,)f(sa)m(y)i(1)p
Fd(=)p Fg(2?)40 b(In)30 b(a)h(formal)f(solution)f(to)h(a)h(linear)0
1278 y(program,)41 b(y)m(es,)i(w)m(e)d(could)f(ha)m(v)m(e)h(\(the)e
(divisibilit)m(y)k(assumption)c(of)i(linear)0 1388 y(programming\).)70
b(Do)s(es)40 b(it)g(mak)m(e)h(sense?)71 b(It)41 b(dep)s(ends)d(on)j
(the)e(situation)0 1497 y(discussed.)51 b(Sometimes)33
b(w)m(e)i(ha)m(v)m(e)f(to)g(require)f(that)g(certain)f(v)-5
b(ariables)34 b(are)0 1607 y(in)m(tegers.)40 b(Adding)30
b(these)e(nonlinear)h(constrain)m(ts)g(turns)g(a)h(linear)g(program)0
1716 y(in)m(to)g(an)g(in)m(teger)f(linear)h(program.)183
1871 y(\(c\))41 b(Ho)m(w)h(do)g(w)m(e)g(solv)m(e)h(the)e(diet)g
(problem?)75 b(W)-8 b(e)43 b(will)g(answ)m(er)e(this)0
1981 y(question)f(when)g(w)m(e)h(discuss)g(the)f(simplex)h(metho)s(d)e
(in)j(Chapter)d(4.)73 b(F)-8 b(or)0 2091 y(no)m(w,)41
b(w)m(e)e(ha)m(v)m(e)g(tried)e(a)i(few)f(iterations)f(of)h(the)g
(trial-and-error)f(metho)s(d,)0 2200 y(and,)32 b(although)f(w)m(e)h(w)m
(ere)g(able)g(to)f(come)h(up)f(with)h(t)m(w)m(o)h(feasible)f
(solutions,)0 2310 y(w)m(e)e(still)i(do)d(not)h(kno)m(w)g(what)f(the)h
(optimal)g(solution)f(is.)183 2465 y(\(d\))39 b(Should)h(w)m(e)g
(measure)g(apples)f(in)i(w)m(eigh)m(t)g(units)f(rather)f(than)g(in)0
2574 y(pieces,)31 b(since)f(apples)g(could)h(b)s(e)f(of)g(di\013eren)m
(t)g(size?)43 b(It)30 b(dep)s(ends.)41 b(The)31 b(unit)0
2684 y(y)m(ou)38 b(c)m(ho)s(ose)f(dep)s(ends)f(on)i(real-life)g
(situations.)63 b(If)38 b(y)m(ou)h(buy)f(apples)f(in)h(a)0
2794 y(con)m(v)m(enience)j(store,)k(they)d(are)g(ab)s(out)f(the)h(same)
g(size)h(and)f(y)m(ou)h(pa)m(y)g(for)0 2903 y(eac)m(h)30
b(piece)g(of)g(fruit.)42 b(So)30 b Ff(pie)-5 b(c)g(e)32
b Fg(is)f(appropriate)d(in)j(this)g(situation.)40 b(On)31
b(the)0 3013 y(other)37 b(hand,)i(if)g(y)m(ou)g(buy)f(y)m(our)g(apples)
g(b)m(y)g(the)g(bushel)f(at)h(a)g(farm,)i(then)0 3122
y Fd(bushel)d Fg(is)f(an)f(appropriate)e(unit.)55 b(Just)35
b(switc)m(hing)g(to)f(a)i(di\013eren)m(t)e(w)m(eigh)m(t)0
3232 y(unit)41 b(is)h(not)f(a)g(complete)f(cure)g(for)h(v)-5
b(ariations)41 b(in)h(ingredien)m(ts)e(although)0 3341
y(sometimes)32 b(it)g(helps.)47 b(The)32 b(n)m(um)m(b)s(ers)g(in)h
(real)f(life)h(are)e(often)g(not)h(exact)f(\(if)0 3451
y(they)e(are)f(kno)m(wn)i(at)e(all\).)41 b(Can)29 b(y)m(ou)g(plan)h(y)m
(our)f(diet)g(for)g(the)f(next)h(mon)m(ths)0 3561 y(if)35
b(y)m(ou)h(are)e(not)g(ev)m(en)h(sure)f(ab)s(out)f(the)h(prices)g
(tomorro)m(w?)54 b(Other)34 b(p)s(eople)0 3670 y(do)c(it,)h(and)e
(sometimes)h(y)m(ou)g(m)m(ust)g(do)g(it,)h(to)s(o.)p
2661 3662 40 40 v 183 3898 a(Let)d(us)h(try)g(to)f(set)h(up)f(another)f
(problem)h(where)g(the)g(goal)h(is)h(to)e(mini-)0 4008
y(mize)i(cost.)0 4235 y Fe(Example)36 b(2.2.)k Ff(A)32
b(Blending)i(Pr)-5 b(oblem)183 4390 y Fg(Man)m(y)44 b(coins)g(in)h
(di\013eren)m(t)f(coun)m(tries)g(are)f(made)h(from)h(cupronic)m(k)m(el)
0 4500 y(\(75\045)40 b(copp)s(er,)h(25\045)f(nic)m(k)m(el\).)72
b(Supp)s(ose)39 b(that)g(the)h(four)f(a)m(v)-5 b(ailable)41
b(allo)m(ys)0 4610 y(\(scrap)19 b(metals\),)i Fd(A;)32
b(B)5 b(;)30 b(C)q(;)i(D)s(;)20 b Fg(to)g(b)s(e)f(utilized)h(to)f(pro)s
(duce)f(the)h(coin)h(con)m(tain)0 4719 y(the)29 b(p)s(ercen)m(tages)e
(of)j(copp)s(er)e(and)i(nic)m(k)m(el)h(sho)m(wn)f(in)h(the)e(follo)m
(wing)h(table:)p eop end
%%Page: 16 16
TeXDict begin 16 15 bop 0 91 a Fe(16)90 b Ff(Chapter)32
b(1)h(Intr)-5 b(o)g(duction)p 747 223 1206 4 v 815 355
a Fe(Allo)m(y)155 b Fd(A)140 b(B)f(C)k(D)p 747 446 V
747 551 a Fg(\045)31 b(copp)s(er)89 b(90)116 b(80)g(70)g(60)747
660 y(\045)72 b(nic)m(k)m(el)92 b(10)116 b(20)g(30)g(40)747
770 y($/lb)297 b(1.2)91 b(1.4)g(1.7)g(1.9)p 747 833 V
183 997 a(The)32 b(cost)f(in)i(dollars)f(p)s(er)f(p)s(ound)g(of)h(eac)m
(h)g(allo)m(y)h(is)g(giv)m(en)g(as)f(the)f(last)0 1107
y(ro)m(w)f(in)h(the)e(same)h(table.)183 1216 y(Notice)42
b(that)f(none)g(of)h(the)g(four)g(allo)m(ys)h(con)m(tains)f(the)f
(desired)h(p)s(er-)0 1326 y(cen)m(tages)33 b(of)j(copp)s(er)d(and)h
(nic)m(k)m(el.)58 b(Our)35 b(goal)g(is)h(to)e(com)m(bine)h(these)f
(allo)m(ys)0 1436 y(in)m(to)h(a)g(new)g(blend)g(con)m(taining)e(the)i
(desired)f(p)s(ercen)m(tages)e(of)j(copp)s(er)e(and)0
1545 y(nic)m(k)m(el)d(for)e(cupronic)m(k)m(el)h(while)g(minimizing)h
(the)e(cost.)39 b(This)29 b(lends)g(itself)g(to)0 1655
y(a)h(linear)g(program.)183 1764 y(Let)35 b Fd(a;)46
b(b;)g(c;)g(d)35 b Fg(b)s(e)g(the)g(amoun)m(ts)f(of)i(allo)m(ys)g
Fd(A;)c(B)5 b(;)30 b(C)q(;)i(D)38 b Fg(in)e(p)s(ounds)0
1874 y(to)30 b(mak)m(e)g(a)g(p)s(ound)f(of)h(the)f(new)h(blend.)40
b(Th)m(us,)1060 2093 y Fd(a;)46 b(b;)g(c;)g(d)25 b Fi(\025)g
Fg(0)p Fd(:)957 b Fg(\()p Fd(i)p Fg(\))0 2267 y(Since)32
b(the)g(new)h(blend)f(will)i(b)s(e)e(comp)s(osed)f(exclusiv)m(ely)j
(from)e(the)g(four)h(al-)0 2376 y(lo)m(ys,)f(w)m(e)e(ha)m(v)m(e)999
2486 y Fd(a)20 b Fg(+)h Fd(b)f Fg(+)h Fd(c)e Fg(+)i Fd(d)k
Fg(=)g(1)p Fd(:)865 b Fg(\()p Fd(ii)p Fg(\))0 2659 y(The)30
b(conditions)f(on)g(the)h(comp)s(osition)e(of)i(the)f(new)h(blend)g
(giv)m(e)487 2799 y Fc(\032)571 2873 y Fd(:)p Fg(9)p
Fd(a)92 b Fg(+)f Fd(:)p Fg(8)p Fd(b)h Fg(+)f Fd(:)p Fg(7)p
Fd(c)g Fg(+)g Fd(:)p Fg(6)p Fd(d)g Fg(=)104 b Fd(:)p
Fg(75)571 2983 y Fd(:)p Fg(1)p Fd(a)92 b Fg(+)f Fd(:)p
Fg(2)p Fd(b)h Fg(+)f Fd(:)p Fg(3)p Fd(c)g Fg(+)g Fd(:)p
Fg(4)p Fd(d)g Fg(=)g Fd(:)p Fg(25)p Fd(:)2535 2928 y
Fg(\()p Fd(iii)p Fg(\))183 3202 y(F)-8 b(or)25 b(example,)i(the)e
(\014rst)g(equalit)m(y)i(states)d(that)h(90\045)g(of)h(the)f(amoun)m(t)
g(of)0 3312 y(allo)m(y)k Fd(A)p Fg(,)g(plus)f(80\045)f(of)h(the)f
(amoun)m(t)g(of)g(allo)m(y)i Fd(B)5 b Fg(,)28 b(plus)g(70\045)g(of)f
(the)g(amoun)m(t)0 3421 y(of)33 b(allo)m(y)i Fd(C)7 b
Fg(,)34 b(plus)g(60\045)f(of)g(the)g(amoun)m(t)f(of)h(allo)m(y)i(D)e
(will)i(giv)m(e)f(the)e(desired)0 3531 y(75\045)k(of)g(copp)s(er)f(in)i
(a)f(p)s(ound)f(of)h(the)g(new)g(blend.)59 b(Lik)m(ewise,)39
b(the)d(second)0 3641 y(equalit)m(y)31 b(giv)m(es)f(the)g(desired)f
(amoun)m(t)g(of)h(nic)m(k)m(el)h(in)g(the)e(new)h(blend.)183
3750 y(T)-8 b(aking)27 b(the)g(preceding)e(constrain)m(ts)h(in)m(to)i
(accoun)m(t,)e(w)m(e)i(minimize)g(the)0 3860 y(cost)h(function)765
3969 y Fd(C)j Fg(=)26 b(1)p Fd(:)p Fg(2)p Fd(a)20 b Fg(+)g(1)p
Fd(:)p Fg(4)p Fd(b)g Fg(+)h(1)p Fd(:)p Fg(7)p Fd(c)e
Fg(+)i(1)p Fd(:)p Fg(9)p Fd(d)183 4143 y Fg(In)28 b(this)g(problem)f
(all)i(the)e(constrain)m(ts,)g(except)g(\()p Fd(i)p Fg(\))p
Fd(;)h Fg(are)f Ff(e)-5 b(qualities.)41 b Fg(In)0 4252
y(fact,)32 b(there)e(are)h(three)f(linear)i(equations)e(and)i(four)f
(unkno)m(wns.)45 b(Ho)m(w)m(ev)m(er,)0 4362 y(the)34
b(three)g(equations)g(are)g(not)h(indep)s(enden)m(t.)53
b(F)-8 b(or)35 b(example,)h(the)e(sum)h(of)0 4472 y(the)29
b(equations)g(in)i(\()p Fd(iii)p Fg(\))g(giv)m(es)f(\()p
Fd(ii)p Fg(\))p Fd(:)h Fg(Th)m(us)f(\()p Fd(ii)p Fg(\))h(is)g(redundan)
m(t.)p eop end
%%Page: 17 17
TeXDict begin 17 16 bop 1167 91 a Fi(x)p Ff(2.)41 b(Examples)33
b(of)f(Line)-5 b(ar)33 b(Pr)-5 b(o)g(gr)g(ams)91 b Fe(17)183
311 y Fg(In)26 b(general,)g(a)h(constrain)m(t)e(is)i(said)g(to)f(b)s(e)
f Ff(r)-5 b(e)g(dundant)27 b Fg(if)h(it)e(follo)m(ws)i(from)0
420 y(the)41 b(other)g(constrain)m(ts)g(of)h(our)f(system.)77
b(Since)41 b(it)i(con)m(tributes)d(no)i(new)0 530 y(information)29
b(regarding)f(the)i(solutions)f(of)i(the)e(linear)h(program,)f(it)i
(can)e(b)s(e)0 639 y(dropp)s(ed)f(from)i(consideration)e(without)h(c)m
(hanging)g(the)g(feasible)h(set.)0 791 y Fe(Example)36
b(2.3.)k Ff(A)32 b(Manufacturing)h(Pr)-5 b(oblem)183
909 y Fg(W)d(e)40 b(are)g(no)m(w)h(going)f(to)f(state)h(a)g(program)f
(in)i(whic)m(h)g(the)e(ob)5 b(jectiv)m(e)0 1018 y(function,)31
b(a)i(pro\014t)d(function,)i(is)h(to)e(b)s(e)g(maximized.)47
b(A)33 b(factory)e(pro)s(duces)0 1128 y(three)26 b(pro)s(ducts:)37
b(P1,)28 b(P2,)h(and)e(P3.)40 b(The)27 b(unit)g(of)g(measure)f(for)h
(eac)m(h)g(pro)s(d-)0 1237 y(uct)41 b(is)i(the)e(standard-sized)f(b)s
(o)m(xes)i(in)m(to)g(whic)m(h)g(the)f(pro)s(duct)f(is)j(placed.)0
1347 y(The)30 b(pro\014t)g(p)s(er)g(b)s(o)m(x)h(of)f(P1,)i(P2,)f(and)g
(P3)g(is)g($2,)g($3)g(and)f($7)p Fd(;)h Fg(resp)s(ectiv)m(ely)-8
b(.)0 1456 y(Denote)35 b(b)m(y)i Fd(x)505 1470 y Fb(1)546
1456 y Fd(;)46 b(x)669 1470 y Fb(2)711 1456 y Fd(;)g(x)834
1470 y Fb(3)912 1456 y Fg(the)35 b(n)m(um)m(b)s(er)i(of)f(b)s(o)m(xes)g
(of)h(P1,)i(P2,)f(and)e(P3,)j(re-)0 1566 y(sp)s(ectiv)m(ely)-8
b(.)41 b(So)29 b(the)h(pro\014t)e(function)h(w)m(e)i(w)m(an)m(t)f(to)f
(maximize)i(is)921 1808 y Fd(P)38 b Fg(=)25 b(2)p Fd(x)1212
1822 y Fb(1)1273 1808 y Fg(+)20 b(3)p Fd(x)1462 1822
y Fb(2)1524 1808 y Fg(+)g(7)p Fd(x)1713 1822 y Fb(3)1754
1808 y Fd(:)183 2057 y Fg(The)41 b(\014v)m(e)h(resources)d(used)i(are)g
(ra)m(w)g(materials)g(R1)h(and)f(R2,)k(lab)s(or,)0 2167
y(w)m(orking)d(area,)h(and)e(time)g(on)g(a)h(mac)m(hine.)74
b(There)40 b(are)h(1200)f(lbs)i(of)f(R1)0 2276 y(a)m(v)-5
b(ailable,)47 b(300)42 b(lbs)i(of)f(R2,)k(40)c(emplo)m(y)m(ee-hours)f
(of)h(lab)s(or,)j(8000)c(m)2542 2243 y Fb(2)2626 2276
y Fg(of)0 2386 y(w)m(orking)30 b(area,)g(and)f(8)h(mac)m(hine-hours)f
(on)h(the)g(mac)m(hine.)183 2503 y(The)37 b(amoun)m(t)h(of)g(eac)m(h)f
(resource)f(needed)h(for)h(a)g(b)s(o)m(x)g(of)g(eac)m(h)f(of)h(the)0
2613 y(pro)s(ducts)43 b(is)k(giv)m(en)f(in)g(the)f(follo)m(wing)h
(table)f(\(whic)m(h)g(also)h(includes)f(the)0 2722 y(aforemen)m(tioned)
28 b(data\):)p 216 2793 2268 4 v 216 2925 a Fe(Resource)127
b(Unit)f Fg(P1)151 b(P2)227 b(P3)151 b Fi(k)30 b Fe(Av)-6
b(ailable)p 216 3016 V 216 3121 a Fg(R1)431 b(lb)305
b(40)258 b(20)152 b(60)121 b Fi(k)153 b Fg(1200)216 3230
y(R2)431 b(lb)351 b(4)304 b(1)197 b(6)122 b Fi(k)199
b Fg(300)216 3340 y(Lab)s(or)305 b(hour)243 b(.2)268
b(.7)183 b(2)122 b Fi(k)245 b Fg(40)216 3450 y(Area)353
b Fd(m)840 3416 y Fb(2)1095 3450 y Fg(100)197 b(100)121
b(800)g Fi(k)153 b Fg(8000)216 3559 y(Mac)m(hine)208
b(hour)243 b(.1)268 b(.3)153 b(.8)127 b Fi(k)290 b Fg(8)p
216 3622 V 216 3700 a(Pro\014t)313 b($)381 b(2)258 b(3)243
b(7)122 b Fi(k)133 b(!)96 b Fg(max)183 3887 y(As)35 b(w)m(e)g(see)f
(from)g(this)g(table,)h(to)f(pro)s(duce)e(a)i(b)s(o)m(x)h(of)f(P1)h(w)m
(e)f(need)g(40)0 3996 y(p)s(ounds)25 b(of)h(R1,)h(4)g(p)s(ounds)d(of)i
(R2,)i(0.2)e(hours)f(of)i(lab)s(or,)f(100)f(m)2217 3963
y Fb(2)2285 3996 y Fg(of)h(w)m(orking)0 4106 y(area,)33
b(and)f(0.1)h(hours)g(on)f(the)g(mac)m(hine.)49 b(Also,)35
b(the)d(amoun)m(t)g(of)h(resources)0 4216 y(needed)39
b(to)h(pro)s(duce)f(a)h(b)s(o)m(x)h(of)f(P2)h(and)f(P3)h(can)f(b)s(e)g
(deduced)f(from)h(the)0 4325 y(table.)183 4477 y(The)29
b(constrain)m(ts)g(are)1073 4719 y Fd(x)1125 4733 y Fb(1)1166
4719 y Fd(;)15 b(x)1258 4733 y Fb(2)1300 4719 y Fd(;)g(x)1392
4733 y Fb(3)1459 4719 y Fi(\025)26 b Fg(0)p Fd(;)970
b Fg(\()p Fd(i)p Fg(\))p eop end
%%Page: 18 18
TeXDict begin 18 17 bop 0 91 a Fe(18)90 b Ff(Chapter)32
b(1)h(Intr)-5 b(o)g(duction)0 311 y Fg(and)56 452 y Fc(8)56
534 y(>)56 561 y(>)56 589 y(>)56 616 y(<)56 780 y(>)56
808 y(>)56 835 y(>)56 863 y(:)175 502 y Fg(40)p Fd(x)319
516 y Fb(1)474 502 y Fg(+)114 b(20)p Fd(x)803 516 y Fb(2)958
502 y Fg(+)g(60)p Fd(x)1287 516 y Fb(3)1442 502 y Fi(\024)91
b Fg(1200)f(\(p)s(ounds)28 b(of)i(R1\))198 611 y(4)p
Fd(x)296 625 y Fb(1)474 611 y Fg(+)160 b Fd(x)757 625
y Fb(2)958 611 y Fg(+)137 b(6)p Fd(x)1264 625 y Fb(3)1442
611 y Fi(\024)114 b Fg(300)f(\(p)s(ounds)28 b(of)i(R2\))186
721 y Fd(:)p Fg(2)p Fd(x)309 735 y Fb(1)474 721 y Fg(+)124
b Fd(:)p Fg(7)p Fd(x)792 735 y Fb(2)958 721 y Fg(+)137
b(2)p Fd(x)1264 735 y Fb(3)1442 721 y Fi(\024)g Fg(40)300
b(\(lab)s(or\))153 831 y(100)p Fd(x)343 845 y Fb(1)474
831 y Fg(+)91 b(100)p Fd(x)826 845 y Fb(2)958 831 y Fg(+)g(800)p
Fd(x)1310 845 y Fb(3)1442 831 y Fi(\024)g Fg(8000)146
b(\(area)29 b(in)i(m)2351 797 y Fb(2)2392 831 y Fg(\))186
940 y Fd(:)p Fg(1)p Fd(x)309 954 y Fb(1)474 940 y Fg(+)124
b Fd(:)p Fg(3)p Fd(x)792 954 y Fb(2)958 940 y Fg(+)g
Fd(:)p Fg(8)p Fd(x)1276 954 y Fb(3)1442 940 y Fi(\024)160
b Fg(8)250 b(\(mac)m(hine\).)2566 721 y(\()p Fd(ii)p
Fg(\))183 1151 y(Note)28 b(that)f(a)h(naiv)m(e)h(\014rst)f(appro)m
(ximation)g(of)g(the)g(optimal)g(solution)g(is)0 1260
y(to)23 b(pro)s(duce)d(only)k(b)s(o)m(xes)e(of)h(P3,)j(since)c(the)h
(pro\014t)e(from)i(eac)m(h)g(one)f(of)h(them)g(is)0 1370
y(bigger)28 b(than)g(the)g(pro\014t)g(from)h(b)s(o)m(xes)g(of)g(P1)g
(and)f(P2.)41 b(This)29 b(means)g(setting)0 1479 y(up)h
Fd(x)184 1493 y Fb(1)250 1479 y Fg(=)c(0)k(and)g Fd(x)653
1493 y Fb(2)719 1479 y Fg(=)25 b(0)p Fd(:)31 b Fg(The)f(constrain)m(ts)
e(\()p Fd(ii)p Fg(\))j(no)m(w)f(b)s(ecome)955 1622 y
Fc(8)955 1704 y(>)955 1732 y(>)955 1759 y(>)955 1786
y(<)955 1951 y(>)955 1978 y(>)955 2005 y(>)955 2033 y(:)1075
1672 y Fg(60)p Fd(x)1219 1686 y Fb(3)1373 1672 y Fi(\024)92
b Fg(1200)1098 1782 y(6)p Fd(x)1196 1796 y Fb(3)1373
1782 y Fi(\024)115 b Fg(300)1098 1891 y(2)p Fd(x)1196
1905 y Fb(3)1373 1891 y Fi(\024)137 b Fg(40)1052 2001
y(800)p Fd(x)1242 2015 y Fb(3)1373 2001 y Fi(\024)92
b Fg(8000)1085 2111 y Fd(:)p Fg(8)p Fd(x)1208 2125 y
Fb(3)1373 2111 y Fi(\024)148 b Fg(8)p Fd(:)2535 1891
y Fg(\()p Fd(iii)p Fg(\))183 2275 y(One)25 b(solution)g(to)g(these)f
(inequalities)h(is)i Fd(x)1663 2289 y Fb(3)1729 2275
y Fg(=)e(10)h(with)f(pro\014t)f Fd(P)38 b Fg(=)25 b(70)p
Fd(:)0 2385 y Fg(Ho)m(w)m(ev)m(er,)36 b(when)d(w)m(e)h(\014gure)f(out)g
(ho)m(w)h(m)m(uc)m(h)g(of)g(the)f(resources)e(w)m(ere)j(used)0
2494 y(to)f(pro)s(duce)f(these)h(10)g(b)s(o)m(xes)h(of)g(P3,)h(w)m(e)f
(see)g(that)e(600)h(lbs)i(of)f(R1)g(remain)0 2604 y(un)m(used,)39
b(more)e(than)g(half)h(of)f(R2)h(w)m(as)g(not)f(used,)i(and)e(half)h
(of)f(the)g(lab)s(or)0 2714 y(w)m(as)f(w)m(asted.)57
b(Please)36 b(k)m(eep)f(in)i(mind)f(that)e(the)h(maximal)i(pro\014t)d
(in)m(v)m(olv)m(es)0 2823 y(an)25 b(optimal)f(use)h(of)f(the)g
(resources)f(in)j(order)d(to)i(get)e(the)h(b)s(est)g(return)f(on)i(our)
0 2933 y(in)m(v)m(estmen)m(t.)53 b(Although)33 b(this)h(naiv)m(e)h
(\014rst)e(appro)m(ximation)g(is)i(feasible,)g(w)m(e)0
3042 y(are)c(guessing)h(that)f(it)h(is)h(not)e(an)h(optimal)g(solution)
f(to)h(this)g(problem.)46 b(W)-8 b(e)0 3152 y(will)36
b(see)f(later)f(that)f(the)h(optimal)h(solution)f(is)i
Fd(x)1751 3166 y Fb(1)1825 3152 y Fg(=)d(20)p Fd(;)15
b(x)2113 3166 y Fb(2)2188 3152 y Fg(=)33 b(20)p Fd(;)15
b(x)2476 3166 y Fb(3)2550 3152 y Fg(=)33 b(0)0 3262 y(with)d(max)25
b(=)h(100)p Fd(:)0 3401 y Fe(Example)36 b(2.4.)k Ff(A)32
b(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblem)0 3512
y Fg(Another)19 b(concern)g(that)g(man)m(ufacturers)g(face)g(daily)j
(is)f Ff(tr)-5 b(ansp)g(ortation)24 b(c)-5 b(osts)0 3622
y Fg(for)21 b(their)g(pro)s(ducts.)35 b(Let)21 b(us)h(lo)s(ok)f(at)g
(the)f(follo)m(wing)i(h)m(yp)s(othetical)d(situation)0
3731 y(and)30 b(try)f(to)h(set)g(it)g(up)g(as)g(a)g(linear)g(program.)
183 3842 y(A)42 b(man)m(ufacturer)c(of)j(widgets)g(has)f(w)m(arehouses)
g(in)i(A)m(tlan)m(ta,)i(Balti-)0 3952 y(more,)f(and)d(Chicago.)70
b(The)40 b(w)m(arehouse)f(in)i(A)m(tlan)m(ta)f(has)g(50)g(widgets)g(in)
0 4062 y(sto)s(c)m(k,)32 b(the)f(w)m(arehouse)g(in)h(Baltimore)f(has)h
(30)g(widgets)f(in)h(sto)s(c)m(k,)h(and)e(the)0 4171
y(w)m(arehouse)21 b(in)j(Chicago)e(has)g(50)h(widgets)f(in)h(sto)s(c)m
(k.)38 b(There)22 b(are)g(retail)g(stores)0 4281 y(in)43
b(Detroit,)i(Eugene,)f(F)-8 b(airview,)47 b(Gro)m(v)m(e)42
b(Cit)m(y)-8 b(,)48 b(and)42 b(Houston.)77 b(The)42 b(re-)0
4390 y(tail)d(stores)f(in)h(Detroit,)h(Eugene,)g(F)-8
b(airview,)42 b(Gro)m(v)m(e)d(Cit)m(y)-8 b(,)43 b(and)38
b(Houston)0 4500 y(need)29 b(at)g(least)g(25,)h(10,)g(20,)f(30,)h(15)f
(widgets,)h(resp)s(ectiv)m(ely)-8 b(.)40 b(Ob)m(viously)-8
b(,)31 b(the)0 4610 y(man)m(ufacturer)e(needs)h(to)g(ship)h(widgets)f
(to)h(all)h(\014v)m(e)f(stores)f(from)h(the)f(three)0
4719 y(w)m(arehouses)38 b(and)g(he)h(w)m(an)m(ts)g(to)g(do)f(this)h(in)
h(the)e(c)m(heap)s(est)f(p)s(ossible)h(w)m(a)m(y)-8 b(.)p
eop end
%%Page: 19 19
TeXDict begin 19 18 bop 1167 91 a Fi(x)p Ff(2.)41 b(Examples)33
b(of)f(Line)-5 b(ar)33 b(Pr)-5 b(o)g(gr)g(ams)91 b Fe(19)0
311 y Fg(This)33 b(presen)m(ts)f(a)h(p)s(erfect)d(bac)m(kdrop)i(for)g
(a)h(linear)g(program,)f(to)h(minimize)0 420 y(shipping)j(cost.)57
b(T)-8 b(o)36 b(start,)g(w)m(e)g(need)f(to)h(kno)m(w)g(the)f(cost)g(of)
g(shipping)h(one)0 530 y(widget)31 b(from)g(eac)m(h)g(w)m(arehouse)e
(to)i(eac)m(h)g(retail)g(store.)44 b(This)31 b(is)h(giv)m(en)g(b)m(y)g
(a)0 639 y(shipping)e(cost)f(table)p 256 701 2189 4 v
969 818 a Fe(1.D)168 b(2.E)206 b(3.F)110 b(4.G)200 b(5.H)p
256 877 V 256 982 a(1.)52 b(A)m(tlan)m(ta)340 b Fg(55)228
b(30)g(40)182 b(50)273 b(40)256 1091 y Fe(2.)52 b(Baltimore)227
b Fg(35)h(30)182 b(100)g(45)273 b(60)256 1201 y Fe(3.)52
b(Chicago)317 b Fg(40)228 b(60)g(95)182 b(35)273 b(30)p
256 1264 V 183 1438 a(Th)m(us,)23 b(it)f(costs)f($30)f(to)h(ship)h(one)
f(unit)g(of)g(the)g(pro)s(duct)e(from)i(Baltimore)0 1548
y(to)30 b(Eugene)f(\(E\),)h($95)f(from)h(Chicago)f(to)h(F)-8
b(airview)30 b(\(F\),)f(and)h(so)g(on.)183 1661 y(In)k(order)e(to)i
(set)f(this)h(up)f(as)h(a)g(linear)g(program,)g(w)m(e)g(in)m(tro)s
(duce)e(v)-5 b(ari-)0 1770 y(ables)38 b(that)g(represen)m(t)f(the)h(n)m
(um)m(b)s(er)g(of)h(units)f(of)h(pro)s(duct)d(shipp)s(ed)i(from)0
1880 y(eac)m(h)f(w)m(arehouse)f(to)i(eac)m(h)f(store.)62
b(W)-8 b(e)38 b(ha)m(v)m(e)g(n)m(um)m(b)s(ered)f(the)g(w)m(arehouses)0
1990 y(according)e(to)h(their)g(alphab)s(etical)f(order)h(and)g(w)m(e)h
(ha)m(v)m(e)h(en)m(umerated)c(the)0 2099 y(stores)c(similarly)-8
b(.)47 b(Let)31 b Fd(x)884 2113 y Fa(ij)949 2099 y Fd(;)46
b Fg(for)30 b(all)g(1)e Fi(\024)g Fd(i)g Fi(\024)g Fg(3)p
Fd(;)45 b Fg(1)28 b Fi(\024)f Fd(j)33 b Fi(\024)28 b
Fg(5)p Fd(;)k Fg(represen)m(t)d(the)0 2209 y(n)m(um)m(b)s(er)38
b(of)h(widgets)f(shipp)s(ed)g(from)h(w)m(arehouse)e(#)15
b Fd(i)40 b Fg(to)e(store)g(#)15 b Fd(j:)40 b Fg(This)0
2318 y(giv)m(es)d(us)g(15)f(unkno)m(wns.)60 b(The)36
b(ob)5 b(jectiv)m(e)36 b(function)f(\(the)g(quan)m(tit)m(y)i(to)f(b)s
(e)0 2428 y(minimized\))30 b(is)h(the)e(shipping)h(cost)f(giv)m(en)i(b)
m(y)470 2657 y Fd(C)h Fg(=)41 b(55)p Fd(x)823 2671 y
Fb(11)920 2657 y Fg(+)20 b(30)p Fd(x)1155 2671 y Fb(12)1253
2657 y Fg(+)g(40)p Fd(x)1488 2671 y Fb(13)1585 2657 y
Fg(+)g(50)p Fd(x)1820 2671 y Fb(14)1918 2657 y Fg(+)g(40)p
Fd(x)2153 2671 y Fb(15)608 2794 y Fg(+)g(35)p Fd(x)843
2808 y Fb(21)940 2794 y Fg(+)g(30)p Fd(x)1175 2808 y
Fb(22)1273 2794 y Fg(+)g(100)p Fd(x)1554 2808 y Fb(23)1651
2794 y Fg(+)g(45)p Fd(x)1886 2808 y Fb(24)1983 2794 y
Fg(+)h(60)p Fd(x)2219 2808 y Fb(25)585 2931 y Fg(+)f(40)p
Fd(x)820 2945 y Fb(31)917 2931 y Fg(+)h(60)p Fd(x)1153
2945 y Fb(32)1250 2931 y Fg(+)f(95)p Fd(x)1485 2945 y
Fb(33)1582 2931 y Fg(+)h(35)p Fd(x)1818 2945 y Fb(34)1915
2931 y Fg(+)f(30)p Fd(x)2150 2945 y Fb(35)0 3161 y Fg(where)43
b(55)p Fd(x)422 3175 y Fb(11)542 3161 y Fg(represen)m(ts)f(the)h(cost)f
(of)i(shipping)f(one)g(widget)g(from)g(the)0 3270 y(w)m(arehouse)25
b(in)i(A)m(tlan)m(ta)g(to)g(the)f(retail)g(store)g(in)h(Detroit)e
(\(D\))h(m)m(ultiplied)i(b)m(y)0 3380 y(the)h(n)m(um)m(b)s(er)h(of)g
(widgets)f(that)g(will)j(b)s(e)d(shipp)s(ed,)g(and)h(so)g(forth.)183
3493 y(What)39 b(are)g(the)g(constrain)m(ts?)68 b(First,)42
b(our)d(15)h(v)-5 b(ariables)39 b(satisfy)h(the)0 3602
y(condition)29 b(that)632 3832 y Fd(x)684 3846 y Fa(ij)774
3832 y Fi(\025)c Fg(0)p Fd(;)46 b Fg(for)29 b(all)i(1)25
b Fi(\024)h Fd(i)g Fi(\024)f Fg(3)p Fd(;)46 b Fg(1)25
b Fi(\024)g Fd(j)30 b Fi(\024)c Fg(5)528 b(\()p Fd(i)p
Fg(\))0 4061 y(since)22 b(shipping)h(a)g(negativ)m(e)f(amoun)m(t)g(of)g
(widgets)g(mak)m(es)i(no)e(sense.)38 b(Second,)0 4171
y(since)k(the)f(w)m(arehouse)f(#)15 b Fd(i)44 b Fg(cannot)c(ship)i
(more)g(widgets)f(than)g(it)h(has)g(in)0 4280 y(sto)s(c)m(k,)30
b(w)m(e)g(get)285 4427 y Fc(8)285 4509 y(<)285 4674 y(:)381
4505 y Fd(x)433 4519 y Fb(11)602 4505 y Fg(+)92 b Fd(x)817
4519 y Fb(12)985 4505 y Fg(+)g Fd(x)1200 4519 y Fb(13)1369
4505 y Fg(+)f Fd(x)1583 4519 y Fb(14)1752 4505 y Fg(+)g
Fd(x)1966 4519 y Fb(15)2135 4505 y Fi(\024)h Fg(50)381
4614 y Fd(x)433 4628 y Fb(21)602 4614 y Fg(+)g Fd(x)817
4628 y Fb(22)985 4614 y Fg(+)g Fd(x)1200 4628 y Fb(23)1369
4614 y Fg(+)f Fd(x)1583 4628 y Fb(24)1752 4614 y Fg(+)g
Fd(x)1966 4628 y Fb(25)2135 4614 y Fi(\024)h Fg(30)381
4724 y Fd(x)433 4738 y Fb(31)602 4724 y Fg(+)g Fd(x)817
4738 y Fb(32)985 4724 y Fg(+)g Fd(x)1200 4738 y Fb(33)1369
4724 y Fg(+)f Fd(x)1583 4738 y Fb(34)1752 4724 y Fg(+)g
Fd(x)1966 4738 y Fb(35)2135 4724 y Fi(\024)h Fg(50)2566
4614 y(\()p Fd(ii)p Fg(\))p eop end
%%Page: 20 20
TeXDict begin 20 19 bop 0 91 a Fe(20)90 b Ff(Chapter)32
b(1)h(Intr)-5 b(o)g(duction)0 311 y Fg(Next,)48 b(w)m(orking)43
b(with)h(the)f(amoun)m(t)f(of)i(widgets)f(that)f(eac)m(h)h(retail)g
(store)0 420 y(needs,)29 b(w)m(e)i(obtain)e(the)g(follo)m(wing)i(\014v)
m(e)f(constrain)m(ts:)668 557 y Fc(8)668 639 y(>)668
667 y(>)668 694 y(>)668 721 y(<)668 886 y(>)668 913 y(>)668
941 y(>)668 968 y(:)765 607 y Fd(x)817 621 y Fb(11)985
607 y Fg(+)92 b Fd(x)1200 621 y Fb(21)1369 607 y Fg(+)f
Fd(x)1583 621 y Fb(31)1752 607 y Fi(\025)g Fg(25)765
717 y Fd(x)817 731 y Fb(12)985 717 y Fg(+)h Fd(x)1200
731 y Fb(22)1369 717 y Fg(+)f Fd(x)1583 731 y Fb(32)1752
717 y Fi(\025)g Fg(10)765 826 y Fd(x)817 840 y Fb(13)985
826 y Fg(+)h Fd(x)1200 840 y Fb(23)1369 826 y Fg(+)f
Fd(x)1583 840 y Fb(33)1752 826 y Fi(\025)g Fg(20)765
936 y Fd(x)817 950 y Fb(14)985 936 y Fg(+)h Fd(x)1200
950 y Fb(24)1369 936 y Fg(+)f Fd(x)1583 950 y Fb(34)1752
936 y Fi(\025)g Fg(30)765 1046 y Fd(x)817 1060 y Fb(15)985
1046 y Fg(+)h Fd(x)1200 1060 y Fb(25)1369 1046 y Fg(+)f
Fd(x)1583 1060 y Fb(35)1752 1046 y Fi(\025)g Fg(15)2535
826 y(\()p Fd(iii)p Fg(\))183 1203 y(The)32 b(problem)g(is)i(no)m(w)f
(set)f(up.)48 b(W)-8 b(e)33 b(will)h(study)f(an)f(e\016cien)m(t)g
(metho)s(d)0 1313 y(for)f(solving)h(suc)m(h)g(problems)e(later.)45
b(F)-8 b(or)31 b(no)m(w,)h(w)m(e)g(are)f(still)i(limping)f(along)0
1423 y(with)e(the)f(trial-and-error)g(metho)s(d.)183
1532 y(Geographically)23 b(and)h(\014nancially)h(sp)s(eaking,)g(it)g
(seems)g(reasonable)e(for)0 1642 y(the)30 b(w)m(arehouse)g(in)h(A)m
(tlan)m(ta)h(to)e(ship)h(widgets)g(to)f(the)h(retail)f(stores)g(in)i
(Eu-)0 1751 y(gene)43 b(and)h(F)-8 b(airview,)49 b(while)44
b(Gro)m(v)m(e)h(Cit)m(y)g(and)f(Houston)f(are)h(attractiv)m(e)0
1861 y(mark)m(ets)30 b(for)g(Chicago.)39 b(Th)m(us,)587
1994 y Fc(8)587 2076 y(<)587 2240 y(:)683 2071 y Fd(x)735
2085 y Fb(12)904 2071 y Fg(=)92 b(10)p Fd(;)f(x)1327
2085 y Fb(22)1496 2071 y Fg(=)g Fd(x)1710 2085 y Fb(32)1879
2071 y Fg(=)g(0)683 2181 y Fd(x)735 2195 y Fb(13)904
2181 y Fg(=)h(20)p Fd(;)f(x)1327 2195 y Fb(23)1496 2181
y Fg(=)g Fd(x)1710 2195 y Fb(33)1879 2181 y Fg(=)g(0)683
2291 y Fd(x)735 2305 y Fb(34)904 2291 y Fg(=)h(30)p Fd(;)f(x)1327
2305 y Fb(35)1496 2291 y Fg(=)97 b(15)p Fd(:)183 2501
y Fg(W)-8 b(e)38 b(ha)m(v)m(e)h(no)m(w)g(decided)e(on)h(the)g(v)-5
b(alues)38 b(for)h(8)f(of)g(the)g(15)g(v)-5 b(ariables.)0
2611 y(Con)m(tin)m(uing,)23 b(since)d(the)g(retail)g(stores)f(in)i
(Eugene)f(and)g(F)-8 b(airview)21 b(will)g(get)f(the)0
2720 y(widgets)g(they)g(need)g(from)g(the)g(w)m(arehouse)f(in)i(A)m
(tlan)m(ta)g(and)f(the)g(retail)g(stores)0 2830 y(in)h(Gro)m(v)m(e)f
(Cit)m(y)h(and)f(Houston)f(will)j(receiv)m(e)d(widgets)h(from)g(the)f
(w)m(arehouse)g(in)0 2939 y(Chicago,)26 b(it)g(mak)m(es)h(no)f(sense)f
(to)g(ship)i(additional)e(widgets)g(to)h(these)e(stores)0
3049 y(from)i(another)f(w)m(arehouse)g(since)i(that)e(w)m(ould)i
(increase)f(the)f(shipping)i(cost.)0 3159 y(Th)m(us)j(w)m(e)h(set)751
3268 y Fd(x)803 3282 y Fb(14)921 3268 y Fg(=)41 b Fd(x)1085
3282 y Fb(15)1203 3268 y Fg(=)f Fd(x)1366 3282 y Fb(24)1485
3268 y Fg(=)g Fd(x)1648 3282 y Fb(25)1766 3268 y Fg(=)h(0)p
Fd(:)183 3494 y Fg(This)35 b(lea)m(v)m(es)h(only)g(the)e(three)g(v)-5
b(ariables)35 b Fd(x)1706 3508 y Fb(11)1783 3494 y Fd(;)46
b(x)1906 3508 y Fb(21)1984 3494 y Fd(;)g(x)2107 3508
y Fb(31)2220 3494 y Fg(to)35 b(b)s(e)f(deter-)0 3604
y(mined.)40 b(By)31 b(using)f(the)f(constrain)m(ts,)g(w)m(e)h
(determine)f(that)839 3819 y Fd(x)891 3833 y Fb(21)1009
3819 y Fg(=)40 b(25)p Fd(;)15 b(x)1304 3833 y Fb(11)1422
3819 y Fg(=)41 b Fd(x)1586 3833 y Fb(31)1704 3819 y Fg(=)g(0)0
4062 y Fe(Some)35 b(Remarks)g(ab)s(out)g(This)h(F)-9
b(easible)37 b(Solution)183 4171 y Fg(\(a\))90 b(Notice)43
b(that)f(in)i(our)f(feasible)g(solution)g(w)m(e)h(require)f(that)f(the)
0 4281 y(total)31 b(n)m(um)m(b)s(er)g(of)g(units)g(shipp)s(ed)f(to)h
(Detroit)f(is)j(25,)f(the)e(n)m(um)m(b)s(er)h(of)h(units)0
4390 y(shipp)s(ed)c(to)h(Eugene)f(is)i(10,)f(and)g(so)g(on.)40
b(Shipping)28 b(more)h(units)g(than)f(what)0 4500 y(eac)m(h)22
b(store)g(needs)h(w)m(ould)g(only)g(increase)f(the)g(cost.)38
b(On)23 b(the)f(other)g(hand,)i(w)m(e)0 4610 y(did)33
b(not)g(use)f(the)g(whole)h(supply)g(of)g(widgets)g(since)f(the)g
(supply)i(is)f(greater)0 4719 y(than)c(the)g(demand.)p
eop end
%%Page: 21 21
TeXDict begin 21 20 bop 1167 91 a Fi(x)p Ff(2.)41 b(Examples)33
b(of)f(Line)-5 b(ar)33 b(Pr)-5 b(o)g(gr)g(ams)91 b Fe(21)183
311 y Fg(\(b\))f(In)23 b(real)g(life,)i(the)d(total)h(shipping)f(cost)h
(is)g(not)g(alw)m(a)m(ys)h(expressible)0 420 y(b)m(y)30
b(a)e(linear)h(form.)40 b(F)-8 b(or)29 b(example,)g(discoun)m(ts)f
(could)g(b)s(e)g(a)m(v)-5 b(ailable)29 b(for)g(bulk)0
530 y(shipping.)38 b(Nonlinear)23 b(problems)f(are)h(usually)g(more)g
(di\016cult)g(to)g(solv)m(e)g(than)0 639 y(the)29 b(linear)h(ones.)0
776 y Fe(Example)36 b(2.5.)k Ff(Job)32 b(Assignment)i(Pr)-5
b(oblem)183 886 y Fg(Supp)s(ose)34 b(that)h(a)h(pro)s(duction)d
(manager)i(m)m(ust)h(assign)g Fd(n)g Fg(w)m(ork)m(ers)h(to)0
995 y(do)30 b Fd(n)h Fg(jobs.)42 b(If)31 b(ev)m(ery)f(w)m(ork)m(er)h
(could)f(p)s(erform)f(eac)m(h)h(job)g(at)g(the)g(same)g(lev)m(el)0
1105 y(of)23 b(skill)i(and)e(e\016ciency)-8 b(,)25 b(the)d(job)h
(assignmen)m(ts)g(could)f(b)s(e)h(issued)g(arbitrarily)-8
b(.)0 1215 y(Ho)m(w)m(ev)m(er,)36 b(as)e(w)m(e)g(kno)m(w,)h(this)f(is)g
(seldom)g(the)f(case.)50 b(Th)m(us,)36 b(eac)m(h)d(of)g(the)g
Fd(n)0 1324 y Fg(w)m(ork)m(ers)24 b(is)h(ev)-5 b(aluated)22
b(according)g(to)i(the)f(time)h(he)f(or)h(she)g(tak)m(es)f(to)h(p)s
(erform)0 1434 y(eac)m(h)i(job.)39 b(The)26 b(time,)i(giv)m(en)f(in)g
(hours,)g(is)g(expressed)e(as)i(a)f(n)m(um)m(b)s(er)g(greater)0
1543 y(than)c(or)h(equal)h(to)f(zero.)37 b(Ob)m(viously)-8
b(,)26 b(the)d(goal)g(is)h(to)f(assign)g(w)m(ork)m(ers)h(to)f(jobs)0
1653 y(in)36 b(suc)m(h)g(a)f(w)m(a)m(y)i(that)d(the)h(total)g(time)g
(is)i(as)e(small)i(as)e(p)s(ossible.)57 b(In)35 b(order)0
1763 y(to)29 b(set)g(up)g(the)g(notation,)f(w)m(e)i(let)f
Fd(c)1236 1777 y Fa(ij)1330 1763 y Fg(b)s(e)f(the)h(time)g(it)h(tak)m
(es)f(for)h(w)m(ork)m(er)f(#)15 b Fd(i)0 1872 y Fg(to)32
b(p)s(erform)f(job)h(#)15 b Fd(j:)34 b Fg(Then)e(the)g(times)g(could)g
(naturally)g(b)s(e)g(written)f(in)i(a)0 1982 y(table.)43
b(F)-8 b(or)31 b(example,)g(tak)m(e)g Fd(n)c Fg(=)g(3)k(and)g(let)g
(the)f(times)i(b)s(e)e(giv)m(en)h(as)h(in)f(the)0 2091
y(follo)m(wing)g(table:)p 1010 2149 680 4 v 1211 2267
a Fe(a)179 b(b)144 b(c)p 1010 2326 V 1010 2431 a(A)92
b Fg(10)116 b(70)110 b(40)1010 2541 y Fe(B)96 b Fg(20)116
b(60)110 b(10)1010 2650 y Fe(C)95 b Fg(10)116 b(20)110
b(90)p 1010 2713 V 0 2878 a(So)23 b(if)h(w)m(ork)m(er)g
Fe(A)g Fg(gets)f(assigned)f(to)h(job)g Fe(a)p Fg(,)j(w)m(ork)m(er)d
Fe(B)h Fg(\014lls)g(job)f Fe(b)h Fg(and)f(w)m(ork)m(er)0
2987 y Fe(C)30 b Fg(do)s(es)g(job)g Fe(c)p Fg(,)g(then)f(the)h(total)f
(time)h(is)h(10)20 b(+)h(60)e(+)i(90)k(=)g(160)p Fd(:)30
b Fg(This)h(is)g(not)0 3097 y(a)39 b(minim)m(um)g(since,)i(if)e
Fe(A)g Fg(do)s(es)f Fe(b)p Fg(,)k Fe(B)c Fg(do)s(es)g
Fe(c)g Fg(and)g Fe(C)h Fg(do)s(es)e Fe(a)p Fg(,)42 b(then)37
b(the)0 3206 y(total)30 b(time)g(equals)g(70)20 b(+)h(10)f(+)g(10)26
b(=)g(90)p Fd(:)k Fg(F)-8 b(or)30 b Fd(n)c Fg(=)g(3)p
Fd(;)31 b Fg(the)f(total)f(n)m(um)m(b)s(er)h(of)0 3316
y(p)s(ossible)i(w)m(a)m(ys)j(of)e(assigning)f(jobs)h(is)h(3)22
b Fi(\002)g Fg(2)30 b(=)h(6)p Fd(:)i Fg(This)g(can)g(b)s(e)f(seen)h
(from)0 3425 y(the)c(information)g(con)m(tained)g(in)h(the)g(follo)m
(wing)g(table:)p 736 3483 1228 4 v 827 3616 a(Assignmen)m(t)225
b(T)-8 b(otal)30 b(Time)p 736 3706 V 736 3811 a Fe(Aa)106
b(Bb)f(Cc)365 b Fg(160)736 3921 y Fe(Aa)106 b(Bc)e(Cb)411
b Fg(40)736 4030 y Fe(Ab)106 b(Ba)f(Cc)365 b Fg(180)736
4140 y Fe(Ab)106 b(Bc)e(Ca)411 b Fg(90)736 4250 y Fe(Ac)105
b(Ba)g(Cb)411 b Fg(80)736 4359 y Fe(Ac)105 b(Bb)g(Ca)366
b Fg(110)p 736 4422 V eop end
%%Page: 22 22
TeXDict begin 22 21 bop 0 91 a Fe(22)90 b Ff(Chapter)32
b(1)h(Intr)-5 b(o)g(duction)0 311 y Fg(F)d(rom)28 b(the)e(table)h(w)m
(e)h(can)f(see)g(that)g(the)g(minim)m(um)i(v)-5 b(alue)27
b(of)h(the)f(total)f(time)0 420 y(is)39 b(40;)j(w)m(e)c(conclude)e
(that)h(the)g(pro)s(duction)f(manager)g(w)m(ould)i(b)s(e)g(wise)g(to)0
530 y(assign)28 b(w)m(ork)m(er)h Fe(A)g Fg(to)f(job)g
Fe(a)p Fg(,)h(w)m(ork)m(er)g Fe(B)f Fg(to)g(job)g Fe(c)g
Fg(and)g(w)m(ork)m(er)h Fe(C)f Fg(to)g(job)g Fe(b)p Fg(.)183
639 y(In)d(general,)h(this)f(metho)s(d)f(of)h(selection)g(is)h(not)f
(go)s(o)s(d.)37 b(The)25 b(total)g(n)m(um-)0 749 y(b)s(er)i(of)i(p)s
(ossible)e(w)m(a)m(ys)j(of)e(assigning)g(jobs)g(is)h
Fd(n)p Fg(!)d(=)f Fd(n)17 b Fi(\002)g Fg(\()p Fd(n)f
Fi(\000)h Fg(1\))f Fi(\002)h Fg(\()p Fd(n)f Fi(\000)h
Fg(2\))f Fi(\002)0 858 y(\001)f(\001)g(\001)25 b(\002)e
Fg(2)g Fi(\002)g Fg(1)p Fd(:)35 b Fg(This)g(is)g(an)g(enormous)e(n)m
(um)m(b)s(er)h(ev)m(en)g(for)g(mo)s(derate)e Fd(n:)k
Fg(F)-8 b(or)0 968 y Fd(n)25 b Fg(=)h(70)p Fd(;)153 1151
y(n)p Fg(!)g(=)f(11978571669969891796)o(072)o(783)o(721)o(689)o(098)o
(736)o(458)o(938)o(142)o(5)127 1288 y(464258575553628646280)o(09)o(582)
o(789)o(845)o(319)o(680)o(000)o(000)o(000)o(000)o(000)o
Fd(:)0 1471 y Fg(It)49 b(has)g(b)s(een)f(estimated)g(that)g(if)i(a)f
(Sun)g(W)-8 b(orkstation)48 b(computer)f(had)0 1581 y(started)33
b(solving)i(this)g(problem)f(at)g(the)g(time)h(of)f(the)g(Big)h(Bang,)h
(b)m(y)f(lo)s(ok-)0 1690 y(ing)g(at)f(all)h(p)s(ossible)f(job)g
(assignmen)m(ts,)h(then)f(b)m(y)h(no)m(w)g(it)f(w)m(ould)h(not)f(ha)m
(v)m(e)0 1800 y(\014nished)29 b(y)m(et)i(its)f(task.)183
1909 y(Although)g(it)i(is)g(not)f(ob)m(vious,)h(the)f(job)g(assignmen)m
(t)g(problem)f(can)h(b)s(e)0 2019 y(expressed)41 b(as)h(a)g(linear)f
(program.)75 b(As)43 b(suc)m(h,)i(it)e(can)e(b)s(e)g(solv)m(ed)h(b)m(y)
h(the)0 2129 y(simplex)34 b(metho)s(d.)48 b(When)32 b
Fd(n)e Fg(=)h(70)i(it)g(tak)m(es)g(seconds.)48 b(W)-8
b(e)34 b(will)g(return)e(to)0 2238 y(this)e(and)f(related)f(problems)h
(in)h(Chapter)e(7)h(after)g(w)m(e)g(discuss)h(the)f(simplex)0
2348 y(metho)s(d.)183 2481 y(W)-8 b(e)44 b(conclude)e(this)i(section)e
(with)i(a)g(quotation.)80 b(In)44 b(1980)f(Eugene)0 2590
y(La)m(wler)30 b(wrote)f(that)183 2700 y([Linear)40 b(programming])f
(is)i(used)f(to)g(allo)s(cate)f(resources,)i(plan)f(pro-)0
2809 y(duction,)28 b(sc)m(hedule)g(w)m(ork)m(ers,)i(plan)f(in)m(v)m
(estmen)m(t)g(p)s(ortfolios)f(and)g(form)m(ulate)0 2919
y(mark)m(eting)37 b(\(and)h(military\))g(strategies.)62
b(The)38 b(v)m(ersatilit)m(y)h(and)f(economic)0 3029
y(impact)i(of)h(linear)g(programming)f(in)i(to)s(da)m(y's)e(industrial)
h(w)m(orld)h(is)f(truly)0 3138 y(a)m(w)m(esome.)1096
3248 y Fh(Exercises)0 3381 y Fe(1.)55 b Fg(Supp)s(ose)33
b(that)g(for)i(y)m(our)g(balanced)e(diet)i(y)m(ou)g(need)f(only)h
(protein)f(and)0 3490 y(vitamins)d(A,)g(B)563 3504 y
Fb(1)604 3490 y Fg(,)g(C,)g(B)847 3504 y Fb(6)888 3490
y Fg(,)g(B)1009 3504 y Fb(12)1117 3490 y Fg(and)f(y)m(ou)g(are)g(allo)m
(w)m(ed)h(to)f(eat)f(only)i(cereals.)0 3600 y(Go)26 b(to)g(a)g(gro)s
(cery)e(store)h(and)h(c)m(ho)s(ose)f(10)h(di\013eren)m(t)f(b)s(o)m(xes)
h(of)g(cereals.)39 b(W)-8 b(rite)0 3709 y(do)m(wn)23
b(the)f(p)s(ercen)m(tages)e(of)j(U.S.)h(recommended)c(daily)k(allo)m(w)
m(ances)f(\(RD)m(As\))0 3819 y(for)e(the)g(aforemen)m(tioned)d
(ingredien)m(ts)j(and)f(the)h(price)g(of)g(eac)m(h)g(cereal)f(brand.)0
3929 y(Then)30 b(write)f(do)m(wn)i(y)m(our)f(diet)g(problem,)g
(indicating)f(the)h(units,)g(date,)g(and)0 4038 y(store.)66
b(If)40 b(necessary)-8 b(,)40 b(y)m(ou)g(ma)m(y)g(c)m(ho)s(ose)d(y)m
(our)i(gender,)i(age,)f(and)f(calorie)0 4148 y(in)m(tak)m(e)26
b(to)f(determine)f(y)m(our)i(RD)m(A.)i(If)d(y)m(ou)i(cannot)d(\014nd)h
(y)m(our)h(protein)e(RD)m(A)0 4257 y(on)36 b(b)s(o)m(xes)f(and)g
(elsewhere,)i(tak)m(e)e(it)h(to)g(b)s(e)f(50)g(g.)58
b(W)-8 b(rite)36 b(do)m(wn)g(the)f(name)0 4367 y(of)g(the)f(store)g
(and)h(the)f(date.)55 b(Y)-8 b(ou)35 b(ma)m(y)h(tak)m(e)f(data)f(from)h
(a)g(store)f(on)h(the)0 4477 y(In)m(ternet.)0 4610 y
Fe(2.)45 b Fg(Solv)m(e)32 b(the)f(blending)g(problem)g(in)h(Example)f
(2.2.)46 b Fd(H)7 b(int)p Fg(:)44 b(Note)31 b(that)g(in)0
4719 y(\()p Fd(iii)p Fg(\))c(of)e(Example)h(2.2)g(w)m(e)g(ha)m(v)m(e)g
(a)g(system)g(of)f(t)m(w)m(o)h(linear)g(equations)f(in)h(four)p
eop end
%%Page: 23 23
TeXDict begin 23 22 bop 1167 91 a Fi(x)p Ff(2.)41 b(Examples)33
b(of)f(Line)-5 b(ar)33 b(Pr)-5 b(o)g(gr)g(ams)91 b Fe(23)0
311 y Fg(unkno)m(wns.)43 b(Th)m(us,)32 b(t)m(w)m(o)g(v)-5
b(ariables)30 b(can)h(b)s(e)f(eliminated)g(and)h(the)f(resulting)0
420 y(problem)37 b(in)h(t)m(w)m(o)g(v)-5 b(ariables)38
b(can)f(b)s(e)g(solv)m(ed)h(b)m(y)h(graphical)d(metho)s(ds)g(\(see)0
530 y Fi(x)p Fg(3\).)0 707 y Fe(3.)81 b Fg(Solv)m(e)44
b(the)f(linear)h(program)e(in)i(Example)g(2.3)g(with)f(the)g
(additional)0 816 y(condition)29 b Fd(x)453 830 y Fb(3)519
816 y Fg(=)d(0)p Fd(:)k(H)7 b(int)p Fg(:)42 b(Use)30
b(the)g(graphical)f(metho)s(d)f(\(see)h Fi(x)p Fg(3\).)0
993 y Fe(4.)54 b Fg(Y)-8 b(ou)36 b(ha)m(v)m(e)f(100)f(quarters)f(and)i
(90)f(dimes)h(and)f(no)h(other)e(money)-8 b(.)55 b(Y)-8
b(ou)0 1103 y(ha)m(v)m(e)43 b(to)e(pa)m(y)i(a)f(giv)m(en)h(amoun)m(t)e
Fd(C)q(:)j Fg(No)f(c)m(hange)e(is)i(giv)m(en)f(to)g(y)m(ou.)78
b(Y)-8 b(ou)0 1212 y(do)43 b(not)f(w)m(an)m(t)h(to)g(o)m(v)m(erpa)m(y)g
(to)s(o)f(m)m(uc)m(h.)79 b(State)42 b(this)h(w)m(ord)g(optimization)0
1322 y(problem)36 b(in)g(mathematical)f(form)h(\(i.e.,)i(in)f(terms)f
(of)g(decision)f(v)-5 b(ariables,)0 1432 y(ob)5 b(jectiv)m(e)26
b(function,)g(and)g(constrain)m(ts\).)38 b(Is)27 b(this)g(problem)f
(linear?)39 b(Solv)m(e)27 b(it)0 1541 y(for)j Fd(C)i
Fg(=)25 b(15)30 b(cen)m(ts,)g(for)g Fd(C)i Fg(=)25 b($1)p
Fd(:)p Fg(02)p Fd(;)30 b Fg(and)g(for)f Fd(C)k Fg(=)25
b($100)p Fd(:)0 1718 y Fe(5.)85 b Fg(Y)-8 b(ou)45 b(ha)m(v)m(e)g(a)g
(string)f(lo)s(op)h(of)f(length)g(100.)84 b(Y)-8 b(ou)46
b(w)m(an)m(t)f(to)f(mak)m(e)h(a)0 1828 y(rectangle)31
b(of)i(maximal)i(area.)49 b(State)32 b(this)h(problem)g(mathematically)
f(and)0 1937 y(solv)m(e)f(it.)0 2114 y Fe(6.)66 b Fg(Example)34
b(2.5)f(has)f(a)i(nice)e(v)-5 b(ariation.)49 b(Supp)s(ose)31
b(that)h(the)g(pro)s(duction)0 2224 y(manager)26 b(devises)h(a)g
(system)f(whereb)m(y)h(eac)m(h)f(emplo)m(y)m(ee)h(is)h(giv)m(en)g(a)f
(n)m(umeri-)0 2334 y(cal)d(rating)f(dep)s(ending)f(on)i(ho)m(w)g(w)m
(ell)h(he)f(or)g(she)f(p)s(erforms)g(a)h(particular)e(job.)0
2443 y(Then)j(the)f(manager)g(w)m(ould)i(w)m(an)m(t)f(to)g(assign)g(p)s
(eople)f(to)h(jobs)g(in)h(a)f(w)m(a)m(y)i(that)0 2553
y(the)34 b(sum)h(of)f(their)g(ratings)g(is)h(as)g(large)f(as)h(p)s
(ossible,)g(so)g(that)e(the)h(lev)m(el)h(of)0 2662 y(e\016ciency)29
b(of)h(the)g(compan)m(y)f(is)i(also)f(as)g(high)g(as)g(p)s(ossible.)40
b(Y)-8 b(our)31 b(compan)m(y)0 2772 y(is)f(small)h(and)e(y)m(ou)h(ha)m
(v)m(e)h(just)e(rated)f(four)h(emplo)m(y)m(ees)h(as)g(to)f(ho)m(w)h(w)m
(ell)h(they)0 2881 y(can)26 b(do)g(four)f(jobs)h(whic)m(h)h(need)e(to)h
(b)s(e)f(assigned.)39 b(Solv)m(e)26 b(this)h(maximization)0
2991 y(problem,)j(using)g(the)f(follo)m(wing)i(matrix)f(of)g(ratings:)p
944 3069 812 4 v 1116 3187 a Fe(a)132 b(b)125 b(c)135
b(d)p 944 3246 V 944 3351 a(A)93 b Fg(10)e(70)g(40)f(55)944
3460 y Fe(B)97 b Fg(20)91 b(60)g(10)f(67)944 3570 y Fe(C)96
b Fg(10)91 b(20)g(90)f(43)944 3679 y Fe(D)h Fg(15)g(37)g(89)f(23)p
944 3742 V 0 4062 a Fe(7.)41 b Fg(Another)29 b(in)m(terpretation)e(of)j
(the)f(same)h(mathematical)f(problem)g(is)i(the)0 4171
y Ff(matching)25 b(pr)-5 b(oblem.)37 b Fg(Y)-8 b(ou)23
b(w)m(an)m(t)f(to)g(matc)m(h)g Fd(n)g Fg(b)s(o)m(ys)g(with)g
Fd(n)g Fg(girls)h(in)m(to)f Fd(n)h Fg(cou-)0 4281 y(ples)28
b(with)g(ob)5 b(jectiv)m(e)28 b(to)f(pro)s(duce)f(the)i(maximal)h
(bliss)g(\(or)e(minimal)j(grief)7 b(\).)0 4390 y(Here)36
b(is)h(y)m(our)f(data,)h(where)e(the)h(n)m(um)m(b)s(ers)f(are)h
(dollars)g(that)f(the)g(couples)0 4500 y(are)23 b(exp)s(ected)f(to)h
(pa)m(y)h(y)m(ou)h(for)e(happ)m(y)h(marriage)f(\(negativ)m(e)f(n)m(um)m
(b)s(ers)i(mean)0 4610 y(they)36 b(w)m(ould)g(try)h(to)f(get)f(some)h
(money)g(from)g(y)m(ou)h(for)f(an)g(unhapp)m(y)g(mar-)0
4719 y(riage\))29 b(and)h(where)f Fd(n)c Fg(=)g(4)g(:)p
eop end
%%Page: 24 24
TeXDict begin 24 23 bop 0 91 a Fe(24)90 b Ff(Chapter)32
b(1)h(Intr)-5 b(o)g(duction)p 987 223 727 4 v 1159 341
a Fe(a)122 b(b)109 b(c)91 b(d)p 987 399 V 987 505 a(A)i
Fg(1)127 b(-2)91 b(2)h(0)987 614 y Fe(B)97 b Fg(2)127
b(0)121 b(1)92 b(1)987 724 y Fe(C)k Fg(3)127 b(1)121
b(0)92 b(-1)987 833 y Fe(D)f Fg(-1)97 b(0)121 b(1)92
b(2)p 987 896 V 0 1006 a(Solv)m(e)30 b(this)g(problem.)40
b Ff(Hint:)h Fg(Chec)m(k)30 b(all)g(4!)41 b(=)30 b(24)g(matc)m(hes)f
(unless)g(y)m(ou)i(see)0 1115 y(a)f(faster)f(w)m(a)m(y)-8
b(.)0 1265 y Fe(8{10.)66 b Fg(Solv)m(e)39 b(the)f(follo)m(wing)i(matc)m
(hing)e(problems)h(where)f(the)g(n)m(um)m(b)s(ers)0 1375
y(in)29 b(tables)f(are)g(the)f(exp)s(ected)f(n)m(um)m(b)s(ers)i(of)h
(happ)m(y)f(y)m(ears)h(together)d(for)i(eac)m(h)0 1484
y(couple)h(and)g(y)m(ou)i(w)m(an)m(t)f(to)f(maximize)h(the)f(total.)40
b(If)30 b(y)m(ou)g(cannot)f(solv)m(e)h(the)0 1594 y(problem)39
b(in)h(a)g(reasonable)d(timeframe,)42 b(try)d(to)g(\014nd)h(as)f(go)s
(o)s(d)f(a)i(feasible)0 1703 y(solution)30 b(as)g(p)s(ossible.)40
b(Data)29 b(are)g(not)g(tak)m(en)h(from)g(real)g(life.)p
0 1973 936 4 v 0 2106 a Fe(8.)91 b(a)126 b(b)92 b(c)120
b(d)127 b(e)p 0 2196 V 0 2301 a(A)94 b Fg(8)131 b(2)104
b(9)121 b(0)139 b(0)0 2411 y Fe(B)98 b Fg(2)131 b(9)104
b(1)121 b(1)139 b(3)0 2520 y Fe(C)97 b Fg(3)131 b(1)104
b(7)121 b(1)139 b(1)0 2630 y Fe(D)92 b Fg(1)131 b(6)104
b(1)121 b(2)139 b(9)0 2739 y Fe(E)104 b Fg(8)131 b(8)104
b(1)121 b(9)139 b(1)p 0 2802 V 1270 1754 1323 4 v 1270
1886 a Fe(9.)132 b(a)126 b(b)92 b(c)120 b(d)127 b(e)f(f)136
b(g)p 1270 1977 V 1270 2082 a(A)f Fg(8)c(2)104 b(9)121
b(0)139 b(3)128 b(8)122 b(7)1270 2191 y Fe(B)139 b Fg(2)131
b(0)104 b(1)121 b(1)139 b(3)128 b(7)122 b(9)1270 2301
y Fe(C)138 b Fg(3)131 b(1)104 b(1)121 b(1)139 b(1)128
b(6)122 b(9)1270 2411 y Fe(D)133 b Fg(1)e(0)104 b(1)121
b(2)139 b(9)128 b(5)122 b(8)1270 2520 y Fe(E)145 b Fg(8)131
b(8)104 b(1)121 b(1)139 b(1)128 b(5)122 b(7)1270 2630
y Fe(F)148 b Fg(1)131 b(6)104 b(1)121 b(9)139 b(9)128
b(5)122 b(8)1270 2739 y Fe(G)131 b Fg(6)g(6)104 b(6)121
b(5)139 b(1)128 b(5)122 b(4)p 1270 2802 V 678 2895 1375
4 v 678 3028 a Fe(10.)131 b(a)126 b(b)92 b(c)120 b(d)127
b(e)g(f)135 b(g)p 678 3118 V 678 3223 a(A)187 b Fg(8)131
b(2)104 b(5)121 b(0)139 b(0)129 b(1)121 b(7)678 3333
y Fe(B)191 b Fg(2)131 b(9)104 b(1)121 b(1)139 b(3)129
b(7)121 b(5)678 3442 y Fe(C)190 b Fg(3)131 b(1)104 b(7)121
b(1)139 b(1)129 b(6)121 b(9)678 3552 y Fe(D)185 b Fg(1)131
b(6)104 b(1)121 b(2)139 b(1)129 b(5)121 b(8)678 3662
y Fe(E)197 b Fg(8)131 b(8)104 b(1)121 b(0)139 b(1)129
b(5)121 b(7)678 3771 y Fe(F)200 b Fg(0)131 b(6)104 b(1)121
b(9)139 b(1)129 b(5)121 b(8)678 3881 y Fe(G)183 b Fg(6)131
b(6)104 b(1)121 b(5)139 b(1)129 b(5)121 b(4)p 678 3944
V 0 4133 a Fe(11.)89 b Fg(W)-8 b(e)47 b(w)m(an)m(t)g(to)f(\014nd)g(a)h
(maximal)g(n)m(um)m(b)s(er)f(among)g(giv)m(en)h(n)m(um)m(b)s(ers)0
4243 y Fd(c)40 4257 y Fb(1)80 4243 y Fd(;)15 b(:)g(:)g(:)j(;)d(c)323
4257 y Fa(n)373 4243 y Fd(:)30 b Fg(State)f(this)h(as)g(a)g(linear)g
(program.)0 4373 y Fe(12.)58 b Fg(Giv)m(en)36 b(three)f(distinct)h(n)m
(um)m(b)s(ers,)h Fd(a;)15 b(b;)g(c;)38 b Fg(w)m(e)f(w)m(an)m(t)f(to)g
(\014nd)f(the)h Ff(me-)0 4482 y(dian)30 b Fg(\(i.e.,)h(the)e(n)m(um)m
(b)s(er)h Fd(x)h Fg(that)d(is)j(one)f(of)g(the)f(giv)m(en)h(n)m(um)m(b)
s(ers)g(but)f(is)i(not)0 4592 y(maximal)h(or)f(minimal\).)44
b(State)29 b(this)i(as)g(a)g(linear)g(program.)43 b Ff(Hint)p
Fg(:)g(This)32 b(is)0 4701 y(a)e(di\016cult)g(problem,)g(but)f(it)h
(will)i(b)s(e)d(solv)m(ed)i(in)f(Chapter)f(8.)p eop end
%%Page: 25 25
TeXDict begin 25 24 bop 1644 91 a Fi(x)p Ff(3.)41 b(Gr)-5
b(aphic)g(al)32 b(Metho)-5 b(d)91 b Fe(25)0 311 y Fi(x)p
Fh(3.)56 b(Graphical)42 b(Metho)t(d)0 446 y Fe(Example)36
b(3.1.)k Fg(Consider)29 b(the)g(follo)m(wing)i(simple)f(linear)g
(program:)844 569 y Fc(\032)934 643 y Fg(Maximize)170
b Fd(y)28 b Fg(=)e(3)p Fd(x)928 753 y Fg(sub)5 b(ject)28
b(to)91 b(0)25 b Fi(\024)g Fd(x)h Fi(\024)f Fg(5)p Fd(:)183
976 y Fg(The)41 b(v)-5 b(alue)41 b(of)h Fd(x)g Fg(that)f(optimizes)f
(this)i(function)e(b)s(ecomes)g(ob)m(vious)0 1086 y(when)29
b(w)m(e)i(lo)s(ok)f(at)f(the)h(follo)m(wing)g(\014gure:)513
1307 y
 12008532 7458719 5986140 197345 21181726 9604136 startTexFig
 513 1307 a
%%BeginDocument: Ex.3.1.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 91 3 322 146
%%HiResBoundingBox: 91.5625 3.1875 321.938 145.5
%%Creator: (Mathematica 4.1 for X)
%%CreationDate: (Thursday, September 19, 2002) (15:13:12)
%%Title: Clipboard
%%DocumentNeededResources: font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Courier
%%EndComments
0 148.688 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/MacintoshRomanEncoding [
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
	/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
	/zero/one/two/three/four/five/six/seven
	/eight/nine/colon/semicolon/less/equal/greater/question
	/at/A/B/C/D/E/F/G
	/H/I/J/K/L/M/N/O
	/P/Q/R/S/T/U/V/W
	/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
	/grave/a/b/c/d/e/f/g
	/h/i/j/k/l/m/n/o
	/p/q/r/s/t/u/v/w
	/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
	/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
	/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
	/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
	/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
	/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
	/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
	/.notdef/plusminus/.notdef/.notdef/yen/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/ordfeminine/ring/.notdef/ae/oslash
	/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft
	/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
	/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef
	/ydieresis/Ydieresis/.notdef/currency/guilsinglleft/guilsinglright/.notdef/.notdef
	/daggerdbl/dotaccent/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
	/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
	/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
	/macron/.notdef/.notdef/.notdef/ogonek/.notdef/.notdef/.notdef
] def
/WindowsANSIEncoding [
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
	/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
	/zero/one/two/three/four/five/six/seven
	/eight/nine/colon/semicolon/less/equal/greater/question
	/at/A/B/C/D/E/F/G
	/H/I/J/K/L/M/N/O
	/P/Q/R/S/T/U/V/W
	/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
	/grave/a/b/c/d/e/f/g
	/h/i/j/k/l/m/n/o
	/p/q/r/s/t/u/v/w
	/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
	/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
	/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/Zcaron/.notdef
	/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
	/tilde/trademark/scaron/guilsinglright/oe/.notdef/zcaron/Ydieresis
	/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
	/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
	/degree/plusminus/twosuperior/threesuperior/acute/.notdef/paragraph/dotaccent
	/ogonek/onesuperior/ring/guillemotright/onequarter/onehalf/threequarters/questiondown
	/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
	/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
	/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
	/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
	/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
	/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
	/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
	/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def
/Mnodistort true def
1.000000 1.000000 scale
91.562500 145.500000 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	142.312500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.190476 0.0147151 0.0392403 [
[.21429 .00222 -3 -9 ]
[.21429 .00222 3 0 ]
[.40476 .00222 -3 -9 ]
[.40476 .00222 3 0 ]
[.59524 .00222 -3 -9 ]
[.59524 .00222 3 0 ]
[.78571 .00222 -3 -9 ]
[.78571 .00222 3 0 ]
[.97619 .00222 -3 -9 ]
[.97619 .00222 3 0 ]
[.01131 .0932 -6 -4.5 ]
[.01131 .0932 0 4.5 ]
[.01131 .17168 -6 -4.5 ]
[.01131 .17168 0 4.5 ]
[.01131 .25016 -6 -4.5 ]
[.01131 .25016 0 4.5 ]
[.01131 .32864 -6 -4.5 ]
[.01131 .32864 0 4.5 ]
[.01131 .40712 -12 -4.5 ]
[.01131 .40712 0 4.5 ]
[.01131 .4856 -12 -4.5 ]
[.01131 .4856 0 4.5 ]
[.01131 .56408 -12 -4.5 ]
[.01131 .56408 0 4.5 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.21429 .01472 m
.21429 .02097 L
s
[(1)] .21429 .00222 0 1 Mshowa
.40476 .01472 m
.40476 .02097 L
s
[(2)] .40476 .00222 0 1 Mshowa
.59524 .01472 m
.59524 .02097 L
s
[(3)] .59524 .00222 0 1 Mshowa
.78571 .01472 m
.78571 .02097 L
s
[(4)] .78571 .00222 0 1 Mshowa
.97619 .01472 m
.97619 .02097 L
s
[(5)] .97619 .00222 0 1 Mshowa
.125 Mabswid
.0619 .01472 m
.0619 .01847 L
s
.1 .01472 m
.1 .01847 L
s
.1381 .01472 m
.1381 .01847 L
s
.17619 .01472 m
.17619 .01847 L
s
.25238 .01472 m
.25238 .01847 L
s
.29048 .01472 m
.29048 .01847 L
s
.32857 .01472 m
.32857 .01847 L
s
.36667 .01472 m
.36667 .01847 L
s
.44286 .01472 m
.44286 .01847 L
s
.48095 .01472 m
.48095 .01847 L
s
.51905 .01472 m
.51905 .01847 L
s
.55714 .01472 m
.55714 .01847 L
s
.63333 .01472 m
.63333 .01847 L
s
.67143 .01472 m
.67143 .01847 L
s
.70952 .01472 m
.70952 .01847 L
s
.74762 .01472 m
.74762 .01847 L
s
.82381 .01472 m
.82381 .01847 L
s
.8619 .01472 m
.8619 .01847 L
s
.9 .01472 m
.9 .01847 L
s
.9381 .01472 m
.9381 .01847 L
s
.25 Mabswid
0 .01472 m
1 .01472 L
s
.02381 .0932 m
.03006 .0932 L
s
[(2)] .01131 .0932 1 0 Mshowa
.02381 .17168 m
.03006 .17168 L
s
[(4)] .01131 .17168 1 0 Mshowa
.02381 .25016 m
.03006 .25016 L
s
[(6)] .01131 .25016 1 0 Mshowa
.02381 .32864 m
.03006 .32864 L
s
[(8)] .01131 .32864 1 0 Mshowa
.02381 .40712 m
.03006 .40712 L
s
[(10)] .01131 .40712 1 0 Mshowa
.02381 .4856 m
.03006 .4856 L
s
[(12)] .01131 .4856 1 0 Mshowa
.02381 .56408 m
.03006 .56408 L
s
[(14)] .01131 .56408 1 0 Mshowa
.125 Mabswid
.02381 .03434 m
.02756 .03434 L
s
.02381 .05396 m
.02756 .05396 L
s
.02381 .07358 m
.02756 .07358 L
s
.02381 .11282 m
.02756 .11282 L
s
.02381 .13244 m
.02756 .13244 L
s
.02381 .15206 m
.02756 .15206 L
s
.02381 .1913 m
.02756 .1913 L
s
.02381 .21092 m
.02756 .21092 L
s
.02381 .23054 m
.02756 .23054 L
s
.02381 .26978 m
.02756 .26978 L
s
.02381 .2894 m
.02756 .2894 L
s
.02381 .30902 m
.02756 .30902 L
s
.02381 .34826 m
.02756 .34826 L
s
.02381 .36788 m
.02756 .36788 L
s
.02381 .3875 m
.02756 .3875 L
s
.02381 .42674 m
.02756 .42674 L
s
.02381 .44636 m
.02756 .44636 L
s
.02381 .46598 m
.02756 .46598 L
s
.02381 .50522 m
.02756 .50522 L
s
.02381 .52484 m
.02756 .52484 L
s
.02381 .54446 m
.02756 .54446 L
s
.02381 .5837 m
.02756 .5837 L
s
.02381 .60332 m
.02756 .60332 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .01472 m
.06244 .03859 L
.10458 .06463 L
.14415 .08909 L
.18221 .11261 L
.22272 .13765 L
.26171 .16175 L
.30316 .18736 L
.34309 .21204 L
.3815 .23578 L
.42237 .26104 L
.46172 .28536 L
.49955 .30874 L
.53984 .33364 L
.57861 .3576 L
.61984 .38308 L
.65954 .40762 L
.69774 .43123 L
.73838 .45635 L
.77751 .48053 L
.81909 .50623 L
.85916 .53099 L
.89771 .55482 L
.93871 .58016 L
.97619 .60332 L
s
.02381 .01864 m
.06244 .01864 L
.10458 .01864 L
.14415 .01864 L
.18221 .01864 L
.22272 .01864 L
.26171 .01864 L
.30316 .01864 L
.34309 .01864 L
.3815 .01864 L
.42237 .01864 L
.46172 .01864 L
.49955 .01864 L
.53984 .01864 L
.57861 .01864 L
.61984 .01864 L
.65954 .01864 L
.69774 .01864 L
.73838 .01864 L
.77751 .01864 L
.81909 .01864 L
.85916 .01864 L
.89771 .01864 L
.93871 .01864 L
.97619 .01864 L
s
.03 w
.97619 .60332 Mdot
.97619 .01472 Mdot
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF

%%EndDocument

 endTexFig
 612 1262 a Fd(y)1416 1371 y(x)25 b Fg(=)g(5)p Fd(;)15
b(y)29 b Fg(=)d(15)1096 2211 y(F)-8 b(easible)30 b(region)2283
2275 y Fd(x)183 2567 y Fg(In)39 b(general,)h(when)e(the)g(n)m(um)m(b)s
(er)g(of)h(decision)f(v)-5 b(ariables)39 b(is)g(no)g(more)0
2677 y(than)27 b(2,)h(w)m(e)h(can)e(use)g(some)h(pictures)e(in)i(the)f
(plane)h(to)f(solv)m(e)h(our)g(optimiza-)0 2787 y(tion)41
b(problem.)75 b(Unfortunately)-8 b(,)43 b(it)f(is)g(m)m(uc)m(h)g
(harder)e(to)i(mak)m(e)g(and)f(use)0 2896 y(pictures)29
b(in)h(a)g(higher)g(dimension.)183 3006 y(When)21 b(w)m(e)h(ha)m(v)m(e)
h(a)f(linear)g(program)f(with)h(one)f(decision)g(v)-5
b(ariable)22 b Fd(x;)h Fg(the)0 3115 y(graph)h(of)h(the)g(ob)5
b(jectiv)m(e)24 b(function)g Fd(y)29 b Fg(in)d(the)e(\()p
Fd(x;)31 b(y)s Fg(\)-plane)24 b(is)i(a)g(straigh)m(t)e(line)0
3225 y(and)34 b(the)f(feasible)g(region)h(is)g(a)g(set)g(in)g(the)g
Fd(x)p Fg(-axis.)53 b(In)34 b(general,)h(an)m(y)f(\014nite)0
3335 y(system)28 b(of)f(linear)h(constrain)m(ts)e(for)i(one)f(v)-5
b(ariable)28 b Fd(x)g Fg(is)h(equiv)-5 b(alen)m(t)27
b(to)g(either)0 3444 y(a)39 b(single)f(linear)h(constrain)m(t)d(or)j
(to)f(a)g(system)h(of)f(t)m(w)m(o)h(linear)g(constrain)m(ts.)0
3554 y(T)-8 b(o)39 b(see)e(this,)k(replace)c(ev)m(ery)h(constrain)m(t)f
(b)m(y)i(a)f(constrain)m(t)e(of)j(one)e(of)h(the)0 3663
y(follo)m(wing)31 b(\014v)m(e)h(t)m(yp)s(es:)42 b(0)26
b(=)h(0)p Fd(;)15 b Fg(0)27 b(=)f(1)p Fd(;)15 b(x)28
b Fi(\025)f Fd(b;)15 b(x)27 b Fi(\024)g Fd(b;)15 b(x)28
b Fg(=)f Fd(b:)32 b Fg(Therefore,)d(the)0 3773 y(feasible)35
b(region)f(for)h(a)h(linear)f(program)f(with)h(one)g(v)-5
b(ariable)35 b Fd(x)h Fg(has)f(one)f(of)0 3883 y(the)29
b(follo)m(wing)i(six)g(shap)s(es:)183 4043 y Fi(\017)91
b Fg(the)29 b(whole)h(line)183 4178 y Fi(\017)91 b Fg(the)29
b(ra)m(y)h Fd(x)c Fi(\024)f Fd(c)30 b Fg(going)g(from)g
Fi(\0001)h Fg(up)e(to)h(a)g(n)m(um)m(b)s(er)g Fd(c)183
4314 y Fi(\017)91 b Fg(the)29 b(ra)m(y)h Fd(x)c Fi(\025)f
Fd(c)30 b Fg(going)g(from)g(a)g(n)m(um)m(b)s(er)f Fd(c)h
Fg(up)g(to)g(+)p Fi(1)183 4449 y(\017)91 b Fg(the)29
b(closed)g(in)m(terv)-5 b(al)30 b Fd(a)c Fi(\024)f Fd(x)h
Fi(\024)f Fd(b)31 b Fg(with)f(endp)s(oin)m(ts)f Fd(a)15
b(b)31 b Fg(\()p Fd(a)25 b(<)g(b)p Fg(\))183 4584 y Fi(\017)91
b Fg(a)30 b(p)s(oin)m(t)f Fd(x)d Fg(=)f Fd(c)183 4719
y Fi(\017)91 b Fg(the)29 b(empt)m(y)h(set)g(\(that)e(is,)j(there)e(are)
g(no)h(feasible)g(solutions\))p eop end
%%Page: 26 26
TeXDict begin 26 25 bop 0 91 a Fe(26)90 b Ff(Chapter)32
b(1)h(Intr)-5 b(o)g(duction)183 311 y Fg(W)d(e)31 b(lea)m(v)m(e)h(it)f
(as)g(an)g(exercise)f(for)g(the)h(reader)e(to)i(v)m(erify)h(the)e
(follo)m(wing)0 420 y(facts:)0 555 y Fe(F)-9 b(act)46
b(3.2.)39 b Fg(If)g(the)g(ob)5 b(jectiv)m(e)38 b(function)g(is)i(a)f
(constan)m(t)f(function,)j Fd(y)i Fg(=)e Fd(c;)0 665
y Fg(then)31 b(the)g(optimal)g(v)-5 b(alue)32 b(is)h
Fd(y)e Fg(=)d Fd(c)k Fg(and)f(it)h(is)h(attained)d(at)h(an)m(y)h(p)s
(oin)m(t)g Fd(x)g Fg(in)0 774 y(the)d(feasible)h(region.)0
909 y Fe(F)-9 b(act)46 b(3.3.)40 b Fg(No)m(w)h(assume)f(that)f(the)g
(ob)5 b(jectiv)m(e)40 b(function)e(is)j(of)f(the)g(form)0
1019 y Fd(y)28 b Fg(=)e Fd(\013x;)32 b Fg(where)d Fd(\013)i
Fg(is)g(a)f Ff(nonzer)-5 b(o)30 b Fg(real)g(n)m(um)m(b)s(er.)0
1153 y(1.)91 b(If)29 b(the)f(feasible)g(region)f(is)i(the)f(whole)g
(line,)i(no)e(linear)g(program)f(has)i(an)0 1263 y(optimal)h(solution.)
0 1398 y(2.)91 b(If)28 b(the)e(feasible)g(region)g(is)i(a)f(ra)m(y)h
Fd(x)d Fi(\024)h Fd(c)g Fg(\(resp)s(ectiv)m(ely)-8 b(,)27
b Fd(x)f Fi(\025)f Fd(c)p Fg(\),)j(a)f(linear)0 1507
y(program)j(has)i(an)f(optimal)h(solution)f(if)h(and)f(only)h(if)h(it)f
(is)g(a)g(maximization)0 1617 y(problem)e(\(resp)s(ectiv)m(ely)-8
b(,)31 b(a)g(minimization)g(problem\).)43 b(The)31 b(optimal)g(v)-5
b(alue)0 1727 y(is)31 b Fd(y)d Fg(=)e Fd(\013c)k Fg(attained)f(at)g
(the)g(p)s(oin)m(t)h Fd(x)c Fg(=)f Fd(c:)0 1861 y Fg(3.)91
b(If)33 b(the)f(feasible)h(region)f(is)i(a)e(closed)h(in)m(terv)-5
b(al,)33 b Fd(a)e Fi(\024)f Fd(x)g Fi(\024)g Fd(b;)46
b(a)30 b Fi(\024)g Fd(b;)k Fg(the)0 1971 y(optimal)c(v)-5
b(alue)30 b(is)h(attained)d(at)h(one)h(of)g(the)f(endp)s(oin)m(ts)g
Fd(a)h Fg(or)g Fd(b:)0 2106 y Fg(4.)91 b(If)34 b(the)e(feasible)g
(region)h(is)g(the)g(empt)m(y)g(set,)g(there)f(are)g(no)h(optimal)g
(so-)0 2215 y(lutions.)183 2350 y(When)21 b(the)g(n)m(um)m(b)s(er)h(of)
g(decision)f(v)-5 b(ariables)22 b(is)h(2,)h(it)e(is)h(p)s(ossible)f(to)
f(dra)m(w)0 2460 y(a)34 b(picture)f(for)g(our)h(linear)f(program)g(in)h
(the)g(Cartesian)e(plane)i(in)g(order)f(to)0 2569 y(see)40
b(all)g(feasible)g(and)g(optimal)f(solutions.)70 b(This)41
b(is)g(called)e(the)h Ff(gr)-5 b(aphing)0 2679 y(metho)g(d)30
b Fg(for)h(solving)g(linear)f(programs.)41 b(By)31 b(doing)f(this,)h(w)
m(e)g(gain)f(geomet-)0 2789 y(rical)39 b(insigh)m(t)h(that)e(can)g(b)s
(e)h(applied)g(to)f(problems)h(with)g(an)m(y)h(n)m(um)m(b)s(er)e(of)0
2898 y(v)-5 b(ariables.)183 3008 y(Sometimes,)37 b(problems)f(with)g(a)
h(large)f(n)m(um)m(b)s(er)g(of)g(v)-5 b(ariables)36 b(can)g(b)s(e)0
3117 y(reduced)k(to)g(problems)h(with)h(a)f(smaller)h(n)m(um)m(b)s(er)f
(of)g(v)-5 b(ariables.)74 b(F)-8 b(or)41 b(in-)0 3227
y(stance,)30 b(in)h(Example)f(2.2,)h(w)m(e)g(can)f(reduce)f(the)h(n)m
(um)m(b)s(er)g(of)g(v)-5 b(ariables)31 b(\(not)0 3337
y(coun)m(ting)e(the)g(ob)5 b(jectiv)m(e)29 b(v)-5 b(ariable)30
b Fd(C)7 b Fg(\))30 b(from)g(4)g(to)f(2.)183 3446 y(Here)h(is)h(an)f
(example)g(when)g(the)f(n)m(um)m(b)s(er)h(of)g(v)-5 b(ariables)30
b(is)i(1)e(from)g(the)0 3556 y(b)s(eginning.)0 3691 y
Fe(Example)36 b(3.4.)716 3826 y Fc(8)716 3908 y(>)716
3935 y(>)716 3963 y(>)716 3990 y(<)716 4155 y(>)716 4182
y(>)716 4209 y(>)716 4237 y(:)828 3876 y Fg(Minimize)167
b Fd(y)154 b Fg(=)124 b(0)p Fd(:)p Fg(3)p Fd(x)812 3986
y Fg(sub)5 b(ject)29 b(to)126 b(2)p Fd(x)g Fi(\024)150
b Fg(50)p Fd(;)1338 4095 y Fg(3)p Fd(x)126 b Fi(\024)h
Fg(120)p Fd(;)1302 4205 y Fi(\000)p Fg(5)p Fd(x)91 b
Fi(\025)h(\000)p Fg(250)p Fd(;)1302 4314 y Fg(0)p Fd(:)p
Fg(5)p Fd(x)f Fi(\025)137 b(\000)p Fg(3)p Fd(:)0 4500
y Fg(W)-8 b(e)28 b(can)f(picture)f(this)h(linear)h(program)e(as)i
(follo)m(ws.)40 b(Eac)m(h)28 b(inequalit)m(y)g(giv)m(es)0
4610 y(a)45 b(ra)m(y)g(on)g(the)f Fd(x)p Fg(-axis:)71
b(The)44 b(inequalit)m(y)i(2)p Fd(x)k Fi(\024)f Fg(50)c(represen)m(ts)e
(the)h(ra)m(y)0 4719 y(\()p Fi(\0001)p Fd(;)15 b Fg(25)g(])p
Fd(;)32 b Fg(the)e(constrain)m(t)f(3)p Fd(x)d Fi(\024)g
Fg(120)31 b(represen)m(ts)d(the)i(ra)m(y)h(\()p Fi(\0001)p
Fd(;)15 b Fg(40)g(])32 b(and)p eop end
%%Page: 27 27
TeXDict begin 27 26 bop 1644 91 a Fi(x)p Ff(3.)41 b(Gr)-5
b(aphic)g(al)32 b(Metho)-5 b(d)91 b Fe(27)0 311 y Fg(the)32
b(constrain)m(t)f Fi(\000)p Fg(5)p Fd(x)f Fi(\025)f(\000)p
Fg(250)j(represen)m(ts)f(the)h(ra)m(y)h(\()p Fi(\0001)p
Fd(;)15 b Fg(50)g(])p Fd(:)34 b Fg(What)e(ra)m(y)0 420
y(is)39 b(obtained)e(from)i(the)e(fourth)h(constrain)m(t)f(in)i
(Example)f(3.4?)66 b(Since)38 b(the)0 530 y(con)m(tribution)28
b(made)i(b)m(y)h(eac)m(h)f(and)g(ev)m(ery)g(constrain)m(t)f(m)m(ust)h
(b)s(e)f(tak)m(en)h(in)m(to)0 639 y(accoun)m(t,)24 b(the)f(feasible)h
(region)f(m)m(ust)h(b)s(e)f(the)g(common)g(part)g(or)h(in)m(tersection)
0 749 y(of)36 b(these)g(ra)m(ys.)59 b(This)37 b(giv)m(es)g(the)f(in)m
(terv)-5 b(al)36 b Fi(\000)p Fg(6)g Fi(\024)g Fd(x)g
Fi(\024)g Fg(25)g(as)g(the)g(feasible)0 858 y(region;)30
b(that)e(is,)k(the)d(set)h(of)g(all)g(feasible)g(solutions.)183
973 y(In)44 b(Figure)e(3.5,)48 b(w)m(e)c(plot)g(the)f(ob)5
b(jectiv)m(e)43 b(function)f(on)i(the)f(feasible)0 1083
y(region.)508 1221 y
 12083119 7458719 5920358 197345 21181726 9604136 startTexFig
 508 1221 a
%%BeginDocument: Ex.4.4.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 90 3 322 146
%%HiResBoundingBox: 90.75 3.1875 321.125 145.5
%%Creator: (Mathematica 4.0 for X)
%%CreationDate: (Saturday, July 28, 2001) (19:40:11)
%%Title: Clipboard
%%DocumentNeededResources: font Times-Italic
%%+ font Courier
%%+ font Times-Roman
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Times-Italic
%%+ Courier
%%+ Times-Roman
%%DocumentSuppliedFonts:
%%DocumentFonts: Times-Italic
%%+ Courier
%%+ Times-Roman
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 148.688 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
90.750000 145.500000 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	142.312500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.208141 0.030722 0.128638 0.0632907 [
[.05453 .11614 -6 -9 ]
[.05453 .11614 6 0 ]
[.36175 .11614 -3 -9 ]
[.36175 .11614 3 0 ]
[.51536 .11614 -6 -9 ]
[.51536 .11614 6 0 ]
[.66897 .11614 -6 -9 ]
[.66897 .11614 6 0 ]
[.82258 .11614 -6 -9 ]
[.82258 .11614 6 0 ]
[.97619 .11614 -6 -9 ]
[.97619 .11614 6 0 ]
[1.025 .12864 0 -4.90625 ]
[1.025 .12864 8.6875 4.90625 ]
[.19564 .00206 -12 -4.5 ]
[.19564 .00206 0 4.5 ]
[.19564 .25522 -6 -4.5 ]
[.19564 .25522 0 4.5 ]
[.19564 .3818 -6 -4.5 ]
[.19564 .3818 0 4.5 ]
[.19564 .50838 -6 -4.5 ]
[.19564 .50838 0 4.5 ]
[.20814 .64303 -4.3125 0 ]
[.20814 .64303 4.3125 10.25 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.05453 .12864 m
.05453 .13489 L
s
[(-5)] .05453 .11614 0 1 Mshowa
.36175 .12864 m
.36175 .13489 L
s
[(5)] .36175 .11614 0 1 Mshowa
.51536 .12864 m
.51536 .13489 L
s
[(10)] .51536 .11614 0 1 Mshowa
.66897 .12864 m
.66897 .13489 L
s
[(15)] .66897 .11614 0 1 Mshowa
.82258 .12864 m
.82258 .13489 L
s
[(20)] .82258 .11614 0 1 Mshowa
.97619 .12864 m
.97619 .13489 L
s
[(25)] .97619 .11614 0 1 Mshowa
.125 Mabswid
.08525 .12864 m
.08525 .13239 L
s
.11598 .12864 m
.11598 .13239 L
s
.1467 .12864 m
.1467 .13239 L
s
.17742 .12864 m
.17742 .13239 L
s
.23886 .12864 m
.23886 .13239 L
s
.26959 .12864 m
.26959 .13239 L
s
.30031 .12864 m
.30031 .13239 L
s
.33103 .12864 m
.33103 .13239 L
s
.39247 .12864 m
.39247 .13239 L
s
.4232 .12864 m
.4232 .13239 L
s
.45392 .12864 m
.45392 .13239 L
s
.48464 .12864 m
.48464 .13239 L
s
.54608 .12864 m
.54608 .13239 L
s
.5768 .12864 m
.5768 .13239 L
s
.60753 .12864 m
.60753 .13239 L
s
.63825 .12864 m
.63825 .13239 L
s
.69969 .12864 m
.69969 .13239 L
s
.73041 .12864 m
.73041 .13239 L
s
.76114 .12864 m
.76114 .13239 L
s
.79186 .12864 m
.79186 .13239 L
s
.8533 .12864 m
.8533 .13239 L
s
.88402 .12864 m
.88402 .13239 L
s
.91475 .12864 m
.91475 .13239 L
s
.94547 .12864 m
.94547 .13239 L
s
.02381 .12864 m
.02381 .13239 L
s
.25 Mabswid
0 .12864 m
1 .12864 L
s
gsave
1.025 .12864 -61 -8.90625 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 17.8125 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.250 11.250 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
%%BeginResource: font Times-Italic-MISO
%%BeginFont: Times-Italic-MISO
/Times-Italic /Times-Italic-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Times-Italic-MISO
%%IncludeFont: Times-Italic-MISO
/Times-Italic-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(x) show
67.688 11.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.20814 .00206 m
.21439 .00206 L
s
[(-2)] .19564 .00206 1 0 Mshowa
.20814 .25522 m
.21439 .25522 L
s
[(2)] .19564 .25522 1 0 Mshowa
.20814 .3818 m
.21439 .3818 L
s
[(4)] .19564 .3818 1 0 Mshowa
.20814 .50838 m
.21439 .50838 L
s
[(6)] .19564 .50838 1 0 Mshowa
.125 Mabswid
.20814 .0337 m
.21189 .0337 L
s
.20814 .06535 m
.21189 .06535 L
s
.20814 .09699 m
.21189 .09699 L
s
.20814 .16028 m
.21189 .16028 L
s
.20814 .19193 m
.21189 .19193 L
s
.20814 .22357 m
.21189 .22357 L
s
.20814 .28687 m
.21189 .28687 L
s
.20814 .31851 m
.21189 .31851 L
s
.20814 .35016 m
.21189 .35016 L
s
.20814 .41345 m
.21189 .41345 L
s
.20814 .44509 m
.21189 .44509 L
s
.20814 .47674 m
.21189 .47674 L
s
.20814 .54003 m
.21189 .54003 L
s
.20814 .57167 m
.21189 .57167 L
s
.20814 .60332 m
.21189 .60332 L
s
.25 Mabswid
.20814 0 m
.20814 .61803 L
s
gsave
.20814 .64303 -65.3125 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 18.25 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.188 11.250 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
%%BeginResource: font Times-Italic-MISO
%%BeginFont: Times-Italic-MISO
/Times-Italic /Times-Italic-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Times-Italic-MISO
%%IncludeFont: Times-Italic-MISO
/Times-Italic-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(y) show
67.625 11.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .01472 m
.06244 .03859 L
.10458 .06463 L
.14415 .08909 L
.18221 .11261 L
.22272 .13765 L
.26171 .16175 L
.30316 .18736 L
.34309 .21204 L
.3815 .23578 L
.42237 .26104 L
.46172 .28536 L
.49955 .30874 L
.53984 .33364 L
.57861 .3576 L
.61984 .38308 L
.65954 .40762 L
.69774 .43123 L
.73838 .45635 L
.77751 .48053 L
.81909 .50623 L
.85916 .53099 L
.89771 .55482 L
.93871 .58016 L
.97619 .60332 L
s
.02381 .13497 m
.06244 .13497 L
.10458 .13497 L
.14415 .13497 L
.18221 .13497 L
.22272 .13497 L
.26171 .13497 L
.30316 .13497 L
.34309 .13497 L
.3815 .13497 L
.42237 .13497 L
.46172 .13497 L
.49955 .13497 L
.53984 .13497 L
.57861 .13497 L
.61984 .13497 L
.65954 .13497 L
.69774 .13497 L
.73838 .13497 L
.77751 .13497 L
.81909 .13497 L
.85916 .13497 L
.89771 .13497 L
.93871 .13497 L
.97619 .13497 L
s
gsave
.51536 .19193 -96.0938 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
%%BeginResource: font Times-Roman-MISO
%%BeginFont: Times-Roman-MISO
/Times-Roman /Times-Roman-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Times-Roman-MISO
%%IncludeFont: Times-Roman-MISO
/Times-Roman-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Feasible) show
103.688 11.812 moveto
(region) show
129.188 11.812 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.03 w
.02381 .01472 Mdot
.02381 .12864 Mdot
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF

%%EndDocument

 endTexFig
 1102 2449 a Fe(Figure)36 b(3.5.)183 2758 y Fg(No)m(w)26
b(it)g(is)g(clear)f(that)f(the)h(minimal)h(v)-5 b(alue)25
b(for)h(the)e(ob)5 b(jectiv)m(e)25 b(function)0 2867
y(in)h(our)f(problem)f(is)37 b Fi(\000)11 b Fg(1)p Fd(:)p
Fg(8)p Fd(:)26 b Fg(It)f(is)h(reac)m(hed)e(at)h Fd(x)h
Fg(=)36 b Fi(\000)11 b Fg(6)p Fd(;)25 b Fg(whic)m(h)h(is)g(the)f
(unique)0 2977 y(optimal)30 b(solution.)40 b Fd(Answ)r(er)s
Fg(:)h(min)26 b(=)45 b Fi(\000)21 b Fg(1)p Fd(:)p Fg(8)30
b(at)f Fd(x)d Fg(=)46 b Fi(\000)20 b Fg(6)p Fd(:)p 2661
2969 40 40 v 183 3091 a Fg(The)41 b(set)f(of)i(optimal)f(solutions)f
(also)i(has)f(one)g(of)g(those)f(six)i(forms.)0 3201
y(And)30 b(it)f(is)h(a)f(subset)g(of)g(the)f(feasible)h(region.)40
b(When)28 b(the)h(feasible)g(set)g(is)h(an)0 3311 y(in)m(terv)-5
b(al,)36 b(one)d(endp)s(oin)m(t)g(or)h(the)g(other)f(is)i(an)f(optimal)
g(solution;)i(w)m(e)f(ha)m(v)m(e)0 3420 y(exactly)22
b(one)g(optimal)g(solution)g(\(whic)m(h)g(m)m(ust)h(b)s(e)e(an)i(endp)s
(oin)m(t\))d(if)j(and)f(only)0 3530 y(if)31 b(the)e(ob)5
b(jectiv)m(e)29 b(function)g(is)i(not)e(constan)m(t.)183
3644 y(W)-8 b(e)30 b(no)m(w)g(consider)f(a)h(linear)g(program)f(with)h
(t)m(w)m(o)g(v)-5 b(ariables.)0 3791 y Fe(Example)36
b(3.6.)183 3874 y Fc(8)183 3956 y(>)183 3983 y(>)183
4011 y(>)183 4038 y(<)183 4202 y(>)183 4230 y(>)183 4257
y(>)183 4285 y(:)286 3924 y Fg(Maximize)146 b Fd(f)35
b Fg(=)25 b Fd(x)c Fg(+)f(9)p Fd(y)279 4033 y Fg(sub)5
b(ject)29 b(to)90 b Fd(x)26 b Fi(\025)f Fg(0)p Fd(;)46
b(y)28 b Fi(\025)e Fg(0)p Fd(;)833 4143 y(x)20 b Fi(\000)g
Fd(y)29 b Fi(\024)c Fg(3)p Fd(;)774 4253 y(x)c Fi(\000)f
Fg(3)p Fd(y)28 b Fi(\025)e(\000)p Fg(5)p Fd(;)777 4362
y Fg(5)p Fd(x)20 b Fg(+)g(7)p Fd(y)28 b Fi(\024)e Fg(35)183
4500 y(First)31 b(w)m(e)h(dra)m(w)g(the)f(feasible)h(region,)f
Fd(F)13 b Fg(,)33 b(in)f(the)f(\()p Fd(x;)15 b(y)s Fg(\)-plane,)32
b(where)0 4610 y Fd(F)41 b Fg(consists)28 b(of)h(all)g(p)s(oin)m(ts)g
(\()p Fd(x;)15 b(y)s Fg(\))28 b(satisfying)h(the)f(linear)g(constrain)m
(ts.)39 b(Since)0 4719 y(eac)m(h)31 b(constrain)m(t)g(is)h(a)g(linear)g
(inequalit)m(y)-8 b(,)33 b(the)e(set)h(of)g(all)g(p)s(oin)m(ts)g
(satisfying)p eop end
%%Page: 28 28
TeXDict begin 28 27 bop 0 91 a Fe(28)90 b Ff(Chapter)32
b(1)h(Intr)-5 b(o)g(duction)0 311 y Fg(this)32 b(inequalit)m(y)h
(describ)s(es)d(a)j(half-plane.)46 b(Th)m(us)32 b(the)g(feasible)f
(region)h Fd(F)45 b Fg(is)0 420 y(the)29 b(in)m(tersection)g(of)h(all)g
(these)f(half-planes)h(\(Figure)f(3.7\).)513 539 y
 12008532 7458719 5986140 197345 21181726 9604136 startTexFig
 513
539 a
%%BeginDocument: Ex.4.5a.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 91 3 322 146
%%HiResBoundingBox: 91.5625 3.1875 321.938 145.5
%%Creator: (Mathematica 4.0 for X)
%%CreationDate: (Saturday, July 28, 2001) (19:53:35)
%%Title: Clipboard
%%DocumentNeededResources: font Times-Italic
%%+ font Courier
%%+ font Times-Roman
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Times-Italic
%%+ Courier
%%+ Times-Roman
%%DocumentSuppliedFonts:
%%DocumentFonts: Times-Italic
%%+ Courier
%%+ Times-Roman
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 148.688 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
91.562500 145.500000 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	142.312500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.136054 0.235442 0.0735755 [
[.15986 .22294 -3 -9 ]
[.15986 .22294 3 0 ]
[.29592 .22294 -3 -9 ]
[.29592 .22294 3 0 ]
[.43197 .22294 -3 -9 ]
[.43197 .22294 3 0 ]
[.56803 .22294 -3 -9 ]
[.56803 .22294 3 0 ]
[.70408 .22294 -3 -9 ]
[.70408 .22294 3 0 ]
[.84014 .22294 -3 -9 ]
[.84014 .22294 3 0 ]
[.97619 .22294 -3 -9 ]
[.97619 .22294 3 0 ]
[1.025 .23544 0 -4.90625 ]
[1.025 .23544 8.6875 4.90625 ]
[.01131 .08829 -12 -4.5 ]
[.01131 .08829 0 4.5 ]
[.01131 .38259 -6 -4.5 ]
[.01131 .38259 0 4.5 ]
[.01131 .52974 -6 -4.5 ]
[.01131 .52974 0 4.5 ]
[.02381 .64303 -4.3125 0 ]
[.02381 .64303 4.3125 10.25 ]
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.15986 .23544 m
.15986 .24169 L
s
[(1)] .15986 .22294 0 1 Mshowa
.29592 .23544 m
.29592 .24169 L
s
[(2)] .29592 .22294 0 1 Mshowa
.43197 .23544 m
.43197 .24169 L
s
[(3)] .43197 .22294 0 1 Mshowa
.56803 .23544 m
.56803 .24169 L
s
[(4)] .56803 .22294 0 1 Mshowa
.70408 .23544 m
.70408 .24169 L
s
[(5)] .70408 .22294 0 1 Mshowa
.84014 .23544 m
.84014 .24169 L
s
[(6)] .84014 .22294 0 1 Mshowa
.97619 .23544 m
.97619 .24169 L
s
[(7)] .97619 .22294 0 1 Mshowa
.125 Mabswid
.05102 .23544 m
.05102 .23919 L
s
.07823 .23544 m
.07823 .23919 L
s
.10544 .23544 m
.10544 .23919 L
s
.13265 .23544 m
.13265 .23919 L
s
.18707 .23544 m
.18707 .23919 L
s
.21429 .23544 m
.21429 .23919 L
s
.2415 .23544 m
.2415 .23919 L
s
.26871 .23544 m
.26871 .23919 L
s
.32313 .23544 m
.32313 .23919 L
s
.35034 .23544 m
.35034 .23919 L
s
.37755 .23544 m
.37755 .23919 L
s
.40476 .23544 m
.40476 .23919 L
s
.45918 .23544 m
.45918 .23919 L
s
.48639 .23544 m
.48639 .23919 L
s
.51361 .23544 m
.51361 .23919 L
s
.54082 .23544 m
.54082 .23919 L
s
.59524 .23544 m
.59524 .23919 L
s
.62245 .23544 m
.62245 .23919 L
s
.64966 .23544 m
.64966 .23919 L
s
.67687 .23544 m
.67687 .23919 L
s
.73129 .23544 m
.73129 .23919 L
s
.7585 .23544 m
.7585 .23919 L
s
.78571 .23544 m
.78571 .23919 L
s
.81293 .23544 m
.81293 .23919 L
s
.86735 .23544 m
.86735 .23919 L
s
.89456 .23544 m
.89456 .23919 L
s
.92177 .23544 m
.92177 .23919 L
s
.94898 .23544 m
.94898 .23919 L
s
.25 Mabswid
0 .23544 m
1 .23544 L
s
gsave
1.025 .23544 -61 -8.90625 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 17.8125 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.250 11.250 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
%%BeginResource: font Times-Italic-MISO
%%BeginFont: Times-Italic-MISO
/Times-Italic /Times-Italic-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Times-Italic-MISO
%%IncludeFont: Times-Italic-MISO
/Times-Italic-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(x) show
67.688 11.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.02381 .08829 m
.03006 .08829 L
s
[(-2)] .01131 .08829 1 0 Mshowa
.02381 .38259 m
.03006 .38259 L
s
[(2)] .01131 .38259 1 0 Mshowa
.02381 .52974 m
.03006 .52974 L
s
[(4)] .01131 .52974 1 0 Mshowa
.125 Mabswid
.02381 .12508 m
.02756 .12508 L
s
.02381 .16187 m
.02756 .16187 L
s
.02381 .19865 m
.02756 .19865 L
s
.02381 .27223 m
.02756 .27223 L
s
.02381 .30902 m
.02756 .30902 L
s
.02381 .3458 m
.02756 .3458 L
s
.02381 .41938 m
.02756 .41938 L
s
.02381 .45617 m
.02756 .45617 L
s
.02381 .49296 m
.02756 .49296 L
s
.02381 .0515 m
.02756 .0515 L
s
.02381 .01472 m
.02756 .01472 L
s
.02381 .56653 m
.02756 .56653 L
s
.02381 .60332 m
.02756 .60332 L
s
.25 Mabswid
.02381 0 m
.02381 .61803 L
s
gsave
.02381 .64303 -65.3125 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 18.25 translate 1 -1 scale
63.000 11.250 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.188 11.250 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
%%BeginResource: font Times-Italic-MISO
%%BeginFont: Times-Italic-MISO
/Times-Italic /Times-Italic-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Times-Italic-MISO
%%IncludeFont: Times-Italic-MISO
/Times-Italic-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(y) show
67.625 11.250 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.5 Mabswid
.02381 .01472 m
.06244 .03561 L
.10458 .05839 L
.14415 .07979 L
.18221 .10037 L
.22272 .12228 L
.26171 .14337 L
.30316 .16578 L
.34309 .18737 L
.3815 .20815 L
.42237 .23025 L
.46172 .25153 L
.49955 .27199 L
.53984 .29377 L
.57861 .31474 L
.61984 .33703 L
.65954 .35851 L
.69774 .37916 L
.73838 .40114 L
.77751 .4223 L
.81909 .44479 L
.85916 .46646 L
.89771 .4873 L
.93871 .50948 L
.97619 .52974 L
s
.02381 .35807 m
.06244 .36503 L
.10458 .37263 L
.14415 .37976 L
.18221 .38662 L
.22272 .39392 L
.26171 .40095 L
.30316 .40842 L
.34309 .41562 L
.3815 .42254 L
.42237 .42991 L
.46172 .437 L
.49955 .44382 L
.53984 .45109 L
.57861 .45808 L
.61984 .46551 L
.65954 .47266 L
.69774 .47955 L
.73838 .48688 L
.77751 .49393 L
.81909 .50143 L
.85916 .50865 L
.89771 .5156 L
.93871 .52299 L
.97619 .52974 L
s
.02381 .60332 m
.06244 .5884 L
.10458 .57212 L
.14415 .55683 L
.18221 .54213 L
.22272 .52649 L
.26171 .51142 L
.30316 .49542 L
.34309 .47999 L
.3815 .46515 L
.42237 .44937 L
.46172 .43417 L
.49955 .41955 L
.53984 .40399 L
.57861 .38902 L
.61984 .37309 L
.65954 .35775 L
.69774 .343 L
.73838 .3273 L
.77751 .31219 L
.81909 .29612 L
.85916 .28065 L
.89771 .26576 L
.93871 .24992 L
.97619 .23544 L
s
gsave
.29592 .30902 -96.0938 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
%%BeginResource: font Times-Roman-MISO
%%BeginFont: Times-Roman-MISO
/Times-Roman /Times-Roman-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Times-Roman-MISO
%%IncludeFont: Times-Roman-MISO
/Times-Roman-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Feasible) show
103.688 11.812 moveto
(region) show
129.188 11.812 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF

%%EndDocument

 endTexFig
 654 1734 a Fe(Figure)35 b(3.7.)40 b Fg(The)30 b(feasible)g(region)f
Fd(F)183 1889 y Fg(This)j(region)g Fd(F)45 b Fg(is)33
b(a)f(con)m(v)m(ex)h(\(see)e Fi(x)p Fg(12)h(of)g(Chapter)e(4\))i(p)s
(olygon)f(with)0 1998 y(\014v)m(e)k(v)m(ertices)f(\(a)g(p)s(en)m
(tagon\).)50 b(The)34 b(v)m(ertices)g(with)g Fd(y)s Fg(-co)s(ordinate)f
(equal)h(to)0 2151 y(zero)27 b(are)h(\(0)p Fd(;)15 b
Fg(0\))27 b(and)h(\(3)p Fd(;)15 b Fg(0\))p Fd(:)27 b
Fg(The)h(v)m(ertex)g(that)f(lies)i(on)e(the)h Fd(y)s
Fg(-axis)h(is)g(\(0)p Fd(;)2582 2089 y Fg(5)p 2582 2130
46 4 v 2582 2214 a(3)2639 2151 y(\))p Fd(:)0 2343 y Fg(The)36
b(fourth)e(v)m(ertex)i(is)g(\()903 2282 y(14)p 903 2322
92 4 v 926 2406 a(3)1005 2343 y Fd(;)1057 2282 y Fg(5)p
1057 2322 46 4 v 1057 2406 a(3)1113 2343 y(\))g(whic)m(h)g(corresp)s
(onds)d(to)j(the)f(in)m(tersection)0 2479 y(of)j(the)e(straigh)m(t)h
(lines)h Fd(x)26 b Fi(\000)f Fd(y)41 b Fg(=)d(3)g(and)f(5)p
Fd(x)25 b Fg(+)g(7)p Fd(y)41 b Fg(=)d(35)f(and)h(the)e(highest)0
2588 y(v)m(ertex)29 b(is)i(the)e(in)m(tersection)f(of)h(the)g(lines)h
Fd(x)20 b Fi(\000)g Fg(3)p Fd(y)28 b Fg(=)d Fi(\000)p
Fg(5)30 b(and)f(5)p Fd(x)20 b Fg(+)f(7)p Fd(y)28 b Fg(=)e(35)0
2736 y(and)k(has)f(co)s(ordinates)f(\()p Fd(x;)15 b(y)s
Fg(\))25 b(=)g(\()1206 2674 y(35)p 1206 2715 92 4 v 1206
2798 a(11)1308 2736 y Fd(;)1360 2674 y Fg(30)p 1360 2715
V 1360 2798 a(11)1462 2736 y(\))p Fd(:)183 2876 y Fg(In)34
b(Figure)f(3.8,)i(w)m(e)f(dra)m(w)g(the)f(graph)g(of)h(the)f(function)f
Fd(y)j Fg(=)d Fi(\000)p Fd(x=)p Fg(9)i(in)0 2986 y(the)22
b(\()p Fd(x;)15 b(y)s Fg(\)-plane.)38 b(This)24 b(corresp)s(onds)c(to)j
(the)f(v)-5 b(alue)23 b Fd(f)35 b Fg(=)26 b(0)d(of)g(the)f(ob)5
b(jectiv)m(e)0 3095 y(function.)513 3214 y
 12008532 7458719 5986140 197345 21181726 9604136 startTexFig
 513 3214 a
%%BeginDocument: Ex.4.5b.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 91 3 322 146
%%HiResBoundingBox: 91.5625 3.1875 321.938 145.438
%%Creator: (Mathematica 4.1 for X)
%%CreationDate: (Tuesday, March 12, 2002) (19:49:29)
%%Title: Clipboard
%%DocumentNeededResources: font Math1
%%+ font Times-Italic
%%+ font Courier
%%+ font Times-Roman
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Math1
%%+ Times-Italic
%%+ Courier
%%+ Times-Roman
%%DocumentSuppliedFonts:
%%DocumentFonts: Math1
%%+ Times-Italic
%%+ Courier
%%+ Times-Roman
%%EndComments
0 148.625 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/MacintoshRomanEncoding [
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
	/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
	/zero/one/two/three/four/five/six/seven
	/eight/nine/colon/semicolon/less/equal/greater/question
	/at/A/B/C/D/E/F/G
	/H/I/J/K/L/M/N/O
	/P/Q/R/S/T/U/V/W
	/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
	/grave/a/b/c/d/e/f/g
	/h/i/j/k/l/m/n/o
	/p/q/r/s/t/u/v/w
	/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
	/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
	/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
	/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
	/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
	/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
	/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
	/.notdef/plusminus/.notdef/.notdef/yen/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/ordfeminine/ring/.notdef/ae/oslash
	/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft
	/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
	/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef
	/ydieresis/Ydieresis/.notdef/currency/guilsinglleft/guilsinglright/.notdef/.notdef
	/daggerdbl/dotaccent/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
	/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
	/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
	/macron/.notdef/.notdef/.notdef/ogonek/.notdef/.notdef/.notdef
] def
/WindowsANSIEncoding [
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
	/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
	/zero/one/two/three/four/five/six/seven
	/eight/nine/colon/semicolon/less/equal/greater/question
	/at/A/B/C/D/E/F/G
	/H/I/J/K/L/M/N/O
	/P/Q/R/S/T/U/V/W
	/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
	/grave/a/b/c/d/e/f/g
	/h/i/j/k/l/m/n/o
	/p/q/r/s/t/u/v/w
	/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
	/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
	/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/Zcaron/.notdef
	/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
	/tilde/trademark/scaron/guilsinglright/oe/.notdef/zcaron/Ydieresis
	/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
	/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
	/degree/plusminus/twosuperior/threesuperior/acute/.notdef/paragraph/dotaccent
	/ogonek/onesuperior/ring/guillemotright/onequarter/onehalf/threequarters/questiondown
	/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
	/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
	/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
	/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
	/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
	/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
	/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
	/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def
/Mnodistort true def
1.000000 1.000000 scale
91.562500 145.437500 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	142.250000 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.136054 0.132436 0.117721 [
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
.7 g
.02381 .13244 m
.43197 .13244 L
.65873 .32864 L
.45671 .45349 L
.02381 .32864 L
F
0 g
.5 Mabswid
[ ] 0 setdash
.02381 .13244 m
.06244 .12872 L
.10458 .12467 L
.14415 .12087 L
.18221 .11721 L
.22272 .11331 L
.26171 .10956 L
.30316 .10558 L
.34309 .10174 L
.3815 .09805 L
.42237 .09412 L
.46172 .09034 L
.49955 .0867 L
.53984 .08283 L
.57861 .0791 L
.61984 .07513 L
.65954 .07132 L
.69774 .06765 L
.73838 .06374 L
.77751 .05998 L
.81909 .05598 L
.85916 .05213 L
.89771 .04842 L
.93871 .04448 L
.97619 .04088 L
s
.02381 .30902 m
.06244 .3053 L
.10458 .30125 L
.14415 .29745 L
.18221 .29379 L
.22272 .28989 L
.26171 .28615 L
.30316 .28216 L
.34309 .27832 L
.3815 .27463 L
.42237 .2707 L
.46172 .26692 L
.49955 .26328 L
.53984 .25941 L
.57861 .25568 L
.61984 .25172 L
.65954 .2479 L
.69774 .24423 L
.73838 .24032 L
.77751 .23656 L
.81909 .23256 L
.85916 .22871 L
.89771 .225 L
.93871 .22106 L
.97619 .21746 L
s
.02381 .49511 m
.06244 .4914 L
.10458 .48735 L
.14415 .48354 L
.18221 .47988 L
.22272 .47599 L
.26171 .47224 L
.30316 .46826 L
.34309 .46442 L
.3815 .46072 L
.42237 .45679 L
.46172 .45301 L
.49955 .44937 L
.53984 .4455 L
.57861 .44177 L
.61984 .43781 L
.65954 .43399 L
.69774 .43032 L
.73838 .42641 L
.77751 .42265 L
.81909 .41865 L
.85916 .4148 L
.89771 .4111 L
.93871 .40715 L
.97619 .40355 L
s
.02381 .60332 m
.06244 .5996 L
.10458 .59555 L
.14415 .59175 L
.18221 .58809 L
.22272 .5842 L
.26171 .58045 L
.30316 .57646 L
.34309 .57262 L
.3815 .56893 L
.42237 .565 L
.46172 .56122 L
.49955 .55758 L
.53984 .55371 L
.57861 .54998 L
.61984 .54602 L
.65954 .5422 L
.69774 .53853 L
.73838 .53462 L
.77751 .53086 L
.81909 .52686 L
.85916 .52301 L
.89771 .5193 L
.93871 .51536 L
.97619 .51176 L
s
gsave
.29592 .25016 -96.0938 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(Feasible) show
103.688 11.812 moveto
(region) show
129.188 11.812 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.70408 .01472 -75.2812 -9.40625 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.8125 translate 1 -1 scale
63.000 11.750 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
64.438 11.750 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(f) show
71.125 11.750 moveto
%%IncludeResource: font Math1
%%IncludeFont: Math1
/Math1 findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(=) show
80.062 11.750 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(0) show
87.562 11.750 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.77211 .36788 -80.125 -9.40625 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.8125 translate 1 -1 scale
63.000 11.750 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
64.438 11.750 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(f) show
71.125 11.750 moveto
%%IncludeResource: font Math1
%%IncludeFont: Math1
/Math1 findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(=) show
80.062 11.750 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(max) show
97.250 11.750 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.73129 .1913 -80.2812 -9.46875 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.9375 translate 1 -1 scale
63.000 11.875 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
64.438 11.875 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(f) show
71.125 11.875 moveto
%%IncludeResource: font Math1
%%IncludeFont: Math1
/Math1 findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(=) show
80.062 11.875 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(13.5) show
97.562 11.875 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.77211 .4856 -76.5312 -9.4375 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 18.875 translate 1 -1 scale
63.000 11.812 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
64.438 11.812 moveto
%%IncludeResource: font Times-Italic
%%IncludeFont: Times-Italic
/Times-Italic findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(f) show
71.125 11.812 moveto
%%IncludeResource: font Math1
%%IncludeFont: Math1
/Math1 findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(=) show
80.062 11.812 moveto
%%IncludeResource: font Times-Roman
%%IncludeFont: Times-Roman
/Times-Roman findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(36) show
90.062 11.812 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF

%%EndDocument

 endTexFig
 331 4409 a Fe(Figure)35 b(3.8.)40 b Fg(The)30 b(feasible)f(region)h
Fd(F)43 b Fg(and)29 b(lev)m(els)i(for)f Fd(f)183 4610
y Fg(The)j(v)-5 b(alue)34 b(of)g Fd(f)44 b Fg(is)35 b(constan)m(t)d
(along)h(parallel)h(straigh)m(t)f(lines)i(passing)0 4719
y(through)25 b(the)h(feasible)g(region;)h(that)e(is,)k
Fd(x)13 b Fg(+)g(9)p Fd(y)29 b Fg(=)c Fd(f)36 b Fg(with)27
b Fd(f)35 b Fi(\025)25 b Fg(0)p Fd(:)i Fg(No)m(w)h(it)f(is)p
eop end
%%Page: 29 29
TeXDict begin 29 28 bop 1644 91 a Fi(x)p Ff(3.)41 b(Gr)-5
b(aphic)g(al)32 b(Metho)-5 b(d)91 b Fe(29)0 311 y Fg(clear)28
b(that)f(the)g(minimal)i(v)-5 b(alue)28 b(of)h Fd(f)38
b Fg(is)29 b(0,)g(the)e(v)-5 b(alue)28 b Fd(f)35 b Fg(=)25
b(36)j(is)h(infeasible,)0 458 y(and)j(the)f(maximal)i(v)-5
b(alue)31 b(of)h Fd(f)42 b Fg(in)33 b Fd(F)45 b Fg(is)32
b(reac)m(hed)f(at)h(the)f(v)m(ertex)h(\()2384 396 y(35)p
2384 437 92 4 v 2384 521 a(11)2485 458 y Fd(;)2537 396
y Fg(30)p 2537 437 V 2537 521 a(11)2639 458 y(\))p Fd(:)0
650 y Fg(This)27 b(optimal)f(v)-5 b(alue)26 b(is)h Fd(f)35
b Fg(=)1043 589 y(35)p 1043 629 V 1043 713 a(11)1158
650 y(+)13 b(9\()1335 589 y(30)p 1335 629 V 1335 713
a(11)1436 650 y(\))25 b(=)1605 589 y(305)p 1605 629 137
4 v 1627 713 a(11)1752 650 y Fd(:)i Fg(The)f(ob)5 b(jectiv)m(e)26
b(function)0 843 y Fd(f)43 b Fg(tak)m(es)33 b(v)-5 b(alues)32
b(b)s(et)m(w)m(een)g(0)h(and)f(305/11)g(on)g Fd(F)s(:)h
Ff(A)n(nswer)p Fg(:)47 b(max)30 b(=)2451 781 y(305)p
2451 822 V 2474 905 a(11)2629 843 y Fi(\031)0 1035 y
Fg(27)p Fd(:)p Fg(7)g(at)f Fd(x)d Fg(=)489 973 y(35)p
489 1014 92 4 v 489 1098 a(11)592 1035 y Fd(;)k(y)f Fg(=)828
973 y(30)p 828 1014 V 828 1098 a(11)930 1035 y Fd(:)p
2661 1027 40 40 v 183 1227 a Fg(In)42 b(general,)i(the)d(feasible)h
(region)f(for)h(a)g(linear)g(program)f(with)h(t)m(w)m(o)0
1337 y(v)-5 b(ariables)36 b Fd(x;)31 b(y)40 b Fg(is)d(a)g(p)s(olygonal)
e(region)h(of)g(one)g(of)h(the)e(follo)m(wing)i(shap)s(es:)0
1446 y(the)28 b(empt)m(y)h(set;)g(a)f(p)s(oin)m(t;)h(an)g(in)m(terv)-5
b(al;)29 b(a)g(ra)m(y;)h(a)e(straigh)m(t)g(line,)i(a)f(b)s(ounded)0
1556 y(con)m(v)m(ex)j(p)s(olygon,)f(a)g(half-plane,)h(the)f(whole)g
(plane;)h(a)g(strip,)g(an)f(angle,)h(an)0 1666 y(un)m(b)s(ounded)j(p)s
(olygonal)g(region)h(with)h Fd(s)f Fi(\025)h Fg(3)f(sides.)61
b(The)37 b(set)f(of)h(optimal)0 1775 y(solutions)30 b(is)g(a)g(subset)g
(of)g(one)f(of)h(the)f(listed)h(shap)s(es.)183 1913 y(When)i(the)g
(feasible)h(region)f(is)i(a)f(\(b)s(ounded)d(nonempt)m(y\))i(p)s
(olygon,)h(it)0 2023 y(is)42 b(clear)f(that)g(w)m(e)h(ha)m(v)m(e)g(at)f
(least)g(one)g(optimal)g(solution)g(for)g(an)m(y)i(linear)0
2133 y(ob)5 b(jectiv)m(e)31 b(function.)46 b(Moreo)m(v)m(er,)33
b(a)f(v)m(ertex)g(\(dep)s(ending)e(on)i(the)f(ob)5 b(jectiv)m(e)0
2242 y(function\))28 b(is)j(an)f(optimal)g(solution)f(\(corner)f
(principle\).)183 2352 y(Of)22 b(course,)h(the)f(corner)f(principle)h
(do)s(es)f(not)h(w)m(ork)g(for)g(nonlinear)g(prob-)0
2462 y(lems.)41 b(Here)30 b(is)h(an)f(example.)0 2600
y Fe(Example)h(3.9.)39 b Fg(Minimize)26 b Fd(g)i Fg(=)e
Fd(x)1247 2567 y Fb(2)1300 2600 y Fi(\000)12 b Fg(3)p
Fd(x)g Fg(+)g(2)p Fd(y)1670 2567 y Fb(2)1724 2600 y Fi(\000)g
Fg(4)p Fd(y)29 b Fg(sub)5 b(ject)25 b(to)g(the)h(same)0
2710 y(constrain)m(ts)j(as)h(in)g(Example)g(3.6.)183
2820 y(W)-8 b(e)42 b(plot)g(the)g(lev)m(els)i(of)e(our)g(nonlinear)g
(ob)5 b(jectiv)m(e)41 b(function)g(in)i(the)0 2930 y(feasible)30
b(region)f(\(Figure)g(3.10\).)513 3073 y
 12008532 7458719 5986140 197345 21181726 9604136 startTexFig
 513 3073 a
%%BeginDocument: Fig.3.10.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 91 3 322 146
%%HiResBoundingBox: 91.5625 3.1875 321.938 145.438
%%Creator: (Mathematica 4.0 for X)
%%CreationDate: (Wednesday, August 15, 2001) (9:19:44)
%%Title: Clipboard
%%DocumentNeededResources: font CMR
%%DocumentSuppliedResources:
%%DocumentNeededFonts: CMR
%%DocumentSuppliedFonts:
%%DocumentFonts: CMR
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 148.625 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/CMR findfont def
/Bold	/CMR-Bold findfont def
/Italic /CMR-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
91.562500 145.437500 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	142.250000 def
0 setgray
0 setlinewidth
/CMR findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /CMR findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font CMR
%%IncludeFont: CMR
/CMR findfont 10  scalefont  setfont
% Scaling calculations
0.0629485 0.195695 0.0549303 0.201076 [
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
0 g
.5 Mabswid
[ ] 0 setdash
.06295 .05493 m
.65003 .05493 L
.97619 .39006 L
.68561 .60332 L
.06295 .39006 L
.06295 .05493 L
s
.84573 .53103 m
.81505 .55762 L
s
.84573 .49049 m
.81746 .51884 L
.78702 .5448 L
.77023 .55762 L
s
.84573 .02178 m
.8393 .01472 L
s
.84573 .44106 m
.84556 .44128 L
.81368 .48006 L
.78702 .50655 L
.7729 .51884 L
.72831 .55193 L
.71971 .55762 L
s
.84573 .07082 m
.83233 .05349 L
.79682 .01472 L
s
.84573 .37258 m
.82999 .4025 L
.80357 .44128 L
.78702 .46112 L
.76871 .48006 L
.72831 .51467 L
.72273 .51884 L
.6696 .55279 L
.66096 .55762 L
s
.02381 .54129 m
.05272 .55762 L
s
.84573 .13914 m
.84162 .13105 L
.81917 .09227 L
.78925 .05349 L
.78702 .05103 L
.74985 .01472 L
s
.02381 .5025 m
.04912 .51884 L
.08252 .53792 L
.12519 .55762 L
s
.58795 .55762 m
.61089 .54744 L
.66454 .51884 L
.6696 .51565 L
.71798 .48006 L
.72831 .47097 L
.75743 .44128 L
.78669 .4025 L
.78702 .40202 L
.80778 .36373 L
.8219 .32495 L
.82966 .28617 L
.83133 .24739 L
.82697 .20861 L
.81644 .16983 L
.79932 .13105 L
.78702 .10973 L
.7748 .09227 L
.74129 .05349 L
.72831 .04129 L
.69635 .01472 L
s
.02381 .45613 m
.05477 .48006 L
.08252 .49858 L
.1204 .51884 L
.14123 .52794 L
.19993 .54831 L
.23522 .55762 L
s
.47986 .55762 m
.49348 .55349 L
.55219 .5356 L
.59266 .51884 L
.61089 .50957 L
.6589 .48006 L
.6696 .47214 L
.70509 .44128 L
.72831 .41573 L
.7384 .4025 L
.76214 .36373 L
.77781 .32495 L
.78633 .28617 L
.78702 .28039 L
.78816 .24739 L
.78702 .23162 L
.78338 .20861 L
.77177 .16983 L
.75266 .13105 L
.72831 .09633 L
.72488 .09227 L
.68641 .05349 L
.6696 .04013 L
.63269 .01472 L
s
.02381 .05594 m
.02683 .05349 L
.08051 .01472 L
s
.02381 .3952 m
.03037 .4025 L
.07005 .44128 L
.08252 .45126 L
.12797 .48006 L
.14123 .48682 L
.19993 .51057 L
.2259 .51884 L
.25864 .52554 L
.31735 .53325 L
.37606 .53434 L
.43477 .52887 L
.48717 .51884 L
.49348 .51643 L
.55219 .49586 L
.58521 .48006 L
.61089 .4648 L
.64339 .44128 L
.6696 .41733 L
.68302 .4025 L
.71049 .36373 L
.72828 .32495 L
.72831 .32487 L
.73798 .28617 L
.74006 .24739 L
.73464 .20861 L
.72831 .1829 L
.72145 .16983 L
.69961 .13105 L
.6696 .09479 L
.66708 .09227 L
.62029 .05349 L
.61089 .04739 L
.55219 .01627 L
.54893 .01472 L
s
.02381 .11683 m
.04656 .09227 L
.08252 .06073 L
.0926 .05349 L
.14123 .02549 L
.16358 .01472 L
s
.19993 .04619 m
.25864 .02836 L
.31735 .0191 L
.37606 .01779 L
.43477 .02438 L
.49348 .03919 L
.53155 .05349 L
.55219 .0641 L
.59597 .09227 L
.61089 .10462 L
.63669 .13105 L
.66303 .16983 L
.6696 .17952 L
.67861 .20861 L
.68497 .24739 L
.68254 .28617 L
.67112 .32495 L
.6696 .32887 L
.64993 .36373 L
.61602 .4025 L
.61089 .4072 L
.56398 .44128 L
.55219 .44786 L
.49348 .47308 L
.47491 .48006 L
.43477 .48792 L
.37606 .49439 L
.31735 .49311 L
.25864 .48395 L
.24108 .48006 L
.19993 .46601 L
.14888 .44128 L
.14123 .43648 L
.09678 .4025 L
.08252 .38825 L
.06364 .36373 L
.0425 .32495 L
.03087 .28617 L
.02834 .24739 L
.03491 .20861 L
.05065 .16983 L
.0766 .13105 L
.08252 .12402 L
.11703 .09227 L
.14123 .07548 L
.18186 .05349 L
.19993 .04619 L
s
.25864 .07916 m
.31735 .06752 L
.37606 .06593 L
.43477 .07407 L
.49149 .09227 L
.49348 .09355 L
.55219 .1292 L
.55443 .13105 L
.59068 .16983 L
.61044 .20861 L
.61089 .20995 L
.61848 .24739 L
.61541 .28617 L
.61089 .30206 L
.60112 .32495 L
.57308 .36373 L
.55219 .3832 L
.52512 .4025 L
.49348 .4186 L
.43477 .43787 L
.4174 .44128 L
.37606 .446 L
.31735 .44438 L
.29558 .44128 L
.25864 .43286 L
.19993 .4089 L
.18851 .4025 L
.14123 .36478 L
.14024 .36373 L
.11178 .32495 L
.09738 .28617 L
.09438 .24739 L
.10228 .20861 L
.12242 .16983 L
.14123 .14648 L
.15798 .13105 L
.19993 .10297 L
.21992 .09227 L
.25864 .07916 L
s
.25864 .15271 m
.31735 .13426 L
.37606 .13197 L
.43477 .1442 L
.48427 .16983 L
.49348 .17715 L
.5163 .20861 L
.52885 .24739 L
.52418 .28617 L
.49997 .32495 L
.49348 .33195 L
.44518 .36373 L
.43477 .36718 L
.37606 .38038 L
.31735 .37788 L
.26983 .36373 L
.25864 .35925 L
.2114 .32495 L
.19993 .30729 L
.18948 .28617 L
.18466 .24739 L
.19754 .20861 L
.19993 .20351 L
.22972 .16983 L
.25864 .15271 L
s
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF

%%EndDocument

 endTexFig
 -8 4334 a Fe(Figure)35 b(3.10.)40 b Fg(The)29 b(feasible)h(region)f
Fd(F)43 b Fg(and)30 b(lev)m(els)h(for)f Fd(g)j Fg(in)d(Example)h(3.9)
183 4500 y(The)c(\014gure)g(sho)m(ws)h(clearly)f(that)g(the)g(optimal)h
(solution)f(is)h(inside,)h(not)0 4610 y(at)c(the)f(b)s(oundary)f(of)i
Fd(F)s(:)g Fg(So)g(w)m(e)g(can)g(ignore)f(the)g(constrain)m(ts.)37
b(T)-8 b(o)26 b(minimize)0 4719 y Fd(g)g Fg(without)c(constrain)m(ts,)h
(w)m(e)g(can)g(use)f(deriv)-5 b(ativ)m(es)23 b(or)g(do)f(a)h(simple)h
(algebraic)p eop end
%%Page: 30 30
TeXDict begin 30 29 bop 0 91 a Fe(30)90 b Ff(Chapter)32
b(1)h(Intr)-5 b(o)g(duction)0 311 y Fg(transformation:)41
b Fd(g)30 b Fg(=)e(\()p Fd(x)21 b Fi(\000)g Fg(3)p Fd(=)p
Fg(2\))1209 277 y Fb(2)1270 311 y Fg(+)g(2\()p Fd(y)j
Fi(\000)d Fg(1\))1687 277 y Fb(2)1748 311 y Fi(\000)h
Fg(9)p Fd(=)p Fg(4)e Fi(\000)h Fg(2)p Fd(;)32 b Fg(hence)e(min)e(=)0
420 y Fi(\000)p Fg(4)p Fd(:)p Fg(25)j(at)g Fd(x)e Fg(=)f(1)p
Fd(:)p Fg(5)p Fd(;)15 b(y)31 b Fg(=)d(1)p Fd(:)k Fg(It)f(will)i(not)e
(h)m(urt)g(if)i(w)m(e)e(double)g(c)m(hec)m(k)h(directly)0
530 y(that)d(this)h(solution)f(is)i(feasible.)p 2661
522 40 40 v 183 639 a(Another)h(w)m(a)m(y)j(to)f(obtain)f(a)h
(nonlinear)e(problem)i(from)f(Example)h(3.6)0 749 y(is)d(to)e(add)h
(nonlinear)f(constrain)m(ts.)0 886 y Fe(Example)36 b(3.11.)j
Ff(A)n(n)33 b(inte)-5 b(ger)33 b(pr)-5 b(o)g(gr)g(am)0
995 y Fg(Solv)m(e)33 b(the)e(linear)h(problem)g(in)h(Example)f(3.6)g
(with)h(the)e(additional)g(condi-)0 1105 y(tion)f(that)f(b)s(oth)f
Fd(x)j Fg(and)e Fd(y)34 b Fg(are)29 b(in)m(tegers.)183
1215 y(Again)h(w)m(e)g(can)g(dra)m(w)g(a)g(\014gure)f(\(Figure)g
(3.12\):)1644 1507 y Fd(f)35 b Fg(=)25 b(27)p Fd(:)p
Fg(72)1735 2027 y Fd(f)35 b Fg(=)25 b(13)p Fd(:)p Fg(5)513
1416 y
 12008532 7458719 5986140 197345 21181726 9604136 startTexFig
 513 1416 a
%%BeginDocument: Fig.3.12.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 91 3 322 146
%%HiResBoundingBox: 91.5625 3.1875 321.938 145.5
%%Creator: (Mathematica 4.1 for X)
%%CreationDate: (Wednesday, October 2, 2002) (17:50:43)
%%Title: Clipboard
%%DocumentNeededResources: font Courier
%%DocumentSuppliedResources:
%%DocumentNeededFonts: Courier
%%DocumentSuppliedFonts:
%%DocumentFonts: Courier
%%EndComments
0 148.688 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/Courier findfont def
/Bold	/Courier-Bold findfont def
/Italic /Courier-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/MacintoshRomanEncoding [
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
	/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
	/zero/one/two/three/four/five/six/seven
	/eight/nine/colon/semicolon/less/equal/greater/question
	/at/A/B/C/D/E/F/G
	/H/I/J/K/L/M/N/O
	/P/Q/R/S/T/U/V/W
	/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
	/grave/a/b/c/d/e/f/g
	/h/i/j/k/l/m/n/o
	/p/q/r/s/t/u/v/w
	/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
	/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
	/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
	/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
	/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
	/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
	/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
	/.notdef/plusminus/.notdef/.notdef/yen/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/ordfeminine/ring/.notdef/ae/oslash
	/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft
	/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
	/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef
	/ydieresis/Ydieresis/.notdef/currency/guilsinglleft/guilsinglright/.notdef/.notdef
	/daggerdbl/dotaccent/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
	/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
	/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
	/macron/.notdef/.notdef/.notdef/ogonek/.notdef/.notdef/.notdef
] def
/WindowsANSIEncoding [
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
	/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
	/zero/one/two/three/four/five/six/seven
	/eight/nine/colon/semicolon/less/equal/greater/question
	/at/A/B/C/D/E/F/G
	/H/I/J/K/L/M/N/O
	/P/Q/R/S/T/U/V/W
	/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
	/grave/a/b/c/d/e/f/g
	/h/i/j/k/l/m/n/o
	/p/q/r/s/t/u/v/w
	/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
	/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
	/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/Zcaron/.notdef
	/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
	/tilde/trademark/scaron/guilsinglright/oe/.notdef/zcaron/Ydieresis
	/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
	/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
	/degree/plusminus/twosuperior/threesuperior/acute/.notdef/paragraph/dotaccent
	/ogonek/onesuperior/ring/guillemotright/onequarter/onehalf/threequarters/questiondown
	/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
	/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
	/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
	/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
	/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
	/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
	/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
	/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def
/Mnodistort true def
1.000000 1.000000 scale
91.562500 145.500000 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	142.312500 def
0 setgray
0 setlinewidth
/Courier findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /Courier findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.0238095 0.136054 0.0147151 0.191055 [
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
0 g
.5 Mabswid
[ ] 0 setdash
.02381 .01472 m
.43197 .01472 L
.65873 .33314 L
.45671 .53577 L
.02381 .33314 L
.02381 .01472 L
s
.02381 .3013 m
.06244 .29527 L
.10458 .2887 L
.14415 .28252 L
.18221 .27658 L
.22272 .27026 L
.26171 .26418 L
.30316 .25771 L
.34309 .25148 L
.3815 .24549 L
.42237 .23911 L
.46172 .23297 L
.49955 .22707 L
.53984 .22078 L
.57861 .21473 L
.61984 .2083 L
.65954 .20211 L
.69774 .19615 L
.73838 .1898 L
.77751 .1837 L
.81909 .17721 L
.85916 .17096 L
.89771 .16494 L
.93871 .15855 L
.97619 .1527 L
s
.02381 .60332 m
.06244 .59729 L
.10458 .59072 L
.14415 .58454 L
.18221 .5786 L
.22272 .57228 L
.26171 .5662 L
.30316 .55973 L
.34309 .5535 L
.3815 .54751 L
.42237 .54113 L
.46172 .53499 L
.49955 .52909 L
.53984 .5228 L
.57861 .51675 L
.61984 .51032 L
.65954 .50413 L
.69774 .49817 L
.73838 .49183 L
.77751 .48572 L
.81909 .47923 L
.85916 .47298 L
.89771 .46697 L
.93871 .46057 L
.97619 .45472 L
s
.03 w
.02381 .01472 Mdot
.02381 .20577 Mdot
.15986 .01472 Mdot
.43197 .01472 Mdot
.43197 .20577 Mdot
.15986 .01472 Mdot
.29592 .20577 Mdot
.29592 .39683 Mdot
.43197 .39683 Mdot
.56803 .20577 Mdot
.56803 .39683 Mdot
.15986 .39683 Mdot
.15986 .20577 Mdot
.29592 .01472 Mdot
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF

%%EndDocument

 endTexFig
 16 2628 a Fe(Figure)35 b(3.12.)40 b Fg(The)30 b(feasible)f(p)s(oin)m
(ts)h(and)f(lev)m(els)i(for)f Fd(f)40 b Fg(in)31 b(Example)f(3.11)183
2793 y(It)e(is)g(clear)g(that)e(the)i(feasible)f(region)h(\(the)e(in)m
(teger)h(p)s(oin)m(ts)h(in)g Fd(F)13 b Fg(\))28 b(con-)0
2902 y(sists)40 b(of)h(13)e(p)s(oin)m(ts)h(with)g(p)s(ossible)f
(exceptions)g(of)h(t)m(w)m(o)h(p)s(oin)m(ts,)h(\()p Fd(x;)15
b(y)s Fg(\))42 b(=)0 3012 y(\(1)p Fd(;)15 b Fg(2\))p
Fd(;)g Fg(\(4)p Fd(;)g Fg(1\))p Fd(;)37 b Fg(whic)m(h)i(apparen)m(tly)e
(are)g(on)h(the)g(b)s(oundary)-8 b(.)63 b(Chec)m(king)38
b(the)0 3122 y(constrain)m(t)22 b Fd(x)6 b Fi(\000)g
Fd(y)29 b Fi(\024)c Fg(3)e(for)g Fd(x)j Fg(=)f(4)p Fd(;)15
b(y)29 b Fg(=)c(1)e(and)g Fd(x)6 b Fi(\000)g Fg(3)p Fd(y)29
b Fi(\025)c(\000)p Fg(5)e(for)g Fd(x)j Fg(=)f(1)p Fd(;)15
b(y)29 b Fg(=)c(2)0 3231 y(con\014rms)34 b(the)f(\014gure.)53
b(W)-8 b(e)35 b(can)f(see)g(from)g(Figure)g(3.12)g(that)g(the)g
(optimal)0 3341 y(solution)j(is)g Fd(x)h Fg(=)f(4)p Fd(;)15
b(y)40 b Fg(=)e(2)p Fd(;)f Fg(so)g(max)g(=)h(4)24 b(+)h(9)g
Fi(\001)g Fg(2)37 b(=)g(22)p Fd(:)g Fg(The)g(additional)0
3450 y(condition)29 b(reduced)f(the)h(maxim)m(um)i(from)f(305)p
Fd(=)p Fg(11)24 b Fi(\031)30 b Fg(27.7)g(to)g(22.)183
3560 y(In)39 b(general,)h Ff(inte)-5 b(ger)41 b(pr)-5
b(o)g(gr)g(amming)38 b Fg(is)i(concerned)c(with)j(linear)f(pro-)0
3670 y(grams)31 b(where)g(some)h(or)f(all)i(v)-5 b(ariables)31
b(are)g(required)g(to)g(b)s(e)g(in)m(tegers.)45 b(This)0
3779 y(additional)32 b(condition)f(usually)i(mak)m(es)g(solving)f(the)g
(problem)g(m)m(uc)m(h)h(more)0 3889 y(di\016cult.)40
b(Ho)m(w)m(ev)m(er,)32 b(this)e(is)h(not)e(the)g(case)h(with)g(this)g
(example.)p 2661 3881 40 40 v 183 3998 a(Next)d(w)m(e)i(consider)d
(another)g(mo)s(di\014cation)f(of)j(Example)g(3.6)g(with)f(the)0
4108 y(ob)5 b(jectiv)m(e)29 b(function)g(c)m(hanged)f(and)i(a)g
(nonlinear)f(constrain)m(t)g(added.)0 4245 y Fe(Example)36
b(3.13.)183 4299 y Fc(8)183 4381 y(<)183 4546 y(:)586
4377 y Fg(Maximize)30 b Fd(h)25 b Fg(=)g Fd(x)1228 4344
y Fb(2)1290 4377 y Fi(\000)20 b Fd(y)1429 4344 y Fb(2)286
4486 y Fg(sub)5 b(ject)29 b(to)h Fd(x)25 b Fi(\025)h
Fg(0)p Fd(;)45 b(y)29 b Fi(\025)c Fg(0)p Fd(;)46 b(y)33
b Fg(an)d(in)m(teger)279 4596 y Fd(x)21 b Fi(\000)f Fd(y)28
b Fi(\024)e Fg(3)p Fd(;)15 b(x)20 b Fi(\000)h Fg(3)p
Fd(y)28 b Fi(\025)d(\000)p Fg(5)p Fd(;)15 b Fg(5)p Fd(x)21
b Fg(+)f(7)p Fd(y)28 b Fi(\024)d Fg(35)p Fd(:)p eop end
%%Page: 31 31
TeXDict begin 31 30 bop 1644 91 a Fi(x)p Ff(3.)41 b(Gr)-5
b(aphic)g(al)32 b(Metho)-5 b(d)91 b Fe(31)183 311 y Fg(No)m(w)21
b(the)f(feasibly)g(region)g(consists)g(of)g(three)f(horizon)m(tal)g
(line)i(segmen)m(ts)0 420 y(and)44 b(lev)m(els)h(of)f(the)f(nonlinear)g
(ob)5 b(jectiv)m(e)44 b(function)e Fd(h)j Fg(are)e(disconnected)0
530 y(\(Figure)29 b(3.14\).)508 673 y
 12083119 7458719 5920358 197345 21181726 9604136 startTexFig
 508 673 a
%%BeginDocument: Fig.3.14.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 90 3 322 146
%%HiResBoundingBox: 90.9375 3.1875 321.312 145.438
%%Creator: (Mathematica 4.0 for X)
%%CreationDate: (Saturday, August 18, 2001) (8:51:43)
%%Title: Clipboard
%%DocumentNeededResources: font CMR
%%DocumentSuppliedResources:
%%DocumentNeededFonts: CMR
%%DocumentSuppliedFonts:
%%DocumentFonts: CMR
%%EndComments
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 148.625 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/CMR findfont def
/Bold	/CMR-Bold findfont def
/Italic /CMR-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/Mnodistort true def
1.000000 1.000000 scale
90.937500 145.437500 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	142.250000 def
0 setgray
0 setlinewidth
/CMR findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /CMR findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font CMR
%%IncludeFont: CMR
/CMR findfont 10  scalefont  setfont
% Scaling calculations
0.0629485 0.195695 0.0549303 0.201076 [
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
0 g
.5 Mabswid
[ ] 0 setdash
.06295 .05493 m
.65003 .05493 L
.97619 .39006 L
.68561 .60332 L
.06295 .39006 L
.06295 .05493 L
s
.84573 .30669 m
.83971 .28617 L
.82962 .24739 L
.82128 .20861 L
.81475 .16983 L
.81007 .13105 L
.80728 .09227 L
.80639 .05349 L
.80742 .01472 L
s
.84573 .44118 m
.82834 .4025 L
.81243 .36373 L
.79812 .32495 L
.78702 .29115 L
.7855 .28617 L
.77466 .24739 L
.76567 .20861 L
.75862 .16983 L
.75356 .13105 L
.75053 .09227 L
.74957 .05349 L
.75069 .01472 L
s
.84573 .5397 m
.83363 .51884 L
.81215 .48006 L
.792 .44128 L
.78702 .43127 L
.77328 .4025 L
.75611 .36373 L
.74059 .32495 L
.72831 .29054 L
.72686 .28617 L
.71505 .24739 L
.70523 .20861 L
.6975 .16983 L
.69195 .13105 L
.68863 .09227 L
.68757 .05349 L
.6888 .01472 L
s
.80333 .55762 m
.78702 .53184 L
.77897 .51884 L
.7558 .48006 L
.73394 .44128 L
.72831 .43089 L
.71355 .4025 L
.69475 .36373 L
.67769 .32495 L
.6696 .30497 L
.66253 .28617 L
.64941 .24739 L
.63847 .20861 L
.62984 .16983 L
.62361 .13105 L
.61988 .09227 L
.61869 .05349 L
.62006 .01472 L
s
.74625 .55762 m
.72831 .53154 L
.71975 .51884 L
.69441 .48006 L
.67034 .44128 L
.6696 .44006 L
.64775 .4025 L
.62675 .36373 L
.61089 .33201 L
.60756 .32495 L
.59041 .28617 L
.57544 .24739 L
.56287 .20861 L
.55289 .16983 L
.55219 .16697 L
.54569 .13105 L
.54136 .09227 L
.53999 .05349 L
.54158 .01472 L
s
.68392 .55762 m
.6696 .53881 L
.65464 .51884 L
.62637 .48006 L
.61089 .45817 L
.59927 .44128 L
.57353 .4025 L
.55219 .36848 L
.54933 .36373 L
.52699 .32495 L
.50669 .28617 L
.49348 .25822 L
.48878 .24739 L
.47362 .20861 L
.46144 .16983 L
.45252 .13105 L
.44712 .09227 L
.4454 .05349 L
.4474 .01472 L
s
.61458 .55762 m
.61089 .55334 L
.58142 .51884 L
.55219 .48405 L
.54889 .48006 L
.51722 .44128 L
.49348 .4115 L
.48649 .4025 L
.45703 .36373 L
.43477 .33316 L
.42904 .32495 L
.40303 .28617 L
.37923 .24739 L
.37606 .24195 L
.35859 .20861 L
.34141 .16983 L
.32843 .13105 L
.32038 .09227 L
.31778 .05349 L
.3208 .01472 L
s
.02381 .19274 m
.08252 .18825 L
.14045 .20861 L
.14123 .20903 L
.19983 .24739 L
.19993 .24751 L
.24874 .28617 L
.25864 .29519 L
.29289 .32495 L
.31735 .34755 L
.33505 .36373 L
.37606 .40247 L
.3761 .4025 L
.41663 .44128 L
.43477 .45896 L
.45649 .48006 L
.49348 .51641 L
.49595 .51884 L
.5352 .55762 L
s
.02381 .37856 m
.08252 .37668 L
.14123 .38598 L
.19478 .4025 L
.19993 .40553 L
.25864 .43381 L
.27231 .44128 L
.31735 .46899 L
.33426 .48006 L
.37606 .50948 L
.38888 .51884 L
.43477 .55399 L
.43938 .55762 L
s
.02381 .49147 m
.08252 .49007 L
.14123 .49699 L
.19993 .51183 L
.22162 .51884 L
.25864 .53384 L
.30889 .55762 L
s
.01 w
.06295 .05493 m
.65003 .05493 L
s
.06295 .25601 m
.84573 .25601 L
s
.25864 .45708 m
.87508 .45708 L
s
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF

%%EndDocument

 endTexFig
 50 1904 a Fe(Figure)35 b(3.14.)40 b Fg(The)29 b(feasible)h(lines)h
(and)e(lev)m(els)i(for)f Fd(h)g Fg(in)h(Example)f(3.13)183
2086 y(The)41 b(\014gure)f(sho)m(ws)h(that)g(the)f(optimal)h(solutions)
g(are)g(restricted)e(to)0 2196 y(the)g(follo)m(wing)i(t)m(w)m(o)f(p)s
(oin)m(ts:)60 b(the)39 b(righ)m(t)h(ends)f(of)h(the)f(upp)s(er)g(and)g
(middle)0 2305 y(in)m(terv)-5 b(als.)58 b(These)36 b(t)m(w)m(o)g(p)s
(oin)m(ts)g(are)f Fd(x)h Fg(=)f(4)p Fd(:)p Fg(25)p Fd(;)15
b(y)38 b Fg(=)e(2)g(and)f Fd(x)h Fg(=)f(4)p Fd(;)15 b(y)39
b Fg(=)c(1)p Fd(:)0 2415 y Fg(The)27 b(v)-5 b(alues)28
b(of)g Fd(h)g Fg(at)f(these)f(p)s(oin)m(ts)i(are)f(14.0625)f(and)i(15.)
39 b(So)28 b(the)f(max=)h(15)0 2525 y(at)i Fd(x)25 b
Fg(=)h(4)p Fd(;)15 b(y)28 b Fg(=)e(1)p Fd(:)p 2661 2517
40 40 v 183 2640 a Fg(In)31 b(the)g(next)g(example)h(w)m(e)g(are)f
(required)g(to)g(solv)m(e)h(a)g(family)h(of)f(linear)0
2750 y(programs)d(dep)s(ending)f(on)i(t)m(w)m(o)g(parameters.)0
2899 y Fe(Example)36 b(3.15.)0 3015 y Fg(Maximize)27
b Fd(x)15 b Fg(+)g Fd(y)31 b Fg(sub)5 b(ject)26 b(to)g(0)g
Fi(\024)f Fd(x)g Fi(\024)h Fd(a;)15 b Fg(0)26 b Fi(\024)f
Fd(y)k Fi(\024)c Fd(b;)j Fg(where)f Fd(a;)15 b(b)28 b
Fg(are)f(giv)m(en)0 3124 y(n)m(um)m(b)s(ers.)183 3240
y(It)j(is)g(clear)g(that)f(the)g(feasible)h(region)f(in)h(this)h
(problem)e(is)183 3356 y(a)h(rectangle)e(when)h Fd(a;)15
b(b)27 b(>)e Fg(0)p Fd(;)183 3471 y Fg(a)30 b(line)g(segmen)m(t)f(when)
h Fd(a)25 b Fg(=)h(0)k(and)g Fd(b)25 b(>)h Fg(0)k(or)f
Fd(b)d Fg(=)f(0)31 b(and)e Fd(a)d(>)f Fg(0)p Fd(;)183
3587 y Fg(a)30 b(p)s(oin)m(t)f(when)h Fd(a)25 b Fg(=)h
Fd(b)f Fg(=)h(0)p Fd(;)183 3703 y Fg(empt)m(y)k(when)f
Fd(a)d(<)f Fg(0)30 b(or)g Fd(b)c(<)f Fg(0)p Fd(:)0 3818
y Fg(So)30 b(the)f(answ)m(er)h(is)183 3934 y(max)25 b(=)g
Fd(a)c Fg(+)f Fd(b)31 b Fg(at)f Fd(x)25 b Fg(=)g Fd(a;)15
b(y)30 b Fg(=b)g(when)f Fd(a;)15 b(b)27 b Fi(\025)e Fg(0)p
Fd(;)183 4050 y Fg(the)k(program)g(is)i(infeasible)e(otherwise.)0
4165 y(The)e(problem)g(can)g(b)s(e)g(solv)m(ed)h(without)f(pictures,)g
(but)g(a)g(picture)g(on)g(pap)s(er)0 4275 y(or)j(in)g(y)m(our)h(mind)f
(ma)m(y)h(help.)p 2661 4267 V 183 4390 a(F)-8 b(or)35
b(a)g(linear)h(program)e(with)h(man)m(y)h(v)-5 b(ariables)35
b(w)m(e)h(can)f(imagine)g(the)0 4500 y(feasible)h(region)f(and)g(the)g
(set)h(of)f(optimal)h(solutions)f(as)h Ff(c)-5 b(onvex)38
b Fg(sets)d(in)h(a)0 4610 y(high-dimensional)31 b(space.)44
b(W)-8 b(e)31 b(will)i(mak)m(e)f(this)g(more)f(precise)f(later,)i
(after)0 4719 y(w)m(e)e(de\014ne)f(what)h(a)g(con)m(v)m(ex)g(set)g(is)g
(\(see)g Fi(x)o Fg(12)g(of)g(Chapter)e(4\).)p eop end
%%Page: 32 32
TeXDict begin 32 31 bop 0 91 a Fe(32)90 b Ff(Chapter)32
b(1)h(Intr)-5 b(o)g(duction)183 311 y Fg(A)38 b(linear)f(constrain)m(t)
f Fd(c)1027 325 y Fb(1)1067 311 y Fd(x)1119 325 y Fb(1)1185
311 y Fg(+)26 b Fi(\001)15 b(\001)g(\001)26 b Fg(+)f
Fd(c)1549 325 y Fa(n)1599 311 y Fd(x)1651 325 y Fa(n)1738
311 y Fg(=)37 b Fd(a)h Fg(giv)m(es)g(a)g Fd(hy)s(per)s(pl)r(ane)0
420 y Fg(\(when)h(not)g(all)h Fd(c)632 434 y Fa(i)704
420 y Fg(=)h(0\))e(or)h(the)f(whole)g(space)g(\(when)f(it)i(is)h(of)f
(the)f(form)0 530 y(0)h(=)g(0\),)h(or)d(the)g(empt)m(y)h(set)f(\(when)g
(all)i Fd(c)1529 544 y Fa(i)1599 530 y Fg(=)g(0)p Fd(;)f
Fg(but)f Fd(a)i Fi(6)p Fg(=)g(0\).)67 b(A)40 b(linear)0
639 y(constrain)m(t)28 b Fd(c)469 653 y Fb(1)510 639
y Fd(x)562 653 y Fb(1)623 639 y Fg(+)20 b Fi(\001)15
b(\001)g(\001)21 b Fg(+)f Fd(c)971 653 y Fa(n)1021 639
y Fd(x)1073 653 y Fa(n)1148 639 y Fi(\024)25 b Fd(a)31
b Fg(giv)m(es)f(either)f(a)h Ff(half-sp)-5 b(ac)g(e)30
b Fg(\(when)f(not)0 749 y(all)34 b Fd(c)170 763 y Fa(i)232
749 y Fg(=)d(0\),)k(or)e(the)g(whole)g(space)g(\(when)f(all)j
Fd(c)1710 763 y Fa(i)1771 749 y Fg(=)c(0)j(and)f Fd(a)f
Fi(\025)f Fg(0\),)k(or)e(the)0 858 y(empt)m(y)d(set)g(\(when)f(all)h
Fd(c)862 872 y Fa(i)918 858 y Fg(=)25 b(0)30 b(but)g
Fd(a)25 b(<)h Fg(0\).)183 969 y(With)35 b(computers,)g(w)m(e)h(can)f
(use)h(3-D)f(\(three-dimensional\))e(graphics)0 1078
y(more)41 b(e\016cien)m(tly)h(than)e(with)i(pap)s(er.)74
b(P)m(ap)s(er)40 b(is)j(not)e(a)g(go)s(o)s(d)f(media)i(for)0
1188 y(w)m(orking)30 b(with)g(high-dimensional)g(pictures,)f(but)h(our)
f(imagination)g(is.)1075 1411 y Fh(Exercises)0 1549 y
Fe(1{3.)38 b Fg(T)-8 b(ry)27 b(y)m(our)f(hand)g(at)f(these)g(exercises)
h(in)m(v)m(olving)h(the)f(digits)g Fd(a)2365 1563 y Fa(i)2422
1549 y Fg(of)g(y)m(our)0 1659 y(So)s(cial)33 b(Securit)m(y)h(Num)m(b)s
(er)g Fd(a)1035 1673 y Fb(1)1091 1659 y Fd(a)1139 1673
y Fb(2)1196 1659 y Fd(a)1244 1673 y Fb(3)1331 1659 y
Fd(a)1379 1673 y Fb(4)1435 1659 y Fd(a)1483 1673 y Fb(5)1570
1659 y Fd(a)1618 1673 y Fb(6)1674 1659 y Fd(a)1722 1673
y Fb(7)1779 1659 y Fd(a)1827 1673 y Fb(8)1883 1659 y
Fd(a)1931 1673 y Fb(9)1973 1659 y Fd(:)g Fg(Solv)m(e)h(the)e(follo)m
(w-)0 1769 y(ing)d(problems:)0 2058 y Fe(1.)173 1843
y Fc(8)173 1925 y(>)173 1953 y(<)173 2117 y(>)173 2144
y(:)276 1893 y Fg(Maximize)251 b(\()p Fd(a)997 1907 y
Fb(1)1058 1893 y Fi(\000)21 b Fd(a)1198 1907 y Fb(2)1239
1893 y Fg(\))p Fd(x)269 2003 y Fg(sub)5 b(ject)29 b(to)126
b(\()p Fd(a)879 2017 y Fb(3)940 2003 y Fg(+)20 b Fd(a)1079
2017 y Fb(4)1121 2003 y Fg(\))p Fd(x)25 b Fi(\024)g Fd(a)1378
2017 y Fb(5)1419 2003 y Fd(;)760 2112 y Fg(\()p Fd(a)844
2126 y Fb(6)905 2112 y Fg(+)20 b Fd(a)1044 2126 y Fb(7)1085
2112 y Fg(\))p Fd(x)25 b Fi(\025)h(\000)p Fd(a)1414 2126
y Fb(8)1455 2112 y Fd(;)816 2222 y Fg(\()p Fd(a)900 2236
y Fb(9)961 2222 y Fg(+)20 b(2\))p Fd(x)25 b Fi(\024)g
Fg(10)p Fd(:)0 2544 y Fe(2.)214 2330 y Fc(8)214 2412
y(>)214 2439 y(<)214 2604 y(>)214 2631 y(:)325 2380 y
Fg(Minimize)227 b Fd(f)35 b Fg(=)25 b Fd(a)1144 2394
y Fb(1)1201 2380 y Fd(x)20 b Fi(\000)h Fg(\()p Fd(a)1449
2394 y Fb(1)1510 2380 y Fg(+)f Fd(a)1649 2394 y Fb(2)1690
2380 y Fg(\))15 b Fd(y)310 2489 y Fg(sub)5 b(ject)29
b(to)90 b Fi(j)p Fg(\(9)20 b Fi(\000)g Fd(a)1066 2503
y Fb(3)1108 2489 y Fg(\))p Fd(x)g Fg(+)g Fd(a)1355 2503
y Fb(4)1396 2489 y Fd(y)s Fi(j)26 b(\024)f Fg(10)20 b(+)g
Fd(a)1842 2503 y Fb(4)1883 2489 y Fd(;)923 2599 y Fi(j)p
Fd(a)996 2613 y Fb(5)1038 2599 y Fd(x)g Fg(+)h(\(1)e(+)i
Fd(a)1443 2613 y Fb(6)1484 2599 y Fg(\))p Fd(y)s Fi(j)k(\024)h
Fg(8)p Fd(;)926 2709 y Fi(j)p Fd(x)21 b Fg(+)f Fd(y)s
Fi(j)26 b(\024)f Fd(a)1358 2723 y Fb(7)1420 2709 y Fg(+)20
b Fd(a)1559 2723 y Fb(9)1621 2709 y Fg(+)g(1)p Fd(:)0
3031 y Fe(3.)214 2816 y Fc(8)214 2898 y(>)214 2926 y(<)214
3090 y(>)214 3118 y(:)325 2866 y Fg(Minimize)262 b Fd(f)35
b Fg(=)26 b Fd(a)1180 2880 y Fb(1)1236 2866 y Fd(x)21
b Fg(+)f Fd(a)1448 2880 y Fb(2)1505 2866 y Fd(y)310 2976
y Fg(sub)5 b(ject)29 b(to)90 b Fi(j)p Fg(\(9)20 b(+)g
Fd(a)1066 2990 y Fb(3)1108 2976 y Fg(\))p Fd(x)g Fg(+)g
Fd(a)1355 2990 y Fb(4)1396 2976 y Fd(y)s Fi(j)26 b(\024)f
Fg(10)p Fd(;)800 3086 y Fi(j)p Fd(a)873 3100 y Fb(5)915
3086 y Fd(x)20 b Fg(+)h(\(9)e(+)h Fd(a)1319 3100 y Fb(6)1361
3086 y Fg(\))p Fd(y)s Fi(j)25 b(\024)g Fg(10)p Fd(;)804
3195 y Fi(j)p Fd(x)c Fg(+)f Fd(y)s Fi(j)26 b(\024)f Fd(a)1236
3209 y Fb(7)1298 3195 y Fg(+)20 b Fd(a)1437 3209 y Fb(8)1498
3195 y Fg(+)h Fd(a)1638 3209 y Fb(9)1679 3195 y Fd(:)p
2661 3023 40 40 v 0 3472 a Fe(4.)214 3285 y Fc(8)214
3367 y(<)214 3531 y(:)310 3362 y Fg(Maximize)30 b(\(o)m(v)m(er)15
b Fd(x)p Fg(\))317 b Fd(bx)470 3472 y Fg(sub)5 b(ject)29
b(to)251 b Fi(j)p Fg(2)p Fd(x)20 b Fg(+)h(4)p Fi(j)k(\024)h
Fg(10)p Fd(;)1167 3581 y Fi(j)p Fd(x)20 b Fg(+)h(3)p
Fi(j)k(\024)h Fg(5)p Fd(:)0 3715 y Fg(where:)0 3825 y(\()p
Fd(i)p Fg(\))91 b Fd(b)25 b Fg(=)h(7)0 3964 y(\()p Fd(ii)p
Fg(\))91 b Fd(b)26 b Fg(=)f Fi(\000)p Fg(9)0 4103 y(\()p
Fd(iii)p Fg(\))92 b Fd(b)30 b Fg(is)h(an)m(y)g(giv)m(en)f(n)m(um)m(b)s
(er.)0 4425 y Fe(5.)173 4211 y Fc(8)173 4293 y(>)173
4320 y(<)173 4485 y(>)173 4512 y(:)285 4261 y Fg(Minimize)117
b Fd(f)35 b Fg(=)26 b Fd(x)20 b Fg(+)g(8)p Fd(y)269 4370
y Fg(sub)5 b(ject)29 b(to)170 b Fi(j)p Fd(x)p Fi(j)27
b(\024)e Fg(9)p Fd(;)841 4480 y Fi(j)p Fd(y)s Fi(j)i(\024)e
Fg(9)p Fd(;)760 4590 y Fi(j)p Fd(x)20 b Fg(+)h Fd(y)s
Fi(j)k(\024)h Fg(9)p Fd(:)0 4719 y Fe(6.)40 b Fg(Minimize)31
b Fd(x=y)i Fg(sub)5 b(ject)29 b(to)g Fd(x)d Fi(\025)f
Fd(y)s(:)p eop end
%%Page: 33 33
TeXDict begin 33 32 bop 1644 91 a Fi(x)p Ff(3.)41 b(Gr)-5
b(aphic)g(al)32 b(Metho)-5 b(d)91 b Fe(33)35 352 y(7.)249
223 y Fc(\032)348 297 y Fg(Minimize)188 b Fd(f)35 b Fg(=)26
b Fd(x)20 b Fi(\001)h Fd(y)332 406 y Fg(sub)5 b(ject)29
b(to)90 b Fi(j)p Fd(x)p Fi(j)22 b Fg(+)e Fi(j)p Fd(y)s
Fi(j)26 b(\024)g Fg(1)p Fd(:)35 790 y Fe(8.)249 521 y
Fc(8)249 603 y(>)249 630 y(>)249 658 y(>)249 685 y(<)249
849 y(>)249 877 y(>)249 904 y(>)249 932 y(:)352 571 y
Fg(Maximize)144 b Fd(w)29 b Fg(=)c Fd(x)20 b Fg(+)h Fd(y)i
Fg(+)d Fd(z)345 680 y Fg(sub)5 b(ject)29 b(to)269 b Fi(j)p
Fd(x)p Fi(j)27 b(\024)e Fg(1)p Fd(;)1016 790 y Fi(j)p
Fd(y)s Fi(j)i(\024)e Fg(1)p Fd(;)1017 900 y Fi(j)p Fd(z)t
Fi(j)i(\024)e Fg(1)p Fd(;)835 1009 y(x)c Fg(+)f(2)p Fd(y)j
Fg(+)d(3)p Fd(z)30 b Fg(=)25 b(6)p Fd(:)35 1271 y Fe(9.)40
b Fg(Maximize)787 1210 y(1)p 584 1250 452 4 v 584 1334
a(1)20 b(+)h Fd(x)794 1308 y Fb(2)855 1334 y Fg(+)f Fd(y)994
1308 y Fb(4)1046 1271 y Fd(:)0 1534 y Fe(10.)45 b Fg(Solv)m(e)32
b(for)f Fd(b)h Fg(the)f(linear)h(equation)f Fd(bx)d Fg(=)g
Fd(c;)k Fg(where)f Fd(x)h Fg(and)f Fd(c)h Fg(are)f(giv)m(en)0
1643 y(n)m(um)m(b)s(ers.)0 2105 y Fe(11.)266 1780 y Fc(8)266
1863 y(>)266 1890 y(>)266 1917 y(>)266 1945 y(>)266 1972
y(>)266 2000 y(<)266 2164 y(>)266 2191 y(>)266 2219 y(>)266
2246 y(>)266 2274 y(>)266 2301 y(:)369 1831 y Fg(Maximize)217
b Fd(f)34 b Fg(=)26 b Fd(x)20 b Fg(+)h(9)p Fd(y)363 1940
y Fg(sub)5 b(ject)28 b(to)161 b Fd(x)25 b Fi(\025)h Fg(0)p
Fd(;)45 b(y)29 b Fi(\025)c Fg(0)p Fd(;)986 2050 y(x)c
Fi(\000)f Fd(y)28 b Fi(\024)e Fg(3)p Fd(;)928 2159 y(x)20
b Fi(\000)h Fg(3)p Fd(y)28 b Fi(\025)d(\000)p Fg(5)p
Fd(;)918 2269 y Fg(5)p Fd(x)20 b Fg(+)g(7)p Fd(y)28 b
Fi(\024)e Fg(35)p Fd(;)853 2379 y(x)k Fg(and)g Fd(y)j
Fg(in)m(tegers.)0 2584 y Fe(12.)k Fg(Solv)m(e)h(the)f(diet)h(problem)f
(in)m(v)m(olving)i(three)e(ingredien)m(ts,)i(energy)-8
b(,)39 b(vi-)0 2693 y(tamin)31 b(B)330 2707 y Fb(1)403
2693 y Fg(\(thiamin\),)g(and)g(vitamin)g(B)1423 2707
y Fb(2)1496 2693 y Fg(\(rib)s(o\015a)m(vin\))f(and)h(t)m(w)m(o)h(fo)s
(o)s(ds,)f(al-)0 2803 y(monds)d(\(n)m(uts;)h(refuse:)39
b(shells,)29 b(60\045\))f(and)g(blueb)s(erries)e(\(ra)m(w;)k(refuse:)38
b(2\045\).)0 2912 y(Here)29 b(are)f(con)m(ten)m(ts)g(p)s(er)g(100)g(g)h
(of)g(edible)g(p)s(ortion)e(\(excluding)h(refuse\))g(and)0
3022 y(prices)i(in)g(dollars)g(p)s(er)f(p)s(ound)g(\(not)g(p)s(er)g
(100)g(g!\).)p 17 3085 2667 4 v 17 3217 a Fe(F)-9 b(o)s(o)s(d)343
b(Energy)31 b Fg(in)g(k)m(cal)122 b Fe(B)1405 3231 y
Fb(1)1476 3217 y Fg(in)31 b(mg)121 b Fe(B)1901 3231 y
Fb(2)1972 3217 y Fg(in)31 b(mg)121 b Fe(Price)p 17 3308
V 17 3413 a Fg(Almonds)459 b(578)363 b(0.24)333 b(0.81)g(2)17
3522 y(Blueb)s(erries)384 b(56)i(0.05)333 b(0.05)g(3)17
3632 y(RD)m(A)587 b(2000)340 b(1.1)379 b(1.1)p 17 3695
V 0 3914 a Fe(13.)40 b Fg(Maximize)30 b Fd(x)643 3881
y Fb(3)704 3914 y Fg(+)21 b Fd(y)844 3881 y Fb(3)915
3914 y Fg(sub)5 b(ject)29 b(to)g Fd(x)21 b Fg(+)f Fd(y)29
b Fi(\024)c Fg(5)p Fd(:)0 4133 y Fe(14.)40 b Fg(Maximize)30
b Fi(j)p Fd(x)p Fi(j)21 b Fg(+)f Fd(y)853 4100 y Fb(2)925
4133 y Fg(sub)5 b(ject)28 b(to)i Fi(j)p Fd(x)21 b Fg(+)f
Fd(y)k Fg(+)c(2)p Fi(j)g Fg(+)h Fi(j)p Fd(x)f Fi(\000)h
Fd(y)i Fg(+)d(3)p Fi(j)26 b(\024)f Fg(5)p Fd(:)0 4353
y Fe(15.)40 b Fg(Maximize)30 b Fd(x)20 b Fg(+)h(2)p Fd(y)i
Fg(+)d(3)p Fd(z)35 b Fg(sub)5 b(ject)28 b(to)i Fd(x;)15
b(y)s(;)g(z)31 b Fi(\025)25 b Fg(0)p Fd(;)15 b(x)21 b
Fg(+)g Fd(y)i Fg(+)d Fd(z)30 b Fg(=)25 b(1)p Fd(:)p eop
end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
