%!PS-Adobe-2.0
%%Creator: dvips(k) 5.992 Copyright 2012 Radical Eye Software
%%Title: ch6.dvi
%%CreationDate: Thu Oct 18 09:46:27 2012
%%Pages: 33
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX10 CMSY10 CMR10 CMTI10 CMMI10 CMMI7 CMEX10 CMR7
%%+ CMSY5 CMSY7
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o ch6.ps ch6.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2012.10.18:0946
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMSY7
%!PS-AdobeFont-1.0: CMSY7 003.002
%%Title: CMSY7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY7 known{/CMSY7 findfont dup/UniqueID known{dup
/UniqueID get 5096648 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY7 def
/FontBBox {-15 -951 1251 782 }readonly def
/UniqueID 5096648 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY7.) readonly def
/FullName (CMSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D9DAFF1B3EA76067
C5493B69F73B89C8B61804A34FCEC826343337CCDFFCE17BF343EA8034BF95AA
14C56862C2C052569AFB236E1F1795F05150C8F28DFEF6BF4BCBACB678D00036
30EE84FEB44B1A8438185EB45654E6853C1159B073E54292D135F0961A64E8A5
AAE49C4BA9C44156C123426212120F99F3E8B7425752A5FE384AAEF755A8464B
51F015F9E2967477D57B22627D75CEF8AAAF0AEBD504EB46D0289DFC8D86C972
F042BD88A90A53613DD93D8A7A8460E63D85F6C15C000C0AAEE4BD5130B6E668
8C9B3F3FFD804745DA1D5EC0AB85C96E1724FA67F9324C59275415182AB48D57
9722DCF602396AD4B5C075A5A89A5D005C9FE11273E5FBDDD1800F11BBDF6AEC
6711C5633A73AC5DF038BA521AC492E138F7FFC7C5438FFD32FEAA1128C66E83
0D3AA40665F05E62D7EF00B1B0596162C402A34B6BAE6300D43F3DFCC84860F5
C0F0F1CE28FC60642BBFE9BC9102E80146774CDC88F9C250DE762D24A3484BCD
1D26B6D9FE981CA5AAB2A4BEDC528115043DC18D7105735D7528C2C5DD89A812
75B5D7B2E5A586FBB0C061E708F92C1552F64A296490BD0F20243986A4707FF9
8AB3C917B8DB92F19DCA6B9D4A1DB57515E51DD85D5C9D2CAF7A036AA3F9E9B1
5B5E099CC05A9126AB274C17D75CB4FAF78052366D2F21EDAADF84B22A2D645A
3E65C4BC0F540B5D9609D88DD0E4CBEEF87C16447D43A5F98528FD45ADD10DE6
41AEC411FD6929308F0E4F48A8D9C9EE386E920D41C1CC98A52073011DF5BD28
5683F280B5CF7F27DC50930C81D344FF5A8A9258A207D2531AC21A735B14155B
C22C752DD22AA33C52D6D4D053B3E46FD4C9129068DFF52695A3A9184D04E8EC
93696A3FEC3AEB3814D9015EC14C22EC3ABD5070E8C28A3B42F5596D948212B4
AFB9978A0A361135C9E18CBDC98E0D1E8BDC17E25DDB3D52E86127E5AAECC55D
FEE61693190E378978EF1BBD4D1AF005D511C7607CCFA4BCBD3EC427CAD82809
B725B25AE8A03EE88F80A7732A571A2317E0B6A0D072EE8CE2EB9E033CDCC899
B64CF4FA1C708A885442062F08D3D8DAF44C066EE278714D1486EB709D327865
A483F62709E89D08291F044325208EBA758DD459481334F5D9AE3BB61B3020F2
A4538CFC2C94BE84C920BE80806FDCEE394230730E049333A7E16509207514FD
695B5E0AEA9E4A9737311AA0B33B15F6769FF865D1ACB63DC6201C3F1062A3FD
1B446C1857460745917A36289DD57C94FE6240F4A40FBDFC10E91B91B79029D9
9F1B9C74E8E5AA011A0ECBEC660230AD5929F01D0325D15FDC0040406F124021
02AE176F4C98BAC1706F03C2B5B40F325A50CA4683B2BB4605E68E72D0CBDC2D
96B3BBCDD01201B650A7E7744D58D1E36D81FBF72E0A875FF29B4C109A1950FC
9621B18D58806392EEE9841794DFD39E3C4E20D45384FE07F9D445F143B922D1
AB350AA6DFC51FCF767B141A392D6A8B633AACBCEC9F56A0CF40AB08020EE63E
08CC0BE01B40E86388A65F5869F2F4D022DD4B912031CB8CEDEDFC2473772569
5B28F66AB74CD7902A0061AA3547D13C7F0C6EEEA7B0BD316694A94E4D672520
EA044AB28D8D01076C486CE456EDA1811F7ACA75D27473080D27D3E681E35FC6
447046120C6CC4C17674F0F051570A79DCA74848F3F300B58B19018430D99858
CA5504084D6BB74CFDB635B6866974A9AF05DF201C69352B2663B0623E7828B9
5EC5FFA8D8F10A7C28000F8C679B180067D5481D6315BF1C4194EB171C8F3CE2
4CE319975B9E948D907F9F7EEAF07089844391555F329E331D52FF114668B8A4
80704B3C6AC0CCAA2F5D043CE44E65EDA89A0CA854CFDCB11D549B7FA72EDB90
D35353C34A771B1FAF96F83FCA5258AAB65384BAFFCE448690C1432A1F749C20
5817205185F973FA098BA856584753E75EBEBF387FC155202885F5B67117DD7E
70D1CD887183C5573B6FB607D4F6CC9F8B94B09B3F3AEC2EF1E6A320CF6D0112
63046321941D1FB3F2140B59370AA9387E24D579D389A166A10C989497FE9549
34E1AC2E546CC06C5308460DBEF3E1AEEB6CBB0FFDAC458E61DE3391480CF5CD
34A647D4DE15B81131B7D1F9EED4C6837A32E89B0EAAD6A05F5F67518655E5DB
224D4833CEC60D5DBBDB8A03FB1A9730589BB4F0FF56191D17E73B9562E0C356
B188882B36F9505F6F42EB2644FEE125C2A7D12227ABC8ADB924E88B0A9E8DC2
79762523B0B88DBBE6AC7968A46BD9E9F0C3F03F5F64724CA07782195F01F130
30DBE895C212E0EE20162D863F46A674D85232FA0DEE69A8DF019794AF6873AD
9CC2A5EEEF9393313CA519BF95C08ADF7A75B6F53EDCDC39851D20E58B97CA57
A7523717AA1821DEA94C8A9F8B82346B16D92D15AEDC16F0011A45A44B09DE47
08CBA46E8511D0C5CC83F952EEFA4ACFA7F3D7FA5E113EF6B70E5ABA6F1AD3B1
E4D3B15AC6D5C3BC70A3946F411A7D965D6FA9D7B6C6ECE19B2C29A2FF476251
EBF0CF3BF658A1D896323706172746F58B2DE49F8B7E431E20304A42694CCF73
11C4E9E96260CC442E2938A1E27EE6744C7CAB01634C8210CE40488B9CBD757C
4277B5E3E43C7560291D945F9128AF1F85924003418F96458ADDC5BB8EC431D5
AC9093D20DEA69B92454613BC1A82DAD4FBF8E56084494D9D2FFABD82A7C9847
171FE36B265B546F3072B0923840E6C6BB12CA53E05A99F0E8FD4F5109782746
7CAB9B35B68050230736AE624B7862D1244C7D9BE4D1CAAE21B123D1E8372377
F1FEF269A9A2EDF02CE0CC8BF92FD7EF09556987B8A3BF6D8C0A663DB6B9742B
E9AC61A449106AF1EA7ACAD40AC6F59427CC51865E6A90CF2AEED8D6037BA70E
4ADDAF622CDE877C98C3B2006B4721FC9BA18E30F0752BD4ACE36221F5CD1497
8FEDA5D643BE2EE007970A68E53D85975116E6CC09F0039A09EBAF0CA4B0EED6
A485CC0B69E526033FD1C1190BC5686739CE13D1AE8EBCABC01FCFF26141867C
44ED291196E546369129B9F759FDD7DC21BAF0A528FC34BA9FA8937813953644
C539F9DA4E55E83DB3D6DA309C562DA1330B157957B18F7618544AB738E25F16
F0517CD13C1F11BB8EA056BDC575D77CDC526EF497639DD89C2098660C5C45B2
D7CF715AC5E76847E0D3178360DAC1BAF6ACAEE72453B845B9F86621C166857B
029CEF5AFE29D1EDB4CA3AD7D008B7550A779E0066D7312DD6C7AFE1C0BFFF25
7B062B0DF30032EA2A2FE3CC46C96A3A0BA1888D1D2B05424A59ABE3EE928ED8
B67F507EFA78AE128F58B54634C7F534B3D0F4AFC23E38FB56EB39CFA425FD37
848545EAD03EDC5A9E796CEFB345F527615C785963F536972EBD9CFC4A6A4A07
5A31A508CA147FBB762ADD198CE36DF86730FCE2B643D1E7DF0BDE800DE7AF89
44A36B04193E44231E08919EE91A8B559646DC4DFAFF0AD891890A0A88FFA8EF
B066BCB7AFCA409C51889E7FEB33F19A3CB1268BD0EA74AF29C1401BABD16F87
ACF7DD65A8513DA9995C5092C36A774BC4260113360D29AF7ADF5D22B5B58E7E
A9BEFC33B9A91D2C397B27A81087376CB623318A8362C3FA9CBE3026675723C2
E711910DDB328E0EE3FCE219F44FE528B70E58B8E6CDB4AAB48237DD933D9639
E9D4F9EADAA8D46537D964D75C27F210B0C2473CB60D65F61BBD91ADE01576BF
77C49E31936138B0FBA066BE910DE1B1F0E4FFB5E81038E8656ABFF08DFD923E
6BA2AFEDCE6998BBF7045393C34811501586A4846E5B942C8E99D4C481D3AE60
2796ADBB5242D59F1116EBB828014BD903EF58B223DFD18BFBAAE4D348876B06
CAC10B7AF0DC270E6702A3F75D4DCEF872F2CDB9470AC9A1DC1ABCB55636D26F
9CB6BF27A0DAEB1F62AFEC12F55F78C9B59AC6DA9DB4B45444B0C582DB4DB8A4
B31EF4AFB77988E92FC0B257374B4408406490D9AFCC495316D6C08BEC9A76C7
12371E14417711EF802FB7151B3F6A2580C97527C9C3A0FAAB8D62FD992AA18F
EBEB36F7910186CD5F70A55DFE932757C299D9D2289796769A00A0C6ABD18F82
E0D4E95D6477E67B4C012DBBD098FE20E2F15C412DD2AD5471A65EACE05B3A1A
0C9C430BAEF4887F2CCE668116B87FFD9DAB4B9B3605CD26E6B12488058AFA30
8843791A95BB322DF5C47387F3EC72343855D6B23D72144EB5EB5157B8B238FD
6C71DDDA64C9539F66A7DD569FFF43DBE4A8F0608A3CBD354DD9BAB5E3C756DD
92C3C1B3E169D86A2230299432488BC04A87E08A80809F9968676DF9157B1C91
27C664ABCCBA9997FAD8966F766B325086899D1FE44581FE07C97688B3E15B0C
234A22646C32BB965B9BFD2CD34854D1488AAF021E169BF9CA9665CF040E25A8
16156C80A2F47397CD370AAEDA731E0D14FBEE1E51A17DB972D96DBCCE33F937
5CDBF1A650BF1D3536BA4CB7A1CACFD5CB457E2368A660A62AC26E64A631B2BA
6B08EBE42E02D9B1B2E95BF9F0A6B59C96A122968FD46A4D17BA3D018CCBA0F9
80BA3C1E6C683111AFF79303CF64F1D2CCBD7571C6E09DD9B27B8E101BE219F0
E075880A0E367885AC94143E777DAE455B990383100EADF786300602C2CE28F2
4F44662FDF03BD39A5181912D8F1243C36FF88882CFC4B34C1D4EBBC01D96A7D
9CE5303042D1B21042E4FEAA455F22A01333FCAD7E4AACA5D3A5386331985F6B
9B247EC6310BB07507321BEF3E4ECFC3B915AAA6E029B3999644C987640863B0
5DCF58CE479497AFAD1208FEFD1796E74467E9F7867C313A3412E6923F4C9144
C69EFA17965056DF043DB465BF2F1E191706D3AAB47E6AD5C9767E4A73B29F2D
E2E579D0262237568F82B360ADB6D0219B7535EFD02DD0688CDD23D84FC4F308
5D2D0010B1A9F4F0321A00C154672D21708B66B91ADCF98BAC7A2F94848E9A4E
86CC82EDD0399BD9F13E43359E71F80086B9B0C3B6D08831D4479ED83E7892C4
90C477BD1F06DFEBBF60F26516EECDEFE4787EEA8683754F2B257D0BAA607DBA
35EC6D1618C2FDF3881827F92D793ECF152D761F2423A96210F582DC9B90120F
26A33025414716A5E6F56D712E31BABE5047EC4855B767AC63D793995C9E074B
6E35C7E5255FBF4C3F17E7AD7B2A6C5F7459794FC94306B581536910F244BF5A
3158E821CE75F4B0565EBE985DF24DAA92F9C1D848EEC6B88E21FB6C51125872
1752F7352291960E5BD36F78AABBCF6DAA4D07AF56E4B6058AAB13D41BCDAA14
C0D63C6807FCD0E2B4B9CC892F224843173A75DC53A8F0FA396959C2E2CFE3F5
9B1C8B62797F34E7A0BFCF0787C73FEF98442234A617CF161829498035D30B29
ADFEAABD0B496E8A2E764D22DB7737F950FC5982F1C5F4FD414C1B0202F40FBA
62C81B8F0E836CD73D79366FD62388B437B81FC673442EE34BF27454F72A08F3
389E60CE28A050601A42FB4491C60DC02EC008E6B9DD2495522BBEC7293E2923
120584E88412DA7137397B41A28706B1CC6BB0C80709A2A4BA79822D245757A4
3EE454198942ED2316FAEB981F7615E642167620EBDDC5B271E273216EB119C6
4F2F0412F0BA6E3BA396217597575C6739194E1F839232FF088FDDFD3695A5CB
9A0E220389938596D8BDB183138E1F73F64512E4FAB5E1328F9B42364E3113B8
004BE2CA0B074EE271BBE0260D31CE555D535C16EBB528747EBAFFF253E659DA
3A377CBE0B296276AACF0294CF90FDAADB4EAD5E2F600E5B2A018DEFB86FF61C
84296480A425687CCE37D671472537E897AFD4B8C6A6175E1ADDF9AD24DFC5C3
A73E18AC2D9B28BDA2F17D51DB3521945850DAF0EE48B0FAC271544C1B4F3B2D
53BFC8DE32BA366FB1FEC0DD6C0B1FEA374CBE2B96F5B235A1D83A240DB442C7
1460980A3E5B96AE3D5784DE2C2DFFA671E0A856DB2FF4130E5905F3D5338856
C11A468D867D0C6EC585F1AD3E7164B8598BB59973B9A952FAE819F052A6554D
EDC342BCCB0525905D1D27ECB9EE43847B69AE116F494CB2DBBAFB2773F1A3E1
C75FBDF8D66FA5AB4005757D631A0D9424FCDA91A1D2AC6FCE7CC7A23E84C65B
3E92BC684F23467DCF8521E0E27CF1441C487EC6E3BCA0AB54BB137E83776009
833D772FD225E88A8BD992FD69819B3BA90BAAD1DDF16E4326190CC4BF9C30F2
AF7CA1FB38E6387D9745FC5E176B248B1581BF7A4CA2FCA8E423DF340EAE29AA
7E07A25FF838F67378F9A6A9A0B404E01E86E64FEF71DD3D540D4711AEB1974D
E2E0D485DAFFC74BA6B8E9AFDA245BC8997BB39BB6BD52B496A09C68F7A8E900
8DB3007643416040FCEC85B407EA0A946827771FBBEE49A3DA5542CC5173A31A
0280AB8E922C23C1BDD88D70627EF124633C318E7C9ACBC14AE216BFD41C0B6B
3A0161757913CA1F7B6626963C09936A52E73DD9B3D86DEEE73C0293A646FCF1
21D4C33DFF1671DA7A53E77E20233EDE51571549AACB7968602CD03EE67ACACA
B231661CA9DA2BEC5795A83DFAF675E9B052C8BDD51490F7874C91EF5ED2E0A6
BE9CBABB98A950F7E55DDA3823036437C11F614E27DA5BB8BC6D955FFE54B825
0201275C2C49A3908BEF1DB3D87792DDFFED23DE7FD9CFC284F6255C77E54A39
C2FDBCD28F2938E4CC135829AC1867CAA5705674062C9639FEEFBE49D6108091
7C58585B80464F7E69966D7933C7019BF336B88B9E0E7073A85EAF297B71B303
31EEE9121347A482D28CCE942AF53E94F88A97EF2F1860A92CE29A14495D67B7
D37E207D42F3891E0423F5BCFFCAAC057FEC683696ED6FEEFA65C8FB6F1312C5
24A1130192B4179F3B08DA1C951D988894E7FE7CFC28C56992A1CA82BF8BDBDA
E021F16E630FF67201BA4DF5F3F4D6AA65B8347FC1575C142C6C1868E8472BD2
CF191137AE1B36F32FD84DCAD50644AD55EBA2694C93BDF984A5C9E7C92B73A0
26769F00831537266FD2E711AB3F8AFC5F3FDA3C9E6439FFC48C3D1B5527FC56
1FEDE991E66E8465C0E395EAD0A22A2FDC001E449AB9C5E0EF187A1DE9B74696
BEB6A525DBF3A60DA2FBF1579150DEE1C5D1B6F55FF2708CE23289803CE123BD
C81E25DB96551A13AD713D5C7BFDD3F2E1D5C12463A195442B51909CC1724E50
A1F6F4EADB3B7355908F36F88521F333C4E7C70B094209D1F883B961DFAC32BC
8C5A2CAF77CA5E6AAB714CC0AF2B42FFF6F73301FC71AFFA9B33A2153F55C2DB
C1C111874DEC37CB746BEC9A3A9A37A2DD098CE7C66B0FE38460ACD77A47D53C
1550F857FFB733B5A8D02FB56790A09190B29CCB4F4A3058B1C82F0CC5E1B2EB
2F8E06F2DE531E1EB81326A8EF0F82843A4AC59D267EEE45730895752820BA93
A129C22A78C1AB28BCF67AD5DF372FECC9EE6719A02E499FD5CA866688E86089
7EE8E5912087E0C4588DE38428114785E0CFEDB1E2EE24CC067D107DFDF1E2BD
B1C4F9C6B740F3DEA0BD315581004E851ED5A9F66C4F9E95DE97D355DB06F482
A43B565F1255A85710B15A281E2F034B1C23FEE6CDF3A043780CB6AB18A016F1
9EAFE545CA5A5B5AAE2459D69D2151E99D029FB5C1649B9DA784BFDF7D177385
4D8B16B9922D149FFF6B4F99311D52BEC9A9FC098E7192180DBB38767DA9B9C6
E8CFC98615219EF3AD4A8157D14C72BA3F91C8B78381383E0BCA1A5319749E08
D67D1208C693A6640D1BD6B9285AC0D3110CBF8F7747AD12585141C3248D0BB5
BDE892F91A4B3291F21F30294693518E4629A3ADD7C8640E424FF615602C603E
1E14DCB3B17D34C090BEAD2A523E260A599522329B698729A635CFB15BE7E79E
6A34DAC7C3ED57340821A4E7A0C7F88F64BAA69BB80DFA8B659F4756878E3044
E1DB7EE4FE60074AF97818B3D36CF51110191B4E10655F52CC5D11F56517CFF9
04BA2676F4147DC8192C98C555B001D54301853030B2CF0C068ABE831158B1A3
F30593ABD51F5996CE493E0622323FE93B292844521051C1D3799C07DC879EE7
9D047DE1C7127E2DC6F94E30C34FF87FA03DB3A3D597697C133CFC5A9448E067
51777DCFEC80352A92D9DEC0A2F40580A0242C063CD1086D38FF5C6FA1BDB0A5
3EDB5499AA2322CC73A38FC826DC202679AF4A7B571509B715CB8BD1D0C5D1E5
9F5B2D6DF5E9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY5
%!PS-AdobeFont-1.0: CMSY5 003.002
%%Title: CMSY5
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY5.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY5 known{/CMSY5 findfont dup/UniqueID known{dup
/UniqueID get 5096646 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY5 def
/FontBBox {21 -944 1448 791 }readonly def
/UniqueID 5096646 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY5.) readonly def
/FullName (CMSY5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /prime put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D77D0DAC26A1FA54
D2471EE9BE33D2E87853491D634A3F05B7672519E09291AC2D08D95BFB80CABC
FA89042E94FED8DC9929ECEFAF741D273687B2127F5B80ED7D16F146894841D5
1A80D8085E27114AC35CD5E578760D8982CF4D8587FD3385FE50E21A253A37E2
AB628DF3500FD2C21BCCBC8C0B6AD3AE21DE63AE6586DB06B3FB1966625EBF52
90FEBA873F819AB480FF994D80C01DE1E2F28C665E74FACFF98B2972CCCAD279
96F2EFF1113CDA922985E095249765989A4C6A92A76340DCFA07AFF34AC5E177
09B739A72D0D1EAE1A6164F3AA0DF1651EFED335B68C8465E1A61025235D4A5A
C3661B9C0456C35C770242149B3B98A29784BF71030C7DBB2C13958E5CC263AE
FEAEB9FBA84E06D772E94A494B60E32AB8FF862E57175DB17F6162DFFED60EF2
D46FB78237E778C7321ED79FAC137945A46B2D90B778DA46308899577BC7844E
3E09303AB2DD1F64D58756DAD62ADE22C62DE6C9BDA77CB12B1FCE3374CFA442
E0CABC7C9AE699CD955077A7268FA0FD3FF5EEDE605990F0DF0078799F5CED44
6ABDB2E7D9214BECB8B2CBCF328F7F5B8F346B55C9BA5C785A252DA59602B6DF
186D23D5D90556EB52D7C0B44E4A9A189C180FA213E12E9838F0B2902779E289
3E2B7DF45A01F36D88C9CB814AE5D41064030D37393DDD7D5974C1A27EBEC064
B0403898996140AB14E6EF1B48D555A1C4DE29AD0C5D284988B92917442D2C61
3B15E55CD91837B0496FEBB51486CEA7DFD9787AEB484BE887111903124340C0
EB034A75292E59CC038E75E1DDB0027407492EEF92D70E0303BD7B2703E131FE
BA91B289003B7E5BF85D2E5E130CB37949AEE51EA57FD424402B0BEEDEDEB5C3
E23643F3100312F94C157C98939EA2312B11DE0A683D4018FFBA2864626C9449
0D656EB0C79246A7F5ACDF442A55C9188D8F3FA64A9B6BFACD8F81D7546E0CD4
3C5CC653CE9514306439AA2BD2FF2B965EA69A30331E8D65056D919476867463
97DAFADD16BF9366E95C7C4276093B639541F7AFC9AF745260685D84DD3095D4
1B925540372ABFB68CEF211D65756FE0E99733B5DB40D5A42016E8715208D4B0
7A120EEB34147BD179FAFA94D0880121D1C6B27F94965ECC1A93D1B73AC1B3B7
191B7B3CD4F2E0E52A3893255C4B3F1A70A0ED36DAD262538E02E8A227F6D6A1
8A047A91ED6409F1E0D9B40698C817918AA47B95A082E3394AC42DE93BF9CB28
68E63F3363FDCDB014E89990C50210750E8442D9555B0A796B243AB03190B2BD
57C39F233318B6474F1B3CCE31C21BEF68FF5E3F866789041910B1B11ACEB75F
146BB1A162AEFB268700C2DFBD9752BCF6F136ACAE815C0AA4147AA2CE61D282
1BA716B693E2F713D0653B17C9381DA86E1CFCDD1B1FB9A72ABDA1AB2BCAD30E
A4EAB601BE3F8EB95B32DCF5DD114683AA64E14F9A958D16CC6DAC7DC3ED651D
603959B0265FD36F8DA41F3173A708D88C73EEA1533CE48C2AB26B4DB7CFA662
A8A463CC178C31D342EF907B3B44751859F2BD510F1CA93D61AD39E8E5D7785D
D465C47F3EDFAC22DC2B5DD93B2F752EB5482E138A0A1E5CD62747E0F524E29C
A56E58A6BA543CB3AE051F4D90891B65712B63DB197E60275EAF5975007D09B7
95F916615F97C50D8FDCFB67F1B677DC5139E6F46ABA079AC552F27F507CAE8E
E5C04D31ECDD6CF5E8A447846375C1748651245EB9C780D87FFF162AEBCC9E0B
155B318CBF420DF0CFBAA5669C2DBC81B55B5042514B05B7B82FCC827E21462B
BC8F8FA96E2CC4441E07E0901EA72495013400453E49B7D243FEF528E4078AB6
49277EE77C81B9167D2EE1961AE265A8C01F7562ECDC47D9FEC391097474EF8E
54A5A7FE6C98A81ED29D42A3D54326219F638C92AF8A087607CA2A2A80CB1183
8571CD40199FBDB9D70AD83979C739F533359FB2DF0AC4AE3A0E9DFE735ADE9D
6E29B3F6DB9A5B11418E9C860EFDBCB0E49BB900BBCC85860100F1FFA5AC07B5
14F37C5AE5E1A35168BC48BA7012A297C7771789302AF44765A6DBCFDD418172
62DF3A4785385CC9D055A9B4FFF373041D9F5E9DA83BC1C5F3265E49BA624B82
F15BC17B135D8723324865A9CCDD2EF3A0F64C17914F9B238C946FBCABD92B30
AF90191996ABF2E4972AA9D0EF7B64AD0126D07714D4059CE032905BDF877D7C
3440C374D7B5D0073E13ECDF3DEF2938EAC1908CC60D0E5EF5F52AE8A1B0BD34
8A454CDA66E7340783A7152CCD74EAAD4112C7D70F3C867E140988BB610CCA20
F1BF5E3DA8097509CAB419E01CA47D449C50EB8FC6DBB75AE2C5312BBCC5CA91
86B221536517CAA6870429B65069FE3CBF3FFFB5631B57597E5C0C3E39199FF6
4DC35B155A759CBFAA96409BAFC7EDFF03D2671F0396641446605843CA4AA36A
15070DE52DDBFF487C5398CF7604DE843F32CAB26A96F8A9DCD03F3DCAA57E47
6F0D36CDA34B96B7F4986275D79A1BC1954D2BC0BE1509709E40FF23B84F8D65
3DE1D1D8A2AD94AE3DE202D62993EC4BC5AF66CE512EFFE7CF39028BCEC1667D
8782111D9D503BFA45E4960E6197D8CB5697B1662BD2D991532074AF5491DDC3
2EC52B4E5AF9B2DAA5D5E4CB644BED25DACC3F445E4C7D58A1E9737F4EC04A79
238E3578311D88EE6D067725C580A146FF150871FAB2B366B5AFE5CE3B386EF2
EFB540348505A1749BB34586851FB2FEDA92ECC395B618911E1D00B427251B05
15B9E42AC1F0F239827B938EAB8CD20FF9705F4D7FB5F5F911CED9EE8FDABE8B
3C3442DC3B716C3686E1B0573EAE3905C3964ACB336FA3C38B17F229EA10F036
ADDE7FA5CFC01FAAD33F75A125F52AD395C7DBD3AB6F2321D7B5B55F0ED237CC
61FA8278FFF9956C64B8ACBE357D4603CC4599BFA198AEC01E4F4AE047754C16
E155C8FD09C996D9B5EECDB243FA48B0CED1F0882103729EAECDDB9523D6BC22
0AA1545814579043F0DDA2D7F015E56C399EA3C644A15BA6B144361449609C40
A4986E00918A7B44BB06E7090F73FFBE4EE3E051121939EAB0349EE84715DE36
FB187C50AFD74C44C25BE4B7037466CD60F211FFD7044245159505196B0E181C
0177F14D0B486CDFB767708C171FE513AAFA2B60665CA55B1E5F9E0304B63666
3BF44EC4F5B7DA58891081F78B37BE8453E86AF3557B97D8B4969CCDE2DFD255
91FB4D9CD41E5F931751BDF7FC8C700C633470064C0BB00FE5745918A69CE430
D86FE46DEC014C019C06621B2EC6C3F196A8A5E1E613AD8B28A9D0B981C11A29
4AD11CD3A46D089F8EF7D8298971A5F9F6F139CA794AB4BF0AAB2D4D428A8E4D
B80EC134CC7CD74D3F08E7BC8AC5B1846E1E5DBFA97AE4DB885286C7D06B4CF8
948E889ED85E8703CB97D7AE19E1201EEA205157BEEFAA3E17B8BDDFD01BDB17
691010A662280C279942158F68BD351B235EA4EBE24D54C0055A19A3F230F353
77202A1D7BE371010624CB741D4BA2E690B33FE582D666E9788A3E3348A0E100
2843E0B2FDEE05DF75F4D49DFE2B69BE79E97DA1B3638289395444F1CF6CDAB5
5E6EEBB6F907807B913290C25D8AA546B121EA90DD113588011DBF01B7F88AA9
B9CA9731532478D3BA57786817C1D31D8C51C307D7F500F1B58C2CEC9594E5C4
E5E7239D90C8B5B4A81F95C048272A2C05EF0613463E4094E922F7326815EF3E
6E82D5A36840A76B1BB25185CD66B05FF2D140E0F22CFF73EB3F57732E935BA6
8C64BB6809E1B45089273527834789637621793414B6853A1C301612920E3F91
458D043CC1B6CDA271864FD4CCE585FDF025FAD217F975FC36FAF8B79A6551DE
AC3863E25DE972E2A4AD997E77A2C05A1A14152BCFDEAF40072A0AD952A3944B
AB12D66ED3C408DD104B8638D67417D2A95A87E226A03C28181047CF5BE58409
7D07D2529BF867BB61ACFD68F817BCA73815F787162614EB926563EE2F8629FA
6BEBC05465458A03C2A8673A3CFF7552855E082A7B5C2D4101A1B96449071485
279C1EC56610507DF786427B4E4D949BDC9127C2802451F3B21D60D5827E5B7D
0A683F4402725547EEBE27C38839876A3B1B7FE0D7107D6E2292631D1B9EFC79
87D05342972EEE2C413568BA971AF56A2D4D89C7C0D0120AD504D444655CFF3C
957D5EF19169401CAAA2C4C144FF87AC7DD3451A63CE796B8F6C600F913F55A5
A74B928AD676ED097740BDA578DA299F42CB7B7334BD2281E403129866031EEA
1219E7F9BBA230D049EEF401CEB412BF7FB58FB2F9B7D1E47F0D774956B803E2
872A7A5A38E5B7EC4A225C73522EFCE6E98E3EDA3BB402BC5BBBA209074BD2A8
C856290D01A092160E8FB0D9EF324776AD39D7016C63A500D0839E670009F4C0
20F033554B6B7CCAB7BF60494431E4F2755E4CD966ADC7A078D434FA59E5E49B
9903F4E722ED169CC3D0FADE874E3141CD47C69BAFA3183BEA4F37B388F4F48B
7D143D4B79CC5E701EEB350447D9600D39A7C03A25B5B8B6A5A7284A8DB4969C
CDE2C99C39EC07BD8559A45CB5AF23B849C1826713828F43DF265068950DDADF
3B584B90748657609A89008187BDE4286F95694D01760260274A23A41FA66A78
773902ADDAD18F98F045FF7D20AD20EB685C145D44237EDA272619EA9AB71497
DC8BBE9EEED31EA77C9410FE650C65A6CA71F0E72E7D83BBCC0A59DCEDA6399D
64A8F4865811A637838445D84D97204CA7A918DD476471A598D7536276C0F0D1
F0A88D8BCCA56409342C1FF678CFF90FC7B287C36CE682E1B200B54B2CCB12DB
D1DC9BB4E1CDE2B9B6BD4B80DC226E10FCF20A9E7878A16EDFF37FB874E4868B
A9F1C452EAA7126E81763A2DE2B502132046322BE26140F04FEB0E7167920679
FE8618E1AC5C03360AD3D8B5E913E1CF0C1BE9E446DFB050C3978165838278DD
23D17DFDC85DC7B168F173D0945D110976084CB27B6F8AB2D22410DB05BD345D
E4E38CC7EDCBAE36CCBAC590DA5C12D969D51B847A1460F4FAEE7D648818D26F
20FFE485D842C2088258F4F0B1FDCA46A7110645C25E3A31C4E6986C220985A5
DECCA30BAA3A4B5CE0152B8A9D68B1FD67F21050A87BDAE6B665036B9C73953A
11B16AA3285456220D09A03DCD8402C06A2BB18717B1AEA7594F748817176E12
87E685FE70E28C0382EAE8948A6E9FC2F46E2B70DAB208611DFD5A5D97D39CCA
8F9AD9A171DF53CAA6E3E5AE87257561BE15E3BB21779397A30AD4B22A1A1EBA
4B7235F59EEEC1FAB7294D521EC1E36723A4D7BA007DA4239C05F0E6DE546D5C
7A58CCD00F6AC96C20B7182CCCE3E5937D7A64F7CCD52A107BB8092D5F95A8A0
589B2DC542511DC89A0EEEF23E711C7444BDF95F64CF486F158CA162138A36DF
5400A5D03AE62A945373E95840F6D6C7BCCC4FE65382584A4DB36D23FBA6562E
1F3AFCDEF27AED61245EF880426B14B3DB5D9731039FB98F2F51094CD7D5EC78
1F8B03F07064CED40D139BD04C868B1E51A994731EDBA98E7D678A07F7AF6E56
92586848C58ABFEF378F5C1B4C3E20BA860BC7310B9AC48F2143B5495F9B3A35
85C9AD5AFEB23DF6376EE78BCCE054C8FAA925965E38EEA6F68CE1B5329D9DD4
DAB3F3342C6E6D9E0C70E63989DE8DD2D3C4C671233888ABF56C58F69D29A742
B5AF39EBF1092C2C4A906B872310DE0E83372B1C7F6E295D8DFFEFF960DC0F4D
83D7878BD8918B9BDFA17889D52AAF362B6162C07810672E23F66F8CF3BDBD6F
0E016C4FBC8CBAA796057A6B9BDE3233909694110279F81259A5E628FBDF6159
CA0CD6997EBD34C3038A02FA4B422A98AAF4297B998685D7080EAEBC22E27900
8B0178A75E5E52363A2E56507B3E44A6F9A9DD81886317A07B4823558D3690C9
8C722915FEFFED7F6CFF4E94DA744562835E29C97333CFE50D49A5EDB886F4D5
279DD9CD35C15656F9329CA06A0CE1BD5986784A910EC3DC7AB1A068C8ED4829
DDBC83091AAF21092234F614A6CA2C4A854B5049B5622BEBBA68AFC0AF9C6686
74555347CD055BB13B5CD7B5B6954A5794AFCFAF9AAA3682C7333564660E7C1A
8FB3DACF1ABACC3D68C26D07060C7D5B9AE9C9377A771C3BCD317F0ECE3CED11
C0438A29708D99A1F3C02E67AA1D7BB57AA7D8C64A2028349BDDD4BF6DB3139E
C1BB6D7D906699484EE2A5D83296BEE09644B62EB10658E06E4176C1E5E7BC4F
36F3454F2DE69F0C5B51FD5874F67287294399923B19A40CBCA4B580BCDA347A
9AFB7AE64C8E9070D5586086E6F42EDB8C0E9729649CDAF7C0337BE5E670DB9B
D5C038262B65603C1CB1BD00D4ECE2BDAE5B77A8A129DDD79DC7D080AA89B7D7
439A03568C2C826EF23C2ED7160B2F8F14C05F444E364DDE247748541CE7E265
1414B5A15E7152C6E9056B0CD43421D4AA5EBF1EC2CC70516F920F08B0CDC38C
DF480EEAF04D7F12638C9CF8DC4F827DB07256F4432345FCDA86CFCB637D04D8
931A81D2DC47674AB435738871A65422D3FD46DFAE9049F27DF0DE33A0E3207F
A6832153135BBE5A283CDFF46ABC74C78B3320EAB1E881E59E07C3134F3830B0
8216AAD3995D3F8F6CC988C73B2B7A5B79E81C6E8377FFBDAB29B4CB6317B118
84A437E14B0B213BE7ED610E9469405AB950965B2CFBD4CF0B3415BC9638771D
C2D8265D4FF0018FCD3851E645A82C179FB4995A337C0A854999E0D91EE8C98A
A9EB781A0DEAFAE1D666D2F5813BB2E79C232E5C96C686D414921DCF8EAD4C7D
06F79EF5078C77556346283940EAEE347B06F756A800FEB7656DC02597A674DB
6F8BAC8751BA046D7040B5BA0AC766522FF9657F71C7C89DC93E92000A00120F
301DE3ADB5D7D62B57E0824B9BBED388A5CF1B39B034AE2E44BE27CC0F5F0223
2A219166697692167403DC2083384A698551FBE48BEC89629820596FD569543E
75174901415C56DCBCA012694D671655AA84A8D8307B34066F1AC149C8B4BE3F
578F57A39B93DC454580C44B12D6D1BC653CCEACE809E5F3F7406B9F4A868D68
ED4C5C23D7B2497668D718621A94AF4938A16FDACFC6E3B216BB615324375050
24A7466E820435B11E93E91F673D609932BE884AA1CDB9D433A40D189A668498
A1B708DA358F56A1F2CE297C61D9AC19ABF79539914749E5DEE0FD0DC998F4D8
1A4CD93D0A06E68CC764308BCE69D4D53FB2F0AB742D7E9618321EE87EB1DEBF
14561A916C8D58B9C6AFE80D586F5FCAC3C6489038178E77B515108E48C7AF9A
AC9C3F93598A28CD03864C6A65659E8E6C782F50ECFBE2C27678ABF0978877FF
C685386DF9D9D8F51EB5AA618D2B3F63FC6A0D6107469DA479D540447D785235
2FBD6C4054C30D02DF3D2732031297F53AFC937F6CEEE01B2EF34D59FD0EBD21
854C5CAD32C59F6D8F843795472ABE1F73107C0F5A5B9274CFF2346E7627355D
5E7B3B3451C89DF5572F4E9BDCAF526425B34D71875B5109EE341F55C551DA50
31E2EC3BCB7A79CA3F737D3CC23200160C76E29B9A5740BCFA0355AFE7930076
1F621C801268E18B83A108068B8DB4ACF7079069AD73E37ACB779490900CB770
326BA14A6CB1E7FF537AB11F432809968CC441F418AD1A36075D948D487C55B3
C6FC12080681BC9685764E9348B28A29E6FA025EBE0C175AAA6CD60CE6E2417D
FAE5E146264FDFFE499FF7B6F04466BF3406D2AF6DE542862EB51614000D9B0F
0C630C2955964D0D808C8C65211DA05FF14547308FADEAD9A907B1944DBCAAE4
DAE093FAF4AE1AC91793F025C0F0C1E74DE7817154052436A369CF7F52E05841
5778334C75C7ADDF2B7C1D996C18E65366EC4F8F085AF9DE24D54FF213C73716
0C383C2741EC725E1FD07F83ED9BED3CEBA6BBF54C5CAC897D17E19F62A11AA9
B3D13D0649DE56955AF9924057555D8DD002A3E510703A9742F8C5D2AF2F1B19
F52F38F6EC4AB6CB0234AF158FB8F0089FE5FA699473609E4DFC2A90705A8512
5861B1347D37480ECEA70DF671DBE8696C5957818BA618D1AC24C441B47F0352
E7F937E5902B0FC5270C5F787FCE8ABF7119F741B36E5F9B70B1DD2CBC5FA90D
F3B40316B2097211A07DE9CF2DC319BAFF663638F729648AF7AFD39B5C9CC5BA
49A6FEA0CF977DBB7D1B2CDEF5CB6F745DE93CB22D86E47337CD0C6E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR7
%!PS-AdobeFont-1.0: CMR7 003.002
%%Title: CMR7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR7 known{/CMR7 findfont dup/UniqueID known{dup
/UniqueID get 5000790 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR7 def
/FontBBox {-27 -250 1122 750 }readonly def
/UniqueID 5000790 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR7.) readonly def
/FullName (CMR7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB981ABA2ACC9A23A5
3E152596AF52983541F86D859FC064A0E3D5FC6647C3CAB83AD4F31DDA35019C
CDB9E3DD3FEBD4C2B36BA3CF6E6C7DA85E25D8A31A9BAD39BDF31FD0D1790707
9DE6A078E8A409D8295F642DF492AC4F86AC84383B0F4C6BAA7C22AD5A898A71
D6CB34D2CD12266C486B75E75A69C14819DD9BB8159088E04D4717E576B8482D
BDA52110AC8B8A80E4E9D58F470EEBD3CF44A1E1EE8DA318FFF3611B02534FC9
F4018C7C57E80570D2F634D98BE5D5EC6D95051157F0EA94A3D12BE0B4B79939
F82F8D73136D3337C44E314B0B16CB030D9A12E01FB667105F334C3EE965E5A3
D410D2F1531547A4497C355AEEB295CD3C5334BEE5232992960B757594B89F3E
52095042DBE6B4DA3C3AD50CA95EA9EBADA10630B500CF1FCCA7D60306743681
7E428D33B7F7C40B425CD58E4CD8AB474BCE6A307BC6C6EBC15A8A96E0E2977E
A33389154536F5C5D8CF036D07F24094E779E5ACBE5502C92892F10F4C6DB627
C7EC4C7BF20B39418A8A85D7FD9B0EAAFD871DDD41F93BDE5FE619AFB8711824
DE890E62C1969A6FE28DD3578AF43D58A728FAFF0B9FAA640962C8F35A26F76C
67F3548D6DB54A25CEB368B47F97EA2B0C4D7C0E7894A4F0C823C6C1922CF9DC
10E05600556F1C7C9AFB33A2DB6F8730F70D6BF94B1FB0887451F2FFEEF3584F
DFADCFA9A2D4846B8F0E51620E1327D994CDF973B837D10C90FF76DE22B47CD5
EE3183898D156861AB4DFAD34A1E3FA260B8164E6680BF58413A553E88F6100B
C4F4E8E972C81A5F88A7DBCDC308B4C3581BCDE13877B976B1F84330839FE5CF
C78551620EB803DF94A5C921F8EE24F7EF8FC4C3E1653514212631F54F90E3DC
E9EAF96E998F340C4F729ECF7AB430FDB7C0BE3DF2C0D23015820E28B743CAD7
7F0AE95413C3EEABBC69E852F53EE1DC260D7F1E712BECEF2F18437DB23D8E74
2902AAFBC733AC5BAA452DD6F3671859AD836C8564E99CDC4183D8495AFD99D6
1F0D65B6588CE7546717911E25BDCA6C2649E3A7466A3E2DA7C7994A30AB4449
672EFD00632EFA8629C1AFB7D53D801028F77C864869FE636213A69173003EA6
BE1ABA95EB07B13D1594BEFCC95ECB0A9CFA9892EE0677D6B6C250855762B7A7
8E4E022640F93169DFA0303A0D5E73BF3E0F4D4AAD10FD7E4EB20532BA30371F
E9F480F9513432946F9828AFB5D4AEAFA5829B2CB544E5EB634C4537EF7DF08A
A1CFD94A52DCF0E7CE4C5EFFB01E6D50558B75DB4C8D5512B06080F27BE62E01
2EEA6A0357441401458C842D3DD4C35B8F561D816B336216CE0C14BF77648AF5
E33912CF95872A1E1AB9A18980A0B29A881D13397C15E1CBA5D3E0B27943EBE2
F3003D15EB446BCFC1C231832475D5B7AA19E4CFDE119D6CD62D053C6D29C333
5F729791D17B3F7108074EEF4D1BD101CB33E01004532CB0D716D2E54D169C6E
80163E70C0E9081F31A1ECBAE079D2A518B790B0CB2CD03DFD034A0F4788E800
B0CD2DC1FAFDD487C2F381EBAB2A2F3F3AF82021B211DC9CD2FBA6A1BB3D4AEA
4C7F3D9A5C21DFF284CCB827D205A69638E98D5DD8E36AFC1A4481B5CB2A2E8F
D6C838DA6F81990F5ED928DC7457501B5C979FF4CD20A830896A460C5DB13D56
A3B2B5D9B292374A9BF392894DD99FCD6A1E655AB395E839F074D1596488700C
4E2891C8AEEF66568E82A8B826F9A28FF84D4D9BDA21F638EAF96880B4EBE0D8
081982F34831A03BEE81FC177700C2360D2A48915EC40D5FE85B400E175D5AF1
067FA0097904FB647757BB44B4042D30D1557BD0F7922D731142FD682139CEB7
58CA4C8C240A0B86B1888CACC507E24E04020BF1882BD9B4CAECFA97DB24D7F5
AD64C69454027F198BA35881B94EE9159A2D73E450C3BDAED66B886D6DEBC84B
653E165176228F88993F12A170775A8D7038BDF2FE8DC1F7B98BDC02D1E6686E
9B834F6C0AD90780B17DFE25F0A4E470CBA84E73F2D22BEE09A040F14CFA2C14
0FDA5A5149B5FAFFE49F55EEFC43831BC43A8326FEE9C7F469C0FC3B000884FA
41DA7318EB57262CB96FC4EC7F16CA07FE1C3BE8C2DBC8A8135953D6DDF20BDF
75A2B6D26074FCE752BD32FB9F5CA797775E8DB9BB9786B469A3CD65A0D9DDDA
C2A166E454A94860EEF5B5C12172DDFC576A03F6E6F8A735FF21A3E9CCB4CAA1
3064893487697986A42CB5888B2B0A79FA3C74E8187BDDF7BEAB884B70B8D4AA
AC6615745AEB906E08BF831CFDE222F58D02B428D55E9D5A3CDE74E42D8A2CB7
E1A3A9439B678AD438793ABBEB72B21C58981DAF3EDCE4BB93D95F4A1E943BBC
B3A012DE92FED4F232A3A7D60CE60B605151F9C7C18A5C653E5D6D15E5B49A63
73E7A339504D0ACC74B8B116EA88C3EBA2CC631AAB29F761E5F062966AD2FD28
7FFE52FA8A115DBE23E471094FFB3CBAFBDF11B7E9058313F2D069B2CE98A962
64645738F02A31E2F2AC11628724034ADBCEE012721EBF0A567893411F950410
B20754A7510D041FFA6144AC9CC46D846B82581F20BBD001D34D9764010824BE
61C30D05E5C5D100A24F1917F01799CF5BC4E50FCECFEA732CB50196825F0E08
8A1EC868C6D4357857EE2957E081A0E4372E31A8ABEF23C3F2EA0FEE57DE4D08
61C570175C41AA0C7A3A579ADF593F18B4AE3782D2552E4E0759C32E059EE741
2D8191E381731769F6648B3581CAF11DAE46471896666F18F02918B0860BDA3C
BD5DE777672447C23C62ACFC2611ED5239D6A266FDA6031EBC5A530C1A2FF7A6
B4380B9A4C877267854AD1F1677CB5433F28894ADF93D39EAB94541A8D232E08
22D082D0951A60F62B87DC028714EC74133A4D65F7D0D1296C0E189C4A42AA98
28E8AE7ECBB9FC8DFABCC6EEB1E9FB06227F90808EF31331CCC5D4C9A6182181
047902DC9FD0444FB94B60FC74F3B677758088CE6A159D940C5CF682335E756A
8BACF06AD7225D49B0002392C889B0FE2C71311D2596F4903D12FA20BA2FFE25
A0804B4BC282929BE31E0F46B34532CB5795A65218CFAE21F390792DA67775C7
B91A2BF4C16DE4F6551DAE3A5827F616BE9040EE6B1008DA2F99A01EF66D697A
6CD1A44E0A15D1F39EA8025E886A68A1E9C334327C7703EE721E497CA924AC90
7723106D913C5ED4BA4FC743CEA8D0F5172526107DA65775C0B1B77179D336C2
9B09B608D80B1A1E87CA1A84A833A00D980D919BFF56F6390E9D5B45E9935CF5
E69D003564462F750F7DCE02DC23CC215A0696B74D8BD3156A392A94F557655E
00BFAA035647568ED66157FACC585E411F7F428569C147DC43F6E4FDE693D0F3
9917BEFEDF61FB980B85515FF6424824E2D995B05CA1E5D3E8BD8D3281DB7CE4
E54923E84058FFC0A8A2C491327D0F87CE4C352B724167CEE224DABA3B95757E
4A419594BE4F92E78BA6D35D4C93D31ECC3134B24A45DC32445725BB044F09A3
AA8C31EFC0A2944ACE2F2CE054CF24DB350FB3C71115518C24BDC0F7E54250AF
9D3378D38480E1CB9029F31570C619A28F065CA4FED5665EDB96712ABEB33B9B
4232C00C1B0215F08D53F7E430887035AC25BEAF06942FD1B6C442253C887AB7
D694C1A6115C8990B4CAF1E81DD1FDDD6B03C00055BE956BE7FD8A4E1049AE69
EDA8593CBA8C4A41E046C689FBBF9F1B64E5856A7FB1C61EC815A56DE2A8ED33
41F370B8203D4E5B19C63AE9E6E0D26F4F3814B5AF48AD30EC9B8402C941FDD9
722FCAFC638FBB835F83DC77F93D367266FA7DFFFCB567EF82B1695AB4D94D09
B18AC041811027229DF431F5CB2BBF6ACCE9D500C8F075A74590641C1A607C56
D2B8624797BCD9C91C3177818691FBB4744EDB6056464A0B95B8D63F7C22309B
82D6126E2057BCC9FE5566D96B7A9B201A09B0D3252A5494C8CA2C8BA8A13C29
37EF2A882D61DA708C279F663D88A8E2999A0F3B6F98C49901A7631BF7708B67
54D0B4C52BF4BE0DA0439E6763A7C9D639AD4092E77B13D3510DAE1475C978AC
796F9B2AAD3BFF35C5A3E19B5E2BF704B3BBDF68CE48BA4FA2496D60E58888EA
28AE12D00E9F0816FAC190590A865BB58569A91BF0345D01230ABA361442006D
BA2C90EC2036BBAB79EBAFC3F217DBD5854C519235F9627A1C3C71D21ED38AEF
0BB40F3B86BB9F09A3F309473D8757AB7E638DC1C59A7F9BCD49DE4107A2E54F
422767FB94048987847205584309397F554744690ACFFDF5902FE5DB355930B8
71863217830DD7A563B0B3A4025ACE75B0E777B4414B62A13B50C54E0E6D47E9
D43BF769B9411B74E1069BF71BA873B4B8973EC9BA492A5DEA58D267872BB246
10AA67B143D0E2223FFB4991E583E629413CC894C3FA4869B72D19CE1A0CEC8C
0FF5E5A3EC1FCB7D3C4289813F0D249A11B55104BD60B2A89BEF44CC77CCDA9A
065B8B83B4F4253AA1D535290DCFAA4773452D110D2B3370F9E2FE5432B54A9E
644EB3BA9BFF62347F376839024CD5EF3C5DFD30F412DD5474B7933E6A1AB63B
4B12F2417C72D0543C26A263AEA53E5BAEBD67E23553A72E949DEC556BEB5D09
C4D7A89B14FE4EC68D0E3E9D65A64B285E53590F418EDA8175113CA375A29930
DDCF4C71ABB26CEB800C2C2B253AC1F53651C88A56ABE5A74F3B54CB4FFDDB92
60AD7272BA25EC2F6FB759AA6E1E7964FB55AD09F4EB25DE45FD01833947BD05
6266AA8ABB7DD792941C7A070FCF3A4636FBF8921C70298D42FE92F079DBA2AD
6149D9CF9EF7264DE6DFCD4429949B15EA90B596340713BD61926DDB2BB23BE8
F9DE38A31620A817420A245946E551463960A8C5C7295E3B3D6A59BCDF5E472A
40B7A2CDDAA43CD8AAFC411D037142579D11054A903E102DF0D0C7B5BB854DBA
F3F086AF991F7F5D5C730F8F9AF213F25786F3EC0E54530FF912F4876FDE16B6
A07D0DC4FC46EC6363BCB68B83ACC448B801EC43FDD2F8BE0E93D809FF81E38E
176AE17C67C85FEA58EC95435434C49A950AA955D8B20989C550AB1F1C31B7FF
99422E1F48FB7D6F327C6DBC4695A03903DB275B94CB39386E46579271870A25
21823E75C377E9D5B46655E8CD8F986372CF8BA846423E26582315A9D19E0BF5
305C32B2A0EAC3ECB275B1D8BE11A37ADF524944219D94EA2C5DBDA768828B6D
775DA8CDB09E0570E4ADDF462EFD8D3FA3F86B1DEECDFFB699AF6507257C1879
16FC615868C2D51F03CD57BA38D42995D9164B257441210084DC409B6EE4C119
0B2E17B0A8D5326DD0010E4A325D5F77BF935693BC90A00A28C7B5F74817DA39
F47A41E32F4F92AA04D30D810F7B1484EB53AD8CFC8CE8928B570314E0F713F8
AF127227190F9C16BB73D2A217FF801C391A29095DA5E4974D137A0CAA7DE702
E20DD4755B1D78739756A5E7EC3542B96AD6844199FFA2F5F2E9C64E2DA4FB2A
ED79869F745C59D235438251BC2E6D26112AAED20E06021D1AB896EE1F1DD2EB
437FBD4A25E42245C5A647493FCC9922E6DD7AF57D5D482921D1CBD6F0F02949
C27777144751C1E72F4EE2BC343D4AE7A8A8758123B54FB1A026144C643651EF
0907A376945E19A8FC7F98A034832A5820A481B0823F980F59623E0511593FEA
BDE6EFBCC0383242CBD4954027B075B21F10472059A480D6E5ED01C3B07461CE
9810251A5C5643EC7403130C2246E8616CEA25EAC7A0076731FEA8CC43BCE3BE
933FCE61067F5FD402E67E2B9DAD954AA77C5BC86BC5E4BCE2ED676D8D8EC7D0
ABC5C86D82180B9D5D7451C71B5149B6B67883578DE9909317928C0A92E3205E
F23015400A1763A6FBF67FDE3318AD2696685A1832FC31CF38589EBC7CA1C818
60D2B2211E04EFCCEA88D9A9082E82951EEB123924A267CB03C48889032F2892
4227E217FA28F87E01CBF27BF1EA60641A4238258CB7AA355908FE36D90F5CAD
FE992D03A33E47CA9AEBEFDA57793F39DC6A9E85D5B289F6B862B35DBCF82E43
5CD6A862F6FFAC36478C384C3BDB0148CB1FEDF55969C776E77917635B5A65EB
F2AD351D21CD3822D43289FE8EB0FED58182997097C7E9F4373553AE1CA92083
EDE3BBE6C3BC7009D15AB5FEC6A59E9FD1BCC7B2099CA15FEF083B9CBF7B890E
CDDDE6BA0AFF306C76500C945DC91BD533FF9A585CEEDEF79238C54E6168001E
26FEB29E523EE501BFA4F60B782B1499B07084C35A2434B4D29D3D8E2C8F945F
A9922443B68D07DF7EAA1F4CDEFFC438B597D8943E231B5216808A85F30EDC81
9DF5DD22F54A45335B4C2203887475F39D247F0E7347BACFEAF220ED82F9263A
6488E73C1910023E505FDEB143006C1A351D441AC57F9D52D2C6D63D78C75605
999885676BBBAD56074298E0BFDACBA1830BA58E87F436CC670EE8EB1870154D
72DDBBF3794F8CAAA3F1E11DE29752DD99EAC695838A19BB67A1FA3829B6E0BC
5301610A0351AAA749F456AE31ADD87D6ABADCDD1FB3CE81C3713F48780DF407
530CB284B2AC709F52EE7AD647DEF9FA4D2A867CCEF728F3D40CF34C28D21527
10160B3DAFB5FE16AFC9D36C6EC4021FC189005862082BEA60AC72B63AD27D72
FAF3C2D89DA2648FC4C65104A069212D87144E8533CD86A6D73DC7CD9DBA25CE
7DA53B000266F3871B24663C77723703315C5E4A89DFCDBAB384AE7EB2F455AE
AB191FED406F7F6EC9E5B8276EF5C4CBA041AC7E8BCEC7CAE840154BDCA3232F
15711ABD1E867A434E9787CA0A6D1F197597DA27ED2402CB2D84ED082E8D3A39
81E6EB270DCA4E7A90E2BEBD3CBB3A2BE3CAB926192D7292CC16845B6399A543
BCFD224BB52F21352732DB5154FA3442733066CDC3E186D8AA97CD801DFBE43A
116C86889BE198DA88CA978B8C40ACB67E8F7BA499DE68A6FF0DC72C3D00BA1A
B378B39610F15CA026F95ED8155CE3FFFFA2E2FEB352DBE14CEE1669F2387B70
55B91185FBBED764266215D518716EDA3DFC9E5DB6B148A553E75AE5E38E1CFC
6EF47B314D54CF24BC13856F4F7C976BB91D143DE32FF49BFFC87E17885A1893
BA1B8E441B08EFC04F7D103C1FFBB665194B3D0920473740C55FB1C50EBCF717
A2359B687FCEAD65616EE89A68F8D91AFACAA0B238EE4AF0279AF5BE5294C3DE
A7E1F5E6248C0210E7D40683F04B12A933C746ECB517CF94BBCC6E4CF49AC715
D8005AFECBDFB7A6B417DB8A28F8E9EAF39CEC1CA64DF37A5E66A76C26F721F8
A63B003A040A62F87DCF61B298F960D510BEFA453F118E59E7DE8CA3DD002EF0
127EAF733D5C61B5132348D280F84D159809CC71A3C6F7373BBFD8D6EF715D34
0016DEFF14AA5F960BF1BB9AC304A1823722843547BB4CA5EA4C41C6C2701C8F
7BDC810443F9DF34BA469A3260009B799871BAF8523C8763544DCD0B382D44C5
F75046AFF85F0B5A3188C2EE786CEEE5496A5AF4BCB0B429CAFC403FB983EFE3
61FD9F52ADFC38E07A0FD7BACBA530D2E4DAB2592AA9564843E7E2305047F060
C5FE4243FA8FDF1B5D4F61ACA7850A604FBC6D6970959752695C90F78961B4E2
C8CFA41082B1A37405AABCEE5BA3DC2B9EA76F486117B84728EC6D8AE6379CCB
402C2AA89078EC992C00D53151E9D82C65643F549A572A20F05107A41BE5AC57
8EDE92AE20B05E2D0C98151CC92D5389A675DFE39DF546A33A84A4C534337ADE
B17C34E09145B37CE1EB1D10D42CC8D6E6B127A3809F7202381FDB88D42084CD
0AEAEB8A8288CB56870EA2BE9D0B9DC8291021CA561E2BA388DA3494E433E0EE
5E69DA51D0AC505C9F71562D3E9750F23CF14D2C8ECF0692FBBCB4A92B48B4B0
AA2163AE57C48BDE42D6C1556A37A4B44D30569AA0A3312CEEF1C35327E7A92E
F2EE4E7B73DDA96096EE36242AA37D24C225A7EA3184C209BF2F6FC2F8260101
A918A71D7D485E593BB23C965A2AFC5560FC1B25F3A6BDD827790F8A411B4B45
1DD9F522220CF61F0304BFBC909F4E1B5E81FBA0C0365409BC58F875C5FCD3A0
BBC7F7DD278DF5333D3F48FC9897119ACADB761EF135CAC860D76145925264A9
C5E4BEA93B1817656325F0F03A76E3E1925F6ADE5FA01B7A2D9688ADD447D03B
20458F09771009E3A90DF40FD3E0EAF543D0A7941E027628301A927124835170
340DFF3943D2A2DBE80803ABABA5E41A8C4BC7FEBD5499797BC0679E42F484F4
DB4BB00D995CB0B6D547866A527DC73298B01E725426B586C53BBF3E4CDDF354
C113C48A76E118FAE2A064A5D68DC598B68A4EFB2A1B42420158617D4497217F
F25488EE20F03069ED42CE784DF75F192C08646BE73DF766E2DCC266A3DF3E3B
BA8CC58BD8F51F85A5464410FC1E5B6FFF1064443F25D663F31EE9D79D288431
DD87E689D9CABE62546B62EA4A1B11DE83A68F4E4D693AA3C957CF18E7B36CDD
11797FFEDCAE42EBF76E4E9E0F300DC2F996511886E1629A9A43A011F85C9D6E
9EF26A95BCB7E26F6B853E85C40E083346F32083CEE276F5D2690DCFC5561CBF
B8527F8D34DCE7B8F882EE135A4CBA0A63A83C9F062FBFE6C03AB7D58BB8CE52
8A83778AC890191C319129331E8A2112073A236404661DE55ECEF4C938925363
26E1752BBFAD6B5C03F7B911470ECA92F018340BFA72E1E9945B39E5B7BB4D86
B7D82C6316E9E6DF6948101336078EBDFD86DEB6F4543B365ECD4E06BB3B7493
20135051324A44F5D9FF00C9D440784B14B5A0085078AD3D4F4C9EE4170B88F3
D9CE4645E50F34A9EE8BFDBDD2EF73AA41AA7EAEA43B863845FE4D063BD28C84
F30AC5CFE7FFDA4FBD3DFD81A0F0E3854B2893CE862BB10892D67D797AF86D2D
41187BB84F8632B3945C141EADF89EB46397EAAB7B392BDCB0C2D4B50C7BA95C
A9D8E9F94B8451DCDFD48B70EE2209C12310ADA6ACE785CFA360E0EE49D0BBFB
CD7DF6C9E8D407A5083F88FC901C4F4FB3ECA53E68A82D26E6D159FEC65E4CFC
6959EF3AB581EDCFC9B136154E70CA33C269C2BDC1537B93BF718A9AADF15644
64982B6A46FA1EFCD52F32DFC0863ACC73D6324B99A434AA6DD945E8F7F3B40A
9054E1BEAA1ECA6CE19BDD08D05D9721576C91A7FE8183F1D7C0250D658C633D
A21CD5C0DE1311FCC6B113FD0E10EC692E4425CBDDDE1D2BB448DD817CC10006
B569308F3D5BCEF93ED8A43B413D0D064E2CF16531BEDCB0AC87F5B948F3A8A1
54D95B2575FBC651AC27DEE91D5AD66A1CF6D2D698086EB2E874A32911CA1552
E3A6479CFBCC98A09A0B672E927DE078F7A736BA529FC08D3AC9D918BD19349C
AE5AF3D1FF8550B4CA86731A221E80EFC6EF202642197079C6B2BC4A8EF6143F
66F9D73DB3B0ECA4BAF717F85FE8FA6FA918A6DD820F993EB7ABA1550BB42735
AFD79EB72F9958867D906EA2A953079674445315592C3429831C572BB33D6C0B
BA2A4A39C94BE1CE05984403A93C9CF195AED1E63D735F5AB3F85EB12BEE228B
0A8976D046E78F57E910DE353FDB4A034CDAD1DF02976B0EBD35D767660DB26C
08ABAB41BE31FA0186998C682E924CBE3C9FF48BE1BD19F4E6BB8A499D08D9DE
6D366434B7AF0E9AC612F498A65748C2310C2FBECB4976A15CE8AEB4B8618AC4
5D26BB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/UniqueID 5092766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /vextendsingle put
dup 20 /bracketleftbigg put
dup 21 /bracketrightbigg put
dup 56 /bracelefttp put
dup 58 /braceleftbt put
dup 60 /braceleftmid put
dup 62 /braceex put
dup 88 /summationdisplay put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A21C69E7495DA267D5C198848DFADA31AC9F5DD453B1D
3838DCCD32AD23C7D890BC859BAC8AEB18B09AC71832190E5EDEB99DC3904AF8
BBE407F5EAC1D1B0A1D662D1A896874566CBFB46E98286E82BF892917848B9BD
B70BCCC4F83DC06ADFBA741F9A9E0FDDD9189DE5C3F2A05C77BA591FED2312CD
D8FBDFFB276035A428E531D41C53700C98D6923FFD65A2DA9A78A3E50FA79BC7
833A2232444D1984C6BA33B510A06972844DA0B1D64C4F19C062E78A80E6349A
2D7766E0C532F6379318EC2BA20E65F9D0529DDB90DF2F9A5144168D97AA0F43
E80562EF940A9C006C4AB40535E42003804B0DE7FF9C71BDDF0B635611071AAC
9EF729C65B407B209AA95E4F958D452D4484852BA746B23A08CD8060921634A2
CB96E469BA2A0B9FCDA6F29699A28717B85122D25B07B0EB49C3FC9A39A7DCCA
057387BF1868F809A60F2474C3F9E283CC0166C83C3C2EB3BBE3AF99D1DEA206
B24047F9BC5260EC440DD6D4A5ECD24D2031F99333456CD9208D34228FC21ACE
1DFDA18B54F8AE1C066859C42CB7441FA52DE4882C050BD22883E0436A95C5FC
07BA38099B28CF0449FF5EDC59C4E933E9E1534F667C87A516CF147E17C3DD55
A681499273B111F1D54EAAD72471430E79D8E3342C30CDBCD1521029FD50EC8C
417FAC1D94537105C911C44E3B58E454B8E37E5303A599140A1BAF21F65E720A
7D582502EAA49FEAEA001F4E0DDA40E579EAE07E33DF2E6C454A4E028541D47A
6A4F186A88F0E566CC2FF804980A0E303F0B47B51C59F2818EF7B6284C0447C6
1DC4C275DB0A07C5169D7D3697506F527B350B0E76722A34AF84A1397758E998
710429E215FC670225B6512DCA2457A8224606BF86A927818FB6736439F4CDCE
BDF8ADE915D10CADCD23B3DE44533A7A556C4280145C7BC158A6EBCAF4601CF6
62FCE523FBF3713727D3CE81534EE437E8CC7097662A4A549493D382610E0D10
F7D76C8AFCBBBB1B5F23E04FE15F17D1E7B72C546DDD16C062FA346AE6164425
7AC3356A58F6D05CC6E82C75BBA178C2C39E2B6E43447BC0EFFDE1467509E898
420D0E5FE1C8DC3648273DE41134917F50155069796EB06B24BB88A1AE726B11
ED2E088E26FDCFCFEABBD9CCF8D56BF060898138BDD7AD91F37D9EDF07FB8729
2A9B91A4B2CB0B4BF83ADFC5623FA21B48BD70D20D63F9AD0ADD2A9E8D074B97
58682FDB1E9CBBFC49FDF03078335484D36844A471266337ECD30788475A7576
96A150527A516B76E00FED9F0B28F68371A04B2624925C7666332B223BEE1460
8985945D044EC38394F4B7918758A765639649DA207E261568A273E93F6E3F82
1A3396D02A88B4531000C6E4DE02AC7E57BF334B462EF36E6265C25D268F176C
323CC2A71BB706E9FB20B50FA7581935F193840689D28521E62C24F48DC8414C
51E684BC27EBEA4044DB8B321917C18B1E1639C7B5A346A061F9C8C062444288
37D24CCF868073E7AF1806714D3F3F0C40E47EAD19672D925A016B4FAAA16971
A0217ACBA9D90343D8DA5C2FC1436208F85BBA86FFF1BF3EB2EA221C7489B2A2
D39F8A42C18A1737A816A065FC68B11246994E489F300FB0028368B81799B831
93BAF46DD1F2A0CE26538FC68F53
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI7
%!PS-AdobeFont-1.0: CMMI7 003.002
%%Title: CMMI7
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI7.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI7 known{/CMMI7 findfont dup/UniqueID known{dup
/UniqueID get 5087382 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI7 def
/FontBBox {-1 -250 1171 750 }readonly def
/UniqueID 5087382 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI7.) readonly def
/FullName (CMMI7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 105 /i put
dup 106 /j put
dup 109 /m put
dup 110 /n put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBBAAB71645535A2B
6F0F22458E1429F4A67307E01F0BCF6F337E0E2AD89658D880B04C26306F8179
C8121B958459B923AC3B05B594D8AB95F75870019130442FD29578D44F5690BC
7281357A5041C8A809A59D0DEE108E2A07D406656BC74A9F3317CB887E712318
46B2ECAA341F8692ACC2D14ABABDFBCAC6F35858355F1D3228B0223EC73AC56F
3C987464DB829F243E304F4C59CDE3EF6EB53A4EF9BA91510CB89A3407261F58
A2AE66880BA98FC1EF546112892494C85A2C39F9DCCAC5766725894A7AA148E9
42360AE64BF3A4F1F9F0A0D0C1AAFDC4D50C52233AA595B7D0CE557D4A010D86
6E6B76A7E9523E8A6633DA9348BC3F59302F72F492A30782AE7EF220516893D3
DE836CDE311DED9262AF01C506040541EE84AAC539B404B23033EF56D4BCE6BE
B05F79CD633FE75C6728114D2749E39FD7454050F67763AB636377BA8E1867C3
996C7D7D4A4A02BC49D1AD7FF174C1F49F1F205BC9D5AE42BCB02CF8554E8F5A
D1876C9285B6CCD7B8C165F75843B0AA11D8462B57077AFE75BAD086E9D9F91E
30ACFF91776132F3CACAD1CA5E08B17B36A0E45ACBAC52393B9AF9089BD821D9
CD5A9CD9BECA59F7445D63DECC1B4502D299DB85B6E2EE7C69A1DAB91E22A3A5
89B524FA20AF6005E7A586B90A2C6E5A93C9EFA4ABEF5F7E4C7B81363FE8D2B3
0AD637FA863DE787581ADD7CBE463F7866C40F4E280260ED0E9C8453E5C7E668
FFF058B9742DD3F131C264F8FA102CD0DA05F3114D13D34D422799181453FE23
2FC6EFB01BE420C930B879D671F3DFB036197874725220644A5A52DFB467BB75
8089E4F40CE9401777B9FE1D0AEE02E782A6EB2A185A454AE9394094CDFE7CFA
C03C23A78EAF242E4F811E4C83B59EF4DC5ACE4AD37B41616B46C263358710B2
6137314545CA6CE89119B42A3518EC85C68DC07D26839C68B1FF55C4A9CD518B
A1FB32F9C475BB6110839FCCB94156E7B3648F27245A00D2966FC4DDE3996BFA
F463A663CB6935B596B1582ED0ABBC648AAA8A86068BF0038001C753C8BAFA0D
2058041DFA720B528E2D4B16196DB1CF30C779D3F4800FE662D5B60B208341F2
A66EFCB8448C2FCD12DF0DD899911A8BD96C9B670054D328790E5D388518B146
8CE92E368EB1DB3CAAFCA4834CC9D9D9DCC80FB1F34F39DACDE643052C977A7E
A95C5FA8DFED9B4DCE769E4E46256D6DA8FB18FD7FA4E4CED5D486803538F3B4
6D3F5B3C03184F5C26C66DBB4C724918EBB6A89C4602E4EDDA81EEE2BD18B683
FDB459F2CE0A9CED23DC208EAA8BEDB304B00E093DEE926A7B32FDB2EC70DD85
94B9137856DDDABB402B2C76DBA87149051ADC6007018EBDD571BE1D092EBD95
76D4E063AD7D5F62E6C26EDB88D38678F2806A1F4900B0ABC4ED034A818119A4
E618F1A902315BC98F26775E59555A3DCEA1D0F8B20A9084920ECBE3F7F245AC
1182A40B518B194669D95DE968542BFF80FDC89669BC256C44CB66A2AB8CD7A9
E42C69956CCB6BDE8C09AD22EF3196939B3B84EB23A6E071A36D702909E019FF
058F27562441EB5CAE87A4407F67C4390810BE89BBE867D636468E73677B84C8
5A1228DD7DC8EADA221B1BAD5F43E832F20ADE7ADBFF170AB306F5B711816FD1
39B7882556E30F002977FB88D8B28826A75DE0D20354A2D41F2DA8578376F7DD
F27B0F59D4DDDF5790E11E3957491DC74EEB7625CA49FAD90FA47AD8E0BDE824
FF326A84846A47A21B70FA549BEE307F9C6970009F963B49A504F0115777826F
1D81203F655C242FFF15BA97E3BDDFBF435B10E74CE8543C98966223818839B3
6BF3BC63F882B0AD0FDACA8C56A570277952E1D83F18BEDF084D2AC004E2B09D
70DE1740D7D220E92B54D2FD0DDEAF1E08C41FD321A8D474982DD105B23166A7
AA9E0129DC88065B1E0F9382BEB4B4E1DAAE3EA5489BDCA921AD5A8175F2841F
9400478DFA99C5E5553F383882664D73FBDFA29BF32E52C28DCE80DAF4839434
022FA515679DBC13FE98968D2894DF5DD69C49BD23D00F5D858B69D1F220F968
F0700E13873579B3CFB658972098DC61F1DD580105BC27795DB4AF11A871CCD6
2E1B9AF7F0DAAD4CE315379A7B42CECB983DAC5A2B9426B4E5E0A7F7978504C1
DD7E30063AE3CBDFB24EA2BCCDC478AB82084FD30A4793F4707D9F8F9647B413
F8A5C5AC6D5EA0E35628CE1096A434FB8286F4617CB4D0AD30A4A0B255A5A356
25AA5A947FD3C4FA44B4AA80BAB44C48CC1E2C6D0A711365A37A58C3483D07ED
301A83D2650A2E8CBA9EE62FF5C2736EC82C1402959F64527F9B640619F112D9
8E0F4A8A3078C72ACF3F34AD855AA4008C96E30D9E8C414607C34E06E29AC5B9
2EE5DDB823E8C3EEE6A8DE228313D476A7F39B5DFBFBDEDDF7C45C1C88EE6D01
7FB4F7BB2CBBD5DF7F0CBD98DC287FA6940FBFE1B3B136613A3CF16634CA7B90
53D5FD5776515EFF5D37F8FCC62D8BEC8EE2216503D54D6F2032D3C2BF861E15
FD1B45B71576F15852EEA65DD372E911EF4CC18283CD2FF4196A3F1A9D81137F
F1820EC604D6C61AF318C6C5AB6DA1EDF305CADEF7CC0183B86D31310A09972C
A4BC37D110C77ECCA614D1A281EE1C2040B4A5ECB31A3FC61760F608E44332D1
D2C53C7891B505A3020E9E4915F3618588FCEC80B9ECC5E637D8D0F3C94B1F2A
C53FC46CAE0AFAA7E12266C212A73AAE60199752C042BD55A5DF1CD07FBDB830
C83E7832D8554AD9C9CAEEC7CED1DAEE622090897641CF2E5B34A353D83264D4
4687522DB290D3BA927BA315EA5D25B0D7B69350C6C180AB0C322B05E01F7C7D
F2F48651567F0C1B49AF3950E43C94D78F7B184BF2946B924BC4279AED28F3A0
17A7D8B235698A516D3FB5DF0B18A422B2410C385E7E9439C6D60917EB3299AD
E31471616251FA40C9FA098109BB31A54D9C03B2F12947E4E9252A0851B81C4D
F39E7FC44752504B589C3911571B1D3EC3BD1E1807F99CED1DB20270E483A805
CA2A016E7283550D1B1D35C226FAB63F983CED41A4D02A2F228FA9EF065027B3
CC69D6F2E278C0A2D238D3A37154B0D22281F62C61D9182A69657B027BBDED64
11E261E47620602F865221A534C5A32E2BF5B93A187911A146F2E96538B47DBB
7BFA7EF406FE940F4DAD17E6E4B80C4F031D71F65657C2F5C8233EEAC68DE8A7
E1FC3055C122C1795D0C71A0284F89A9BF04837F61C9E08DB42644A490C97D34
A5D3CEE475B8D578205005A0D68AF94AD27C0E855BB8EDB74775690A4EDD6543
BCC10CF13283D6FA8A7CF3FE6C4F96470A11FF0B0160D3F9816B13B0BAE0D8F9
B84C7631063FE658D13D108D6FE24A89799FABA72E6A6D1C943922CBE676C1B6
11A4106ECB4F1A7F8A84B2783C2E6A109C58D63FC0B74D8C8A1CB62D527441AE
E656D94B1AA8581B4F07B653ED6486AAE1F8ADB30FA8D8914AF24721C74B0908
D84F2EBB91144ED4BD7EF533F2584048DEE37E17CDE5FBC2992A6F924FEBAF07
B626F988599DECDAB43C931CFECF99FC6EBB72F8E542765C26295902DFF60B7C
7B9ADDB4858BC9D808B7F0909690CF8DFBC59A786D48B891937C31A219842A43
234425B4963062DB4C4E9F534C77F4243408805B5A6B8BBF428632CA4AC03A7A
E336DD181CE0CF3E742079E2919EAFABE16A63299771BF276EFA8D85C920F995
5B9D4E8F1ADFCC5C29AA89BF90C186C5DE7679906B2FD4DB279D245D27D08837
D3A8D541FE37415B706EC585C05804108C1D938E543B8B63E275EE85CE9DD843
0A8B9163144B77DA1A552A25D5E77E94F29CF252BE9950F4E627D5F72536B6F3
3278D4A45D10759F16AE42BAE8460865FEE84537F8EC9BF4813570E883B826FD
1ABF3F4E66DB6FEF8366E07BCF290EA67D39C9D81B2A7EA48E0A228FE3D5AA50
1A56CCBF229C9AF2537A8FA70EEF41096ACED34CC7BEECA4EA1F23B39FBC39D8
CCEA93E63F508CBE6722C11467A3D0D5C4C52031DE43C449333E4295104651CE
E13B821D7904653346067E971BE0042C571ABF40C3A1079A675FE4264B784D46
1B8FAA4CDE9851C4EBF69ADF51A7B68CC8706C08D13A44909D4C1D78DB0E0B2D
0E0318304B229DD2FDC968027CDFF65722059C62154304D6F9C3F06DE22914EE
928B7D1BF1FC7E74B4D882998D59BC086AA2D4EAD0AE39F6B75B5A3FB9994506
E21731E1A15F0F2D12F88724BA72898197A80FDAC00243A3038871EBD2F2BAB1
C616278BB78490CB86F552CBE5DD0862F3793D72C68AC16AF8E38FE1A523A5FA
9B0428745B1455671CFA1F6BFBCCF9CA23C833113C2948E7A6AEFFF1A83509FF
C559BB5EE7F92BB43F7F37A371E661C826F63DD0C1B25E34A8119E71EC82FB66
23C7B126FB6554E7560B1B69F2EDBB742F3B20D1648C151C37A8570CBD330A9E
7592A8607D2D727F3AAA0FF2057DF4E2A4C7D3B658C6CED38824A770420D89E7
F6AD385DBCE9C9A9095CF0042052A67AB804A6675BB9373A99390CBDFB715984
A069DE543E4C6ADD7F1EC7A15392EF834EAB4584679A43443953427DB13E6959
0F2F5061C99C6D00FA5327FDB5330AEDE19A53DE3AE092634DC6AEEAF63A5BED
990F8A117AEB1CA0E7F7DBE02CB3D86465F1613B976D1CF6F3A1E69740A2FDC8
062ACC45EDA6B863B60015F276860FB79C31D28F97A799568E66D0A8757B2C41
E939337B467303041D0F4C59390B2E41E5F298F275DCC699D27C459ED4D5ADBD
02539F00095D7E1872862142B46BE06513D3EB1A406E6BAA64BE795122100F09
C37E5D1834218EC1D11B031C7DFC9F5AB071A8F4DC08203821366959E9191D4B
289682D915AF28CE5858F83338DC51B6B0DD052A181D9133FBA50CF18F70EE65
C33726A0450EBA9D0E0C3662AF6C2121AB7911AA9880D6BB6811D6D7515888E7
199A0E632104059A88C9D85B19BB35EDF4AB95E1515BB2339572928BD5FE8CBD
2D4DAF55DCFE29FBC4C3D56336277BA0C9A889A129F9FA7052AD1420B8705163
1A808EC1284C888D78CEA2B4BAB71AD76289F5F4986008FA9BF328E8537E6C91
E11DBDD8447E1C9ACE18DB0EC3D5742C264C8EFA445C5D16C2930FB43669774F
A2CA52144D99EFA8FC427DB4128CD4C036A8C611B087335C780740FAA419D39B
5DD68EA89C95275F9254D947EB3683D0130255269B10C6CFF29EA0BE484C9949
96188FCB747618A8044E2E37DFFD2DB8ABB621B34DC024259340677095B6937A
78EDCF508AC91D4CEFD872AD73F50582DC8807143CEB9F109C84DC5DA30B64E2
E56DE973088A9D32583D6946DB4F3523902FB1781D993B89D5F56D79D5D98CC1
7FEE73FC3A7D1BCCE90179AE450829E228B4DEAD3B2B4C79A400CFF899AB26F9
048B0875EBC871AD23BA96F88CDA8B87FE5809A13889A6AC349ABB25E54ACAA9
C213C5DE2D01BCB9CC0D7BBD384D23AE12E289FF8FDF1F611F5E14D4B20B15A3
42D9B3B37A83A9CA39B5DB6C8316C51B70F211530A56CFE54D63E88169CF5233
D1A7B2388025B3EBD2BEE0716C3A2D589EBC7A42B3DA602AC4E2FD9C9052C922
711E44408DEEA1FE0C9FD50A39AD46D437F61F284A2EFD42EF158EDD71A1486D
4865D6B5E20E60F4F4FC3D646909FF1EE2D7573665E4CD8340A1B232CAC0202C
C35BA9BB3D2267C7E78518F6711633F888EBEF72DC750AC2CB362D528CFC8B2E
A1AE1C05456F50EED8CAA768DEF47FF85C4322F02D7F9D188C6F285C674EF589
251B0B913339FD701FDB281338D96704ED7ED908BC113B4275A24D058955890B
12CCDD5572D63688426B0E1E9A40D6AAECFA5555C1CF9DBEF8C04CE1E5A63F14
969D39B6DAE8A91F6AF4CD1E2DA89A4661DA34E272B6032C442C031F081F5DF5
858F4620885773D8A2B2F5EB6DDA74C1408DF279900450E4A3E80BA9A9B1295E
F24EDC3F6EFD81A741EF74B0202820516C4FB720687BDD915EB2396128C3B262
20E3075DA153D6FD36E1C05B855929DAA4DE694B6F15EF2145C63250B24B031A
4CF0AFDB225E91D99828B83BD90F1702D3906D45872587A3A116B138AD9627CE
E778A949C392202823C670FDBC56F1896FFFFBCF52C4B400F67BA36B5FCE44A5
F18EEB8ADFC088C99DFF8E0A593E81A5ACA2E3693005F723C7D3E0AE2BDD3805
8C6007A00542DEB2539709558A88B21003CE4B2C7817AF207ED576B25A41DEA0
FC55A459BEB00ADB01309B35920F04F84B7B64F95AA99EBCB843A06CED900D99
97BEFD7CCB9F4D85876F10160C8D63E2FDE82B7A8D945F37CC9933ABE0FD1D76
268296B1A5AB06B2E814691128771694224781171DC6266BCC290FCE1AB59416
85530368115BABD4F1DE45952918D1945D51EB713C283DAE8EDD559F437CD886
A4B1DA6120D685C284673A3EE489FC1AE4297A3623B339B7D886B6B4B8F9F4A3
7BF85E320A52FDC6323B51879B98A14C33C567BC069D9B44616514EE1BE36F90
EC5FA33E1B6B0A46945D876EF0085E74935DF2560A03321861A752E59742B9FC
5C501FBC64BFB1602459885B63873DC857ED37F8BE1A9C6E9517B9BF5A6161BD
DEB6DB0381FFB34A8A96AB4AD48BEC40D4C198ABC599C3758AFF638AA75BBDA4
8545D5F95FA426FB25587301A43E176F6CED7851E815AD907F2443E70740DD2D
4FBD5D978B9B37F59D6DCF0ADD0F90825DD23558FCB858513602C8BC82BFA383
7AA6DCEA4009961D06DF233C5381A7F9541259926446B2F03664BC5978A1B6CD
EA6EBC9FE6100A65959513EEE32E69D47B55BAF30A893D77142F943982019C01
715CE29923795EA01C58A798979939B507C5B29A32881877EF7EF0C5CB3DE591
6B9A6C3F3FFA847F396A396F078860B59850BA4CA3115CA2376AEE6B30C05DC1
6F9DB6781ED0F9D45D10E096C33B1B7CD12A9D57C6E49AD833C4B093DC82811F
16B3BD902BE764A1680831EC5A6C1CED84AE0DC0A65678EA5270BF20931E6409
7AA44EACB22CCA11098F8A51096BE83A1ABA56C9EED4195D5CCF24FDAD92E823
C439DAAFBFD652157D728F2754F28304710D3CB33763156D76A259D446647A11
493FAC70DD28063A4CDDA162F72542368E1AC2826C4BFF7109208F66371910C1
068F21779FC39DE03AECF1C9FB2F417930C22791961D801284DCC89B0833B6A8
D63F153ACBFB7B7D547924613BBCCAED37D90BAC5B0264ED31C7B9DA5A2BC620
9B20CA48424D0FF58905BCD6190BF4B5FC6ECCA1BCEF13426920197CAB41C4E6
E82E8EE7BCB23C6BA6F8B58001533B225ED721D6CE3D6E89116EC33CAA6E905A
649F8C6A1AA187A48E20DB864596481976216DB78F0F57543DFAE3CDC0A6FC77
2CAA49442527A5D94DC54BE93C875690CBE52EAA4EDD9F2A511361BC0F0807EE
96AD0D26B62D809E82EC14EDB158EF48A748A6FE0C3A7EE5D4479B35425F35AD
3EC7444F6FA75CEA5011AD571078293448A33C7647611CAEE87974B0A756DAC9
4E1BA78DEE477FA59AD50BF5C52E068A5E044A4A4994D5B24CC5045F768A3C51
D4F65E2A5AFD271A7666C6835E28C60751EE528C0742433165AFBE71562A3016
F59676D56B0B5F7E4984D664BC3ADDAF24B4205752EE21D4B57057A943018466
09C3FA5D2C5BCBFC22A643586BC9E7A965DC34C0A7D272B5B1617BAC2B0CB510
5DD5EC6F7ED1226D19189FF547776698FD48B7A6A038131F869A9E24006A4FCB
9FDD5E4A6DA9C531E1F1D1F0131CF8BF06B78BD2C6109E3D5251ACCAA6661142
7E0CF66D8C1998ED3DDDF69890FB2039F35BFBA2D9E6EA42F2E2E88E8C66D0C7
6B2A404F1C72AD3C0A327A90E16092E727CB2BAA0128995EB7C99569C8CD11C3
77C294DC2CDA70D0CB20DC0EA68FFB6BA42D64A1609E07F378A1AE072D1E66EA
6A88B6216A65BB5D731DF9B83A7A1136A9CE874779495E7C1D5CBB3A4F47906A
09156C93994992C526D0C9BD0129976B790F553FB2400B78F2857FDDA9C4AFF2
AF6A3334700FB3733F881FAF164591DCF506611CBDDA1E075026F2E98E581366
76C64A391601CA4FBA8CA906ECD13A23F4B7E7B39B39088D010DA238CCD5FBD1
DE4A90C188432793EEE6100D31754A7E35006BE1525B491190A9349D56CF1571
8CB1A7FADB595012FF87C7C9D63D48DA49C6FF1DA2DB4BE5C17C3390FC33FB05
F07F8B7B0DC7AAF3419C94516106FEF61B908ED503BB60ECF7281CF8FD4E8408
43F700FC1F60657A28402C1CF25D8AEBC38C19A78F38B035FE557BBA97CF0CA0
ACE400A3C4D3AF40D20A1AF7449B724FD1D1D8892B3EE5C384794D11BDF0A452
1012C97FBAC4C1DFF30FC971E68677CC0C855A240BBC04839F3A307F4B54251D
57452597D9DF4F063D3E3DFBBDB6DD9AE5B2B077C424E4D7BA9A85B1BDB8B338
3BEE4BBEB11532DC12D5CC78C63623A8D14AABB3DB7DF9969C3E2BFFD1F1B846
CAFBA6D4A8C51F934F34D460D27C657E862C02B3116D7DC3AEFF1640292FCBCD
F37751FE1814C461FD7EF12AE8C906E1F900C57159DA8A20949462B0AC1D9C66
87DCEAE2734F6B3385835590552602C3A72087154339D01065180BCD4A12F82F
2AC4AE3DA699F7A34D9B930EC35E0C6637D54DED0A23808C4B103E8543FA380A
1E5629FB946C4182508A4D1089EF095C56592D10A9205350269354098A0C5A0E
A23D2AF09456879996E42A6D00EA86FD8FF0F77A35C83CF8961E1B81BD8AFB75
3D2A580303E55747393F8D082AC5C1C042CB15073462DF1369A5BFEE7F7E834C
FFDEA20074803AD8D60B045B441D43FF2701B9543072A7D87E8E14A7288AE876
E0CF87C210D396F6D7C5EB0A4DCE0C75382C09F38A95875F581D4D241DECFDB0
BE12D245671266A359F1191BB97D52D08B2A6B1AB3D1E9B866B575517418B006
3F6FA82BBBB0DA21E901458C43676F020936FE8645E6B9E3A703DD000561BF7C
56DFF4FD782EA507CFBDE2D23FEB4B8E6FA6CECCEAB2ECB41E9F98F5CBEE9A66
823F2631DBB73315DDD87AFEDA512E382FC1B825206908A1B3556FF5987D9050
B622032DBF55821AC7F89C43E6A9DAF170C8D847F6DA5D91463FDDB9F643ABDF
93241DEE6C8E4ADF52FAF22EEC851ACF97F0207F9C010C24F1E6051D0C851EA2
B75C1A1DF94D9A21CE2C21CEB349A70317251E216C5D1CF8FCF469729BB282AA
9E98205E7357B554376D9CB63ECCC826BF128C00CA7BAAAA548D357E8A5B1BC8
7F110896ABD8774DB74681CE5F9EF4537CC861AC8B0E9FD125EE33AB31B5CCD6
0EC27BAF0D598567E3CF39D30B0CD7C72C12CA8E33A111EEF9E1F9D9013220C9
185EDBE1C10E87C13BA441601AE92866A3EF486EB622D82E9E690468BCDC6DD5
1712B2B7F653323EA49906A6FE3482072E0718249D7DC227C61AC5242DFC5045
692EF6F149AE6639F1C29F954EF37BB2536C7C944CBB54F46EEBFC9D29E21CBE
9739BDB21E8D7AFDA56465AE34389D0EC7C0739CEB5BE6C90EB68ED8CC9057D5
69A08A923996638A80E10B0AD175C28BC1BC8C64E049A1CA4896EEBD270ED54A
6C6E31ED655A03BA22E2C886679EE8EB57FAE067B8F3A71C39D8C85748C702AE
A785299DFB5A1253BB4C812673C5899B614F27AAB8FB8DE5AC0BD953FEB70408
7BADF838F24F1A8BB0EF49A763B6F0776E93
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 34 /epsilon put
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 62 /greater put
dup 65 /A put
dup 67 /C put
dup 72 /H put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9042537872831BF5F1F340A
8D3E6DEA1D9675E87B3425FAA0172DBEFD7C28E30906B9FBA65517C9B58FB6BD
E0D474E69BB90B0D130A32C4130974A1C961CF064A5BE8EC1056858553FFCF7C
0D78627BDE04E5D0B9F6F72F92B61A915DFF7AFE7DC3807891D039AECEAC3F50
0A09579E661D3DC3022206061E0250B09A05CF198DF82D4F28FCD2A85F717630
90740F78F242019C349B65C2A455597DEE127E914C372C6EA0E250402117B903
1D7D6FC7153D77458569B2E0E6FB978B06AAD616BBEB70B58E0BCAE1013D4405
873D2AA3C41309993563E652BCF2B244451D8FA1305BD9BC2C57BCEA7F065670
A5059B0B17303312E8B787E02152FA92480CDED118924A9D490B2BCBF9A560A0
D4B55DC4968ACE1019CC2840E1AA0596F8E8D4BF7119B047E55B0FA01C69B9A9
F79DA6C9C9B49EAD94943613151247423679B7A29AD2C71BD077306FB9EE0AAF
9AE4B268C8BEDF3CAE8CE885ED53184F9BF2F55AA05933071F536B7180F6301C
A04438DB5BE00037A8145A44776FFB8E80CDB5C7C77556596EC0CE3F2CAAF2D2
7C8C21E60A4BF03607E9A06D683510CE217EF1D7EBC1A2E42063E1245C0F7247
6E2A8CF16986A89FBBB5BFB227D587D259A23A62980DA01AEBAC8E6352AFB2CF
B47470EFC45256718F730D876382B6788DED47BB8C51D87C8A10078E00E90312
F8482B5D72D380F233EAB3F1E3008C8E15F7A5E2281244F0521889FF7D20DBEC
77A0D3DB70EC23685D271CD5A32CE0B04F16581B0E22D94F00D114F26759FCFE
1CBAD40A17C45DF4593BA11B7875AD3BE19E1A35A623D4E7351F90B7DD61D3B3
2ED94982141687C2773D2894DB9FE5CBE24568380AE4CB8A35BF7878CED34C16
414CB076DE0F9B6C4E61EABFBF14706491385120F2637A048FBB9B8B867BEFF3
F9AD784BAABF44E15544C6F2B9BA1D165D690DCFB4BC9D4656C3EB228901F359
5EBD60437EABB7A696AC1DE665E3E627E9A5005DF162A2648DA818BCD5621011
484DFEE43B19140D812AE082A09857E0D7CFDE4A459B8DE1EBBF4404F5657E5D
860798913C7B7F543E135754D763D4E64F9958AEC04B0E44DEB2B1F2F79653E0
163972335206D0C9F8661DBAF87FB3018A7A8E37A821C28E4BCB55B10D562C12
305FBBF94DE28AD05BB54EB1050961408E27C19DE0B9273C271782B0BBCCB3AC
9DF7970B956E3CE71E362341D269A503E325136B08F45CEFE8914EA7D720AC51
152BA60FAB47185B5C1994F0E0BA5A746E2A6E58A7E07F799F9BB5734B28E441
8631D2752C9A5F0C21F1BB1B146BDEC316800826B1CC59F2F08A44DED373AE07
2434E5A341FBD0DFF11177524C8657BC5ABA5A947D8F6E236AD71A6B62B3BAFB
09ED0B50CB0DE43CC65042D968FBF45EFEECCBDEFD07A3C5CEE769BF38160CD2
04B6EB7872B01F30372C5D93846D3A2E7E499D9D41A1D8A6130BCCF0D9C90CFC
0C711562B9FEE85938D6D014EA8D4BF25CF30B80476A361E64C6A5E7377A4DA4
C3E104EFA25F0636C1EBFCCE4CCB0400711D5313D428CE05249511B5D23D52F3
9CE09152F9A4440CA982E2C08526226CA01AB94FD95BD7E5A700BA59207B25E2
272118510108AA1396CCE4A2A9CE5E1B0F134759380B59479B914772AED1EF90
42EAA526438D0AFE01554E2CEAABB68D571A25DF07A992D233A4F17C57C622C2
A98B4084328CCE0D937B83CBF80364386BFB41D587A9E4D2B65D84C18A309CDB
B2BFDE230D93A6F423E1D10800DC6E7454D4730FFC2B4092B3440C7597372D56
1A62B8BA0E91B516E904B71922BC94C27D252CB2B9366662DAF855EF5F68B2B6
5AAFC8FD887642F901182F06D2FA6EE3E137DB07EC69B82720189E4EB272916D
29957480DA903622CDAD0C0BE4281BEFD9046781B362B7D1CD58D5771A7855CB
40A3B20F9404442CCB7F1E63AE02B88C609DF7B47D7C73E135110AB591E79CE7
E7B830A9D6B47331C4EE06DF3A5B992574E660EB4D5F1E880CD49FEF25CC01FF
410B46C8DC1D2DE0A370B768F1AC22714CD44A04CE29701334E3D326F94E7203
7310B0E35328BF4E4A42CB421090A8CD743703FAAC3D0227AF378641DC0B78E1
D762287B0BA7C9DCD5869189266CC3284C7F39DDC6346E526D3120E20D6A417A
D48078582840ABF6758C3DBB9177A63EE10D8B4977A7471E061560B345CEF1E0
54A8C038B2345804B6AB9122AA2173B6BF607CC7CE4E483FBEC99B6961FE0DC2
10D67AA6A02EB7B10DB8D9DF8F75DBC05FC8F4610E2717AFC4488936CA121671
32DA02CDF681752FD48C96E45EB7A1DA3DB14643490DC0C63573F536E14E6661
8624DB3BCF6AEA1F64E3F55B3686C72CA86E1E1E96AF15FD1212A69FCEE0F57E
84BF63F55C8DB1506ECE96AD35ACAFEBCF0CA51F31F39F21D8BC8CE89B222B5C
3BC70B18FD2828449BC1C9EEB288876D7F68961EDC64FB96D3508C406F894108
DEB9FBD1BD05565B037E9204617ED5C3263A42988205CF03DE5995B72855BB6C
63800C7EBA1A17B13FDC0F6AE46FE6F6E9BE0322AD86FD6388B3CB135002E8CB
4974FD605AEB517C21918D904DF26C9616040D20C3A2DA62234512F581D5B47D
A9B8A750D59812C441F20870AA63B872FFDC0A81D533EAAA43C7C772B4A23C09
0FF86EE15B9EB8C81812F6E1FD2DD02F525F55BEF7098F6EDA8A07D52CC45B93
7F065AFAABD9BD399E8B23A0BB310CA79A178654960A6A2E8362143581D46A1E
7D21DC7B57D8653CFAEC37FBC86987142A491034AD5F762BBAF4DD733BF4652D
1F888EEF67D01793B7156FA241F7746DF8F896FAB0D59B8A5D63B6B039A60A5E
8888DF5380C42C2BD15EC11A4CF9186C30F97962BD3B02EF0AFACF3FCB4175EF
C360C3AB4D76DBF4341555CD9CF416060DD684C9E38DC0D87EED7D74CC7F67F7
FF58D8ACBAB87F37C26B9C6A1A8084B1FA4EA387850812D3EA71698C7F574FB0
260712798C379C535594FBEFC0607D735D5814C09917CB77C61182E5FD38E357
EB423506D79AC31028F34CA08F664842140FE76E341A6B3833A2FECE8D4AA5EB
50671A4935050F94D8889DBAA3E20BD5405A0E48D7AE7748E627405F78821450
E5F3E74364A7217C1C887F8958DE704C96B8F477FD3CC44F968D2A523DCEBC0C
758B0F62607BD8B9D66CFDE36A6BDE5BBBF7ED8FD0ED227471A5BD3FDBBD161B
30A24CD259F560D80E02B66DF401F50F96EEFE1B84143D657BA74E70D02DA246
C40AE07D3A54F80CAC5F03AAB70AB80C7F8FEDBB4A690708F1E32BCDDE735519
448F3889FB1605D88D6664B042D5BA37B99E9353B52CFBE800E1AD8C3DC21DF5
E735CA9D47D5DEBD2EC040596A9E86EDA28D35D73282D44E812DC01D38D3CDD5
85B992EEF515E32DA055E3332C80D82A088F3AA90D02D8D4ACC88CF2F8FD41DB
13698CA7301F0C90264F54B9E5FCC8DFB4DA7C6E4E445D9DDDC6676A0CC6B91E
EE7FAD397F22597BFF01A243C603121BBE46577A23621013EE62A2EC436CA34F
D5051E7839FAB456C6856F50A0601DF1B9F4A3A12FA73BC9DB420C9B053D92A4
2252C0BB59DF0798DF38E1B836955B7713E21D3EFD5E70FDCAC3FAED848CE96E
89E637B0D762FEBED04DED7D37DAF8D94C3E7234E61D7C936C296ABFDA7BE74F
B2A6987967E7A8CF3F3F78988E1844F7BE1066BD43A232E0F043E9D806B05BBA
3FC8AC8F04669618037BE19909A3E8EC17392F9CDF38E112E644D66FC85442D3
BF0839C46A02C7B69DD8B64D934475962ED2B181D2B95624651A425A6BF75604
052A2D075A6B82BE897C2491DA41980EDF1AB242064A2E85B3545CF8E55F6F5B
1FC9479B186323130D732F154081EA29DCA58BEDA3EE47A94A0F4D197056A912
64A175204D086B2CD5CA219D01591ED9CE322C90E32050920F7C9F4C8928FEA3
E08D1903EA3028E26A2B2792E239D39F7F3E5B7C075B18E6318A8689997CC664
B95639E96B1E5BDE3691576A36FFD3110CBF8F7747E385E6087884905A5A14A4
B9F920D395A1F34C4024C9F44B99348E83E27A6361A27B173FB14019F099CBF4
F9C184B3466F596A62D61314C1B22FF8A64C17D5496CAE6A81E3389C8B6DB980
33A6740C7A989D1EBD33CF269082A7B1CC5FA2A4DA9A66BE640235E4EF8B3FF7
928DD945A6B92669CE926AE33AB7AE309641CD2FAF6F6648E9DFAFAA28300F40
85A003D77F2FFE5F1C22EBA74E8A110376FCDA9C31416EB77B7C1BD4DC66586E
E34A8E13E5CA2B80D1F8FB751560DFB589EE0C8DD7BAE6D6A900BA440468DB17
F69D717C0F2FBDEBBD795759D6BA0ED9A9721A57D0891BDE1445EC79A1E6A70E
AFF87AAC7772A6FA60E00B8B958CCC7C93CE99036DBE32C3FB3480098EBF25B1
D43C7F4D1AED417CE4A9792D556A673386B111569D14EF5DB364DDA04078BE7C
ADA60609F30397AF6F28081A845CFFA6B3EAFC6EF48165B776B36F132FDC7C1F
6006A7C00541D0514DAD142354F246C6279B610C683CBFDFB84D98B40D6FA6F1
F134D26C1947937475AB29F55B419D1361439213248CD29BF8917C64053B9DA1
29BB0A735B29C29AB8C437AF3CB80E3ABF43C8E3DF12E0EA44EA11C49B9AE5AB
EE40BDBA70DD71EB285380ADC3E4FF2073AB0A3C3F0B351674226A1B9C68879F
9E5EB0302DB40EB2B6C9851AE461CE8475827A773AD2EA6582B04DC81750CACB
6E1B20FA7CCC6ACB90461DBD3F154C22CB510948686462DC1FFD64E301735188
94A9157D6E5A06AD7C6159E0931B37CDC8B71C887444E1549E563B104A8072B2
1B1A8626536BC040CC41B5BE264E9942C5FBCFD0F64100957513C1E83396F40D
6FC2CFF70EE6ACEF4F77F6866478A5F0792CF14D8D525D5CDBC61353330FA4B6
99FB338C2BB056A984D6B767876C60CED19744836AD35E1547AF6C65EB57E9D8
6E8F34C73496221F595EFAE7BFE2FBE66211BFDB481E41E58A1D5C579876866B
4626049C8541723B83C8C56F07A8FF1AACF232B33B294CB0554E98AE563EDFB7
EC19B02EFF463ADED32545249C5038BA7042F7BD58374872994B0DA44D394494
7CE796D309EA4DBE307C53BEFA92FC47020121DD40B9B29A141C8BCC1A7BFCE0
F60A5EF871A2A339F51F683D5FABD5D2C8BA51EC4C82771E73B73D064908C06A
DFFBC4317EED9A4DD18673904A1D07EA55BC5330187973653310168E7A7795FB
484C7A0EBC9AC5068DAAD7C230063E11F469F45CE48AFEC228E00DB7FEE96EB8
5CFB060C7A03EBB029C844C5FA013325070E3256B8427F7498DE02D8A456984E
ADC31A3D70EC67B9852CA01E3B1902B2D421F59797AC632FBBD1F20650DBD032
A14E493325D6059EA5BEDD414017CE149ACC6B9C0B30235174632AC1AFC4BDB0
FCDB58456DE1D57398F13A0D760F710CFB5D4E8CAF4043D3AEACCB387C63A931
CD57BC23EB8A2BBCD29AAF1E4F91BC2C6EB5D921471EC8CB0B54B9C36FEF6E76
1817CD3C12D9BE3EAFA0DD7333315A1F8F39554F1E87741C93BC40ED081BF0BD
4EEE27755F435B2A99FDA84F835BE3B470F33684000AFEF895E46970C0925F95
D67044D8B9B8A9D03260F4B17843DF0A2E3F038A067E9DFBE7206FDFCF47989E
A978250CAA981C0F6C1C76E7ABFB8326A35263064D7B6EC88394F09F26B01E6D
9B62E605080762F8C33457D9FC6AC3F89D1F92E74F8127688685EF7EC66365BF
C7406A0A859E04B5172DEB6A368381EB25B12C5D23CFB51947AD45E4BA0EA362
E43E0AA42AFCFF5BAF63609D87C39034D41A18B912D1E8F6E54E13ED580FE80B
875B39F20E305E881569A245CC45E978C1B150E8D854F845F485562D12400688
28958A66E31CAD981ABCE12F7F57FECA72217988824045FACB0DD1FB3A8EFEA9
A41172D1D891E0FE8F9D9C2CE728A423FC12C610D658251437921E535298D6BE
EB439F9878EBD8495A74656245DED7CFF4EB2E4C901D7F3F6847D4E5BFCB4EAF
B6B7D2A2F47FA41B508DCE197AFC2A7582EC4B42E0BD8834BDCDB2D8AF90565D
BF5BE00D5404520B64E38BA8D126A2C6CE5DE0838FB8478B1BF4EAEBF916E461
FC850A709522B034B9DF4A8EE1AAA913B044D658B5330B681C8B528D9A83BE55
59C84D1BDD5CEA8D64515AB1A2DCC2EA1F4D5A3FE8BE15BD7368FF4A2BF55840
BD3A3B3B5268C6F9F04DFFEFF98FECCE6D5AD9B27E3DBD1E6C5E8BA996180BAA
C7873B419FD679DEEBF4B8760AE792F21FC5ADC01003693AFBC18C161CAE3CEE
1243DEBF7DB10A5EB1312EDD836CE8E4BF239AFB8D52EE1EE200EF1A0F7B8C0A
42A9DE4F92510C1A4391E9C8C051BF5353A2F23C90969F5A7B422E5F8C6A3470
A9CFAA04EDBF6345173BA9AE917A744F86E41D3F9377F906AADB2B7F7A008442
3459AD881344B8E98BA1BD9FD68F7FC58E0BD12975FBC71D755F2C40208CF95B
10AEDE3002712028D0680C63B81D1E1D33CD5E32E662BDDC4189E5CE0AAA8E0B
C6E36B0EA2C4DA5B9DEBE0312D22CE9AFF7B5E2AB72738073ACD7022595B68D3
0B2BA1B3F1099144B760FDC07C565C94FBF1A07F3C2F59CA85363030F28CB804
49704BFB298404205E62755C1A108F0FCD625834FCDD94DD2563537F17BC698A
79918E746D7F594C97572B3101EA692DCA79AA1DD748476A6B7E93F4E8D0284B
18185B8F9A95A5EB30165EEBC6436AB5015D7F6AFBBDE8B61AAB62E568089340
9A9FF398A2F3EE13A759AC6FA49A8E7178EE1F56531B3B3D224FB58CF03BDB67
231DA5AFEAF38A1F8D1B51C09DA1E19F52F4C83B396C927799D463EE5233641B
223883FA0B988A655EDC02133037FA88D40BA96E99EBC8BD295BA5CE396B7743
E56F7437BDF63706AA3C411CBAF0EB581B19698DA43470761E0C4E0F603F451D
87D952E1AB36C0E12119172FA8EF7281043D307719A2EF72EE68A6CF0A26C610
C8F788289FF9E9419CB804550E4ECB580BAFF340CC8ADC7E1FBA1DD3F56CB405
AD40A79BC144FDD8FB715F6277CC11BD90190793EF8C340A09B097671B553C52
7F9514E77EDA5C5EA238473FD35CEA1A8603A01D3FF5C7061AD0F8C3285E5450
BA4363B8244A364FF6EB9CA451CE06005ED5B91A6DF5B79C5CC2E1BD856DAEF7
10C921B42A7A6AF0B43F345561D2A06B3FCA95B8F1896376CE99E3CA994DF1A9
22993765D3F2655AF1E2D6F85058DD19F6C984C1A72887F9261D895D6D79AAB3
ED6AE6E01F7C70139E61C2F36FD3ED5A5384AECC196C79292CD5E10F5C7ADAFF
134EB74FF1955546348D47F4E0D6AB0FF71851D25BB09B2342C39B092724B93C
5176615BA57CBC26C5CE37FA725920DD63D1F44DD47E9C66E1E2A86325076848
BE2C6FAB9BFBE6FF35923CC9654F91082A05DCE2294E220BDDE867BDFBE2785F
1E46711ACBF43D01B792E1F22F3EBDC8B1A10727AA655BF252BB5005EE6F477D
8C905421CB09C39ABCD146CE8E81FC584E9B396BC2FAA100C773953DE08B36DC
048DDAF773641465FB696F600F70F2C51D8D47D32AE5326102A0D1D5167BC871
69AF4B6DB0674CE2F23B57BAC7B5FB9A6251D5CA4A1EAC66A8177163204501CE
9C97354C935676203AEB7C1FCA9262B352E7B78D640DB8F059E311D33A3DFFA8
1A5715A1488C4102AC228A522CF66C15CA38571457BCF94AE6686EEB06A17D4E
08472933CF80E7FED3DD3125230924AB5ECE515FCF4B4F155B2D16C1DAA5697A
FCD6022082A157962D57F84AB66E45C91619D58DAFB04CBD9BA084A2C815255A
D7563E86508FE8569672A3E1DCCB821E9AD0CE8CF05D84BCC65F6182C696BEEB
C850C8D64C1E077A9BAF9640F5A3B695DFE3199DD2A5D6A23DF522432131062C
E9E5CB100C370057417BD6D06A702808AABC7B8BFD852A99058F9069BA08051E
758A187F3C63CC486CB172B507F872BA378F34F54EFC57D4C26050B95316E8AA
ED9705D61A9ED460D09AE05AEB3C582934139EA0AE6D4BC7053249B349F03BE0
C360CE69424035A79D55F9BD656FBF0038617557A515079CC4F3EC10E64C4BD0
478222354B9493B603DD72E219E9EBD02D039788AAADFB36C021B75D71F330BA
EE64FA9912693D15059784FE492C66C3E1BB524FD6E2E19627ACE27A400A66D3
808AE57C24485213B7F882B75644A036C1580F8CDDC2A7B36B0D330A9758A396
5F0D2FD591D53B7ABE24B2FBA975729DD1C9B90E9205716D23B5C396705922D0
2C0E0121C6E33F9DE1A75BF57EED826D3D86DE1991E69B302B77A1F98192F9A7
178C56B0A25FAA7A0C80252E4F33B5E890EE43773DDD90C0917C4892B3F96EBB
8922451B7371BE7B0152FF9EBA0E5BF319C6397ABF1971604D18C5923B5F2A84
669053AB4FC91847CC8270B9AAC17D9C45A630FDED5A07F1C0BDA4EB00421EB5
F56F7F058B53489F2402A8BC8ABF8CF5ED863F14197C482C49BD5EE2610FE450
F479355E3FA99C9D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/UniqueID 5000768 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 74 /J put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 123 /endash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DCD1C1BC03B83FF94C60B1DC71CE8A86B46DBE661C9F8F4677F8A2C7CF1
E41A91EBDA2304735147BE66CDFF2673F09D408297302124C127F0B35690CAE9
CE1679120CC4D582FB69550AD34A047DDFCD9D411724554CCED753DB52D6AA7B
22B0C55EB698ADDBB0F8ED15C971AEF113C74B9E25DA29199237B98DA4023665
C2A63A837E4CAB38F8DF37DBAB5DC80C0C3FA72C8A70DC76B5B36B2EEADDCE74
23CF794B66E4DD3B35BF99893789063BF7B01D5F186B2FDE518B2CF2EDE51F81
38244BC64548AC3433A80B86D6A0CA26D77F403C06D65B7394BF1FC7D06D37A5
E70ACD844E3367DE4DB71312CBB85ADD21D5A1F99BB8427F252D90ABB66D7154
EA5AF4A165DF6415A0880AE784071E6B3E2101F0B663DE14DB1ABF8B7CE0E6D9
D24F9CDD9F80028D37C9CB4067A28D41E879AEFECDA71F649EB3C250BFF809D8
1E427E3BF24E85C75F080D93E0314883988B3A4A2B72A1B4A3D2189AB6ECFFBB
C58151AF05AE335200711ED945E18B4BBCE24A8A162BD9BB26137253BA8B5819
41E759A7CA7CBA129BAAD438E87189F2F6AE7C86F4EA099DEB23705A500332A7
4F141D8778EAF3910486B2EA25AAD16B60DD804D0E5BAB0FEBB77BC95EDED08D
B8941E040D99E8F44E70FF842306ACCF65C0AC9673859DB9C3A724238CB8CE62
255BAF0145692EE3B52643A0DE3E667AD03EEF6C753F57E34AECAB0CFEC7B07A
150D7151E57BB3A026D50C7A88DF5F480147D87DFEFE463F76122EED3A0353A7
E13321F7E480062A971611704D93A866C29AE2DEE5EA872F5F35A2686E37695C
ECBC6F6F2CE5F46491EE865739B0D8FEA41E1070870F50E2EEC5F10542A071E1
A861CC30A769DAA4DDF8CC0CCBACF1FAF00FAF91D446CE54AC20A4B455D06578
4E94A41F05BFCB0D4DC15FC33FCA6D7A069374A8D5255E66B9CE2DCCE30A32F4
E4E3E1A4E806B2B0538F96B28F8CEA61D08FE29E46A3635D2A68D6EBB3E541EA
15873470C0FEC5CB9136F76438B74ACAD2ED902F111E83C0424B11FEBF65E8ED
909C07B0E83CB291334035208F29C581597EA1C9600F12E33FD4BDA9E09F9749
F3660D35CB62A5E2AB06A3FD052D293426556F00AD40A4C1E46304F281FA5855
893C628BE4F261C7D1708929CA2203EEDB9E8FCE2E4AF1F3B740754ABA69DF6D
1B4F7AEBAFD4DDE4D326944AB869705DA54AAFF42BCCCF965C397AF1B7F23C9A
ED59C7D347615ADB8DCE45900303425AD1E1AA38276E3257F9582999E5E2ED39
1D686141668A79C95244289B70675E62FC6D09276A464A7D9E06AC6E5207D57D
856D91AFCBDB644B9F978D9375EE8C966804D4CA68AE63B11D15A49BE5667259
911C0C0EB63B8E462F424DADCC1E36EEF1B23598AFDAF4450F5762B8ACF62A1C
EBA3DB1E042443B665E915991D932209B3F4CFCFE4F9DF3A174028CBB2A2717C
97FF0F700841CB19F6FF20C2C04DFC9F36C8253C4346DBC11A9D851DA50D2955
E11E876917EF04AC9726CFD14D097214087D5C716E15A3F345F395F32CED2CB1
5B87902E04E1970D69E74E2EB935991C9D7A835EB88BC04EB2B195D8FA69376E
CB29BB35D08017FDB67ED9FD13987E816DA2CDB6178AC461616F166953D10731
CBE994283012CD86E184BC32D3AEC992B620A98338F962CD1669D6F2F88A7957
698B8EFD8067C41067B3E5303900CE7A9FEE97288DCC2A4384A3894933B77692
A278BCC9B20112D940849901838D0A12D4F432E2704A0CF9E65BD71BA4C5C2C4
4CC67C581AE3BCFF07C029D465A070387777AFDF3784DC26B85B5D1239081119
A4A01CBA518BF10D9041431522EE761A069362E26993CE202A5DBF62978906B9
28E65BA324640B70E93262928B72EB6C69EDECED45ECF52887CDB4FD04B6987A
82BBBD52145B08C936B0E3C63B90D1C9681EDCF7FC3990ED5285702564C10FE9
930D01EC08F409CDDAC41E848CC7B7B61E09CD4951A971DCF562769F4EFEC547
4F6DA659B9C6E1F759CD6172C77967AA05FA6E14D745C5C52C376833CC9C07D1
9BB08A569FB8D2AA1DDF009C0F464678859A03070758C38629FC34410FAEDF6F
9A9175D189B06D743A933409733459587B6DCE686675A90144791257F5656F4A
E740D9D7E24185FC4C1AFBD4902C2219481F2E2EC93794D1D5D96BE2EFC26A70
18592B4F066CB046BAE5A2CAC0DAFBC40851F3A0D62E6678C5048808436AE91B
B2001558C140D0E9693177F2E0BE079468CD28D53EB57B30F6D489811D80C56C
A9F4490F24184C49613233F6CF2D71995243DFADA266CBB51AFE9B4475D3E87F
6F5E3C48CBEC8E4C0974C5EF103E8B871C72619E1925054A3840B8D93CBC1CFE
349AED0167FEB6593EECBC997193BEC71F7DE1906FC3B1D50D20A736969DB8F4
9107DDC70A5FA15C4EDB134A8856895061FC19C0C1304E81657CE8AF45BCAE8E
072147B9C92E95304933BD4F172117CD026C419F6C9C14A8E15D4A98175BB646
E41379D780595F5E82AA5C04912F8109028E933BE0BC10053DFE4F9BFBB9543E
705A9B3E6FC80CBAA7DA29704F5A2E99A7CBCE66843F5EA2D9E58CCEBEE7608A
9C91B1C2C85F46B633106AA86E58E207085E6DA8115834CF091D842731D40F4B
BBA3557362AD0A39F29E7E10E5CB7D400DFAF270C91679C516D2062B949A8D91
BD5C8C1E40E64E0A93C2BE6091FF0FC177CAAD335603EF9166E9E3870F1C5717
83F7D015817111E903F1534FB378E9D3EE0F2E650741BC21A839440ACFCBB121
D7F5757F3FBE47D479F42E354CAB83F27ADDBA80A107AD2CAC7FE10D7F300EF1
212A51292B52BAE2B5A5D73EE547A9526A8642EEF60FA44F1974ABA413D22E31
E7A6A4D87FC5875FCA20D9AA00D76E94E60339CA9C8D6D63DF2B6F28B60FA242
96CEC91F7C327F69E941C9AD6125A562C410B229BC7B7515A442313F70B0B1B6
CDCCAC2F675C2F640CA86F2917406F141714F88E8FD48F0B675FD983310DD441
8BCFA7B7036DFB5873A509D560C0EEB0739F75F0F1D250D95D8F0FDCC7AF4AD9
3658D416C86E3048847925F29C3011F4AC44FA5358837F7CC6ED863F0FCCE5F7
9060E8705EC0052DB8D75FD0F74421BB31F5EE503812EA6CDF6C5D903EE1E935
F6816A95BB8C640C3CA0C8713D38121FE0F96152FCD8C3063962EF07410D4938
0F95A0FDEC568D6867E328F1F84E547408A7F54568E2E17613658D41A8D29FB5
664DB16C35E06815FFE87A9B385E8A28F9064A427DABAF9CCB7E05896DE70618
25619D64219C8F86F2FF46E2114093E690C242ECD53B63EA2B117DED74DE8917
7FB5253C8AC2A398C9EEA1148412EF3D1E6486C68C66D2E466B4E1835F80F6E4
8A153341BC6065326469232998F5A00B90C6ED8D2C3EA590286725463626648D
D1F19164C5955C8503A6BCEE71DC4F50B5B3B4962E06D985A823D685E103F25E
1F42FFDA16D4A3B4645ECC5F4A019AC6F72C650105E809270228AD1290CA7C2B
6031FC5D87EB559DE63C0A88706E72CF6EEF46DCEBA38320E904DC92956569A7
95C7C96A0019CD4817D849D5839D62BC5349308A4886A70E8568A94ED4F7090C
17AA2EB223CBFFEFB793A917B3B604271FB764FAB871F7AA5A5FC5F1E43B182B
D85FD6FF960420E3B5F8A1C120887EE49EB7E55F7F900C2AC7BDEF8F041A6C2A
6D5F1D512FF2954A812489CD6D63814081D8AAE4F89C7720B5870A71B09957F9
CF8B20AAC012605EE33312C1A0A5CF1EC2569268606D6A522632D872DCE71264
6297F9DBB6F9D1C8D598B54BF11E15744AD6836652D627B5D77A5796D0BF5E67
84149C85FDA1FC19AAA54C49F6F0BC625B9242E1F16F6C67D01B97C555E5A3D8
1761FC6EB986FCEEACF1F753C4F54E9E61FA2EC0E9F73CFB199FDF2A8505154B
9AC5C6CFBF636300348C51F0F4F20671CCDB52F6B7BFC833BFE5E8D4DB2497EB
F96AFA66915446A297B522482F5D7D8805978FFA65C36794C3B24432F7D29BB5
42CA6A3590F6E19908E8D6304F63F107A7AD123C8D493F2AD5ED80FFB72C4B52
2924278CF8D65006BF8AE8A7D41F32ADD024A386C958F1ED52EC0180C50AAF2C
FADADC311B511DF00194816168E50E70CFB4CCE839503413CCF51DF006899257
916E2503BAE286DD6D16959A83A36B82901585E380378BD2C05F981CCC43315B
2DFDF2AA0C2948E1B124E950D4F864F04A5B3710567E52159557A3360798C46E
D000630E1A4799ED0A72412526349C5B4DD4313818B267D2ED990CF3AA1E972D
7488974BABFD3A3D5A6B8AF497091FD7E63384DDD5ED29452C09B268D2CC0477
DA6A603248F802A189BF11C82E8399577652EAF0CD23CB244DF01E6011674BC2
0C931A7185FE032739DB8519052CA3C3EEE2745C1F081DCED8CD133EB0ACE474
FF2600CE59A654CE76AC14D022F9DEBDB4CD8BAE0C5A3B122762C58549CEC5F4
51ECF03E9BD062ACCAD93B93A6F6C10F376836116386F3B1B8BD45EBB8A185BC
709F24B4F47180DDBEC6008BDF7594314726D7852D50EC6DF27207D409288E3C
E84B2E20434ADF4F3E9DBF5BA5E64352221826C28088E1422E4B96855980FCA9
C768ABCE446BDC9DE2EA55AD59B06C01A70B6FFA65153A452342B652B365B0F6
383791D9448F3AE2CD1612481E41A0BDB45D751F66F14C5F73767C1F6062E639
E05CE09137C2A56E13EED9E3C5A04D392FC9B3B1CAF54BC528366774330C1702
1A917935F6D8489259A434337659FECF2DFCD1586B570C7A71D769D838674525
0C343D732CB33548784F855795935E7B4C7C728FEC9A23F963662B7667455AB8
B98E5ABAE08D352B8DB1D34E9258CB11DB039445B954525F076C883E0BB306BF
F5A1BA83AEC35076A2EFEE97301A5EC28A9961A7BC38ED4415B938FF9C114D75
E7B83416CFEF51817E4523E27134FE0A7C8DBF8661C203F09FE24912DE888DB3
B286E432CD65318A2831C2179FB4227EF689530693E4425AE8D53755C16A2E52
03FBBE594897F8A03FE3D589D72896AD9F977DAB765A54EC323AC47BE0CDA217
61FB3438B7CF342873BAF7BCB9B5E23B98087B4F696CF9218CFC73C1BF352860
D91148AEDE9FC1BC0689BA8EFB5FE977A861F64C9FB4E235C7B78BCD18318CF4
B99E46C49B06C0E4619D441848E94BD4AE1106F0E2479B16FB05D8E54EC1152C
C388651E89641CE06B3917A883F9C4328512A2E2EBF19B257EAC75F3C6493822
B78D92777736AFD3E7206D12614753B28060B91F92A30FF0A7695F69FB47E845
6E8A541A1212ADFFADFFA491DDB193F84A8712B8A6AB4BE52F18EB1963BCEF4E
1815F91B629779E09F708F0CAE2CE9D422629E1744B33367563723256B9D77D8
F435B540FA2CB3A107C81873B263BAF19F6F6A494F27372CE06512919A9BB9F0
4DD72D53E597C18A32679F5CACE9B48ED1036B8DD03EB0A92F1BFA8AB37FD420
661E296D384DBC414028BD1739F4D4E89BAEAB1E1E423E43390A86B4E162E26E
4540120AC149FA799CA208786DE8C4E768849F98357DFEA380FD71EA604E2B5C
9BB8AF89793787F23FA00BE5466C9601B04C258B14362A64C7C6D0F10800B8E7
ECF88998F349A6850E304D98D75C707328465953493E369AB51C86BCDFA0F9AD
E83DF2AC26366314749F84E72D084508A445FAC9C26A3D21F3D29A1F8F4618FA
8F6828FA101FBDDB2155D311F15609EEB90017F9545A4523B8D96C19196F9C82
7F4A2F7464C3A736F412F554D6161522C3969F510810A9F470D34CF56998B714
B80B3F4F7747D20B4A14E0AF1B77A1A1696285BCFBB63EAE33B6E76C4FCD9AC0
C568357E402A85EFC7AFD55DA7CA3EEE9FDABD4890FD2CC013E8533496AD7504
B29FB4BA55BE89340FA9A8C541A3859CBC0064B65CD342C24A181CCBA6E388F3
F604C6AC8A96E78E3E55322113DBB8C5C26D183701A382B2584A803FE5DE4068
447E74ABCDE4DACA822272CC4CC7979B063AE2F37C4E4E0AF7DCBC58331163F7
0746A927FE9C61A09CCEC63EDCC49271BF5400A1B90902EFE6C915B5A7570692
7B6BE5E08F3A1F5AA709B9947D83BB3CC7B7DA049590883D62B14991DF071F11
37B90BAB644C7364DA13861B9AE5AE718C3710544D25E5F8230BBD412EB5A00B
58CB6469C8399B0184A98BA345AC26C3B103389D6E8E729490F2E8E3B9B89B52
79ABA685F3BD2FBDE033D9AF2D84EF81618E4B8E75321C01DD458278448E4386
DF2C2067CC92748CE4619E1EC954B803C19DD44A5B7530C80E0A91F05CC9CCAE
7A3AC6AC7FEA79A6D6356A1D81B423CDA4BDC199746BC8B43869118CC9FD8592
FA1233111DEF209D129650AAD1B9F5B43391BE0D119AF0FCBD553B9AB6594AEC
6A24D529FFAB594E0A692559C962B806D0CECC5509AEDFAB4F8B154267710A86
2A99C718AAB3EA04C607DE426E48423D57E55A7656CE6773E20CA8794F56D2A7
B86530A440C18C019D059EA169AF7970FF08EE8791C2D60C9D1A7AE66E11992E
D98221A9771219D1717F58CCDD9D684DC934A1C53024B03DE89680E537D28530
45D5A283D76227EA3FF46D3CF2E109359A5C872F0981A7AA8E2249A9B30B8803
8FA81F1C7AC95A4B70D46952C9459645474CFD5F9AD5E72DD349901F0E7C112A
4193504085EF8BC574709679DA0C81F4D1B0BA32F803F43EAAEBCD1C9AF67B65
19370A6344920E97337A1C406FA3DEE425C7FC339205688EF87D7F9601F6B186
A4CF14B718B3EFA8D74BF6CC0211CF296951F7F3EF81335603C465F3294B3AF1
13C91E637A223A0F6BAA296D423A00098164952AC20F402843A8AE36BBB2097E
C04C46EB837F5A161F9D62FF330B7D15EFDC93137A46BE18C26D4D174406B0D2
7CA5F9B9DBB91025992C33FFE7E6582C150FB5E7393922D2009394013563C93D
86CC5D9543F3284960890AE78352CBE362CE1882581BF8DA7830E1FC06EA42B7
842407EEF346C76E626A851B782BEF25FA2E72037BF3FB4ABDFAE67C3D5F8B25
4E79C531FC8241BBF692E0374EA161239300C856F469C9C892BAF27242379F64
358AAFC6A18325B2CA43DD507E2AA5BA7AD147FD4DC659EFFF3C9A24CA3C3D58
F7AE65810D5B1381423BF02414ACEAD817AEBD61946085BDC5380E1A9DBFC64A
3582063F75AD501C7C5C7D9534196FB739348767A137E50DF8982CC8D5D5C9E9
934CB3E69641D3795A76D180C9A5F2B1209DAF62DDD237C541D94C1460DAA27A
2859E1CBD4DDCD73B07BADC36BC881B106AC275C7398D2EFAB31E8AA4ED44C13
4C50FE4E9B3F2B2481F8ACE854CBD853633DFB1340E791950554AB9A8A4D01ED
8FAB978BADE815C0EBFC1A5F1CD1BD850992DB32E4A6D87A551DA93AC80AC3B8
E929A301A50FBA13090B052E88E4EA58932B295F23A6E7EB22018FB474563BAD
6B71131E6929171459D98F1850FFF64CB839801EAC404F836D1CD2867539BD2E
220EEAA3AD2025FD707511426996DA7CC1F97A1C91A67366931E2150D20A5C5C
4A91CCC4E24C503187AA6AA73F5A71A7CAB45BB382A6A83801B542F6ADDE5AE0
55412CE32C37C02F3DBAD01723166D1DAB817C1429E3758B785A43E780D99E33
22FF5554E0AD5ECDDC2298F8E821970E69C4AD062CDA9DE9BDF15F4495A66788
8D957B71C56A5E602F6344E07085ADC6AC451FA9360AC4D0BB38DB7D5BACE46F
AE2D71E93D2CAF4E7BD8DEEE6D4E8BB95C8F5AF34E426E865DC8BA19F8FEA21A
D2E0E11A5178FBBCEBDC9C4DF964C8082777D69DA99E70BDB2B0A03842B87ECE
9EA3503801E86F63AB39E9DD1678187D5F216BBE2DFCD62CA1381F9202436A30
B9676E9702796F9EC004886EB0601C58A039A62A07D5B3E61DBF210B90379E85
0A247C9A2F5A077502AAEE30D6B83AA9969A6B45AA7F6DC2DD044F0C835AE8BC
E03904C729247E46E55D1CD34D30232288BB70A82DBDEB1BE5D3E4EE0A90F6DC
0B2E4FF4E2DE50BB2ED83455B017CA8D66DC4ED8339D8756F3278D5FFDF32EBD
6B84CAA85B0D47B41295E0CE18110F1BAAAC96A529D3147691FE367E2C862B8B
2340F1916FB85C51FF4AC31E18EB0D2C7FE3147EB5CA1778FA80B039DA07FC47
A7B7661BD0C1B10B93FF10A27233D0E8DDC92A43488A5AA6B7D10EE2FB6B92A7
CEF6A8124519A0046072ACF759E81E2EF9242F36860232AEDD162B862566491A
5916A7077CAA26BD1138BEDF2704B2AB8A31E5F91341FD254DC9CB595D1E4DF7
C2D614CC1A59A36A67A82380DF94B3E9F6D24F2C44C69CB2912D1AF2625D4B4C
7B796EA805B0707C35DCA97C10AC977BBDC6EC4D6F0BFE821B8E58782878D088
E223EB0E88D016147EF209380DBDA8B6DC77178602988DC4FFC41B3B374585F0
A114C3576FC1AD0BA650E0DEA6A17511A1761590A4ADABFFA8C3D47D8982F691
F0DB769825F0E50B82D73D269A58FB18BFAAE7DBDA88D352C6351F6B021DA1C5
49D872802D862179737558B8521EBC0BCDA66E98194071B4C679FCE656EE41D4
7FAD40F614134522928EE9527107C002441216338FDC92FCACF11FF1A9C5797E
B190953BEDBCA1285DDBD1612DD2FB319A9E389F876DFD67971F4B254F7F2C03
9727A102B4E9E8B6DFE9178896871313723940BB86AC2460DAB8BD31C5700C88
84A3217A4555FC46103791DB048CD4A9941EEDC180CC0A6523CFA4498DE69B2C
A0B4D25946DEF62F89674F7FF22EF69678E5699704CA286A6AF023B5223DB253
4E1F01766E0A5C575727665665C82A101D1B7906F457BEEC4BC00D0500035235
5C6BD40F5D2644B422FB0130D10421E94D8836AF47214A69DEAD9CC5B884C877
ECE82DA8E740D70D0D8DE79DD5F8776D2F70B0FAA2E1495775ADBEDA3ABBDAD1
D768518FDC9BB4A579416285BD7A15C96593C9C0CC4F49A70D081E2B1177DEBC
5B5ADD3CB7B0700787DA685E22129298AB57202182B390ABE4E350551E53EF4C
CEA15E5A7A95BCA716D6A83FF3F4161BC075FAF6A3EA43255B2F8677EC127A6F
2EFD96DDA2C1E3C48D559581057A6808831EAD13A9C4F048528179F080323B6C
D9D5EC2E6D9DCD4789A55D49F7973B206DC54C9CFAC18654D2669EC957679698
F166874C204BEBC48D6165843A38F672F9CB61B4A29164211DA0B42BC0040BA2
30C45E53337127C6068B9C791EDDAD52F56D1D3AC94401DE61800FDBBA553176
9858C148032D25B85494DE491369B5142F3B288155BCCB463CC3D42F8DF80E26
3D6BB046D4C7B1D87643F3D13F9FB01811ADE8A88B86E7BF5AB5B025D21435E8
EF20C5E094E0E7F4146F48B99DE7A18F4655FE73D65BC8BD8637103C998776CA
3CBDCCE03BF05004B5D058DAB8198EAA91BC849AA15FD0803C3E83DC689FD828
AA66E6B63D10368212A646802E485EFD37A257DF18A13BDE54358AA529B48750
292620CFF20D6BAF9C11795C0F9A383BA9973D2A302968A9D60ACA86A84630CD
5D4B26B6F207E07B72D95249BD7FEE045F68A70C6ECE6798C9364EAE2724D51B
BDB611C43C6750FA56E1FA748FD7C5FD015C0B6CB35488BBB24C3FC0CBF24A72
CBF68D627E72718CCDFB690BA9B9051549C147E5CCD12089F26A21D68076300C
05DED7B821493F8BA0DAACBA1B6AFDE123487A85C4D3538481F65FDE13829AC2
E87A913BAE1A128CADE33B9D37FA37030623E7EA3D818A19067AB29229F73F03
CA4AAF9F961A38F166BA9C09F8F4787504F44F30335B2713EE7BD584C1F2EDF7
76BA8BC481B76D877195191ED9E5DA0BE7EAF59B12AED4B1EDF3516B2F338672
AC6A4A628948BA01DE1B447148C3EE7EEE03D7EF0285350385C619B2E043B6EB
503443FC77371C840CB4920FC5A8561ABA188871919497D5B26BD0521A96105B
E1A2257BFEA5415AD47A5B4C976EC6190D21AD570773B93DDDF4906CD8DE3CA7
1034C8D3F822948EA42828151FB9C72AE6E479CC420EDDDDFEE3D9931ADFC8C1
C485EB190082DA35B97AC4B887CB1CCA64F0A62ED44CBE66A26F6F179392227D
3F25762F5BCA2B1F99124C783B2C7EC121F641E7C8D71BE3B679AE11FE604EA1
C4FC6B444CFAF0D78FF70E59CD4E68E662A23D756F4547BC84CD541136B4D9FC
2690A86C83B0EF9645E76AD39E7A3BD6461CBD7F93249AF55E2194C3BBA16ECE
3AE2ED2176A6762E27733A1C8ED40F6EA9017C01170733A8C7EB412E28440E85
68CDCA74E3F73BE5B66FDDD9236010D3D30B92B56A74F6CF761F03076FC7D10A
EE9EAE2BD17B347D144DC08E293426F36905E4D843FC64407BA1547B5A28B50D
95EB9F0B20B5F50958720B5700C6FECE3D308BC39A42E30E63DD9B76A8F0AD8E
677D824B13E9043544C40ED969500446C81DE311301ADB1DBDECCDEECC531FB2
79CD48F33353E9A76F6DEBC72CAA5D2ACBE12A186687DD94A4B2CF8123E7BCBE
4C9352DD83ED6FBBEF9B132BD4403F1A54B9E3FA895CA00C40858CE68034B05A
4C0F02789908A9980A64BD83DE48462594194B50B2E68E31F757EB78FC39FB65
2426781FBEFB8FFD67A615BBBD0F2BB701587C8965394EA909ED5D54C87B46F9
BF6948BE412E8CF049CD04F4250A920D77BB29E7D556125163FA3ED0D21E50E3
42C54B198BE0909043CC0A9796E008BF45EADDCB03C9F98492A2191EB63321EB
ACE4A31EA22D848357A84FCF2A2D556335F283ADC2DF2E1ED7C23DD163C00BBE
2BFD4C56D2D15F1ED3E8D2590B2D64BD0AD3A48D2707EFAFA4B6AD45BD342049
9C993820DF2B0A0FC73096656ED46C6F524A169249B307AD313C7A3FDF0862B9
0F3CC7B8FBE2B9B692CDCB5E4FBE48D42DECC2DC131C3C4C95F7DA99C145A790
4AC32A7562161C8436D2D9057F1BD03542F603F8499FA5DEA95A7AF9C9019FB5
072C3DD1CAF582A1A8C272EA7F2911DFF329CFBD827FA988864DE17640C75581
8D6F359EC634B69FEC9741CEB4BED2CDF5FD6DF09CA8197F1F1194259D7D412E
41A365B30D10EB272129D23C111DF895B63FF5B81D05CA200B02A510F8D8BCAF
DF25EDF2D08DE18F28507FF15811392D990280A6558175FA1B179E5DD63F8EA4
CB0BD2C6428EF7F76987ACC64A55564F4EDD8871C18845DA0EC186E65DCA0F3F
4ADCC2C2BDCAE6E199546281E7937D55C41EE4D4DA5CF9707F5278D8D5208E0F
04BE519CA11E20DC7D7B219E529C996FB70D71913C27EA70685ED733F84A42FC
09EA07F71413F36534D28CC9B6E8A9963E0BD10AA5B0575C48516532FC45D2FB
9726CA2E44990C9FB66662F675887AE4A9ADBCBB99859868E715E2DFE13E73A4
87C27355038ADC432094B917ACB40734FBBDB2E8AFDB1F6EAE834F9FAF3B3282
3241DEC8834743038C5C425897BC1C23CD66231F3C09010FF336949393F510E5
E125812C74E67284859557AEA867FA69FB044C3A65B38641C2AD4732FBD42112
C58367943C03173CD2203816D41E141FE5526CE048C16E28BC105AE7E3FB3FFF
0B068885D4EFCAD2A99D9B373D094B7635A281074EB3D24E9306E10C2ED7F45D
BC0DEDFE36E697FB7B19DA032B86A6D492333EAE166D11E4CCB7E019BB6DFBDE
9A6DF06787D295073D3932F6F25950DC671AF397F0E5299E057960AB1B406175
0A08D1AE38C6F3EDEBF1B5AC3F253BE5D1DC06B1115603D4968597BCE7E357E8
6E2C816A1C260DF36F6965762689FD94B0CD1C4A81C53F7ED6A3B980BAB4C8A2
F090A9E04597A2307BFF03722EF94B17A9CEE028CCFF2104D0A66A92D9989D66
D71B5FA9CD1F1C7487FAD93B4268FBA092F08C697B49E684ADD3D2A557E38D73
794455DFD6BE88892F9FEA082958DD70C1E9B5BDF5494F8442CE60623AF6D9E9
3D1D28ABB8369984B34F5D87E67A385270979D8FE8E933DA3691B252BE472D9A
2C367CEF1209C77857D1A31F0E981E7FF9954ED8D21530AB754CCFD13574130F
D7F8F5FE7EE63E3C6811566B173026C13DD85CD27E091498BFD26B0F62393F3B
C5573F93F71D2EE506D0BE123FB4AC0B44438F5B421141335B736DB0FABABB54
93EA128F11F45B958F8BADA78C455C560DD52DA610EE188F48ECCE5E630B05C4
14F3708ADFD3329A2B2772A18BDB95FE2E5A9B32EB3D00FE19C1EAB4E615E814
A90C87AF213328D2CFE14077477AC4B38972C48D4C9EC31642330E5DA39D11ED
75FB3B72F265233CD8842B24656107ADBB194FDF0C9BBCC1D926B9742AF72CAD
8825A13CDDFB457DEEA4D08763AB491DD74068F3CF7D2A64F797845430202C8C
C8E367E70D324DB480005D37564338B38336290CA3DFA49E315F82884BB978C4
6F8E5D23D906BFE0C6A3B428B4A87D42F5F0312DD450B332A4369C74383AF7CE
6F15A8D18FB0E9A7D66B49593E4A3D7227C278CA8EF75509FB1FA0E22E945987
3FEBB264BCF06688B1CCF489710ABA6F41CA9D3CE1F186DA1A858A6CADA55A05
23712EBD53C8243092A04E7F5BC4A2249FE4068D529E9346587540AE953F8731
BF3E24D5A0EF360847D64AFAC383B90910537A22625F893F972BC3FF66924C37
91CED62F088C67E1915F982194A3030E8899533B7805F3AD1A76DEAEBEF2E1DA
C67B3CE707D798E0536E03E11B23A136BE324A69339938C7DC2999A5D1A7DF5B
A5B774122197AE05C67814E9BDD8C52B9FFD8456CE02947CC83FD4771DB41AE0
71DFC8903802D3188573B50036B2B162A379A99ECFEFA6FC22D3D650AFE0AD76
64640DC1CA36D3EF9AF9EED8014CBD7B32BD0E130CBB81281A012C67F6494417
6BD0A8A7E3E87CC93402375FD8945E0A9CAA4C932C1FAF7BA299341D2B3FF83F
2EAF3087C52F2B768686B408970ACAAFE41C20DD6D7B36325A36E716EC85A2F7
6C4FBBC3E8E322238AFF94CDB7387662BA9704EF5F925E0ED5D5A4F736F21DAE
B3DBC709C0CE0E3359FC9080CCA5CCD520310810C478E78CA1A70A76AFA032A1
ED4BE80C597A681D435297097D25B5B932FD4A2CBDE0BF474FD0DF2ABA700295
102BDCA7024A8FEFBE0A79DC43DA855A1129F06C70C035BC030B6A1FA9B66EA2
F50FA490E74E5E6C3E03D7579E6EEACABABFFFE585B2474643F50C2CDCAC4FDD
FEFEA92D81D57B9D5B8F3864FD9AA020E567B8F06FB36F78FA4DBB41BDDB0C28
8F75348CFF85B0F6907527ADCAEE87F98600E51B9305F6D5340514F782BB28C6
778B39FF76AEC2AD5C195D084C16DC10BBED8DC11DF391CE445DC660FC6FA4ED
389381FEB85D8CE5F56542588334E560F5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/UniqueID 5000828 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 65 /A put
dup 67 /C put
dup 74 /J put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F2034B2E69DA5061426805353EB4D80E20739BC4C510
6C45275B8261DCBA10DE1D104B12F46ACD230977EE7D7D1D35D2814139E38C4B
CA6937CCFA653349B1EF64A98457F7B4B5D8F2978F16ECCEF7054905863AA46E
DD524CB33459220C71E9EFA7845A3A760A507B3D3ABC525B35930B613710A13D
098832C58EBBC8B0CA6AD516E6385792C59220331D0922A1F6F838A8DE13C337
900462F952EABBDC2EB1FBF94A66186C177501453CD3FE3582073DD86F04406B
41B6AEB440DA475E13240445D46726A6D45185D56BAB8807CEC8A8F7CE1AD149
7CE2E1BB5DE4E5B9592241DD136479A65905FD0062C91DFF7349874BFEA5D9EA
2F610ADB9AE7757B2307A1BB9D6797D9F9C4844A59841C7C7682105E23A374BC
A91885E7410F56F60C29AB8B417E2D6092F8BB70A2DD5DEDD4BA1077D7CC62FD
EA43428C6F79C332342E15F75B08A1ED360CD1885730E570A3252A5ECC419A7F
D124C3FB3A7D58C0EF6AC117F50D7D4B6CD852200A1F3193BE101CB99C685815
93A6CEBAFE9A9136C3AAE071B00E732B7721C7A3A8D01276AE06E8767ACBAA92
E17518435ECFC9B42C21EB1D9BA4DD79569DE87FE23F11E65E7C1141A7903C92
4ABA53A4B5C7C390F436CB4C0DB7279511CC1700DA348283522B5AEC490A066D
1099371F128C794D9D6EF7E18E83010405CAA3AF558B233BED8EE2895A696AAE
F0EB67902FA53D9E8BCF2B5EBA3A06F2A4771CF854FE240328C4A2F37B9C73FA
6933A798B6E803A0A99CABA87DA35B532BCA16C510BFB7B509983872C58A3EF6
7D2D71970060C270EE7CD127704CD3EF0235E14156EB241070DE216B7E52495F
23F1173793087399AE2CD42EA3950E8C685E163310E87EE665F4E74227B5A328
BE08D81F6EB1A4EF4848651EB7A024989A6D910914C0224A700E1245ADAD0B4B
92B19F8D6DA3B137B76BFD5E32149937E5B2316E80E1217FAC6ABF3636ED2010
11F687AA6A1FA145D9D8831BCCCA57A43E7425065DE7E3FCB42096A87D4B0945
0AFC294825B15F4038E34C9DBD8455E3AF5B5D9288B8F54F0F326AAB7E8A8FF8
DAB3D2E3FB7123F4AF5488D4B3F5B529A4C4FE5E147CE5ADC833BDC7BA531B02
7C4FA96BBAD84FAD6D4F4A42E929388633C2CBC92DD03C1A8A8FA53E7D7E009F
7EC6E0481335A231C8379C3F3A715763613804BCB54EDC5B0217311606744A28
C46926156ADE820EBDE531A0075392DFCE913C44B3AE8281B2B8FC9274AC2473
904A0918D771BA97E2AEB57589B7D25BD0B8DB1CFB3951E09AD5AD0C2CA19CE6
DD8882E1163B8906094ABB1A7C1270A36C2D80E7E32A732ECF3856D43066A459
E4322ABDF8C90170E014FE8F31A5FD35CB74EF0FA13C6DA5DBB23FF09BDC40B3
CE28A9BF7CD5171C22D3BC7CB0E70B000576DB79216FF236C2AE08DA546903B8
01BE42F5D89971F77720ACE22C99833F96F145D24F2535ED94CC4F33B525F1B1
6C3146B42EA2159F8EE8C9F376DD1C34FFDC5213A75B366A122A092BEBA2F632
D586EBFD5C9781DD0BF828EE90940996F394E25822B724600C7124A90E22D2D2
D7E02F4D95D813F623F7106B0378F7229326834EBB62BB78CDD6ED2B452B1CF9
3711A74422608B6380F5E9943682A51642BA27C943B460063E42F47BD69C7E30
E2A058EE2076C77CADC68C8862C4DF8E9DC3C3D4D4F2AAE22AD1AB0F34F55F53
B44608F5085EDBCFEAB3B345C2572473A97FC0E445AB0BE895925D1D9B7070D1
B3C7862C267FA89B79E20F85C4F999767A919BC790A462BE31BE21A1AC72BD6F
7CA4A8268D416A0C3C0669EACBDD18FDCA312260088E9852B7E65B719225BD4A
B0E543A7325DC5A5B0D8ADB5563588D38C1151A012779EAF09BB2716A0A15521
CFBCF3BDA6B5BD673BE8DC07AEC47A163DE6523F9E660D2CC6B59F7AA87B0624
F57F3E06C1459F809E3B0565A1B242E41659EF481CD77B66BB67119076572CAF
4008DAE9FFD5C8C14C34C3638C8126D2CB4300838E6E37D565F96F3D9A348707
6453CE67B8C7C68077AEF5B99469678E59961827750F0C2C280B99D60757CB81
4F513009C4F8EA0E7C610D98109F8B1BEB659C973D52B28DE49D4FA8F4433FE5
88CCD3D1B727AB425FCED080C27C25060BC0899F49B9820C9E1C2581B3097E8E
D78E0A1541B85417867BD91316193B0A791021B6CA6F5E5ACE0D831FBD339E60
A59EC83883DE3354C04002A511BEAE4D6997FB5A8AD1F9B313557CD31D44CC82
E2B2BFCA5C7E828BE6676978ABEC7295B30DE86BBB0F5350AEC5FE0D46716D81
039491DB9BC4834FA88291A6F4613A6BC26C6F5B9DC28968BCAC8B1C631C228C
4BBE121D4BD365EB7E8065F92F6522824F735E1C416A5E1F34B1EB87A6C2EF19
575D83BF53FD81A63C6D792B3407153DD613FE60049BBCC9482F96C0B8E9B9F0
9055CDA21C2402861602C39E29A0DF207520D80E32EDD38247DE6ED8D91F3217
7586E79245DEBAAB286D0BED2C1BA4FE4BF6F9E9EA6BB6E6A50750F9B7E4CB2E
0CD51269AEF49EB40CC0D13B6EB4ED4836971541891780ECAF4655A5F84F90F7
F7EB560A6E20950D97EFE99F9ABB5AA9683CD6B0F8FA623DA402B5495770B338
367EA3757F0CA15B51B1AFC9C6D74901701748149CD8629783D7D6669C6C8DE3
0B43549E0947BD8E72B3CD1D10AF130F2C52F9DD1166B290E9789073AF60E654
ED9A5C2E12A02BBA350A204E607CCAA790448EAF86E741340C841085D18A6BFE
E0A2CFCB63E24FAA0262A96B559F6018F357E258504A1DF011A73CCA2C8E7AE1
65815B87BB16F1C3BCC365D6F79A94F4D3118DEA0E543123C168CB4299D23559
3FAAEAC9EB9FDA2FFCABE428FFA06631CAAD202FA9AF2C7E2FE44746C5AE7D31
8D3B5A25C7EB51DA96FD4EA1763FEFB4E0215167CF4F72DB72D0EA1159A768BC
27E66D5D2C8B1F3102700738BEA02DC9422EE7DF80157ABD7A9BE7B37CF1AD97
CF450D417031F4E686CF2B7A57FAC2C8199F2744AC40E875760B9858AFE2DC9B
1A411711927354D878625D4C103A0B3E561301609572C73FC4432ABD7781B5CA
10D781D989C6650922F21520BC93741B1D77D0D5E83EF2F7CB82CD740963F505
92D433A908AA25801EB8590B1446068FCD0CB38FCE96EB4483BA0ECE4F39F532
86124E3E731D0D2E19B44643CB9A0DEAF0F2AE68BDE77A2D9D15FBD65DCB7894
E001721BCACBF3DE054A0FA0AE85F7300F2F84E5D6A230D85716E419889115EF
62E2B036F1260F436205FDEC3BE7B11BBA2912D55408F84BE6CF13996B4E9373
2CF639C0F69D285CE1D88A2762AB329F1E8F78E135EF81603EB9BDAB96AF57D2
491066EE0D64F5FBE3E3039D6221ADACC1DF14977DDE20A1AB8AD910CDCD2E08
AB6439E522742F559A3C1B340A129BE8DAFE844753799CAFC6D0072B50F52A57
D0310D641BA3A9F0ADCCBCDC17D8BA352B81FEE303CD513FC6EAB46B58A7EEB4
29AA227B2EBCC97277F3EF877AB5CB35AB9E1A39C6DD1CB73DE87018CE7F27EB
F1C717DE7F0FAFE84F1DC250195FFA7AE127B9EC22380E22B03772DB9885D172
5116E2644B5BD8FD2B105A8A3B17FBFC2A2E0C9476CC2FCC468E0F3ED4015054
ACF559DE37871E3A18486160BD0993406D6A55B2EDAC21D846FDA83928B3BE98
E490C94B4459D7F02126182BD6AAB648BF0AE81E5B404A8544E35DA6C22AEC93
D55C7DAD31AE93D7C074297D0716CA5A71D3FDC028B1A4F242443672D6ED7330
8503F082950093901929842713A0E9C98333A90462CABCCAD7E63C838B20A785
A611B9147B01C87D17E01C1AE832B3B239E9C024E7B40781D5E942A204BB9602
BF808762E638AE7249C8FDA416F73CB100955EDB1C816B853AC5B42FB84281B9
C66F0FE7DD922ED39585E51AC7A3A37081D7529F9449F3F3016F6079F207E218
B08DA7A3C2BC7A7A6AB60F468559B7786988840A183C81011E07A2560D2B0C1F
24E1C3A516A7D37389A3506D08A45C83C89C94B3818A181E015873998E68B4D4
57FE3AE8AC7B8753A211798E7F78FD34FEDCC5A81F4EF3794D782D51DC244537
C86814BBC435A5D24EC7C7D4E9DF0A70F54C5B588F5399BA71B993686B2B7E68
E708FBC8F1001CA8D44CC911159AC801AAA7C19AC23C9076D8A60FB0AEFF54F5
C87B9443DBF46AD0B2F283BA98094FD9C04247B193697641A192E3489D59D068
AC5266CA2986CBA4F1D888905B28BAB456344BDB9E11B14C7687717D41E57CA2
F43ED67B2B8EBA93088E210C91279A51C7440F640ED1E6B68C8D69397C514CF5
896C49A96277C18BA3AC05D787A5482F41B4DC89B8849F990416F41667B44A41
D356EBC399513CC5E9A8759AAB6D771C189D0EA22252C04421BFD95E32ED54C9
6B0B3B1D9AE4BE46044165B8D95413F79237D0B6438AEB0026B3B662704CD5B6
70A17E787E7E44777E6D15F2AF06199E0654498CD432608B2E97B6B655F0F82D
52EDD2606E6BF54F6C86A39390575DBC5C004DB6270A8B915B0F766EA2D6E484
5C0F9FA297722FCD978059BE496353A0A010BF982F56D5847AA54A7ABBE96787
E2F8D0528EF423B3E5E84BAF9B1A2C392730B714A41F0FF15839D4136BB48321
B85BE90FD09F982A49E047D150A43493B1D02D234E3B1832DA5B171F17446BF1
CDBF4C1666FDC944B30919E0F75F51152A399180567FFFF53930DA795119AFD0
E0E7E596A92D5F77F92E24ED0E28264DDFEBD02DF93375E0582F579C435B046E
D42A5E23A873A404ACBBE4BE588370AD02684ACD612BFD80542715FC4FCE7A51
228C9DB84FC8AD330641CD42871D2C1D92EDF48E5797557C1C8C4FDBA2F2CDFC
552CFDBE1F25466CE2B2AD5007C5D45A1AF42124CAF368106C60FA9D8C265572
553675C7FCFAE7746B451E6EF4528F69157B50A9F5429189531E4E10D4BFF9D1
2E30B3EAC21B5CE8726A385B82A54BBC5EE385060F8A39F9E145491FE24887C9
D4A5025DFE5AF5662B41121F58D5B7B319696E24CF6CE4036EC3D153B563DDE5
71F16FA11ACA472D67E4548E113A267E1FA7001D3A40E9D0690379DD5578A197
441C47815062955DED220F27D6DDF8AC5C22B7A95BE15A6A62534958E7B1823B
2EB7713E7EFE2AD0865541A502CF88B6F767CE6E6BE270DE0E88902EE553C446
386B1B3FE7A893F46C9D523CD7479C5D9CDE44F1A795CAF3E4EF8D887C236871
0B49910AF1CC3F8C7CAB85FF2B9EE68CB9CF18E56D8610EC3EA6B02AE88E7025
45CD028711A549D7211125C3CBE52FE17259BD3AD0EBC023DDCAF03E63F5BEA2
009A5318A815DD799D9FE0A5F81454D1054C0D9036A6037673B578486ADFF6D4
5BFAB399713C29D6A240F4D078FDE851CF1F559C9B9F008EDED19C99E001C40D
6CCC5DDF1957D824BFE0485F2BEE57C3BF4846D90DA0C92BF8DF008D6D845F0E
30C19B068568AFA503FD22FC42B6A1075B39606A0A411C80D7075E68CBE31758
C4EC546AAF054BB9154531173F32E159389C518EA3A24FE55879627D41B063B6
1FA3D0E0E1A00EE7BE972B4C9F2E86FFE5AAF2338BA08FFDCC5A94B0F6B4F05A
99BC2E2E8AEE4376C2E8B6F4FEC0A54BBCF1CA15AED4C5645A032F56BA523D78
F7670CE0E9A1734CBF49B3EA606F210F89A03B07627EBF463B970E407169EF69
495AA349DC57F5B3EDFA59BA435E1C3E7650EEF4829E37EB4A16B4529CA2B741
4033C6B305E690D0CD3057010171274C52F480996552C95002D987CF48B06BE5
35CB010FDAB2617262C3A3305FB3E3ECB954BAB81A30F10C9968EFDBC3343F82
18395C9F75D49462E297E06DB744C7B5C93148F1F410D4D338D1D245E94CDB8F
52074BED23C2F991A667B15821B97E41AEA8DBB99BE9E759D47F651FF9F3554A
67EB8F7BC773A01C182941A881BD0802584AB01179741F22E4751E935212C381
D9A588BDE463E909C80DC89DBC408759AE5BF5CA54729BD7E9CF9F1E47E6FB3B
9D4770F3692AFB658AAB6DF51DED345FC78D7F93AE4EEB2DF5C8841E00906516
01D2837D11D3D624C5958DD05269BCFA40631CAB051CBCBEADE46C5D68E872E8
AF2A317A438ADBD4281CC98ADF1A601FE1C2C3D45CA54454BE7DF7F928709031
E9030176740F1682185E4DC09852F5B47B4F430414F5262E9CEB985E995E442D
089546B8DD0F1B05BEE95DA0819C3568B4D8BFDF851B88A89FDD985F149758A5
4F0BD33200505648F75E57A719F5B5EF518C43D702CCBF2EB3102C2C6DDA2186
4CF4EDB990A3BBE42A7840024AB1DFF72521F913F62A02927330192C6BAAF134
1C059E9B8AD9722B8402B638474116A8FA99927B27FB61824DECD2E1F45489E8
A09E70AEA1FA8876C3BC02EA8DFCBB3221456065DC1FA8EC03B2FEF15CD3CE25
B87317AC222D65C592228528BD93398FAD4251340AFBC8B664FE265284D75E3F
866D8F49D1FE22805302FBD56F22FB2A984F1DBED370FED4657773206551483C
D38FEEAB2B9D797260CF0BCE24465BF25F8D23D789992F15177F6C66BAABDA2A
817AAC8B8A099E342A14F6D93AD670A34CAB7B61995AFE2DB01E8F487E1FB348
DA3012B78922E19FB90C8F399248B8ED12607CE351C22F1E7D27E8EA833942AD
45FFAA86C4047CC5877CA453336BF799D419F607630873D9EE19D4A99CBEB767
554C89B96A6C98DF913B9DF4F1C038F5FA80401706BA419550DA18522D75DDE7
916D3702D2F0E24C8080B9160A4ED09CEAA2C23A7E54BA13A92405ACD597A530
303EBE993124CE0C7A46A89899D9B4D08BB1D12354DA984A7E750C2F6DC6F0AE
F53A4BCEAB8C01808B837716E84F3A6BA1E2B744372A1F8CC5D95BC08C575798
4EBB5645D17550A6825FD57D25EDBF36F6111D1A6427445AAA6487B66054FAB0
98333BFF3DBF8A577312C34A4AC4A880228F42430EEC1E512B1A433CAD33551B
DEF68FBF01416A0939A44EB899786006C66D76B9F42D871C7E36E5FB460CE0C6
137929A1F2372D35DB8F166BB035E1C88E70BE9D39FD82E87E7617EBAD25A6DE
ACCDE52332E23193104DC0798ECEBC9EC2345AE19D2A838EC59DBE4FCC55E90C
C087DA2FB7B976985306BB6FEA9CC647128AAED1271760923AC9784341BD727E
A460E3413D9EC77CE50BEE79B9F0B98F76F166A8211AEE4CBC9A3C9B1336A7B5
D655A77D7CF0E8C0053EB199E110ACDF464E3A4C3A5403714DBA6081D4460816
FC73939094A5543CB52E631DC777F6D77BDCF4507DECC4154BABD10CEEBFCB6B
FD85774BB17406C683376BCA88994D5DF353DD606BDAD1E12B6287688AE1795B
9C021FDB3274996EFE22D344133C2DD1CD525F498864F5E3AE3E0F27E4B13D33
A8BBE28CEDD538F3EA6C12ABE25DDFD3E14286A37ED222E6A085E49CC6DF4A63
9F7197B26AC4A22901B49999B9E4F9CE04A42B0DA31CF18F83FC74D3C234BBBC
16B7C0D341365DCD18B7F2E372FB20F9C57EE0492A9399AC6BF756AEC15BE486
2387E751445059804C581DD513612715C7E05D005A2DA7D02275EFA7A64299C5
B97C9D7EA907E6212E6E0BB2A0D15C0BCEAAED33D32FADC5E277A8C38C415EE1
DB6F52F1BA59AA153AEFA7F77BDABAA4E828837E02E8571064825450D6AF03B9
E4042C710D3E310494BC25B0E7002D720C1F9659F5B6373DC2F7A11B5519C4B3
BC0E54D431BD4EAF192AA58B7DB83ABE3547735E2B05EFB62814311ADB156947
90C89A9A294E1D01720F59C80F5B1D0974BAD765B9EB98BD28FCDFDC71A67A18
B001091BCA9670E562C7D03D4449D2F42271E253452819479EC1FE8C912DB51E
7E29547124FF28092C51FF8F1D4CF3CE561C32001F86F916069810FF581ABE21
5159137204CEA09B62B03148AF0B1E70F8AE06785D853420F63111E62AEC0151
F9BD379BF8FE1D641CA1C99EA71DD7FF6863C65E2D369637B9515A5C67AA0B29
95EC4FF80D671373AE1430F209062F7D8F9F242274F160E88C701A588FF55C9D
4A474417E8C44FE31CEE80C005CF06D4F3A107839B9F6ED9E44A12ECE69CDEE8
1D996914164E3820F3A9D947FB56EFF6531AA74C0ACC917444A3F345772155A6
ECD47B843A3CF7D4C221222525CCE0086B3E367C808A1F3753C93E1BB741425E
4720B72A60BBCEE418FEF1EA945A99465C806407BF28D854DCCF856E642A9749
47E1109FFCABB1F1E1D0EF5969F8EA0B6A7D65415578DDE3DA022DEBB06E44CB
55C1F63475538E9C781115E009383E1943C8A2B4DAACFFE729DDB4D8EA956CAF
7CCE7249ABA65DBA8CC6B4F12B893D34A358EAFFD04F3080D18A589414D9C169
7E66EADE42F8A07C54C3847BC4D455914063E77184E9ED5B0794A62A7B95C31C
B73882465FD6B285F53C034C9CFF6D8B3B43B4C4932B3C509D3B0217C7D759CA
BF7094A1A9C92DFAAF2356131347CB84BE5F51806668712E4105D89E12C39158
94EAA38D1E6938BEF1C5517BB17C11A1FB9FED22ABD58AFD316C5D90669A0E02
DEC3672E6824F0948EBF70EAD249EA44087F7009E116459AEA930F53D3BC024F
0AE4614740B2BAB603058606422C069586E696CD1297F0BF3122066390807D42
20FE72F56DFEE52497D26117CA26949D3FE6BD6622D1B5AB26A15FA4F9C50360
453790F9F4959190939C0246526D64352B92B573D79F4C52A5258138EDCEDAAA
C4D8C100ADA73963D721BD2E609035E3C3138A443AF5450C7995C0AD70541A2A
ED9D9F14472681BEF5BA7F811694E39729663D9CBBD152DCA0CA220DD3501CA2
5E354CDDDD2E02642BD6B5EB00E90A1B5823F4249A800BAD360835C965BB8C5B
2DD6C4B55600FFD14CC92533C95869EDE21E29AE90A1D95BF06256F803667A59
307BA37CE838B921F2B2BDFDA32526F2359DBB1725A84464486FD2C3E93FD69F
F3B476A6E721A0E5BB8E76762EF5F377EA4C6C4A028C4EB0424E34D5FBB9B560
2E736F719DFCD21600F82AA4C4F31EAB44EE188BE845CF3E9D396B7CDBF0A663
3E27C9F7BDBEEC28CFCBAF0AEEF4F756B930F4EE06735B16749209C7243BB1A6
AF28B0C47EC120B9C37F6F982DCA66106D838D67121997AB36CC017A9A8ECFB3
2BFF6496DD8BC67E0D589719303692D226649108B609B9C7577F8532C38FAA99
5E6756A8DD4B5A55FFE7670200EFE86DBE0C5E44781537833054949D799C8FEF
1E42E27A0A76DD2FEA5E97033B47B4086368BD836B92F658758E31DA75E7D3A6
1BA891AD1CEED1E3679ADE333EE4316B49B1314ADB193FCE36F8A955BC204CCC
FE7296F244B910405CB40AC1049133C2B009244228FB933F77B01303F0C60FDB
C54DE8D8F1798237EB0C509AE017C70BC26BCDFE327642DBA85B9D060810F66D
78C9EE30E3F92C55DA652EFA9DBCBD14DBA69C7BA0102CC9AA255DF1F0D66A39
F4BC842FC400FA5016723AADC4AB68CE754D866DA98C9CCA8166FEC2F78B28F3
FF4345B0C1887B050BB6BFB43ABFADE44245E98249C116132F7B4B2CF564D65F
DFDF99E6172C21191D6BFC8D8A92C7D46EA387705AFEE3A69E172A226E9B6556
B88824DF15100B2563FD8B6B58715B30AC41AF105CF6D3E12DFBCC16C15FA6F0
08A77C542ABCB4B30ECE5B4B88F18350263893690C91E228B7C16615CC0F6348
090ED4D6D03FBB2A0C038A77EC10FF155B08392946738FDEAC39A64E7E369F0B
89095DC0E2FCA3E28385DDE7F5F07F03A9E91D2EA04CC9936D92EEE1CEE64B75
43431B203BCF6CC9E4991899C81F563B2E4100C5DC29577715A8B26574B9E007
66E8B7BBBF24D13610BDD1D927CBDB020AA05175B64A6DF9DD827F6BA4578CFD
87F4961588E9DCBCD0CD44C658DFF3A5805BED8F4882CC6EC9319DF691C1A4A9
0DD5AAE9A7F64A4247E469A15621A63ACBE9B2364DA35C3C4FDE4854B8ED36DF
298828EAF0E75F5C59C72EDE1779478026639B05482376657089313493B5FB83
AA53634282DC46EC612214ACB108159083AC226C91197E5732FCD3BB35E42230
19D9157C4650273556117D02A61FE2C1BD1227B93DB78F5C5516AB38DCDDE8C5
5F7A4A0B4317B872E8DE44C159763883FF725240F3C5896C76809AEB683146CA
8901ACBAD8D3FD79065D206688D0DC863A355DAB912DC3863C7F1A92893BAB14
A8E50A6E1270D0F51809A3D115A8CF71C6FA84D5A44FCA8DE529E3567BB6651C
7141E2CCDE0853E2128239FE789E4E30B974AED8E6D79EA693CF9D5904E3FE39
242E96449191B068EC2BF0830F983250669469E5B444A502AE56680685B9718E
20AC6C13127FA1E510DB2305F7F7F80B422091A3EED224F61D2879C825CB1039
19C95EFBA38B342D6734DBFE62818F9792AE61AAC240042B9160CAAB04CAB8AF
0C1AB07CC92B5A101AE8D66F7191F272418991AC5B74DE8C67D783DCA82C9119
457270A8BAF06034117325CEE63CB37A227DD2B1C5B8E9FD521349AD2F4AFD8D
B622AB6A33E7B5CF8B0BAC3536381F15B89C6E9B6F156CE4537FE5D8AF923A64
75862141845BC6E8493A6759FCA195F9BA25E4AE06EFE62B59FF5561D6EE3DCF
4781A06662D365C9F43805B66A3AD0E01C152228676121432A29E802156B19BD
F2F1AE041705F7E290C6023E48249EB0FE136FAE9B880095B6E926534F066651
697C8897BD5738BE4DC36AD06F40675259E65BE6E7954569C429AFAEF5C7A052
A866A8EF37F8193E8D1FB7D5D6849897242A784BBF4BC8B5789AAA995D5CBB49
DFAD3E4DB0918C5322D849079F2382712E17B43330358EA61663E02A742CE78B
AB1508738B7E4E85B7CD40A6084CBC6A4EF629AE001E28A435FBA9AA30ED1915
C55383A6D42657E08CFBF052D1DB42F854FDB377587C11F7762C745740FEACDA
7838306C585AB8541B47B0EBC9F86412CF06908DEC3AD1CE967C064713A4DD4F
0F3C49A0D1FE05840A762BA6CED3200269A92DF8EE622880C0D92F51BA4B9E28
3CBE972F3B2AC4863D6101D1E96AEDEC980BF120EAB7365E68E427B286364DA4
94547111FD03A69D0C4CE3692F4E717655CA131D39EC8C5CB00997B07FE11E25
29806FDB8F697B1AA64A5BF2ACB42D8F13A184D23B47E8A2665AA4C32EF2740E
B3F068C160197A64E24A558AB81700560BD086EBD7EA5D0C73CC5DE7785C29DF
2B9914B1EB33228E54E4F2BA8841160AD41A1D60BEFFD668D1EA8AF29B1EFECA
FF3192FF17EA236E00CE642826F7B9D3989B53E016B85A87CE0A95A0321E70BD
716E1CE2D4CAED84CC8958E832392BABBA75CC0844295C8CF2DD696CC88CC148
91EAE24945EF9E69548168BDE93ECA6C0EEAD1DE1EE58EF84DF29D4F391C8C78
146BBAEE37A4F665A359A6278CFB9395A951713CBB4BF43E3F89A680AC04C9AE
C482042CCE92C3AA64D16591082DE5464B2DAE0854E38B17294C0CCE2DAC5C6D
1DB50E110C9B588F4EE82608854EF6E71D8964B98D62F4DFCAB0A71BF3FA96A4
DEC46AAF2CFF175DA4746A9A4AD324DBAE916475D092C4ED21B5BDD6262077AB
C0272DAE0FF565487A2CC61C761CB71742F8E53A54AA3B63D1164F041FBD01C6
A665DDD5684069EBCDDC3DCE81AFD57B6F68F57F122F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 24 /cedilla put
dup 33 /exclam put
dup 34 /quotedblright put
dup 35 /numbersign put
dup 36 /dollar put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 89 /Y put
dup 91 /bracketleft put
dup 92 /quotedblleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /endash put
dup 124 /emdash put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F362471AA58488620156F3474FA59CA080EA96FE995D2B3DEEADF3
3141D157481C66507725ACA5953CBBE1ACEE7E3F02C72C6552D15EB3D612730E
61A06A43575568DC3CF3844BABF04CA767E2995196097015E0C4F622C4356B6B
F41DBAFD797A4B9D7AC22332C552043EF98913D0D9B50CA6B7CDAF903BC5C04F
D20A952BA5CC35B646ACD0A287C956B98C450051AF6AAF79DF37F8954473F8F6
652BF03AE2AE82B99D820CF93F5FC0BA17EBD7AF90313E70594EB5C354023BFA
07912408F1757319C7288E99872B907D5AB583B082EEED8AB079C63E38B07D11
6744856E689A479CB3A8BC081F33CB06755926204981DC0A45B3ACC18F6865BB
EE2C50DB43B62E3630FC1D9B1FFB3BFFAA6D0A20C0381ADF48E4D916BEE85BA2
BB40F538F55C11D50F882B73913840B45161262BC8B0012694C3EF26452F9B77
2CD7C7AD6BFEEAFE31C8A721C2D46AA00C10681BA9970D09F1E10DDC250E2AC3
9A160EC8C9654FCEB36AC2B586E978D54744FC8A0E963D8EF6E228ADD22D093B
B889C940206F504F14DD921D909BE06EC9BACBC23EB9E9D137FBC983570FFD2E
CC5D2EB5D2A4A8604A4AD418B800EDC6B89809E0009760E9470F037FDD15E649
93E9C8FCD9436AF02447C7F5AC380FBE69D1405189E8DBFDACF0E7DAECFA095F
E6AE1A2E9ACFC032BA9A5DEDE9DDEE22A88D9A1F1E0FD9BAE2D88FA168386D43
4B93EFF3AD84A9C05A80462BB3A940B2F7311CF7054F501BDD4F1347213C9327
5653B73E9D78866901235C66B0C49CBDE3A1BA3A11991E6B8443117745D96020
38F4A74D9676E4E99291D4420C57ADE4A8D5214D07B14916D83DF15114393048
FBE0DB83223F609ABE120AB877FEF549B6E2389487BB7ECF1979BCB0785DAD1A
2916961A1DA60AB491FC90BCD6578571226B4DFD204E75FF18FB5E72DFE8A028
C66F8576254930567A877DBD22F8372E7BA4F23F9497ED653906F5F67A66A1B2
51957AEB8D443550161075E5523F3D2AFF386E2640B276C3EC5EDAB74AC0DC94
7D975D7F5781A652BD13AA7F97ADDBE68847167997ACDD038E74E930D8248F0C
2CCBC094031C7147BD8D4DD664184695CF8C474845692540FE2B8A72CDF9DB62
BE05E15A05F59D56E5EDBE7C371BE5CB3B276FC7A03B5942057EC3136591A1B9
15E504DC497B663A9DD1729EFD1478C233B9317351D000DC0982F061BFF25A3A
8983E560AE31E321DFB137C77C0AEC704F8DA99024232F26AA6920D58CB17DE3
C1BC8E20988FBC4705E594569BEFC3F6666785B2FFA49367E3CC695F2A1EB846
DEB37E120B0F4C0783C0D54655C143C4F74DA0690C6D08D07ED225F361BC0F86
572D79540730791DCAC15823991FD5DF1AB8F25F84EF40C085B17C9070C59EE6
31DCE45AFA78440BDE4C69A4D954C2006070A2C310179851F2D39B1B5D3EDBAA
289570BE80F25D75116BBDA61F002B832F9EF2C32B53258B15A1174225168B28
EC3324C6EC61E5711811E658A1BA65C8D2D47CEC6071CD88DBCDE9CFD2BC34DF
1ECD2226AD588B50AF2399D171E99D8086DDE33E24640A767F249797B1B742CC
F4E95A64E1AF8D88FB128194673CDEFD6A1672DD1D03B6749E729587C0CB7C6D
13BFC785759F35578D611E924CD89FF87DFBC5C93FA7BE150624825F7D137CBB
FBFB1238C1A397826B8D1DF0A39EBDABA5F10B37FE8C27568E1C088F279A0E28
020DFD377694024FA154AB5C06EDC3CAAC3CB5A69297E1079F5C2F351D81614C
D73ED708907A96F6F8FB0994D3247045E8D41028432E91C7ADB2F22066D6F8D2
701298CC9FDA7928F99CA135B69808AF6FA1E0A3CCE1BFDE234E9218A565FE28
96541CB9381E887182873FD7866F5F8415EBE92E51E7FF064D6CEB7BDBEE4DF9
97633E53488AB11EE93137AA185AA7E4AA043BC73DF1739C92B4D3A8C46BA689
B9F8FA73BE010D7C4F9007937AD0EE3EE4E3041C72A2C4DB92C6C5433DF33A10
700F9E891885DAFDA44A00781BD019A9FFFDB6FDF9361520D50AA5037E654C8A
ACD179511AF61BA10DB29A0535972DDE8B838091B5EC3F6C3408E02B8CBB3FD1
E213E2C53DB7AB14D465CB0E4FE2A2CAFA20E74BF4601CC23687FA7921CB1B86
6DB57E04C99BF7F56FED75A052362016840676DE91888490B4A1DFE0C079C88D
C8C3BD3527F7C006E1403DABB47C3F9174208A379C221931724F06270985BDE6
A53263227EDB00124C5677613BEA94BA029F9D6F8BD1F7B87C4426210AE554C0
7BC707199BF6DB673E40D55741CE1F0853504A414099BA8E0BC7F5EBA5392684
79552A5D4F7C0CD3A6D80B18014008AB011C8C66C74D32AAD748EF30C1AD484D
B56BFB0F2F0056228FE28DB2DF160599E3A945221339B2A04DA6593C846B1FB7
5433B24AF1F6CE1270429CDB28023F518F8C81E0D820450B1BD2E8CCC24B833F
551E472F2CC5D2D287CD80A3E598647A6F5903A6BAECC0FACCF1552D8020421E
DE0D0175C19D11292F57FA4975294C7B6F5F77A83CE8844A7BE90443534DFA1B
A796741EFB730D879E84C29CE561373FFA6611AEBF81437E17CCD5B413166958
62A0C76CEBDC6D0CEE94C7AC198C5C7D225023470E6695C3F7B0383D6F204C57
90880ADC3C94E6EF1F3ACA5708D562CD25A013256A370E02BCEB85C26A37B31C
A7745F480BDB478F6A48191F15EB6EF86747148511F39D3A9AA2BE70170825BD
661A7BAB39735095A31BBF3C1D0D021B9AFFDB32CBB0701D6862103E6455B244
B9BF1220182CEE5FD61CB6B115ECC27EB21BE2B696C8F44A82462EDC40E59BD3
9AC3F00B1262570D17148823E77478A94D4964EDFAB822F0F34720BA2A92867F
A087944E87AE4E767BF5D580551C11FFD1B7F263ACE8D122BD5E8B2B8FF44C83
68C94613F1349F86B659F3ADF76E5824CFF256D4A705C543B6DDF44F26598A0F
42EF122482F87852C2F364B8A3E2AE2ED13ED0A70D118E59A21003AF0B7053D4
CD9FEEB842DD41AB0174EA85547426FB8DCA0ED64D9E056F9FFF42CB1609B267
E637A2C2AFBE522FE66353CCF07210A9D70350746CA3B21B026EAD342E5C16F0
3C1378F5D4A3D7B913D4EE46F95A50468534353B20EC2147E8CB1AA642CABD33
4B5F4515CAB14D5E57335FC5B355CB38325566CAD1AB636082E7EFA02DC9216F
3EBD5F4FEECA2A8F28EFA28D61FDACED5386305A06521CC674C4D1811263097A
6025CCD2128ECD2AF20E4F358E7E6CEC1C946FB86125C4F61F93BD79ABE75BE8
57B100FFC85FD8954C0B4A8233C20D8CBAE7E3AC0A6629378741D817D6F2C1A3
828009979578C496750C178C3C99CF39FDA56C856E0DB0B3803242FA5DF59E7F
3AF55FDECBD69CD26465D4DB2F3671EA60070F7C874830845BD7143AA0792308
CDFE2779CA6973FB0326DEE4ED90AF97200AE0CE175D189170098D1491090CB7
000F8182A85B957104C1396B66693591F60F4913437AF9FE0B6D85C50D9BAC04
145F7DAB30EECFFD27CA78FE78FD27B626BD3726DBB71F90A799CDB33FB43662
85019A8A04D223E74B83656F0D7DE5D5327897AE48DACFF21C87CDB198352CCD
FFEDE240D483B2FDC8548790EF8D101D6AF7B0E236905608BD3E7B90FCE3BDF1
5640CB97B6668593A62E5AB05E8304A43319C57B0E64DEFF6F6CCDEB8F58A414
833F9D3A763C771F1735173936712A6900BA3000339EBEC46D48139A8F4970BE
F54CF1D98ED5501ED1E0A556979D52926D5660E96B9741B1A47060A85F9A3D74
162C85296136F953598344B12CC0BB7B844F699A6B3F87315E02952C4F82B1C9
628429D3CD448697ED68B35996AAE7C48244E2112A1A5B849F7E68EF9AC2B667
E14A624B255337FD0868FBCAFC4DE9878FE644921275D486B5F37C8AFFF26461
43431C318824F8EB5D308B5D1AAEA50E83DD2AFA9D14FB89C8CAF8804B70B63C
712B18453D1E07CC48EC8B8DE4224FCB6ED82289D3D1F1EB2FBA736175F4D4FC
F6A9CD15F11FEC73BAFFF0DFF6B72DD5A9A5121F9FD0AE803949504B0C2F3B59
5C9F8B7A9CD6FA29253012E9067DF37506F8E5882FC01BB821C5577F7ABE9CB5
F1AD032818FF280C63B8E6B2BF13B29B9CAFFA928D0920B0A3B72DB728B433DB
4595E959F4D0F07C52501A7258DF2BA832668C602252ACA8F5AC847F0D4F94B0
7E437DEF84FD26D379426FE81858E4D2214231D8149BF101A73B2903F784DBCB
641409017164FD3F1508DCBB9F314922BB50BF093E36A61F89CC3BE7ABFDB24A
CABC2D9D47D63372C065513758125599564D1E283059948692F0931B64538956
C9E65F13817505990A4100BC86A1E89FBCE55E6ED5D4D4C9345CDC136C16C210
9C8762F10E0BDB40DDA6E0B474855658E6F5862E7DCC78F25D7C5D2F4B77CD03
AB903AED90A1F7C2826AEDE1F03006822DC08A1F50870A0FDF982B147D229A48
E9287085A2AB71783B16A4DFA77B1E74ABF75AA1667AA542DE88FBF2D6B94F12
188C862BD392240581AF8D89602104B828B4F8833AB67914B7B63413CD16AC1B
976BD2926DF50AADAA395EF3161961F80E526E2EBDEA00FFFEB8C5EBBA1F8823
35E8805E5B213B60F43751E529849290F7BB80E594AEC54940F17C33A71021A2
4A7204007DD5AE3ECDE4F9DF9E9129E83B987B92872FB084B0462515435C1655
51C51C4D78F8FDF3EBD0768D358372587275E7BD8C18D76D22B6BC2FB9B58F7D
5A4DB390661F80BD96339A1A8276B3257A8053BC4696A1BE3DFF4DC2F3389236
06C2DD6B0DE65D34619D1546488B7E05AB5A2F175790DEABF16119FD2A7E3952
417E8AD968B5FC20421DBCBB8D8A75A76733639F7ED98047477D2EC4D7495F62
ACE63F292A994A7C0D60F155C759AB853C8581D2ECB82FBED648C292D1AAFF87
AF82D8258EFA10DEF0B9E6D06BB1AB0AEA89153795B54F3ADE243DB12832B61F
F24997278BF33CA3DA2F5E5ADA62706D46BFE91072EFA91DA6164FAA37822217
61D2CDF3FB24EED05330B7A7FB3CB84F309149379597105E05E86AF538E10300
B5412A771D24E7E7D30F347D25E1EC281D2D9F499B687D9DEC6D4FD6E5B4F65B
C8E137C8B5502C46DF4A11ACA54D221B44224932D25E0EB89E26BC87660ABBC6
E67CC3D1E36E8A9FC9721073E0DD14DF91CAF8D0B98986388D6CECE72D7992DC
7BC45B7E93DBD46A6E2DFAF3621C03E72265AC7A29508939803C6DE168537FC3
7F71746F07EA81437E7EA882EC331822113ACA087315E6B1504B76EAFC50AEFA
147835FE0BCFC55CE22969FA3A680606DDBCC23EF8F216612B40AC1B8B237DF9
59E5BD68B6F362907D648A4AD73F58EDEA7910354EFF7433588BF891E35FBF66
9932BFCBA0E1A8AC05D32765E069A40ADD671653652C8F20774549A2D4DA729D
B965E0B894097DF171720A8B1CA5B5A4805928907FDFE60C6C96A8153BC738F3
7522F81515023D9ACA778BBC8A9E094531ABADED2BECB77BFB95B85930C3F62E
3127F0294EABD1955782DDCC8F15DEA54BA6CD836E2E45988D2D9C9F627F379F
EFAE54F64170C74492FDFEA157A316C34A19B50F54204058C0408D54D1BB6263
E79CDBE9A70563775166861BC8C5FD5EBF1D40C5D65EDB8B60F34B1CBDC2EDF4
61462DFA21ACF7401B020E5AEEB21A0C54590CD0C3DF40A2E70B3A9BF77713D2
FEE18294739564E06D3FE712DABC57DF64BC4F0638E13D65E43AF2B1BCEC453D
D6F853427199239B732037DF9CBFE8E0B0ECDEA44D4C89722A4F3891F44CB974
6A13EA9F5DBFFBD7644C0313A97D12F36F4C2D71679C5EA9DDDC0CCF58CD1131
BB8DC0EAD617FA7D1EA0C6A0372B3B2C36C045311E34FC30C12733DE462162D4
554C181BB6263D48F0F4CC7DB857133F84565210C84B2CEA980A768DE893512D
34B6028C756EF190715B81F851030E13C8F7A2B3A995C13A043749A44245EF3E
AAF059E48123FC72F6D932064CD81E2B77C11706BDAC6B6DAA07269EB099910C
72887AD860FF1538DED5D02663DFDEC570BE998F3AC5E8535EA5151CA383DC77
FFD3D2F9364B3C8B8220B9922576183606F932E59E0796B60FFD2A473FBE0D1D
133E92599972B2C7FAECB3BFDAD76D396EB417F1B31ED1177F0393D6A22229C9
5FF0A90FD39464F4C2D9127D3DC11EDB49DCF85521C6B93D26F6AEFE42919C47
2AA39B82F16EC547D9EC36379DE5667B030F7B31359BA638A717E9A37F5275BE
9AEF2D19F136EDCC1720CF8E3049D30FDDA4072C9B19F1646162B80D54A8D95B
FA80B6CA69F7B6AAA91572AB2040462A42C38A48EC992FDEFD63FE4BF30D1185
3B7E8BC649C02A7FA8038328FC36BC796A6CAB99F7795F57E3261B91BB5A381D
50F8FE154A03005BD7A42976FA095123B96698183DE517B7BD4B4F445D11E27F
7627D02FE6741815EB661B298D743FFC3C292676982B2E0D31A0FAF06239815F
95E82A8C8A7081CFB7C291F041DCB58FA20A9638151C78C37C9537AEAB928FCC
FE9754A9279861822E0DBB9876F9962C80AF2D6B377AF1E7EF241A7B4D16C09E
C739738DE95462D336F6946FE664E84A3AB7DB6131FB5480E1D346582C2E7166
4DE9D551B68936DC3B2128D4C532F251E2127DFD45B0A3DC4F570CAEC0873604
F4C8E231CBB314BDE4B8F8077ECB7CAFBFD3E80A729AC46E0CF808259E647479
B9BC78399193B8D465CDE1E6E7A3A550CB09CADBA91F8B83C12F64CBACC7E7E3
8F67C440A05079EC5C874AADACA45794A2F5B597549F9A2F16E23E1747D28369
5BD95425158208DADA4177C706ECB38D26CF682F11AC2703977BADA8FE0AD35E
4B68D04C38C598D862CC877DC34272227B49322EA06E6FD5A505E1980BE02130
4D3E0C0F06A6FC18C298664A114780CB60623AF6D9E93D1D5B7C5EA51777627E
6E21AC310D51C23601B5BA8AE93A41D3E8EE2FEC13B60C9BA52F9445500743F1
272BADCC768FA388CC383D1C8BFD721F0CDF70EB6AE6E76F261266B11AE0A054
C1DC7C56E212D78E660E7A32B156508241EE4D26C8EEFA628B0FCB60F4F4803E
9C323423F833A9670E88EF3D6B846FA8679D9D40D19B8F2B2E61C98DA4BA8484
537C0BF0F7AAC23DA34C52F04A612F936122E9C4FB209E8A9A3ED8EAF7A07824
A93921D23C29B17F8A4F80E1791074E914658716118048CA8EB44CF798B2BC8F
FF719DE10AF0E4967D5A6DFE7E59E5788F1AAD14283ADECE438CDC2DF1D311A6
6497C1B49CB5637F928253D42C017A5A32FCFB655C00B487B5F61B053A40B9BE
89780AD021CE15FF0FE9726411682014BAFC00091238FEC13A02CA64C67178CC
F7B700DE817B5315331DC92F80F3AA080376DAEC57FD462FA2C2B6D9FAFFFEF8
03D964BF2A0C8F262EC41CE2F8EE94593022E3B5CB2622F02C7B18FB8BC10E06
1A44AECC04CCEE22743B92AC6B25C11F05F598E789FD8E0473E8675BB7F57D6E
A13599D390AEFFDF00836DC5EC7B5A7050B60199D622EF3C7BF71CC0A2C3725B
4EC543837444A83528A7FB0CC2766D075E8D2FB531F042C4FEB8BB10BAC075A4
F1F8DB0E2D14E8629D27C2D02E43FCC8427828DC52D5CFABC53D52FE9284225A
AE8DF618655ABF15468088515562090E46E0AED8306318E3245101BB0FBEBFC0
F1724F6C7FB8760F57B3F8E5936E39D800505165708680384473AFBD927AD3BD
6878E588F07116B8EF5389BE0802E0CE4DAAAF055BF706A27B2874425879A655
8BD7B0F9939344CEF507C118AF54F07280CF8FEA82F23EA15DAE6899DF695DA5
022FE5958604DB0A6C0C110F9B67FA15398CF620966AE7F22435781E4C9A08BD
6B4F979465C75E222C3C213D0B9260F10EB80145CF895FDC5789BF2D139BB014
C6352F52C32A6DC6723A964689056F1CB7458956FDFF4AF3AF4879A8F20C4F14
D886B0370DF7364466D723E45AD609EC3EB4A4F582EDAFCA69F9916CB749F3B6
6A93B6200451C2CAB880B1D5C92178217879909DFEFB4187819BF658EAE06F2E
49E3024920C6F9BEDE57D24A8180D011FFC7B7EA194920F4DB0BC690CBAC43DD
9DFAA023712B97FC81DF4A6ED0B8ECB45294E694D1E9AD8B64E38D0508046196
C3D81130F4DFF330A66ADC573B57E0E1915D88DEC3CD41D683A8E213CD390059
34C7B7AB6E938AE7A8C281887779E2FFE5FB9CED28752041C6E196AD3287C6E5
1B2DA324E94106FD85A9D6782B73F36CED7366991CFCFC0545727E41AD246B0D
1357D023F8B719CB6F72A6E62AF0D680D03056ACF8CC1EF6938AD21C94C829B9
B1634ECD9723E2AF1416FDA2F0BF3E18FF53122290D098C997B63D18A3D39962
2BBA174BF41DFB5F81CB543B21A54E48DF6F7CB388B9A16A9BDFABF3EFDCCC6F
53D6EB7707551D4F21892CB4F546DCA229F6F44316033F017DB90D6B94446014
18F2485CECC6A7F860791BBFA9E4D830ABC6993ECF0BDA75AA10A52704D997B4
814D63DFB91EA756DBA52CD5A022035745C6DFFE481A354F356A5A3F4ED44217
01CFF9F28F904D475B01CCBC458C619C36CCFFD9CA89122377F752D204EFAFCF
A983B8452BEA242BCBC54B02E9285ABE2A388496F901BF6D9816FF4A0696F047
353650366F1E20FF3A49D04791E596849C364810D105D8CA7CFA2FC6D465F9F7
2F3D45A35D501996E0284557ECE4D3487F5A670AAA25775315E530D967D62A31
51165D39EDC4E8A019D72EE1487C84030481E809941AFB0859628BCBB65EAB6F
A532E2079CB81B40AFE4CF8464450D6DE441A05F642D35D42F87DF413829AB1C
AE6923FE33ECFE518B6BC6D5F579728782CACA861C77210C5BCF77822F1FD950
3C23500DC2995C07BF6E7C7DE444F7B3C29DB5120858BE78A143684EAA97C011
88ABA1F043DA21AA438EB53A80D9E1FCD04B0DEFB733E07BECA4B1337CC40A1E
F8D5D569BB5E632B6A3F50409CF9C71F8D1ECB4E2C0360125073CF65F1662C69
97A1C2551C972EBB2EAAE6657A9302C77C9D2D92922DFEEF2CF866B8ED673742
0AB0F71261CB56A162986EFAE44AE924B4BCDBD46A2E1CE3EF6DF84F941BF1B2
57AE750CFD0800ED2E1C16C6D30E609936D88F040C2D37045DD5744E94DE326B
F80C155C30B1FBD0189CA03C367904A17614FD9CF0E7B292808B61930D534159
437040B33E79AB3EA7F9CEB7DF3FE1BC444BADA27E4BDBBFB7F80E7A55E4BA6A
79A347C5EE60FE6357950B78215BD96D7DA23671D7C39402784A71E173508527
7A3C64901ABD0156448528C26C79FFE09DEAB6DF4B9D251381FA2C4C0B7D95AB
F8DB5CD2DA558195078E1C892EEBDE5521B841B41237A2E5D78527512FA1077E
F0996CADC780DDB9DE221782CEB38C85FD7A2E1D55A8299CFD1590EBA56965F5
05518E5C84382CA2D7454ED88FE3F0FE807E0374FDC72B8A2A2626A08E0B8987
41F537D93EB4DABC41C5E940FBECBCF391BE271A0A650291A091AD836A88F5E2
63F1AB7C45E01A45579E42CCF3F157E1CCEAA5E98EF12B07DAFCDAF76C5BC714
6FCBFB5FF4B50FA6D7184146F85CF61FF2933F974CF938B6EEEA09D7107F24DD
CFF031148435EFFE5506008E983DD503D34896849EBD9478383A3750C1247B29
93A9360C50B5D66D128512DEA37F35EB6DDDE77401D810D3C1E48C31E6B54F08
EAD8C18D30683F508A0055943F3A2A869A31C35A17B50DF6F42BBD480FA424EC
0F47D94D7539F6420BB4EFDF734CC814AA8A12FB795FC468D39CB845DC6894FF
79CCB56AD462E4087D5A5CF5920C4D88DFCA1D91B2331BB9FEBBF2C3DC00D3F8
C8FB97DCF6E81444960909119C4706584238EF1D92CEFC1ED4880CD9DB7EEC73
1D8288209DCBFCF5391E92C5AFE622B42737F652E234452C80FC4790AC5FD37F
5E8922E46FFB18824956F55944E2FF980B4BD685976A9D6370D2DABB0A4958E5
5BDCBB6E57CDBCCAF312A9BCB365ECAC78D45A252286DCC919F8C6D68C61B5AC
2352757FCF75690DD24999ABF8A60163ECB8A144A05917C23785D40DABC4D736
41194205E0C68C86B93AA71672E7E0B9FBD105B109A4D3826C847E4B4B9A59DB
44BD7BD8BDD313432AAC3E1E54D7CB18B3A3510DCB6D15EBFD722DEAD35DBFDD
F3E1E4AAABB5167CEA71CC698ADB7544F63714388C5EDA3DF76B9689A3CA2BAC
AAE281D2381D6B88C7AB5708739A64EC50E442C125B665C14B9DFA9C7301B643
16DDCB7239F347DF6F9AD3D41F0A9C2D41D82854249BB51D4353DAE9E0F788DC
969AA4149F93605BA3D6B80C1F5F92AC7E05526EBF36AA46E2D8954357D16C41
F84B1B9136E95B5F68DC7108D01687A25A7D01CDBB75B4BB93C12D94E32A6F7C
F01B8B68D71712F9058A88280DC1441B54A0DEDE7553FEFE2DEE76C1BB4A82D7
87E4DC4ECABEB8D7E26CAD1DC3DE3E375ED7ACDED854AB128FC7D3D585555896
310715B332984606265A0B96B215A25F1D321F5782DAB1D52B5150F12462852C
E62E9C939A739511CA372FEEA9CE96D6013130A2CA5A020D982B38B2555F36DD
37D1C41C714CC1B69D90738AA4880018A9CD6F4AC9E04A4FC3240E2D2A943166
A6999971D3C8CC3214F3F2283CE406451A99B7F1B1ABD6A95EB3C876D5CEB440
6140684C2E7AF8B41454D3FB6C2DD6BD94DB2E82CB024AC0E947FB083A7995DE
08D425788B52533726524A2D7C07BE531C248754C8623CD177444003553BCBFD
C9443AE14AF7B960DB41BD8BA45ABF5D8D4B0707CCE5AF48BA51F20C4A9355FB
3E9B8F18E00969F652DDD81D9B57DEC79309D339644F3DA8D7E7111930DD95B1
C893A698A6B73467A91B788E164C1B5B9ED89F84223D2E7B85CB7428FD4DC0ED
C67AF99DB4BCBE1000B8EA15839F2CC3D0D48F00A2B0451DAF3C29F43D85FB04
4322B32D198688D5CC11217FFA3D166D841E35B88C1CF29C5F0DA0ADEFC40F91
6AFCE18FD2FAC4C31BAAEABDBD1491DA35C9D36C8A1BB265D0F8D1F0338FB742
BB46DC7B0FD9E74CA627F36025A4E0606294D64DD1DCC8A2E361308D572C82E7
F57B26EC535CF6B4320418536EDC635868AEA0D4734395E4EF4908D9C83DFFB9
DB3E2EE0A7CDBF8BCA13010C9F852C2107531138578F35EA6733EE5AA91C1BFE
88EA911F95AAA834B23DEC0D8052661C56BFDE80936C668D1D4D5BB250990292
1D69705AB94169A86DEE40786AD57112E16EEDD94A07BF0FE7ABDC836ADA2A68
6342E343EA6DD4389D313B0819C24AB7472FE5C30C68272FEC5026C139CC43DC
EEE9FC75E2C30655722252A4A8A77C343B645717DD65871F8683040EBE6E3952
EAD1B7B92ED87000945D51FEF4073CC65DABFDECEB9BC05C62F8339B84224BCE
F77A0E2708F8F832607C15E712EF303F392924AC37CEC8368CCBDB85D83CCD7A
93FDEE97EA44F8C78C3A991B3209D54536A272CD5CFC953A316A10BC4AFB2D06
0EB8BE7B15BE83E4728E1CF8E449D2010754F750048C3CDED166E8FD1D107433
8AD5E3CB2BABDCA8D1A12B5C6B1832DF757E207DD097609D5247A81F8F9148CF
8E196EE28893B101A9F0ED0526487A9808996986231B79CB9607F35DABDF5B50
13EE989D1CF9D1FD433625C364E0319A9DAD3F6D3C21DC8B60D0AFB5CC1D5D65
41A73D55379764C82E76D81A582FE2164B47FB45440EB385919EC6B323FA7C7F
4CF6B9EEDC3F64C90D8AC9CFC142BC2BA18E71D38E9239A16FB8699736ABE2DE
C9517AE3B99BB3DFBFDACDD2B163551AC015974EF5F6BF4ECAF2B1C19980EEDE
19AD0CBEACC6FB4B25956D8E337B0460599250C69ED7275AAF1E2F297E6E7C2B
12381B0615D228E37B4DD6D572512136A61D263135CFCC3EEB8B4823F95CB9A4
13B6E92B08FF6FE8153C6C4E2BE6B8FED0D3A1CE1E3EAE646563DDC0C8C4FC22
2FAA5DB32CA9C2BAB6BB3AB3DB43A495BE42C91D730C618039899D3C9EC6A611
F99FE2B20DBD84F0A8653CA6408F69CDAAFCFC44FD618C6F0A941885A6D43017
209688B944E029CC2D15D3C20815E18259E2F6ABC659B47419DCEB9A8FE9DD42
8265A95BD1A75115139AE11462DD6EF72BDD0ED6C05F8E38D4AC44F6751DE370
C5F478C728AF50295C9A557338BFB5045775401751E6F58AECE549ECDA6405CE
38FE94A05DB4CC98EFEDD0FCF29662D9D7A7241FE7F0D8CC383A30EDA6BB6D09
77BB56482895E724E633F2433AFBA56647A3AC72EAF0B99CFAAEE5771BAD2E23
B66C2720E4082A9681B5DE1187E040C2D0A37E8173DE5DB7970AB37BAAC1B1EA
630BB8D022225FEC1EA1FD2916EC8A0314AD19C3831CDA51E318B94EEEB5E72C
436E0931D0513D4630CABFB17538646A645501DC013BE1A31D1FB32D1FC7B483
A89E20C29B92A2436BA1818D6019FC1622A8A384B9EE87BD4F1863A9AD5E89C2
4263C7C25F3599BEBF6ABA2FF07B5ED85979A9291091603B606B0E5776889F66
54D641A84E7017E36ED34C855E635E3D717DA81E47E8D41EF0C956BA23FA506F
9A281690062E6ADE58C0213A785ABB74F334A03625B66C2A8A67E18029311EEB
F1D84E633CBB5855D1E665C4C0163FE6BDA63BFAA8C4725CC878EE678434BDD8
127244ECE3A3762D5856C5A042EC51C623DFF5B4A38CB79F7A9D46FDA6DBF153
E65E8282AB31BF869DD10495A4DFD13D237F9B76A3F9576F90DD1DF05CF8A2E0
1FD7456573829F69CA8D214EBF20718BAD5599818562A5DB344B9EC927F5BF61
1CE67F6B6A4227A0877B625D53AA4892F5A66FFDEDD5CDBE3F4BAC866C5614C1
42430BB124DBC7093324B40CBEABA8D3DBD74D79839CBBBDC6324C987814D06C
624368B3CDBB3847E9D8519B95D17A0207BD48FE806716448D4FF5EDADC6464B
5B77EC30193AB0E020352894FA092FE68C55FAC9E7729E99DBE9C9D15190F163
55DF1B36E9B33D8F7E81F5765632BEA5503AA91B0D076BD7EFF3267127BDD02E
3C16DECEC476D314A319D5A26F9DA008BC9FDAAFF78039EFDB1880353869E0CC
B575EC5E559158242D733B4F4BF72B0643A4811DC74E4E5125EDE17C5C3E43F0
D430409EB870EB310944DEC55938381ED5CFF5161E1C2FE6CE1607AFDD3A7798
4696A5C0532E24F772FB3C39890D0805C693E01130816310781D35B9F011502A
F427398B9EC398BF78F62D52FE6E15EED20F6AFD58DCDBF1B30BC34B0863A2CC
7218EC26B443B2FF20A8E8AD2360C89C99475091A7FB1D9B20F617E889C13262
1DB989CA1BC8E799C3AC3E46B71EF84654907230D28B145CE1CBA246E7EBBF12
C08A7B1AA0360CF6D1CDAFD83D98DA713EEAE17C8150FA8F7E9DF4E27591BE31
FB2FC24375274B6711E3C9BEA6CCED7EA77BBD7E715264840D165666985902F5
90B28264632AC25DDD56A7B78EDDA4DF100E2F429930F42DFB909EED9BAC1BD2
FEA53D3F718982884D2EC2054AD3ADF45107C890826FD70F79B9FF5CEC4D6BB3
EA6ACA7A86CA179D36051BDBB1D391DEA8A46253305B8A23927D4EB754B18219
DE8C7999CDCD52DE741B396E9DAF82BBC137CD80F0F765B27CCF512AB9EB1710
D3E0AFE44849A4AE01A330B0D1F37E1ACA1DE0E47ACF0180F615B2090DCBE9F3
98EED43BC21653B41A1D9C60FC83F8C868AAB0B75B31C04866F03D435E88CB96
41A989888F394FDFEDAFF1C72609917A115703EA8E88D904CFB644C1D4F05FAE
8DFEE891D666B0991409CF306DD22211344B101394B15DBB72C35E02883358D7
66B7ABC24A8EF252DF948297C22A5B0602313B1EACA77876B4FCA940CAC06C0F
5B748C00CD750214CDFED1D3BBE6234A50CA87825FEC38062F93E748690A01F7
843C59C8B535C276E45B9145C66141D5C4B26A5A5D3946951D373A984C4AB19E
6ED1E628DB30C031BFC3FBF1777B4474714A6BBB78AE6D80788F380990A5EC13
CD92B9A12E8A90741A8D9EAF6A859F55C1C51AE875524BCFF559A7CA48149880
F49CE800C25EDCD3372E6145D8E536A07244706CCE64614C7D669CD2F3EFC413
2B6C33CC322FF76F475085A16D632FF86B2DD27D9C26DDFD07021831DDAB3D79
443F6C05D3780CD87B505D42E83F7C341152C770BBFE180267FC412E55DA89D7
61499658EBDCB60946CA538093FED72E2F2A64F3BC439B06AD9398BD5F0B8B37
A7757371AB4D08C9EA3B35E3427C96DBC7FA680896B7E5F5067E8D44F408DBF4
A828D185100AD144B9237D31BF7831DFBA12B0B51D447D6C747149FF2ADDF9F9
527D803EF8214FE0CD05D7538689149E458888BED44778B51769B18853FFFE83
CA7FF4C65C740441B466E1AB6C6C79A27589CC50E0338F94299C3EED1D967B11
1ADED43A31C0087198584FE4DC8566157AC9C6ADE16D52A93F829BB090BE45B2
590BF68FA5832E3975AF90AC2E2C60D0EB9DD78B492300B22ED485F70277756B
5B65535E4C65288697D268FAA844314876DA0C5C3D2C246DA7E84206E1CA71FE
E7475C04FA8428EC5B3FB4564CD86D64CFDFE03BA25E385AB487CD62F4710774
BD09C6EAE6D38EF6105A6D2C6B9DC3B095469E52904347BC00FE29777DFE14F0
E1296EEA0625416F829393C8955594FCCF17619FF61F4B53BFA006B74BBA68DC
54CA60C560B0AA9EC1989EEEA84B30E7A3F77A8E952B96AF8F144A1850796BEE
27CA16B668619881621176A1CF2FF253345A346823D4EEA8E0C79957273E0891
AD5CBE5298C59E92E7C948925EA5EC26ED6581AFA8B61DF65FD7101079BAB1BF
0DFE0737C9C0D3634E60433384C2F3FBC3F2DF0390188B81D977F4940DECABD1
9E53CD1AC8627339976AF7A8ECBF69AD521B22E5AB00182D4E370376C3926651
F5B3F866CB239803DEECF46D87CC98B6002DCC9B13E5F4C89580A1ED02A07648
28A0F4470D2C1FDF7A4DC13C280C90A75546E46D900D0BDB5172502605C5ECA5
DAA6552B37A333834A39091252740F4CB22E016B0A97C27A7A378703F8907DF7
94AEF700D055FCABA3089D6CC4484CBBEB10A6FA4D92FABB2653D8C2781D509B
EE98EA6F62731E4969519FAFCE43A3ECE4E25FCDAF693DB0BCAEE563BE9C9139
BC61C31D4A74549A52F36BDDFA2A68DA65F44885D449D814AF1C3EE1F9FF837F
B0C96A319CCD697A6D8D4CBC2AD41692AE2FF76F83B383BC5D41D8475FBCBF40
89DD9DF2796034A2AE628DBE392119F911D523D4BBAA20FDA266F9AEB7BF8349
8FA20AA28A5CA994CF062378C31CD3C7416F25473CE144AFE43951E5B09FA1D9
DE87350311417EE38DB07F6FAB083835AC98733927B6888BDCD1BC0302E275DA
847C6AE3E3E576662EA927EE5A3A8EFD95E4EC77EB23BFDDC525F3EB892B87D3
E9F4C765B78B2B226D9190B89003FC4E96239E8E01C6BFFBD59E1AA032E403F1
D9DF92A565DCD4397478CFCC759F8A12634F3DB00520FF46573F4AC20674483E
FDAA12B19E0582A93D82DBAA7080BFD1C17B41529B9BF0F766D206F1C2A6957F
10E6C7FA857D177AE304CFD7EDC31CC2D9C70E835A98C34E38D330FDB0676A57
AD704141F1A8F0A709EF8D592A78147250761030D4273E526CF3D907D2AC8B53
A7947D69D20E1155AEB65FF89E71D2FAB0973A29B84AC02C0718386A6CC4B0EF
7B637C0EA4442FD4D6E1EE3E65C01769FCE9657D83C88F80B6680A6E70466C5A
AC65092920803E1795D9C190A3807583F621A80E8ECFE3B9701A5F720056FC97
9848743EC18678FA41E9BCCEA9455108C487EF539EC720FB4E3D8C286C1F982F
2F497C0984705F808520880CA516A8C988C6CDFDD0904C9FCBDD0F6851A99CC1
C80E9E17C35DBF12FC8573B7D261959677EA7C6E434FFE0E55B905E6AFB0CB25
2FB5A885A3EDD48AD3B3691EDBD7EA93A664ABAD656A9AC07D37560880F478C9
260BEFBABB2DE784D7DA6780DD6BE14967FE89C0605515EE5C1DCDFDC800A1F9
50DB9F60CFBDC74C09CAB20892D617C639A40B91854656AFA6A38AB6C9EF8EA9
9EED24070BC3FD2C37E60EC69798513A8F492551B26097992BF8265943C864A9
788F3F83E54B8429BF62CB37E735A1663CDA80380A36D869BA030A2B6D087963
21BAC1F46FCBA99690B207098DBB490FFF9CC525315C859E565BCD6032909349
7B33FD563EBF2D55ADAEA9C032E3EE694A81CE7988EF3E171E96DC4597E42982
BF135270AF8BF0084C244DF23AD21688F6A23A1D968030B11A334AFA5855BF2F
218C3F1B122B55F6FE7930D75F914DA62B718CD42FA747FC5A1E26641B8A4680
4E4B7760C54F1C0C61A3CA481C73D1D82CAA65D50E74CAF18241D989E2B2C90E
01E042446CAEC0B329743A4D4C7AC75BCA336C237952DE0D14081A1E126AE980
C710E63AEDB2C136CC129ED596DAAF0B91C59C6357762DDF75B15362D87B9F5D
88153E90A626E8881FE6115566D063F80FC4669BE42E8FD9CED4EA893F8E43ED
7F1EEBE7469D3DBF29E3D1A5F93FF5D5A17811B49F423F278C6C764A1AC6307D
025F510CFD5A3578EDE86C9B085E80EE856819C239F1B76DD97A7F161A65BBCB
D7C4A673B63F65BF717521FAA57EEC98B310A5BE2BD8440B3FDA53E5D67FCE30
EA2F5C0A07BC031917FAF5F29AC523609BD13A2C0308136F9853F7AC5BCF44A7
D25865216E9B5E1A20C41A1DECD62084DF65B3EE0A2CF89B4A3BE53C478AEB47
E3AA670AE5157D60CFB06044BB4B6BB4F3FD34F332D50EF320644985C1F204B6
509D529CD76168C7B1B33A273DC9F63ACE8514B8B1818E7EE67D1E69598FD271
13C6AA52CBE6DB2F3215A8DC8C241F903975FD24FCEC28C61851C5DA375D54FF
4D25B3621497439972BB4FE312E02047F2C20BD09953F1559E4700A515045986
3D1DB40DD7827E103AB1AB5EAE8B1A14393FD01C7AACC3DE5F9EDB5635D9FE28
366E151C64514C4CD202903C06B4DEC89C2AA2B6F470E96F31A5C7BDCCB9B32B
F59E774F457DD7948EC9AAC31F02168D75E7D8F019399A44A075AACA72E5379C
962CF516A868DD8490E4561506D9887E4DEFBA6BC7E140E7EC73D7DEBF04464D
227CD6018410AF9AAAE2B2E6CCE5E5DF526ECFD3000B600C8CCB71C24F430242
D5FD49531AA4B01AA9EE0450E4C446AB0592EC8DD49B141F9896F7611396E82A
D24F17FB7266D4814B9F23A5E7243B7D675E4125B053AB3FADB1FB5F63998FFA
F06C9679D416B8E4397F266D28A12064034A729075F2FEFCD9D62243DB888337
B193977F403CEF61F30618E6D29465D6FD5E197F75D81863E46F77EBE1971F54
C201E4F62781C60A2D4BA19246133D9CE68592D9ACF74937F8E5E5A0EB1F6B7E
B86F5755DBFA47EB7479B87FD92E729F593BB68C55E45AE531C02F7BF2BD2066
7FD5844AE65CE1FD857F322C7D01B6CA04651D3D0A92566DA8162D4577BA9105
8488C847E512D59CC31AA8A04C1738B2D9AF1EDABB32F973146B2399840538F8
57B7BA504D89BDE9B066EF3051FA6F939BD676A989D808AA5E4D96FCDDD7E413
A7EF83FBAE527A4869BEF97ECFCE6E44E88775A640445FAF14B9FC3F539D2D1F
83CED8BBC66D8E939CA3A61E88DEBFD717841C6EFD85DFD8AF638B7052C23FAE
F537DA7E77180E3FE9445181FD12A29EE7CD5C4A76178BC99AF82A9EE029FA8A
A5ED86939DCF13EEFE5947590EE2B3F28074A4423FE7020D707B3EB2C42D9522
C09803A697BC34D175B129417ED07171461D5FD8A690B158DE41C1BF752A069E
83B8504F41B8A425C2AC6DF100EDB38E5A9F16D02262049260227F4210A4BB57
CBAB170CCD78415E427581A25935E1ACE2C7E1070B70B97580DAF2E6389542AA
EC2E389E3AD02236F802BC01B9C18A931790CE3EE8915F7769FD8C98D612598F
0609C583F241550A499B2A42BB0E8EA4255469F99C98B242E54F0F0859C49B19
15F284B1EE305B0078256F17A5B0FCA067EF1BCFF9C57A8897C911ABB62180EA
8A9DA1B9E403F5D5749CF1F99E0F2A5C20749F18F720457A4AB35CCEDE018BA7
09E24EBBC93A8484A2127B75CD4D0E74DB94018959A22B3C39B4789DFB7779BB
864C0355DCFB2B6B00D25E77C32CC1E8929DD620FB0C9E5211AB688C993A1E46
B5BF609EA93EF768C4BC2E9CA4B0A43C6E7B6B7CD620F38E50F1E1845F96A350
AAFF3930E8451734C6D6ED2479229E9189B7EE7550EAF216B7C5F879362B0C83
774BFC21A38A1E052F34FA6221DC70839FA08E4CFA1B806DD69C16B7CB98919D
310F8827FD4DEA8B664E5E2514C75FB3CA470C5902A4CD9D59D74EA8546F892F
E6F17CE54AF59FE034748783CF9E8834C02FA910E4BE5750FC37DAA09AACD879
2003657A82C3C97331E87E194C7585EED0A0E9FE724EC9CB9E2C228CB9C32281
9DC5B14CE2FE47534B7724C163E19DF47270F099796DF0058836D31EB3A1EA4B
1F48EF76D44EA063F96B5B2DD73C1509F925375E9A15CD8A258369A86F230D6F
BD3115BF546615FA99B3C49501E385F58B687A0B45FD949FB7F222030D631F85
AE1291BCB66E83E3EBBD2BD0CA9BBCF285CFAF31A03257FB52D95A33EEF26F1D
5E5879367716171BBB7298023005D6BF5FF879E9C07A2912EEBE82ECE9AC6070
7A41B2B8FD3B94216C5669624CC6E89648729DC2B8EBD32862FBB603738B27DA
45466B9FC78130FFB4620A45E4F6A9ECC421A37E054A94B57850DB4E5885BA35
EBC6647C2D6DFDE117CD2ECD65A769DC482DBFA3F703336C4FAD494EB5BC6E65
13E0D183D2F4DB009E949A89C2653C866F17F6AE99D66367ED64BA7ADB816971
7C85A3B0DDFA80BCCEB6726B1B3FD04F59EFABB97FC9F957B2B68EA6BA849DDB
737369B41300B53FD6D4F8DA38ABFB771655E805DF05310112FB8E8C26D80CF4
589403C780146B306BD56347814A17EB8A4DF498B413F5B922FA4A101A4F5023
BE81E32DAE6EAC76C0147856C1CB632292AA5558371E751CD6FB0544187858FF
A81A548AD1C09862C3E39AC07C9A204F6F15CB1DF3AF63424A2C720ADBC23EE2
02EF2D02F544A4423EB86E30DD89963BE1C53B9184BEACEEF67E1E4A08EB150F
546339E62C13174E3C890BE69B9EE54D42C52910F8AFFECB934D00436854A119
82DA87D319B2895679E3180AC5B63064B3C0AC4A082CB25145FFE7C1B402567C
95830E373016090E85588CEC8455EC3D54B6A337BF32F2B3B7AA074EE3A935FD
3818AC9FCB1F10915796812CE40BE5FF25386F37239AC6298C06B2838BC29C45
5C084686CFB6A8039193FCD7293B6B94EA6F4D2AF76D15E03942278597F6C824
AB000C628DA34C7F003AD4C9C55360DAB0B5BE591A4A68015A1921B81F2EDF62
1A9FD036F5B04484855F72ADDB3900082FE8B8AA273E190F685916F033AEEA57
2070F24C51426B6E31D5B9559BDEC48FF875F36FF82DC6BF07E3A10F64DBE3DC
1F3C8EF751B1418971D9479791D18AB862BC61DA5C7A44A58B63AFE598C34101
C1E968B7B73D4F30A651E9F92B2BBBD3AEB8B8ADD865A57F5DEE86F1FC7A7135
6E9EC5F3581B1EA4353976775189DD2F25E4044920A38BB428EAEC378FF3E4EE
09CF98B8CBBC286F194BB736B8A0E80A82A7175B7271E81FCC008D70261D44B8
DC4329BED80F92BE23818BB05554B0981813B0D94840DBF9211723147A0F0459
5CDFD36299A24D5AB650615433B1FFFD8898C42B3976965821F3209D611010D9
4979DE7ADB1CD2E8F79E6F03ED541F5592CA599C2E2E3F6377DFB03459545610
AFDA26037143B8C7C0AD2C2A2B244B47733693CC61D79A1EA2D3D301140FF58C
D2AF40C7A80AD601D40B54956A53D4E1A290EA16D4A851838291284FF32CA511
50E1237C1042E7BC21F24BA33A6E064AC1250BEB406524FC484A901234526A3C
0A60447B843D41603977EE54BCC98F19BB2AE9697DFC29F1F39B6FC975927454
ED431D8C51917C875893CF094396345D289C13FB63BE3A9B2ECD28C23A67DE19
7712D347D5DE1B9BB791309D846AFA4EEE7ED100EC239187CD35A70A2F3F1509
F1D96569FF97D7FCF7E09DB31FA5DDC209D20A10805CB3A4F3636833EBFCAD57
6239A7B390860FFCAE0EA09991CA0B649184F9F675B32A0BF9EF26301C081F90
1971221B3EDFE81A26789E8E8B1A8689218F8F67E8E8A0AB7BA013E525B61555
34617ED2AA8A6A55C426B85D7854EC034A723F4B570728F42ED96A6F4F30B058
73DA7F61C1E33C15CCB063579C94984BB275F0AB7C43FC2F7A054AE5C0FB6557
B1616A1B3C95636E59DF0FBD7EBE1955780A0DD152DCA19BE4785D212854D1BC
A72E5D0623C236D092D67F285760A1A4193B8F2B8AFA8D191380B51E578C3F3C
F08D0A9F2DB76CF89C46C91253DDFA6E47857A0E00A4A6A943C6696936051E5B
4B826988F9994D18C379908D89A0D59750F9C9EEAA3B7310AC114E7700F678EA
8756FAA7AC4AF2963CEA31FB62781AE76C00DC72CBF22A17D84066FC300C230F
F433492002B2ED8FF66F20A8657F94BB030056ED527F29BF3138462F1B811810
AC197D5E4F1F2BA38DB5AF9E66B07A3B0C545ABDAD736679801554C6665C1497
2FF2FCB30FD561BF0A2246FFCCE5FB5926B6D063B0E825E054246334B9677FE8
AE3F1732A98316CA4DE3C6FE81BFB995601F81DDC6E842990045C51386E08469
67411352D3683CC21E65F71D84BECBB7DCF4628828F419A4A9199AB6A6B0D0F6
F45A02305895149AD3A970D074766075BA04259A004585E2001FB92CFBB32C9C
9C4AD005E52CBC9EF4F3586616D03F55454276F0363C2A7DE3C2FA7EBB00E148
AF5406FAD1A20B9372163F7EE0EACCCBE84E7E2BA2594F6BC39B80E5780B9CC2
420DA331EDAC4FBD1275195F9A4DC89AC5DF8DC0C773FAA8A50D6A1850A42042
8D954A5D1FB6CC3F6E297A90CC9105B70A667CCE4717B7070B3FBC487D07E8B3
ED5D0EDDB39667FF0D11CA91E1E3B3E0C3562DE47BD0859D0FB1A89D783E5764
B8BD88AF71DB4C5E3D462BDEAC7C092AA642BBD58BE1AEF8FBE87A92F7A093E7
B01E2F3753B9C4D5B8DB1C2388C4B99B38052162854A2A9D18A1193FB71FDFAF
029D6F7D9B74DBE256ED61272C22B689D95A8790625B7D129680F3648713FC8C
FCD5DC3A295928BB01D53956ACAB598FA4B4A3280036E00845B6427DFDDB7ECA
93104BBA73D938088D6A5B4FA094FE3697A275D62D8FF0D5FDAF7683E47D371C
8546C6544B7FBDCBD7C51553F53D134C44713F28FD3039D6D408D245BFE833B6
CC8D693EB3F5B0B45BA3EEC5416D485A83F198976AEA380D8B839C491EE3CDE3
8E5196731E933C2D873DA3B6571EF4D527A44B70CDE54C78547AC6DBE4BDCF69
03F091920E5F7347A60164091744D9A6432F97EA7C6D6B837DAA0629CA8B25D7
CD74A305568B1EC815AB7356A55AF836E789D5AE812F5473D1C7637451A1D569
4EBF533DBF7E53ED1F01D106CF8DC11DFAC1FB65DCA1AD4EC789D86D1DDA3785
30F14894936949B86E051F78223A439AE780BA6E438DF30E99B1BE2AD20A3F72
FAE5CC39C354720EFA194610CA3A5959C4C7A551D8D248CB39389CC3F4C64D38
36D5E47BA3D5AB0D15BA60322A58A11191CF54BBC6751F7C74EFA5583268AA44
65F9F3CC8934BA20F9A1A2FF5E2A7B6F3CE0F674E7AF67445097AD48A99FAE28
989352B1118EE1AFF282F0C7C8D8EDFD5D8939DB48A3FDBC0D52EC25AA43CB9D
33D950C5AB39034E0DE4419106483469FF4C0653DBD295166E719011B132CCE1
6E86C7BB63F41056696727B289C03A9350ECA42E9D682CCF6824EC3C2558D787
76B23FA8BA341ADC7C8545AD7D425BCBC8500E4B2936054945E9E4A2E1BF0DF1
4198F227CF1DADC8DAEE091CBB3FA82227FB2D4B7ACA5E6E996AC8C9F398BFBD
0B57D942958E3353307E7BD79CEF7B8D749C4873C8FE39CDB81E075DE6B3F4DD
63E3011779EA675771D29B0AA6600A6B2D65E8B6D0C3B933BC1A648275470C66
751FEB5B33F9172B49DD228BC60B12A99D8C369656D8E3013E56000D39BE71A1
D306033B28EBE0B3FAA5FE4D8855DFA16A7FB94AD0CE0CCDD6C3205E083C60D7
4DE87074B367C4D10B1707A80522BABDE6D03C945D93321051F55D06DE3BD441
56670ACF9DFBDEB61B304F146BAA331D1C53CFCBD15E6F0ECBE658EB36A55BDA
2DFCE8D8E5D0C7C6D204159FDAB912B60280CED88F619DB0AD60F69417D6139D
DC536802A56F693EA7743403152F8780E448DA73249AA900134EE9B3A029C892
E8B31D0C1B01BE6ABAD6FD2704FD6B2A7C2AF72559F1862246FF4E684C2EAAF1
0340F4474190454F3AD82F15A6C4BDB2FCC86AC19C0A106F1619439D5148F4C5
4CA0953B9D5BE32EF96873F6174EF1CBC69DABA0399D2B933C2253F829CB51BF
BE00B387136EAAD9520C55876D17B0BA25D94B1A5732AA2D22BE1D2A8AF2205F
F411BE044368E058A436B2939210B1553529F4C3310F43131574DC65E38E16F5
8978E85084FC9ACCD9A5A571333CD56A9F584F56A2C1BB7D1BBC70A967B3F793
D4ECDF9B173A58930CFE38396078A327F6DE3C7CDCEE02F3FE1255262520B802
2A0996A6BF81A2A6DD06A098BF56789C54C2F603B118A3C8F5D4B8BEE61EC277
94B6F7283E09F60CB7F712C2FD3F10C3C128F137B88454622380AAF7048BECC0
30724DA2387FDA523A0C1C9F85EB067A4A726BC0575B2D6EB12673D133693700
AC220B7B695E6020CFE86C80C9BC7B1041C8C0DB6D3952F0085C02BDA13A39EC
28373C15258DFF8662604EE5E5E62D9060F8A22CEE228291B28B3C293E6BFDE5
AB2CD97DD0956B84F08DB6A365325A5F837B8EECD06C8516CD405D1E4F452D5F
D14DF341800C4031B9E6F1AD1E8071018900881765F796F0EFE1D19412D23099
74DF2DFB654CA6205081E3A54F95FF7D821F261C7EBA5F4251118B7117491EDE
11BB7EB179ED68012F7B055080CB4F5E97FFF1E35756C47AF66481BA92DE3081
0FA5E9DC2D31C944BF48CEA2558AD379700E0CD1C109197E3D5DDEEC1B81B938
F2EC314D4FA544B579C611C98412652756392BBD56FEA57BEB4002E1D09CD3D6
F974CBBB73B8201DAC2366F4C828554ADB1A3DCC04B0D0484BB7D91A681193CD
A64FDE4A56E2239884729015470C158352BC64D3DE463BF13A9C3B15DD7B9960
4ABC6E1889A502CC634DFB2776DFC79928424EFE6122A983222F02966E681842
183CF7746D84184A5D0DEEFF67285522FF71AA36119131E6E57EBFC20FF6BEF7
63EAA283BAA8B0FF26822DDD5808C5E4528EF031046CECBDB9112D8A0C21F4A8
D8E352D34D40C758661F35C2B1B06CCF47C4D3230C405CD51BE50BA259E5D395
D707EA52DF06B26A574CEDB1D8ED94F3CFA70DB2F66B204B334277DCA7D43F55
2F1A3A6B122FAC2CDD2DE441AEBAEFCAE586653C3F2221AACFEDA75F72A50987
5C564FF324E6C818F612F821F0F9D17C65718F529613B322D48B8F368DAC1304
EFD018EEE360F694AAB7CA8ED7BF4CAB4D314AC5BBC585325D582E072F2A4426
790BFB20EBF9203C859EC29A2822900BD7B15D8DE68F71B1C3C86D68F381EC41
25A9EF2F758D8632680A893E519753008C4032A9B5F04734689333C3F12F3078
7E0718E193A09BC9B8144F7437998AFCB18492D15CB5FB5A83073AE236371436
8FCFF305BE5817E5004343BEA5A9973C0CD9E09CEEE91D38D34EE49166BBDDAC
E0D783A28F28193EA2B1C4B545E6F0BD82CC96D9B2E3A51955A4887AC6A3BD8A
1D7716D896E4C36D42BAF2218E104E7CB5FDDFCA04F850F44198BA633D869536
DA281945F1CABC8EEB323DC6C7EDEFF6036FFF54C0E92FB63D9AF58CB34E54BD
BA335665648A6F292FAA13DB1A9749A26134B364458EE7D34586DC5BAE3534F7
EA4026B887427E2A51F4B5F2054C908B45A8D164C821798C7A725524E47A3B2D
AA6D46A7AB9F0D47FA8E365D0DA4FFDB85EB2093E890F25DB32D104C413EB2F2
6F28D5CD601A83EC3238A0092D5A659C52A16701B9969162C09CEFA7A5C7B9BA
998A3A77E836DB5C4B0D6382135B93E00D00474D886C1A9C98F07660780762B1
DF0F45CB0A8E91E35647244BEC22B66970B126B6AFC8EA40238A330AA3DBB705
4CC2E812BBBD1026727FBE339151C893D6A04C44619CD6294494CA8A7BC049A9
32EB81225899F7FB43C2717DD975B842967232D8517FAD463D13
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 1 /periodcentered put
dup 2 /multiply put
dup 3 /asteriskmath put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 56 /universal put
dup 106 /bar put
dup 120 /section put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE1728BCD3F6C1BFD503D55A6A7A
6376AF4D646B2F31B1AF935446DCC68233C72AC164BB393DA250B0B423D32887
C680509C862B6F49EAEC995036CF797BC11DD87159241A7503B1FC87023766D2
E1CA46A71DA0AC40CF2E1D86400D33180B78C256849A5C6284A7E5E94BF3CDB5
C378EC27E9A5005DF162A20EFA98695649ED39E39A351E8168221F743DE9AC0E
DD494087DB38008470D767DF40A98BA6C3730C4CDBAF16F9C02AD4D695E6E847
1436A9547AEBD2D32649F4E7931F19D17B24AABA8DC7CCFADA5401378BA87A11
4E9251E4FDB6230D3123380AAD2B0E1A025943E06F2D82AEECD34CFFE398E78C
CD2BA232055F4D786EF54ED76ECDE5AE10B74B31DB8BF516A01F10064C35E028
2BC0ADD8C89CF7B69B3CACB863972EE0CB1DC55646C9A00E180C6B6C8B4FE7C4
1AE5EAB9CED9A8AA53CDDF3E8AD22577FCAAE8A2CAD4AD27EE9999A9B9DA0652
F04E79E09456DBEC5290570B0FE1B6A0C2551569206F70FA60969C5105B0A2A6
BB59F1459AF1F55DE3B3CDFBA32A3F7EEDFB489C725C6905EC33C2B45101BB17
CC2802E332DD47F6CD002F4174268BB4F934CC5C5BF54D34AD589902E7B51D8C
203396CE03876A867825CCBE132F8E98081E9E8D428C91DE713A5F400833326D
E38541CC00CF3D9DBD5C16A4E413480250D7DDBAB1F8AFDE43692609DFCF21ED
D9DC567EB0D770ECEEE24844E69C742376155CD48E8D6728FA036881EA9DD622
B674EFFD682C15D1600FCDC6E1A83DB90B55C40B441BD1476E5C5B594161E1F6
919F40F204056DB4A5A80CD7ECB97EA0D663267C4CD0FCC0D04331E722EB286B
7002673DCBABBA9D59CA92FF24EFC904E9669C0C15D90867B0718F84A18BC1B7
52686EBCACEFA2C0F920DD1B4ABC6CF581302616179F107C77DBDBFEE4FA409E
E56258A84640E6AFB4FEF0AD4C3681A15F72B57BE18655E2E4EDCAFBDF674242
607D3E4F60AACAB06EF433E531AF81F97CFF5622661606CF44E6C9854C3B1F0A
2302D2E3BF34337F081800F45B0E59CBEDA682C2636462147C75C8EF38BBAFA3
480A7074B88402905213D6ADBA088BE040CBD63C4B81D6B2ED2A4995E08362FE
DA1F759B10410D8EBB18C63CED5E57B48D8FC86720AAF622BDE172470CAD89F9
D77A8AA59D51FBF42DF6AA1B30594029C819C44CC44E8E360CCB46998E8E4D77
4D2F588D9C73625D998EEC9036235F28FAADE9919BD249D0AFA76F800381ADE8
DDED587E2D3E5AA32D3DC3893EC8CE8A29BA948047F9EF7A02B92E75A517E9E7
2D58C75DE1FEF8A7613FA1AA6C453790929AC8FF88A3CE786D4C4FB8CC369B6B
AE97E55D327375696BB4EB72C284749EBD5A9B1B3DA0C93140AF8C40B61FBAB4
2168AA91ACAFB75D8A007959A77C879AAF4B9F983625E77F086A943CE0FD050B
9C87117439E9B1697F5FBCD665C6CB34645FC5BEFCE4B01FDE4183805DD9F5B2
B7F9ACD05C1CB906F0542012B04FDDEF8D00C6C20F39984460B3F42EAAC1975A
1512BD330F8C9609FF140822708FA4C8714F6CF9586E99B11CF90632E54F8CCA
668A43FC22219DAE5CEF36272D08F0C44E383CA134C46600D782995452B2ADDC
C36F7170EB616421857E3B5A75E529F778DEB0C305142F7E0DE515217C632CAC
0465711EA1A325C10A514BA1F2D550EB920DAF14B621EC707FEA6C1A0630BAF2
3AB885D4A3A8F61981BFF25E350E733FDB894C9966DD5C298DE1FC335888D544
2F7450EFED9AECB9F1AD6C86C550A08EC80E1D7FCDF1A9BA402284505F3A45AC
9AA6957023683A91E780B9664F1E5014D4E053B249CC94AE7E351A3D42C5B014
A93AFAF1C9D0A6027A887BE136716E9323E2238ABA3705928F8D363859EE80A5
06B698B5564CAFBC2251885B52C544F1B2CFBAC310A1E1A8C8E29EA304DE1661
A0364F1DB6616834E2D53466E54E1B16BB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1100 600 600 (ch6.dvi)
@start /Fa 255[57{}1 63.9269 /CMSY7 rf /Fb 207[20 48[{}1
45.6621 /CMSY5 rf /Fc 194[56 6[36 36 36 36 36 36 49[{}7
63.9269 /CMR7 rf /Fd 167[132 25[81 1[81 1[81 1[81 34[48
48 7[30 12[{}8 91.3242 /CMEX10 rf /Fe 145[45 65 2[30
26 45[22 59[{}5 63.9269 /CMMI7 rf /Ff 135[52 65 44 52
33 43 41 1[46 44 55 80 27 1[38 31 53 1[45 43 48 40 39
48 13[56 10[76 4[65 1[68 2[71 1[71 25 25 23[43 34[{}30
91.3242 /CMMI10 rf /Fg 132[53 2[55 2[58 41 41 43 1[58
53 58 88 29 55 1[29 58 53 1[48 2[58 51 12[73 58 79 1[72
8[83 66 69 11[53 53 53 53 53 53 53 53 53 53 1[29 46[{}36
91.3242 /CMBX10 rf /Fh 134[44 1[61 1[49 30 37 39 1[47
47 51 75 23 42 1[28 47 42 28 42 47 42 42 47 12[65 1[67
1[62 5[48 6[65 1[68 8[47 47 47 3[47 47 2[28 1[28 44[{}34
91.3242 /CMTI10 rf /Fi 131[91 46 41 48 48 66 48 51 36
36 36 48 51 46 51 76 25 48 28 25 51 46 28 41 51 41 51
46 3[25 46 25 1[68 1[94 1[68 66 51 67 1[62 71 68 84 57
2[33 68 72 60 62 70 66 65 68 1[43 1[71 1[25 25 46 46
46 46 46 46 46 46 46 46 1[25 30 25 71 46 36 36 25 2[46
76 46 25 8[41 9[76 51 51 12[{}81 91.3242 /CMR10 rf /Fj
135[67 3[49 50 52 2[63 70 105 35 2[35 70 63 1[58 1[56
70 61 16[86 5[65 4[83 3[95 8[63 63 63 3[63 63 2[35 46[{}25
109.589 /CMBX10 rf /Fk 135[41 13[25 49[51 34[71 71 16[46
71 25 71{}9 91.3242 /CMSY10 rf /Fl 139[78 79 83 1[111
100 111 167 56 2[56 3[92 2[111 97 12[139 3[137 25[100
54[{}15 174.346 /CMBX10 rf /Fm 139[67 1[71 1[95 7[95
2[79 3[84 29[124 67[{}7 149.44 /CMBX10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 166 1
TeXDict begin 166 0 bop 0 332 a Fm(Chapter)30 b Fl(6)0
710 y(T)-17 b(ransp)6 b(ortation)69 b(Problems)p 0 802
2700 4 v 0 1098 a Fk(x)p Fj(16.)56 b(Phase)42 b(1)0 1235
y Fi(Ha)m(v)m(e)f(y)m(ou)f(ev)m(er)f(had)g(the)g(opp)s(ortunit)m(y)f
(to)h(read)g(magazines)f(from)h(y)m(ears)0 1344 y(gone)27
b(b)m(y?)41 b(The)28 b(adv)m(ertisemen)m(ts)f(in)i(these)f(magazines)f
(are)h(fascinating.)38 b(In)0 1454 y(one)25 b(old)h(magazine,)g(blue)g
(jeans,)g(touted)e(as)i(an)g(essen)m(tial)f(piece)h(of)f(clothing)0
1563 y(apparel)40 b(for)g(agricultural)f(w)m(ork)m(ers,)44
b(w)m(ere)d(adv)m(ertised)f(for)g($2.99)g(a)h(pair.)0
1673 y(Ho)m(w)m(ev)m(er,)31 b(in)g(small)g(prin)m(t,)f(w)m(as)h(the)e
(follo)m(wing)i(phrase:)183 1810 y Fh(Pric)-5 b(es)32
b(may)h(b)-5 b(e)33 b(higher)e(west)i(of)g(the)g(R)-5
b(o)g(ckies.)183 1947 y Fi(Wh)m(y)32 b(did)f(the)f(East)h(Coast)g(man)m
(ufacturers)e(of)i(these)f(blue)h(jeans)g(feel)0 2057
y(comp)s(elled)26 b(to)h(put)g(that)f(disclaimer)i(in)f(their)g(adv)m
(ertisemen)m(t?)38 b(Ob)m(viously)-8 b(,)0 2166 y(they)38
b(w)m(ere)g(faced)f(with)h(the)f(daun)m(ting)h(task,)i(and)e(equally)h
(daun)m(ting)e(ex-)0 2276 y(p)s(ense,)28 b(of)h(transp)s(orting)d
(their)j(pro)s(duct)d(across)i(the)h(Ro)s(c)m(ky)g(Moun)m(tains)f(to)0
2385 y(the)g(consumers)g(in)i(the)e(W)-8 b(est)29 b(who)g(w)m(an)m(ted)
g(blue)g(jeans.)39 b(No)m(w,)31 b(with)e(man-)0 2495
y(ufacturing)34 b(plan)m(ts)h(lo)s(cated)f(throughout)f(the)i(United)h
(States,)g(instead)e(of)0 2604 y(primarily)23 b(in)g(the)f(East,)j(and)
d(with)g(impro)m(v)m(ed)h(means)f(of)h(shipping,)h(it)f(migh)m(t)0
2714 y(not)e(b)s(e)f(necessary)g(to)h(put)g(suc)m(h)h(disclaimers)f(in)
h(adv)m(ertisemen)m(ts.)36 b(Nonethe-)0 2824 y(less,)29
b(transp)s(ortation)c(costs)j(con)m(tin)m(ue)f(to)h(b)s(e)g(an)g(imp)s
(ortan)m(t)f(consideration)0 2933 y(for)j(business)f(and)h(industry)-8
b(.)183 3043 y(In)32 b(Example)g(2.4)f(of)h(Chapter)e(1,)j(w)m(e)f
(discussed)f(a)h(particular)e(case)h(of)0 3152 y(transp)s(ortation)k
(problems)j(and)g(solv)m(ed)g(this)h(problem)f(b)m(y)h(using)f(a)h
(trial-)0 3262 y(and-error)c(metho)s(d.)59 b(Since)36
b(transp)s(ortation)d(problems)k(pro)m(vide)f(particu-)0
3372 y(larly)41 b(simple)g(and)f(nice)g(examples)g(of)h(linear)f
(programs,)i(w)m(e)f(will)h(revisit)0 3481 y(these)24
b(examples,)i(setting)e(them)g(up)h(as)g(linear)g(programs)f(and)h
(then)f(solving)0 3591 y(them)h(using)g(the)g(metho)s(ds)f(w)m(e)i(ha)m
(v)m(e)g(just)f(learned.)38 b(Historically)26 b(sp)s(eaking,)0
3700 y(these)42 b(problems)g(w)m(ere)g(in)m(v)m(estigated)g(in)i
(detail)e(man)m(y)h(y)m(ears)g(b)s(efore)e(the)0 3810
y(general)f(linear)h(program)f(w)m(as.)74 b(In)m(terestingly)-8
b(,)43 b(the)d(concept)f(of)i(dualit)m(y)-8 b(,)0 3920
y(whic)m(h)33 b(w)m(e)h(considered)d(in)j(Chapter)d(5,)j(\014rst)f(app)
s(eared)e(in)i(transp)s(ortation)0 4029 y(problems.)183
4139 y(In)j(this)g(c)m(hapter)f(w)m(e)i(will)h(see)e(that)f(Phase)h(1)g
(of)g(solving)h(linear)f(pro-)0 4248 y(grams)41 b(|\014nding)h(a)f
(feasible)h(solution|can)e(b)s(e)h(done)g(b)m(y)h(hand.)75
b(Also,)0 4358 y(Phase)43 b(2|\014nding)g(an)h(optimal)f(solution|is)h
(easier)f(in)h(transp)s(ortation)0 4467 y(problems)29
b(than)h(for)f(general)g(linear)h(programs.)1282 4938
y(166)p eop end
%%Page: 167 2
TeXDict begin 167 1 bop 1933 91 a Fk(x)p Fh(16.)41 b(Phase)32
b(1)91 b Fg(167)183 311 y Fi(T)-8 b(o)23 b(in)m(tro)s(duce)e(graphs)h
(and)h(tables,)h(w)m(e)g(consider)e(again)g(Example)i(15.7)0
420 y(and)30 b(b)s(egin)f(with)h(a)g(graphical)f(represen)m(tation)e
(\(Fig.)40 b(16.1\).)30 630 y
 18945146 10893473 -723599 7367557 32364625 22760488 startTexFig
 30 630 a
%%BeginDocument: Fig.16.1.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(r) 6.0
%%For: (Christopher Byrne) (Penn State)
%%Title: (ch6fig1.eps)
%%CreationDate: (11/13/18) (0:14)
%%BoundingBox: -11 112 492 346
%%HiResBoundingBox: -10.5 112.8603 492 345.4302
%%DocumentProcessColors: Black
%%DocumentFonts: CMR
%%+ MSLineDrawPSMT
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set)
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: -82 101 589 383
%AI3_DocumentPreview: Header
%AI5_ArtSize: 792 610
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -306 828 -1.5 794 557 58 0 1 3 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: CMR
%%IncludeFont: MSLineDrawPSMT
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _CMR CMR
[/_CMR/CMR 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI3_BeginEncoding: _MSLineDrawPSMT MSLineDrawPSMT
[/_MSLineDrawPSMT/MSLineDrawPSMT 0 0 0 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0D0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A
4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777776757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404050505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
0 To
1 0 0 1 50.25 287 0 Tp
TP
-21.0073 0 Td
0 Tr
0 O
0 g
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
/_CMR 12 Tf
0 Ts
100 Tz
0 Tt
1 TA
%_ 0 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 0 2 2 3 Th
0 Tq
14.5 0 Tl
0 Tc
0 Tw
(Bedford) Tx
(\r) TX
11.001 -14.5 Td
(220) Tx
(\r) TX 
TO
1 Ap
0 R
0 G
471.5001 131.9302 m
478.127 131.9302 483.5 137.3029 483.5 143.9303 C
483.5 152.93 L
483.5 159.5574 478.127 164.9302 471.5001 164.9302 C
376.9999 164.9302 L
370.373 164.9302 365 159.5574 365 152.93 C
365 143.9303 L
365 137.3029 370.373 131.9302 376.9999 131.9302 C
471.5001 131.9302 L
s
471.5001 220.9302 m
478.127 220.9302 483.5 226.3029 483.5 232.9303 C
483.5 241.93 L
483.5 248.5574 478.127 253.9302 471.5001 253.9302 C
376.9999 253.9302 L
370.373 253.9302 365 248.5574 365 241.93 C
365 232.9303 L
365 226.3029 370.373 220.9302 376.9999 220.9302 C
471.5001 220.9302 L
s
0 To
1 0 0 1 51.25 195.4927 0 Tp
TP
-24.0073 0 Td
0 Tr
0 O
0 g
(Scranton) Tx
(\r) TX
14.001 -14.5 Td
(280) Tx
(\r) TX 
TO
0 R
0 G
96.5001 176.9927 m
103.127 176.9927 108.5 182.3654 108.5 188.9928 C
108.5 197.9925 L
108.5 204.6199 103.127 209.9927 96.5001 209.9927 C
1.9999 209.9927 L
-4.627 209.9927 -10 204.6199 -10 197.9925 C
-10 188.9928 L
-10 182.3654 -4.627 176.9927 1.9999 176.9927 C
96.5001 176.9927 L
s
0 To
1 0 0 1 424.25 239.4302 0 Tp
TP
-20.3423 0 Td
0 Tr
0 O
0 g
(Altoona) Tx
(\r) TX
10.3359 -14.5 Td
(120) Tx
(\r) TX 
TO
0 To
1 0 0 1 424.25 330.4302 0 Tp
TP
-36.0102 0 Td
0 Tr
(State College) Tx
(\r) TX
26.0039 -14.5 Td
(170) Tx
(\r) TX 
TO
0 R
0 G
471.5001 311.9302 m
478.127 311.9302 483.5 317.3029 483.5 323.9303 C
483.5 332.93 L
483.5 339.5564 478.127 344.9302 471.5001 344.9302 C
376.9999 344.9302 L
370.3732 344.9302 365 339.5556 365 332.93 C
365 323.9303 L
365 317.3026 370.3732 311.9302 376.9999 311.9302 C
471.5001 311.9302 L
s
0 To
1 0 0 1 424.25 150.4302 0 Tp
TP
-27.9946 0 Td
0 Tr
0 O
0 g
(Harrisburg) Tx
(\r) TX
17.9883 -14.5 Td
(210) Tx
(\r) TX 
TO
0 Ap
0 R
0 G
300 Ar
2 w
239.5 306.5 m
S
1 Ap
800 Ar
1 w
363.249 323.9918 m
363.2479 324.0647 L
112.251 288.0635 L
112.252 287.9906 L
363.249 323.9918 L
s
361.4999 321.5 m
361.4883 321.5675 L
111.5 195.75 L
111.5115 195.6825 L
361.4999 321.5 L
s
363.4303 147.2059 m
363.4314 147.2778 L
110.1968 282.4199 L
110.1958 282.3481 L
363.4303 147.2059 L
s
363.4994 236.9998 m
363.4832 237.0757 L
111.5005 285.2502 L
111.5167 285.1743 L
363.4994 236.9998 L
s
364.1211 146.7552 m
364.1217 146.8274 L
110.5002 192.501 L
110.4996 192.4288 L
364.1211 146.7552 L
s
367.3748 237.124 m
367.3601 237.1918 L
106.5002 193.501 L
106.5149 193.4332 L
367.3748 237.124 L
s
0 To
1 0 0 1 288 322.5 0 Tp
TP
-7.2012 0 Td
0 Tr
0 O
0 g
/_MSLineDrawPSMT 12 Tf
(77) Tx
(\r) TX 
TO
0 To
1 0 0 1 288 166.5 0 Tp
TP
-10.8018 0 Td
0 Tr
(122) Tx
(\r) TX 
TO
0 To
1 0 0 1 288 195.5 0 Tp
TP
-10.8018 0 Td
0 Tr
(105) Tx
(\r) TX 
TO
0 To
1 0 0 1 288 231 0 Tp
TP
-10.8018 0 Td
0 Tr
(186) Tx
(\r) TX 
TO
0 To
1 0 0 1 288 259.5 0 Tp
TP
-7.2012 0 Td
0 Tr
(39) Tx
(\r) TX 
TO
0 To
1 0 0 1 288 292.5 0 Tp
TP
-10.8018 0 Td
0 Tr
(150) Tx
(\r) TX 
TO
0 To
1 0 0 1 492 171 0 Tp
TP
0 Tr
/_CMR 12 Tf
(\r) TX
TO
0 To
1 0 0 1 450 115.5 0 Tp
TP
0 Tr
(\r) TX
TO
0 R
0 G
98.0001 268 m
104.627 268 110 273.3727 110 280.0001 C
110 288.9998 L
110 295.6272 104.627 301 98.0001 301 C
3.4999 301 L
-3.127 301 -8.5 295.6272 -8.5 288.9998 C
-8.5 280.0001 L
-8.5 273.3727 -3.127 268 3.4999 268 C
98.0001 268 L
s
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument

 endTexFig
 1076 2019 a Fg(Figure)35 b(16.1.)518 2129 y Fi(Graphical)29
b(represen)m(tation)e(of)j(Example)g(15.7)183 2340 y(Also,)h(the)e(n)m
(umerical)h(data)f(can)h(b)s(e)f(written)g(in)h(a)g(table:)p
767 2513 1167 4 v 767 2582 a Fk(j)g Fi(77)167 b Fk(j)31
b Fi(39)167 b Fk(j)30 b Fi(105)121 b Fk(j)767 2673 y(j)289
b(j)h(j)f(j)31 b Fi(220)767 2764 y Fk(j)289 b(j)h(j)f(j)p
767 2791 V 767 2859 a(j)30 b Fi(150)121 b Fk(j)31 b Fi(186)121
b Fk(j)30 b Fi(122)121 b Fk(j)767 2951 y(j)289 b(j)h(j)f(j)31
b Fi(280)767 3042 y Fk(j)289 b(j)h(j)f(j)p 767 3069 V
767 3137 a(j)76 b Fi(170)f Fk(j)i Fi(120)e Fk(j)h Fi(210)f
Fk(j)668 3303 y Fg(T)-9 b(able)36 b(16.2.)k Fi(Example)30
b(15.7)g(tabled)183 3514 y(W)-8 b(e)29 b(left)h(ro)s(om)f(in)h(the)e
(table)h(for)h(v)-5 b(alues)29 b(of)h(the)e(unkno)m(wns)i
Ff(x)2375 3528 y Fe(ij)2469 3514 y Fi(whic)m(h)0 3623
y(are)22 b(sometimes)f(referred)f(to)i(as)g(a)g Ff(f)10
b(l)r(ow)r(:)24 b Fi(An)m(y)f(transp)s(ortation)c(problem)i(can)0
3733 y(b)s(e)g(treated)e(similarly)-8 b(.)40 b(Note)21
b(that)f(in)i(Example)g(15.7)f(the)g Fh(b)-5 b(alanc)g(e)26
b(c)-5 b(ondition)0 3842 y Fi(holds:)37 b(The)22 b(total)f(supply)i
(\(the)e(sum)i(of)f(the)f(n)m(um)m(b)s(ers)h(in)h(the)f(righ)m(t)g
(margin\))0 3952 y(equals)g(the)e(total)h(demand)f(\(the)h(sum)h(of)f
(the)g(n)m(um)m(b)s(ers)g(across)g(the)f(b)s(ottom\).)183
4062 y(Example)41 b(2.4)g(presen)m(ted)e(an)h(op)s(en)g(transp)s
(ortation)d(problem,)44 b(that)0 4171 y(is,)50 b(a)45
b(problem)f(without)g(the)g(balance)g(condition.)84 b(That)44
b(problem)g(can)0 4281 y(b)s(e)32 b(written)f(as)i(a)g(closed)f
(\(balanced\))e(transp)s(ortation)f(problem,)k(with)f(the)0
4390 y(balance)27 b(condition)g(satis\014ed,)i(b)m(y)g(in)m(tro)s
(ducing)e(a)h(\014ctitious)f(store,)i Fh(dummy)0 4500
y(demand)j(p)-5 b(oint,)32 b Fi(where)d(an)m(y)i(surplus)f(pro)s(duct)e
(go)s(es)i(at)g(no)g(cost.)41 b(If)31 b(w)m(e)g(set)0
4610 y(the)40 b(demand)g(at)g(the)g(\014ctitious)g(store)f(to)i(b)s(e)f
(exactly)g(the)g(total)g(surplus)0 4719 y(supply)-8 b(,)31
b(then)e(the)g(balance)g(condition)g(is)i(restored.)p
eop end
%%Page: 168 3
TeXDict begin 168 2 bop 0 91 a Fg(168)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)183
311 y Fi(A)26 b(p)s(osition)f(in)h(the)f(table)g(corresp)s(onds)e(to)i
(an)h(arro)m(w)f(in)h(the)f(graphical)0 420 y(represen)m(tation,)d(and)
g(en)m(tering)f(a)i(n)m(um)m(b)s(er)f(in)h(the)f Ff(i;)15
b(j)29 b Fi(p)s(osition)21 b(in)i(the)f(table)0 530 y(corresp)s(onds)27
b(to)i(allo)s(cating)e(sto)s(c)m(k)i(from)g(w)m(arehouse)f
Ff(i)j Fi(to)e(store)f Ff(j)5 b Fi(.)40 b(Here)30 b(is)0
639 y(a)h(w)m(a)m(y)h(to)f(\014nd)g(a)g(feasible)f(solution.)43
b(First)31 b(c)m(hec)m(k)g(the)f(balance)g(condition,)0
749 y(whic)m(h)e(is)g(satis\014ed)e(in)i(this)g(problem)f(so)g(w)m(e)h
(can)f(pro)s(ceed.)37 b(Pic)m(k)29 b(a)e(p)s(osition)0
858 y(in)37 b(the)f(table)g(and)g(write)g(the)g(maxim)m(um)i(p)s
(ossible)e(n)m(um)m(b)s(er,)i(namely)f(the)0 968 y(a)m(v)-5
b(ailable)30 b(sto)s(c)m(k)g(at)f(the)h(corresp)s(onding)d(w)m
(arehouse.)183 1078 y(F)-8 b(or)24 b(example,)i(in)f(Example)f(15.7)h
(w)m(e)g(c)m(ho)s(ose)e(the)h(\014rst)g(p)s(osition)f(in)i(the)0
1187 y(\014rst)k(ro)m(w)i(and)e(write)h(there)f(170.)p
690 1310 1320 4 v 690 1378 a Fk(j)290 b(j)g(j)f(j)690
1469 y(j)77 b Fi(170)e Fk(j)290 b(j)f(j)31 b Fi(220)-153
b(||)31 b(50)690 1561 y Fk(j)290 b(j)g(j)f(j)p 690 1587
V 690 1656 a(j)h(j)g(j)f(j)690 1747 y(j)h(j)g(j)f(j)31
b Fi(280)690 1838 y Fk(j)290 b(j)g(j)f(j)p 690 1865 V
690 1933 a(j)62 b Fi(170)-154 b(||)62 b Fk(j)76 b Fi(120)g
Fk(j)g Fi(210)f Fk(j)183 2153 y Fi(W)-8 b(e)32 b(suppressed)e(the)h(ob)
5 b(jectiv)m(e)31 b(function)g(b)s(ecause)e(w)m(e)k(do)e(not)g(use)h
(it)0 2262 y(y)m(et.)61 b(Note)36 b(that)f(the)h(\014rst)g(column)h(of)
f(the)g(table,)i(corresp)s(onding)c(to)i(the)0 2372 y(store)29
b(in)h(State)e(College,)i(is)h(done.)40 b(W)-8 b(e)30
b(indicate)e(this)i(b)m(y)h(crossing)e(out)g(the)0 2481
y(demand)23 b(170.)38 b(The)23 b(second)g(en)m(try)g(in)i(the)e
(\014rst)g(column)h(m)m(ust)g(no)m(w)g(b)s(e)f(zero,)0
2591 y(b)s(ecause)i(the)g(demand)h(is)h(satis\014ed.)39
b(W)-8 b(e)27 b(suppress)f(en)m(tering)f(this)i(zero.)38
b(W)-8 b(e)0 2700 y(k)m(eep)24 b(trac)m(k)g(of)h(unallo)s(cated)c(w)m
(arehouse)i(sto)s(c)m(k)h(b)m(y)h(en)m(tering)e(a)i(new)f(n)m(um)m(b)s
(er)0 2810 y(50)30 b(instead)f(of)h(220)f(at)h(the)f(righ)m(t)h(margin)
g(of)g(the)f(table.)183 2920 y(Th)m(us,)47 b(w)m(e)c(en)m(tered)f(one)g
(n)m(um)m(b)s(er,)47 b(crossed)42 b(out)g(one)h(n)m(um)m(b)s(er,)j(and)
0 3029 y(adjusted)34 b(another)g(n)m(um)m(b)s(er.)58
b(The)35 b(\014rst)g(column)h(is)g(done)f(\(w)m(e)h(found)f(the)0
3139 y(\015o)m(w)30 b(in)h(it\),)f(and)g(w)m(e)g(pro)s(ceed)e(with)i(a)
g(smaller,)g(2-b)m(y-2)i(table.)183 3248 y(W)-8 b(e)25
b(pic)m(k)h(a)g(second)e(p)s(osition)g(in)i(the)f(table)f(and)h(again)g
(write)g(the)g(max-)0 3358 y(im)m(um)31 b(p)s(ossible)f(n)m(um)m(b)s
(er)f(50)h(=)h(min\(50,)e(120\):)p 675 3503 1350 4 v
675 3572 a Fk(j)290 b(j)f(j)h(j)675 3663 y(j)77 b Fi(170)e
Fk(j)99 b Fi(50)f Fk(j)290 b(j)31 b Fi(220)-154 b(||)32
b(50)-153 b(||)675 3754 y Fk(j)290 b(j)f(j)h(j)p 675
3781 V 675 3849 a(j)g(j)f(j)h(j)675 3941 y(j)g(j)f(j)h(j)31
b Fi(280)675 4032 y Fk(j)290 b(j)f(j)h(j)p 675 4058 V
675 4127 a(j)61 b Fi(170)-153 b(||)62 b Fk(j)f Fi(120)-153
b(||)61 b Fk(j)77 b Fi(210)e Fk(j)675 4218 y(j)290 b(j)99
b Fi(70)f Fk(j)290 b(j)p eop end
%%Page: 169 4
TeXDict begin 169 3 bop 1933 91 a Fk(x)p Fh(16.)41 b(Phase)32
b(1)91 b Fg(169)183 311 y Fi(No)m(w)46 b(b)s(oth)e(the)g(\014rst)h(ro)m
(w)g(and)g(the)f(\014rst)h(column)f(are)h(done.)85 b(W)-8
b(e)0 420 y(rep)s(eat)36 b(this)i(pro)s(cedure)e(for)i(remaining)f(1-b)
m(y-2)j(matrix,)g(as)f(long)f(as)g(an)m(y)0 530 y(c)m(hoice)29
b(remains:)p 668 659 1365 4 v 668 727 a Fk(j)289 b(j)h(j)f(j)668
819 y(j)76 b Fi(170)f Fk(j)99 b Fi(50)g Fk(j)289 b(j)31
b Fi(220)-153 b(||)31 b(50)-153 b(||)668 910 y Fk(j)289
b(j)h(j)f(j)p 668 937 V 668 1005 a(j)g(j)h(j)f(j)668
1096 y(j)g(j)99 b Fi(70)g Fk(j)289 b(j)31 b Fi(280)-153
b(||)31 b(210)668 1188 y Fk(j)289 b(j)h(j)f(j)p 668 1214
V 668 1283 a(j)61 b Fi(170)-153 b(||)61 b Fk(j)g Fi(120)-153
b(||)62 b Fk(j)76 b Fi(210)f Fk(j)668 1374 y(j)122 b
Fi(0)f Fk(j)84 b Fi(70)-153 b(||)85 b Fk(j)289 b(j)183
1555 y Fi(A)m(t)27 b(the)e(last)h(step)f(the)h(allo)s(cation)e(will)k
(ha)m(v)m(e)e(b)s(een)f(determined)f(b)m(y)j(the)0 1664
y(previous)j(c)m(hoices:)p 652 1793 1396 4 v 652 1862
a Fk(j)290 b(j)g(j)f(j)652 1953 y(j)77 b Fi(170)e Fk(j)99
b Fi(50)g Fk(j)289 b(j)31 b Fi(220)-153 b(||)31 b(50)-153
b(|{)652 2045 y Fk(j)290 b(j)g(j)f(j)p 652 2071 V 652
2140 a(j)h(j)g(j)f(j)652 2231 y(j)h(j)99 b Fi(70)g Fk(j)76
b Fi(210)f Fk(j)31 b Fi(280)-153 b(||)31 b(210)-153 b(||)652
2322 y Fk(j)290 b(j)g(j)f(j)p 652 2349 V 652 2417 a(j)62
b Fi(170)-154 b(||)62 b Fk(j)76 b Fi(120)-153 b(||)47
b Fk(j)76 b Fi(210)-153 b(||)46 b Fk(j)652 2508 y(j)290
b(j)84 b Fi(70)-153 b(||)85 b Fk(j)289 b(j)183 2689 y
Fi(The)29 b(corresp)s(onding)e(total)j(cost)f(is)581
2915 y(77)20 b Fk(\001)h Fi(170)e(+)h(39)g Fk(\001)h
Fi(50)e(+)h(186)g Fk(\001)g Fi(70)g(+)g(122)g Fk(\001)g
Fi(210)p Ff(:)183 3096 y Fi(Here)g(is)i(the)e(resulting)g(feasible)h
(solution,)h(with)f(t)m(w)m(o)h(zeros)e(suppressed:)p
767 3225 1167 4 v 767 3293 a Fk(j)289 b(j)h(j)f(j)767
3385 y(j)76 b Fi(170)f Fk(j)99 b Fi(50)g Fk(j)289 b(j)31
b Fi(220)767 3476 y Fk(j)289 b(j)h(j)f(j)p 767 3502 V
767 3571 a(j)g(j)h(j)f(j)767 3662 y(j)g(j)99 b Fi(70)g
Fk(j)76 b Fi(210)f Fk(j)31 b Fi(280)767 3754 y Fk(j)289
b(j)h(j)f(j)p 767 3780 V 767 3849 a(j)76 b Fi(170)f Fk(j)i
Fi(120)e Fk(j)h Fi(210)f Fk(j)183 4029 y Fi(This)32 b(metho)s(d)e(of)i
(\014nding)f(a)h(feasible)f(solution)h(w)m(orks)g(for)g(an)m(y)g
(trans-)0 4139 y(p)s(ortation)i(problem)i(under)g(the)f(balance)h
(condition.)59 b(No)m(w)37 b(it)g(is)g(time)g(to)0 4248
y(state)29 b(an)h(arbitrary)e(transp)s(ortation)f(problem.)0
4389 y Fg(The)36 b(General)f(T)-9 b(ransp)s(ortation)36
b(Problem.)0 4500 y Fi(A)i(man)m(ufacturer)d(has)i Ff(m)h
Fi(w)m(arehouses)e(and)h Ff(n)h Fi(retail)f(stores.)61
b(The)37 b(w)m(are-)0 4610 y(house)31 b(#)15 b Ff(i)34
b Fi(has)e Ff(a)625 4624 y Fe(i)689 4610 y Fi(units)g(of)g(pro)s(duct)e
(a)m(v)-5 b(ailable)33 b(and)f(the)f(store)g(#)15 b Ff(j)38
b Fi(needs)0 4719 y Ff(b)39 4733 y Fe(j)108 4719 y Fi(units.)p
eop end
%%Page: 170 5
TeXDict begin 170 4 bop 0 91 a Fg(170)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)183
311 y Fi(It)30 b(is)g(assumed)g(that)f(the)g(follo)m(wing)h
Fh(b)-5 b(alanc)g(e)34 b(c)-5 b(ondition)31 b Fi(holds:)1054
484 y Fe(m)1021 511 y Fd(X)1027 706 y Fe(i)p Fc(=1)1183
598 y Ff(a)1231 612 y Fe(i)1302 598 y Fi(=)1457 484 y
Fe(n)1414 511 y Fd(X)1417 706 y Fe(j)t Fc(=1)1576 598
y Ff(b)1615 612 y Fe(j)1654 598 y Ff(:)0 909 y Fi(F)-8
b(or)22 b(instance,)i(in)f(Example)f(15.7)h(the)f(balance)f(condition)g
(is)j(satis\014ed.)37 b(This)0 1019 y(is)28 b(not)e(the)g(case)h(in)g
(Example)g(2.4,)i(as)e(w)m(e)g(observ)m(ed.)39 b(The)26
b(cost)h(of)g(shipping)0 1128 y(one)32 b(unit)g(from)g(w)m(arehouse)e
(#)15 b Ff(i)34 b Fi(to)e(store)f(#)15 b Ff(j)38 b Fi(is)33
b(denoted)d(b)m(y)j Ff(c)2297 1142 y Fe(ij)2393 1128
y Fi(and)f(the)0 1238 y(n)m(um)m(b)s(er)c(of)g(units)g(shipp)s(ed)g
(from)g(w)m(arehouse)f(#)15 b Ff(i)29 b Fi(to)f(store)f(#)15
b Ff(j)34 b Fi(is)29 b(denoted)0 1348 y(b)m(y)i Ff(x)179
1362 y Fe(ij)243 1348 y Ff(:)g Fi(The)f(linear)g(program)f(can)g(b)s(e)
g(stated)g(as)h(follo)m(ws:)343 1492 y Fd(8)343 1575
y(>)343 1602 y(>)343 1629 y(>)343 1657 y(>)343 1684 y(>)343
1712 y(>)343 1739 y(>)343 1766 y(>)343 1794 y(>)343 1821
y(>)343 1849 y(>)343 1876 y(<)343 2040 y(>)343 2068 y(>)343
2095 y(>)343 2123 y(>)343 2150 y(>)343 2177 y(>)343 2205
y(>)343 2232 y(>)343 2260 y(>)343 2287 y(>)343 2314 y(>)343
2342 y(:)459 1635 y Fi(minimize)164 b Ff(C)7 b Fi(\()p
Ff(x)1143 1649 y Fc(11)1220 1635 y Ff(;)15 b(:)g(:)g(:)j(;)d(x)1475
1649 y Fe(mn)1590 1635 y Fi(\))25 b(=)1781 1521 y Fe(m)1747
1548 y Fd(X)1754 1743 y Fe(i)p Fc(=1)1938 1521 y Fe(n)1894
1548 y Fd(X)1897 1743 y Fe(j)t Fc(=1)2041 1635 y Ff(c)2081
1649 y Fe(ij)2160 1635 y Ff(x)2212 1649 y Fe(ij)439 1925
y Fi(sub)5 b(ject)29 b(to)1114 1810 y Fe(n)1071 1838
y Fd(X)1078 2032 y Fe(i)p Fc(=1)1264 1925 y Ff(x)1316
1939 y Fe(ij)1405 1925 y Fk(\025)d Ff(b)1541 1939 y Fe(j)1579
1925 y Ff(;)92 b(j)30 b Fi(=)c(1)p Ff(;)15 b(:)g(:)g(:)i(;)e(m)1137
2087 y Fe(m)1104 2115 y Fd(X)1107 2309 y Fe(j)t Fc(=1)1266
2201 y Ff(x)1318 2215 y Fe(ij)1408 2201 y Fk(\024)25
b Ff(a)1552 2215 y Fe(i)1583 2201 y Ff(;)92 b(i)26 b
Fi(=)f(1)p Ff(;)15 b(:)g(:)g(:)i(;)e(n)929 2400 y(x)981
2414 y Fe(ij)1071 2400 y Fk(\025)26 b Fi(0)p Ff(;)45
b(i)26 b Fi(=)g(1)p Ff(;)15 b(:)g(:)g(:)i(;)e(n;)46 b(j)30
b Fi(=)c(1)p Ff(;)15 b(:)g(:)g(:)i(;)e(m;)0 2606 y Fi(where)29
b Ff(C)37 b Fi(is)31 b(the)e(total)h(cost)f(function)g(to)g(b)s(e)g
(minimized,)i(the)e(constrain)m(ts)849 2779 y Fe(n)806
2807 y Fd(X)813 3001 y Fe(i)p Fc(=1)968 2893 y Ff(x)1020
2907 y Fe(ij)1110 2893 y Fi(=)c Ff(b)1245 2907 y Fe(j)1284
2893 y Ff(;)92 b(j)30 b Fi(=)25 b(1)p Ff(;)15 b(:)g(:)g(:)i(;)e(m)0
3192 y Fi(represen)m(t)22 b(the)h(n)m(um)m(b)s(er)g(of)g(units)h(that)e
(store)h(#)15 b Ff(j)29 b Fi(receiv)m(es)23 b(from)h(w)m(arehouse)0
3302 y(#)15 b Ff(i;)44 b Fi(and)d(the)h(remaining)f(constrain)m(ts)f
(represen)m(t)h(the)g(n)m(um)m(b)s(er)h(of)g(units)0
3412 y(that)28 b(w)m(arehouse)f(#)15 b Ff(i)30 b Fi(can)e(supply)h(to)f
(store)g(#)15 b Ff(j;)30 b Fi(in)f(addition)f(to)g(the)g(usual)0
3521 y(non-negativit)m(y)h(constrain)m(ts.)183 3631 y(In)42
b(this)g(c)m(hapter)f(w)m(e)i(will)h(sho)m(w)e(ho)m(w)h(the)e(simplex)i
(metho)s(d)e(solv)m(es)0 3740 y(this)33 b(problem.)47
b(F)-8 b(or)33 b(no)m(w,)h(here)e(are)g(some)g(questions)g(y)m(ou)h
(migh)m(t)g(w)m(an)m(t)g(to)0 3850 y(consider:)183 3960
y(\(a\))g(W)-8 b(e)35 b(ha)m(v)m(e)h(b)s(een)d(lo)s(oking)h(at)h(w)m(a)
m(ys)h(to)e(minimize)h(shipping)g(costs.)0 4069 y(Ho)m(w)m(ev)m(er,)c
(do)s(es)c(it)j(ev)m(er)f(mak)m(e)g(sense)f(to)h(maximize)g(shipping)g
(costs)f(rather)0 4179 y(than)k(minimize)i(them?)50 b(Consider)32
b(this)h(situation:)46 b(Y)-8 b(ou)34 b(are)f(w)m(orking)h(for)0
4288 y(an)42 b(in)m(terstate)f(mo)m(v)m(er)i(and)f(get)g(paid)h(for)f
(shipping.)78 b(In)42 b(this)h(situation,)0 4398 y(w)m(ould)30
b(y)m(ou)h(try)f(to)f(minimize)i(or)f(maximize)g(the)g(shipping)f
(cost?)p eop end
%%Page: 171 6
TeXDict begin 171 5 bop 1933 91 a Fk(x)p Fh(16.)41 b(Phase)32
b(1)91 b Fg(171)183 311 y Fi(\(b\))37 b(Is)i(the)e(general)g(transp)s
(ortation)e(problem)j Fh(gener)-5 b(al)38 b Fi(enough?)64
b(Is)0 420 y(Example)23 b(2.4)f(a)h(particular)d(case)i(of)g(the)g
(general)f(transp)s(ortation)e(problem?)0 530 y(In)40
b(other)f(w)m(ords,)j(can)e(the)f(constrain)m(ts)f(in)i(Example)g(2.4)g
(b)s(e)g(written)e(as)0 639 y(equations)h(rather)f(than)h
(inequalities?)70 b(Note)39 b(that)g(the)g(total)g(supply)h(in)0
749 y(that)33 b(example)g(is)i(130,)g(whic)m(h)f(is)h(larger)e(than)g
(the)g(total)g(demand)g(of)h(100.)0 858 y(So)k(if)g(w)m(e)g(just)g
(replace)e(the)i(inequalities)f(b)m(y)i(equations,)g(then)e(w)m(e)h(w)m
(ould)0 968 y(not)29 b(ha)m(v)m(e)i(an)m(y)f(feasible)g(solutions.)0
1128 y Fg(Remark)37 b(16.3.)44 b Fi(Historically)-8 b(,)33
b(transp)s(ortation)28 b(problems)j(w)m(ere)g(the)g(\014rst)0
1237 y(linear)45 b(programs)e(that)h(w)m(ere)h(explicitly)g(stated,)i
(studied)d(theoretically)-8 b(,)0 1347 y(solv)m(ed,)31
b(and)e(used)h(in)g(industry)-8 b(.)p 2661 1339 40 40
v 183 1507 a(No)m(w)35 b(w)m(e)f(observ)m(e)f(that)g(the)h(metho)s(d)e
(of)i(\014nding)f(a)h(feasible)g(solution)0 1616 y(w)m(orks)i(for)e(an)
m(y)i(transp)s(ortation)31 b(problem.)56 b(W)-8 b(e)35
b(select)f(an)m(y)i(p)s(osition)e(and)0 1726 y(write)22
b(there)e(the)h(maximal)i(p)s(ossible)f(en)m(try)f({)h(namely)-8
b(,)25 b(the)c(minim)m(um)i(of)f(the)0 1836 y(n)m(um)m(b)s(er)31
b(in)h(the)e(righ)m(t)i(margin)f(and)g(the)f(n)m(um)m(b)s(er)h(in)h
(the)f(b)s(ottom)e(margin.)0 1945 y(Then)20 b(w)m(e)g(cross)g(out)f
(one)h(of)g(these)f(t)m(w)m(o)i(n)m(um)m(b)s(ers,)h(whic)m(h)e(equals)g
(the)g(written)0 2055 y(en)m(try)-8 b(,)29 b(and)e(adjust)g(the)g
(other)f(one.)39 b(A)m(t)29 b(the)e(last)g(step,)h(when)f(a)h(1)16
b Fk(\002)f Fi(1)28 b(table)0 2164 y(is)k(left,)f(w)m(e)h(cross)e(out)h
(b)s(oth)e(n)m(um)m(b)s(ers.)43 b(Th)m(us,)32 b(the)e(total)h(n)m(um)m
(b)s(er)f(of)h(steps)0 2274 y(is)e Ff(m)17 b Fi(+)f Ff(n)g
Fk(\000)h Fi(1,)29 b(where)e Ff(m)i Fi(is)g(the)e(n)m(um)m(b)s(er)h(of)
g(ro)m(ws)g(and)g Ff(n)g Fi(is)h(the)f(n)m(um)m(b)s(er)f(of)0
2384 y(columns.)38 b(Our)22 b(metho)s(d)f(giv)m(es)j(a)f(feasible)f
(solution)g(with)h(at)f(most)h Ff(m)6 b Fi(+)g Ff(n)g
Fk(\000)g Fi(1)0 2493 y(nonzero)28 b(v)-5 b(alues)30
b(for)g Ff(mn)g Fi(v)-5 b(ariables.)183 2614 y(T)d(o)29
b(pro)s(ceed)d(with)i(\014nding)g(an)g(optimal)g(solution,)h(it)g(is)g
(con)m(v)m(enien)m(t)f(to)0 2724 y(mak)m(e)e(this)g(n)m(um)m(b)s(er)g
(of)g(selected)e(p)s(ositions)h(exactly)h Ff(m)12 b Fi(+)g
Ff(n)g Fk(\000)g Fi(1)26 b(b)m(y)h(crossing)0 2833 y(out)c(only)g(one)g
(margin)g(en)m(try)g(\(and)g(making)g(the)g(other)f(0\))h(in)h(the)e
(case)h(when)0 2943 y(b)s(oth)f(are)h(the)f(same)i(\(unless)e(this)i
(is)g(the)e(last)i(step\))e(and)h(allo)m(wing)h(the)f(v)-5
b(alue)0 3053 y(0)29 b(to)f(b)s(e)f(en)m(tered)g(at)h(a)h(selected)e(p)
s(osition)g(if)i(either)f(of)g(the)g(n)m(um)m(b)s(ers)g(at)g(the)0
3162 y(margin)f(is)h(0.)40 b(By)27 b(this)h(metho)s(d,)e(w)m(e)i(cross)
e(out)h(one)g(ro)m(w)g(or)g(one)g(column)g(at)0 3272
y(eac)m(h)21 b(step,)h(except)e(the)g(last.)38 b(W)-8
b(e)21 b(should)g(not)f(cross)h(out)g(the)f(last)h(remaining)0
3381 y(ro)m(w)30 b(or)g(column)g(unless)g(it)g(is)h(the)e(last)h(step,)
g(step)f Ff(m)21 b Fi(+)f Ff(n)g Fk(\000)g Fi(1)p Ff(:)183
3502 y Fi(The)32 b Ff(m)22 b Fi(+)f Ff(n)h Fk(\000)g
Fi(1)32 b(p)s(ositions)f(w)m(e)i(obtain)e(this)i(w)m(a)m(y)g(corresp)s
(ond)c(to)j(the)0 3612 y(basic)25 b(v)-5 b(ariables)26
b(\(those)e(at)h(the)g(righ)m(t)g(margin\))g(in)h(a)g(feasible)f
(standard)f(ro)m(w)0 3721 y(tableau.)42 b(W)-8 b(e)31
b(write)f(in)i(the)e(table)g(the)g(v)-5 b(alues)31 b(of)g(the)f(basic)g
(v)-5 b(ariables)31 b(and)0 3831 y(w)m(e)e(do)g(not)f(write)g(the)g
(zero)g(v)-5 b(alues)29 b(for)g(non)m(basic)f(v)-5 b(ariables)28
b(to)h(lea)m(v)m(e)g(ro)s(om)0 3941 y(for)h(the)f(v)-5
b(alues)30 b(of)g(dual)g(v)-5 b(ariables.)183 4062 y(Th)m(us,)39
b(a)e(feasible)g(solution)g(can)f(b)s(e)h(found)f(easily)i(b)m(y)g
(hand)e(for)h(an)m(y)0 4171 y(problem)22 b(small)i(enough)d(so)i(that)f
(the)g(data)g(can)g(b)s(e)g(written)f(do)m(wn)i(b)m(y)h(hand.)0
4281 y(But)36 b(in)h(fact,)h(what)e(w)m(e)h(are)f(doing)g(is)i(Phase)e
(1)h(of)f(the)g(simplex)i(metho)s(d.)0 4390 y(W)-8 b(e)36
b(use)g(smaller)h(tables)e(rather)g(than)g(standard)f(tableaux.)58
b(Initially)-8 b(,)40 b(all)0 4500 y(v)-5 b(ariables)25
b Ff(x)426 4514 y Fe(ij)516 4500 y Fi(are)g(on)g(the)g(top,)h(with)f
(slac)m(k)h(v)-5 b(ariables)25 b(at)g(the)g(righ)m(t)g(margin.)0
4610 y(The)41 b(selected)f(p)s(ositions)h(\()p Ff(i;)15
b(j)5 b Fi(\))42 b(corresp)s(ond)c(to)j(v)-5 b(ariables)42
b Ff(x)2217 4624 y Fe(ij)2323 4610 y Fi(whic)m(h)g(w)m(e)0
4719 y(piv)m(ot)30 b(to)g(the)f(righ)m(t)h(margin.)40
b(The)30 b(piv)m(ot)h(en)m(tries)e(are)h(1)g(or)g Fk(\000)p
Fi(1)p Ff(:)p eop end
%%Page: 172 7
TeXDict begin 172 6 bop 0 91 a Fg(172)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)183
311 y Fg(Example)46 b(16.4.)68 b Fi(Find)40 b(a)f(basic)h(feasible)f
(solution)g(for)g(the)g(trans-)0 420 y(p)s(ortation)28
b(problem)p 1018 550 665 4 v 1018 618 a Fk(j)152 b(j)h(j)f(j)31
b Fi(2)p 1018 645 V 1018 713 a Fk(j)152 b(j)h(j)f(j)31
b Fi(3)p 1018 740 V 1018 808 a Fk(j)53 b Fi(2)g Fk(j)h
Fi(2)f Fk(j)g Fi(1)g Fk(j)183 989 y Fi(W)-8 b(e)23 b(did)h(not)e(giv)m
(e)i(an)f(ob)5 b(jectiv)m(e)22 b(function,)i(b)s(ecause)d(w)m(e)i(do)g
(not)g(need)f(it)0 1098 y(to)g(\014nd)h(a)g(feasible)f(solution.)38
b(W)-8 b(e)23 b(use)f(the)g Ff(nor)s(thw)r(est)h Fi(metho)s(d.)36
b(According)0 1208 y(to)23 b(this)g(metho)s(d,)h(w)m(e)g(c)m(ho)s(ose)e
(the)g(p)s(osition)h(in)h(the)e(upp)s(er-left)g(corner.)37
b(Note)0 1318 y(that)28 b(w)m(e)i(cross)f(out)f(2)i(under)e(the)h
(\014rst)f(column)h(and)g(adjust)g(2)g(at)g(the)f(righ)m(t)0
1427 y(margin)i(to)f(0:)p 964 1557 772 4 v 964 1625 a
Fk(j)54 b Fi(2)f Fk(j)153 b(j)f(j)31 b Fi(2)-61 b(|)30
b(0)p 964 1652 V 964 1720 a Fk(j)153 b(j)g(j)f(j)31 b
Fi(3)p 964 1747 V 964 1815 a Fk(j)39 b Fi(2)-61 b(|)38
b Fk(j)54 b Fi(2)f Fk(j)g Fi(1)g Fk(j)183 1996 y Fi(No)m(w)36
b(the)f(\014rst)g(column)g(is)i(done,)f(and)f(the)g(north)m(w)m(est)f
(metho)s(d)g(tells)0 2105 y(us)g(to)g(c)m(ho)s(ose)f(the)g(second)g(p)s
(osition)h(in)g(the)g(\014rst)f(ro)m(w,)j(and)e(the)g(maximal)0
2215 y(n)m(um)m(b)s(er)c(w)m(e)g(can)f(put)h(there)f(is)h(0:)p
949 2345 802 4 v 949 2413 a Fk(j)54 b Fi(2)f Fk(j)g Fi(0)g
Fk(j)153 b(j)31 b Fi(2)-61 b(|)30 b(0)-61 b(|)p 949 2440
V 949 2508 a Fk(j)153 b(j)f(j)h(j)31 b Fi(3)p 949 2535
V 949 2603 a Fk(j)39 b Fi(2)-61 b(|)38 b Fk(j)53 b Fi(2)g
Fk(j)h Fi(1)f Fk(j)183 2784 y Fi(No)m(w)40 b(b)s(oth)d(the)i(\014rst)f
(ro)m(w)i(and)e(\014rst)h(column)g(are)f(done.)67 b(The)39
b(next)0 2893 y(p)s(osition)29 b(w)m(e)h(c)m(ho)s(ose)f(is)i(in)g(the)e
(second)g(ro)m(w)h(and)f(the)h(second)f(column:)p 949
3023 V 949 3091 a Fk(j)54 b Fi(2)f Fk(j)g Fi(0)g Fk(j)153
b(j)31 b Fi(2)-61 b(|)30 b(0)-61 b(|)p 949 3118 V 949
3186 a Fk(j)153 b(j)53 b Fi(2)g Fk(j)153 b(j)31 b Fi(3)-61
b(|)30 b(1)p 949 3213 V 949 3281 a Fk(j)39 b Fi(2)-61
b(|)38 b Fk(j)g Fi(2)-61 b(|)38 b Fk(j)54 b Fi(1)f Fk(j)183
3462 y Fi(No)m(w)36 b(only)h(the)e(last)g(ro)m(w)i(and)e(column)g
(remain.)58 b(W)-8 b(e)36 b(write)f(the)g(last)0 3572
y(en)m(try)30 b(1)g(and)f(cross)h(out)f(the)h(last)g(t)m(w)m(o)g(n)m
(um)m(b)s(ers)g(at)f(the)h(margin:)p 949 3701 V 949 3770
a Fk(j)54 b Fi(2)f Fk(j)g Fi(0)g Fk(j)153 b(j)31 b Fi(2)-61
b(|)30 b(0)-61 b(|)p 949 3796 V 949 3865 a Fk(j)153 b(j)53
b Fi(2)g Fk(j)h Fi(1)f Fk(j)31 b Fi(3)-61 b(|)30 b(1)-61
b(|)p 949 3891 V 949 3960 a Fk(j)39 b Fi(2)-61 b(|)38
b Fk(j)g Fi(2)-61 b(|)38 b Fk(j)h Fi(1)-61 b(|)38 b Fk(j)183
4140 y Fi(In)f(this)g(example,)i Ff(m)e Fi(=)g(2)p Ff(;)15
b(n)37 b Fi(=)g(3)p Ff(;)g Fi(and)g(w)m(e)g(wrote)f Ff(m)25
b Fi(+)g Ff(n)g Fk(\000)g Fi(1)36 b(=)h(4)0 4250 y(n)m(um)m(b)s(ers)30
b(in)g(the)f(table,)h(one)g(of)g(them)f(b)s(eing)g(0.)p
2661 4242 40 40 v 183 4390 a(In)38 b(graphical)g(terms,)i(the)e(c)m
(hosen)g(p)s(ositions)g(are)g Ff(m)26 b Fi(+)g Ff(n)g
Fk(\000)g Fi(1)38 b(edges)0 4500 y(\(arcs\))32 b(that)h(connect)f(all)j
(v)m(ertices)e(\(no)s(des\),)g(forming)h(a)g(graph)f(\(net)m(w)m(ork\))
0 4610 y(called)e(a)h Ff(tr)s(ee)p Fi(.)45 b(This)33
b(tree)d(has)i(exactly)f Ff(m)22 b Fi(+)f Ff(n)h Fk(\000)f
Fi(1)32 b(arro)m(ws)f(\(or)g(edges\),)h(is)0 4719 y(connected,)c(and)h
(has)h(no)g(lo)s(ops)f(\(cycles\).)p eop end
%%Page: 173 8
TeXDict begin 173 7 bop 1933 91 a Fk(x)p Fh(16.)41 b(Phase)32
b(1)91 b Fg(173)183 311 y Fi(As)31 b(men)m(tioned)d(previously)-8
b(,)31 b(if)g(the)e(problem)g(is)i(expressed)e(as)h(a)g(stan-)0
420 y(dard)e(ro)m(w)g(tableau,)g(the)g(c)m(hosen)g(p)s(ositions)f
(corresp)s(ond)f(to)i(the)f(basic)i(v)-5 b(ari-)0 530
y(ables)31 b(at)g(the)f(righ)m(t)h(margin)g(of)g(a)h(ro)m(w)f(feasible)
g(tableau.)42 b(The)31 b(other)f(p)s(osi-)0 639 y(tions)21
b(corresp)s(ond)e(to)j(the)f(non)m(basic)g(v)-5 b(ariables)21
b(across)g(the)g(top)g(of)h(a)f(ro)m(w)h(fea-)0 749 y(sible)32
b(tableau.)45 b(The)31 b(metho)s(d)f(just)i(describ)s(ed)e(in)i(fact)f
(implemen)m(ts)h(Phase)0 858 y(1)k(of)f(the)g(simplex)h(metho)s(d.)55
b(It)36 b(is)g(not)f(necessary)f(to)h(w)m(ork)h(with)f(the)g(en-)0
968 y(tire)27 b(tableau)g(for)g(transp)s(ortation)d(problems,)k(b)s
(ecause)e(the)h Ff(A)i Fi(blo)s(c)m(k)e(of)h(the)0 1078
y(tableau)22 b(alw)m(a)m(ys)i(consists)f(of)g(0s,)i(1s,)g(and)d
Fk(\000)p Fi(1s.)39 b(The)22 b Ff(b)i Fi(blo)s(c)m(k)f(of)g(the)g
(tableau)0 1187 y(consists)k(of)g(the)g(v)-5 b(alues)27
b(in)h(the)f(c)m(hosen)g(p)s(ositions)f(of)i(the)f(table.)39
b(Construc-)0 1297 y(tion)30 b(of)g(the)f Ff(c)h Fi(blo)s(c)m(k)g(will)
h(b)s(e)f(discussed)f(later.)183 1406 y(W)-8 b(e)41 b(alw)m(a)m(ys)h
(obtain)e(a)h(feasible)g(solution)f(if)i(the)e(balance)g(condition)0
1516 y(holds,)30 b(and)e(if)i(it)f(do)s(es)f(not)g(w)m(e)i(declare)e
(the)g(problem)g(infeasible)h(and)g(stop.)0 1626 y(This)47
b(is)g(wh)m(y)g(w)m(e)g(c)m(hec)m(k)g(the)f(balance)f(condition)g(b)s
(efore)g(b)s(eginning)g(to)0 1735 y(c)m(ho)s(ose)35 b(en)m(tries.)58
b(If)37 b(the)e(supply)h(and)g(demand)f(data)g(consist)h(of)g(in)m
(tegers,)0 1845 y(then)31 b(the)g(feasible)g(solution)h(determined)e(b)
m(y)j(this)e(metho)s(d)g(is)h(lik)m(ewise)h(in-)0 1954
y(tegral.)45 b(It)31 b(is)i(alw)m(a)m(ys)f(a)g(v)m(ertex)g(of)f(the)g
(feasible)h(region.)44 b(The)32 b(pro)s(of)e(is)j(left)0
2064 y(as)d(an)g(exercise.)183 2174 y(There)40 b(are)h(man)m(y)g(w)m(a)
m(ys)i(for)e(c)m(ho)s(osing)f(the)g(table)h(p)s(ositions)f(in)i(our)0
2283 y(metho)s(d.)c(The)29 b(north)m(w)m(est)e(metho)s(d)g(ignores)h
(the)g(ob)5 b(jectiv)m(e)27 b(function.)39 b(But)0 2393
y(other)29 b(metho)s(ds)f(for)i(c)m(ho)s(osing)e(p)s(ositions)h(ma)m(y)
i(result)f(in)g(a)g(b)s(etter)e(feasible)0 2502 y(solution,)35
b(dep)s(ending)c(on)j(the)f(ob)5 b(jectiv)m(e)33 b(function.)51
b(F)-8 b(or)34 b(example,)h(in)f(the)0 2612 y(minim)m(um)d(cost)f
(metho)s(d,)e(w)m(e)j(go)f(for)f(a)h(p)s(osition)f(with)i(minimal)g
(cost.)183 2721 y(T)-8 b(o)39 b(pro)s(ceed)e(with)j(the)e(second)g
(stage)h(of)g(the)g(simplex)h(metho)s(d,)g(w)m(e)0 2831
y(m)m(ust)35 b(reco)m(v)m(er)f(the)g Ff(c)p Fi(-part)f(of)i(the)f
(tableau)f(for)h(the)g(problem)g(from)h(the)e Ff(b)p
Fi(-)0 2941 y(part,)40 b(that)d(is,)k(from)d(the)g(table)f(en)m(tries)h
(c)m(hosen)f(to)h(construct)e(a)i(feasible)0 3050 y(solution.)65
b(The)37 b(metho)s(d)g(for)h(doing)g(this)g(is)h(b)s(est)e(describ)s
(ed)f(in)j(terms)e(of)0 3160 y Ff(potential)r(s)p Fi(.)k(W)-8
b(e)30 b(in)m(tro)s(duced)e(the)h(p)s(oten)m(tials)g(in)i(Example)f
(15.7.)183 3269 y(In)e(the)g(notation)f(of)h(the)g(general)f(transp)s
(ortation)e(problem,)k(the)e(dual)0 3379 y(problem)i(is)i(written)726
3650 y(maximize)20 b Fk(\000)1249 3536 y Fe(m)1216 3563
y Fd(X)1223 3758 y Fe(i)p Fc(=1)1378 3650 y Ff(a)1426
3664 y Fe(i)1457 3650 y Ff(u)1509 3664 y Fe(i)1560 3650
y Fi(+)1694 3536 y Fe(n)1651 3563 y Fd(X)1654 3758 y
Fe(j)t Fc(=1)1813 3650 y Ff(b)1852 3664 y Fe(j)1891 3650
y Ff(v)1935 3664 y Fe(j)1151 3945 y Fi(sub)5 b(ject)28
b(to)781 4148 y Ff(w)846 4162 y Fe(ij)936 4148 y Fi(=)e
Ff(c)1073 4162 y Fe(ij)1157 4148 y Fi(+)20 b Ff(u)1300
4162 y Fe(i)1351 4148 y Fk(\000)g Ff(v)1486 4162 y Fe(j)1550
4148 y Fk(\025)26 b Fi(0)k Fk(8)g Ff(i;)15 b(j)1107 4350
y(u)26 b Fk(\025)f Fi(0,)-33 b(\030)-8 b Ff(v)29 b Fk(\025)d
Fi(0)p Ff(:)183 4516 y Fi(In)k(Example)g(15.7,)420 4719
y([)p Ff(a)493 4733 y Fc(1)535 4719 y Ff(;)15 b(a)623
4733 y Fc(2)665 4719 y Fi(])25 b(=)h([220)p Ff(;)15 b
Fi(280])p Ff(;)g Fi([)p Ff(b)1282 4733 y Fc(1)1323 4719
y Ff(;)g(b)1402 4733 y Fc(2)1444 4719 y Ff(;)g(b)1523
4733 y Fc(3)1565 4719 y Fi(])25 b(=)h([170)p Ff(;)15
b Fi(120)p Ff(;)g Fi(210])p Ff(;)p eop end
%%Page: 174 9
TeXDict begin 174 8 bop 0 91 a Fg(174)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)820
352 y Fi([)p Ff(c)885 366 y Fe(i;j)971 352 y Fi(])26
b(=)1118 223 y Fd(\024)1205 297 y Fi(77)136 b(39)114
b(105)1182 406 y(150)90 b(186)h(122)1791 223 y Fd(\025)1854
352 y Ff(:)183 575 y Fi(While)22 b(the)g(p)s(oten)m(tials)f(corresp)s
(ond)f(to)i(the)g(constrain)m(ts)f(on)h(eac)m(h)g(retail)0
684 y(store)31 b(and)g(eac)m(h)h(w)m(arehouse)e(\(or)i(to)f(the)g
(corresp)s(onding)e(slac)m(k)k(v)-5 b(ariables\),)0 794
y(there)26 b(are)h(other)f(v)-5 b(ariables)27 b Ff(w)1058
808 y Fe(ij)1150 794 y Fi(in)h(the)e(dual)i(problem)e(that)g(corresp)s
(ond)f(to)0 904 y(the)31 b(decision)h(v)-5 b(ariable)32
b Ff(x)904 918 y Fe(ij)1001 904 y Fi(of)g(the)f(primal)i(problem.)46
b(They)32 b(are)f(the)h(slac)m(k)0 1013 y(v)-5 b(ariables)38
b(for)g(the)f(dual)h(problem)g(written)f(in)h(terms)g(of)g(p)s(oten)m
(tials.)63 b(W)-8 b(e)0 1123 y(will)32 b(call)e(the)f(v)-5
b(ariables)30 b Ff(w)941 1137 y Fe(ij)1036 1123 y Ff(discr)s(epancies:)
183 1232 y Fi(A)m(t)35 b(start,)h(all)g Ff(x)754 1246
y Fe(ij)853 1232 y Fi(are)f(at)f(the)g(righ)m(t)h(margin)g(of)g(a)g
(standard)e(tableau)0 1342 y(\(see)h(Example)h(15.7\))f(and)g(all)h
Ff(w)1183 1356 y Fe(ij)1283 1342 y Fi(are)f(at)g(the)g(left)g(margin.)
55 b(After)34 b(a)h(few)0 1452 y(piv)m(ot)28 b(steps,)g(the)f(v)-5
b(ariables)27 b Ff(x)1067 1466 y Fe(ij)1160 1452 y Fi(corresp)s(onding)
d(to)j(the)g(selected)f(p)s(ositions)0 1561 y(\()p Ff(i;)15
b(j)5 b Fi(\))29 b(are)e(on)i(the)e(top)h(of)g(a)h(feasible)f(tableau,)
f(and)h(the)g(corresp)s(onding)d Ff(w)2635 1575 y Fe(ij)0
1671 y Fi(are)32 b(at)h(the)f(b)s(ottom)f(margin.)48
b(Their)33 b(curren)m(t)e(v)-5 b(alues)33 b(are)f(in)h(the)f(last)h(ro)
m(w)0 1780 y(of)d(the)f(tableau,)g(its)i(\\)p Ff(c)p
Fi(-part.")183 1890 y(T)-8 b(o)39 b(pro)s(ceed)e(with)j(the)e(second)g
(stage)h(of)g(the)g(simplex)h(metho)s(d,)g(w)m(e)0 1999
y(ha)m(v)m(e)31 b(to)e(reco)m(v)m(er)h(the)f Ff(c)p Fi(-part)h(of)g(a)g
(ro)m(w)g(feasible)g(tableau)f(from)h(the)f Ff(b)p Fi(-part.)0
2109 y(W)-8 b(e)27 b(kno)m(w)h(that)e(if)i Ff(x)718 2123
y Fe(ij)810 2109 y Fi(is)g(a)f(basic)g(v)-5 b(ariable)27
b(for)g(the)f(ro)m(w)i(problem|that)d(is,)0 2219 y(it)30
b(app)s(ears)e(in)j(the)e(righ)m(t)h(margin)f(of)h(the)f(tableau|then)f
(the)h(corresp)s(ond-)0 2328 y(ing)36 b(dual)g(v)-5 b(ariable)36
b Ff(w)781 2342 y Fe(ij)882 2328 y Fi(app)s(ears)e(in)j(the)e(left)h
(margin)g(and)f Ff(w)2232 2342 y Fe(ij)2333 2328 y Fi(tak)m(es)h(the)0
2438 y(v)-5 b(alue)35 b(0)h(in)g(the)f(basic)g(solution)g(of)h(the)e
(column)i(problem)e(\(in)m(v)m(olving)j(the)0 2547 y(p)s(oten)m
(tials\).)183 2657 y(Th)m(us,)44 b Ff(w)518 2671 y Fe(ij)625
2657 y Fi(=)f Ff(c)779 2671 y Fe(ij)870 2657 y Fi(+)28
b Ff(u)1021 2671 y Fe(i)1079 2657 y Fk(\000)f Ff(v)1221
2671 y Fe(j)1303 2657 y Fi(=)43 b(0)e(for)f(all)h(c)m(hosen)f(p)s
(ositions)g(\()p Ff(i;)15 b(j)5 b Fi(\).)0 2767 y(It)34
b(turns)g(out)f(that)h(these)f(equations)g(determine)g(p)s(oten)m
(tials)g(uniquely)i(up)0 2876 y(to)d(an)g(additiv)m(e)g(constan)m(t.)46
b(This)33 b(follo)m(ws)g(from)f(the)f(fact)h(that)f(the)g(c)m(hosen)0
2986 y(p)s(ositions)39 b(determine)g(a)h(tree)f(in)h(the)g(graphical)f
(represen)m(tation)e(\(Figure)0 3095 y(16.5\).)30 1674
y
 18945146 18945146 0 0 34995896 36837785 startTexFig
 30 1674 a
%%BeginDocument: Fig.16.5b.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Fig.16.5b.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Anna Levy
%%CreationDate: 10/26/10
%%BoundingBox: 0 0 532 560
%%HiResBoundingBox: 0 0 532 559.6138
%%CropBox: 0 0 532 559.6138
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039
%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2010-10-26T18:06:32-04:00</xap:CreateDate>
         <xap:ModifyDate>2010-10-26T18:08:25-04:00</xap:ModifyDate>
         <xap:MetadataDate>2010-10-26T18:08:25-04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>244</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD0AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVK7u7W0t3&#xA;ubqVILeMVklkIVQOm5OKpevmbTWAYRX1D0/3H33/AFRxVv8AxLp3++b7/uH33/VHFXf4l07/AHzf&#xA;f9w++/6o4q7/ABLp3++b7/uH33/VHFXf4l07/fN9/wBw++/6o4q03mbTVBYxX1B1/wBx99/1RxVE&#xA;fprSP0X+lfrcX6O48vrXIenSvHr48vhp1rt1xVG4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FVO5mMNtLMI2mMSM4iQoGcqK8VMjIgJ6fEwHiRirHfKnnu28x3Ihg0u+slaxg1JZrr6rwM&#xA;N0zCEfuJ52DP6bEAr0HXpirJsVdirsVSTVpLa41/R7N3RzFLLctBUEh44iI2Zf8AJ9So96HqBhVO&#xA;8CvKtf8AKH51DW9VvvK/mG3tLa8aU2kF9cy3Kx82hKMIpLSWNAAjgIg+Gv2mJJxVU0vyn+dK6feW&#xA;Ws+YbW+g9GyWzSKWW2nd4JY3u+d5BbxSxC4jV05KGZeQ3qCSqgdV8l/nxcana3WneZbSxtbFbgWt&#xA;m9xNOtZEkWESk2sZnEYMQrP6jclZ6nlxCqposX57XHmdbW41q2/R+nS6c2qySWbRQXCfvBeR2jPa&#xA;RMzEIu6uy7gh1+wFXreKsP8Aqkf/ACsH9HUH1P0f056VNvrf+8laeHH4/wDX+LrvhVmGBXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgr7W9F09gt/f21ox6CeaOM/8ADkYqhR5t0N/955ZbxP8A&#xA;flnbXF3H3/bgjkXt44qpzaxNd28kS6Be3drMrI6yrbRo6stCrx3E0b8SDQ1TFVlvHr0LSPZ6Np1k&#xA;Z+AkkNw3qERjgnNIrejcUUBR6nTbFVb6l5qlFJdUtoVPU21mwkG24DzTzId/GPFWz5emk2u9Y1C5&#xA;j/336kVv4ftWkVu/b+bFXf4S8vuQbm2N9ToL6Wa8A69BcvKB1xVTu/LlvbLbXGhWttZ3dlJ6scSI&#xA;sMUqshR4nMa1UMrbNQ0YA0PQqqy6zqfEc9CvQ37QWSyIr7E3Ckj6Birf6Y1H/qxX3/B2P/ZTirv0&#xA;xqP/AFYr7/g7H/spxV36Y1H/AKsV9/wdj/2U4q79Maj/ANWK+/4Ox/7KcVabWdToeOhXpbtWSyAr&#xA;7kXB2+jFUu/QGsc/0zzg/T/r+v6HJvq/o+l6P1P1ePPjx+P1OP8AefFx4/BirJsVdiqRo+qate3R&#xA;gvX0/TrORreJrdYXknkQD1WZpklVUR6oFVa8lJJptiqI/Q+o/wDV9vv+Asf+ybFWJ+cvOemeUNR0&#xA;6y1nXdTQaik8q3CR6cY4o7bh6jyBoVkagkrSNHNASRQYqlMn5ueUhdW0Vv5h1m7t7r6uY76Cxt2g&#xA;pcpNIm7WisxpbMCqKW5HiAWDBSqZaR5+8ua1qljpuk+ZNWvJr93SKUWMUUK8IpZeTSzWUSUP1eRR&#xA;xJJYEfstQKzD9D6j/wBX2+/4Cx/7JsVQuo2+uabaSahbanNfm1Uyy2VzHb8ZY0HJ1RoYoWWQqPgJ&#xA;JWvUYqmFzr2iWqRvdahb2yzKrRGeVIuQb7JAcr1xVCjzboL1NtNJeqOsllb3F2nc/bt45V7eOKuG&#xA;v3cgLW2iX80fQSEW8Fen7FxNDJ3/AJcVd9b82SAFNNs4FbvNdyM6ivUxxwFT8hJirjZea5BSTVLW&#xA;FT1+r2bCQbdnlnlXr4x4q2fL9xIaXWs6hcR1r6fOG3HWv27WKCT2+1irX+EdAY/6TbtfDoFvpprx&#xA;RsRsty8o74qjrHSdK08EWFlBaBvtCCJI618eAHhiqKxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KpP5dlVDqGnPtc2l5PI69zHdytcxOP8AJIkK18VI7YqnGKpfqfl3y/qssUuqaZaX8sCukEl1&#xA;BHMyLKOMioXViocbMB1xVDL5J8mIsiroOnKsyqkwFpAA6pG0KK3wbhYpGQV6KSOhxVVtPKnlezub&#xA;e6s9Hsba6tFaO1nhtoY5IkcsWWNlUFQTI1QPE+OKppiqXeY7uG00K+llOxhdI0FOTySDhHGgP2nd&#xA;2CqvcmmKpVpnkqLTkEmnXs+nXEqg3IhW3lR5TQuxaeKST4m3IDjDao30/N8FCs9hfqBT03jls2NO&#xA;5lV7ofdGMCt/pjWoRS70OZiN2kspoJ4gP+erW0p+iLFXf4u0JCBdTSWHKtGvoJrRCR1AknSNCfk2&#xA;KplZ31lfQC4sriK6gOwlhdZEP+yUkYqrYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYqgr/RdNv5YprmH/SIaiG5jZ4ZkDfaVZYikgVu4DUOKqH+GtO/39ff9xC+/6rYq7/DWnf7+vv8A&#xA;uIX3/VbFXf4a07/f19/3EL7/AKrYq7/DWnf7+vv+4hff9VsVd/hrTv8Af19/3EL7/qtiq+38vaTB&#xA;cpc+m89xFvDLdTTXLRkihMZneTgSDQlaYqmOKuxV2KuxVLbzy15evJTNc6bbS3BNfrBiQSg+IkA5&#xA;g+4OKqJ8tJGQ1lqWoWbdyLlrkEeHG8Fyg/2IGKtfU/NUCsINStrtQaot3bFZCPBpYJI0+kQ/RirZ&#xA;1PzHAa3GiidT9n6hdRytX/KFytkB9BOKu/xVp8Yb67BeWJT+8M9rN6af608ayQf8lMVVl1bTNVs7&#xA;mPSr22vpjE4VYLkDcrQVlgLvGKkfEoqOoxViH5ceTvzA0PU7q58ya4uo2kttHHDaLcXdzxmHHkeV&#xA;0dlTieJA5tyPMkgYq9BxV2KuxV2KoZ9U0xHZHvIFdSQymRAQRsQQTiq39L6T/wAtsH/I1P64q79L&#xA;6T/y2wf8jU/rirv0vpP/AC2wf8jU/rirv0vpP/LbB/yNT+uKrk1TTHdUS8gZ2ICqJEJJOwAAOKon&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUn80Dyxb6ZNqnmG1hnsbJOc0stt9aM&#xA;aVoW4Kkj0Famg2G52xVjHl7zD+W+uavJpHlrWbqPU7YSFra3kvY0jWIqGb0ZwbbjVxxJSjdq0OFW&#xA;TjTPMUJpba0J1P2vr9rHK3+xNs1kB9IOBWheea4Avr6bbXSA0drS5ZZCPFYpo40HyM2Kt/4lSOov&#xA;dN1CzbsDbNcgjx5WZuVH0kYqleq6/wCX9av9M0WHVIJI7qZ2vbWOZVmdIo2ZYHQESKHenJT1AKnY&#xA;nCqfx6Jo0aKkdhbIiiiqsMYAA7AAYFQusW2nafpF9fxaQl7LZ28s8dnBCrSzNEhcRRqFJLuRxUU6&#xA;4q8s03z5+YES/wC5j8uk9RDLDOsNrdKFmgW2DMGhgvw8MkksvpNHz5AeCs2FUfefmFr1vOUT8srm&#xA;eJfrIaSOOckGFOUaFfqW7SN8NULJ/K770VegeX4rLVNC0/UrrRU065vLeKefT54lEsDyIGaJ+SIa&#xA;oTTdR8hgVHSaHossbRyafbPG4o6NDGQQeoIIxVjH1M/p3/CHNv0Rx/SPoVNPqfH0vqnKvLh9Y+Lj&#xA;04fB9nbChmmBLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqDv9Z0fTqfpC+t7PkKr9YlSK&#xA;o6bcyMVSrU9Z8s6vp11p00dxqdjdxvBOtrbXUsUistGQTwpwFQevMfPFUg0LyVoGj6r+ldB8o3Fp&#xA;qEjc/rN3eBYfjQpyKfWLpgVRiq/uaqpIFBthVlH/ADuE/wD1b9PoP+L76pr/ANGNNvngV36G1iWp&#xA;udcuFLE8o7SK3hj4nsPUjnlFPH1K4q2fKujuALlZ7xdi0d3c3FxExHcxSyNF/wALiqD1HRrTSJLL&#xA;UtH0uJUtJWN5bWcKJI0EqFHZFQLzZG4tx6lQQAWoMVRg82aARU3DKe6vFMjD2KsgIPscaVv/ABXo&#xA;H/LV/wAk5P8AmnDSu/xXoH/LV/yTk/5pxpXf4r0D/lq/5Jyf8040rv8AFegf8tX/ACTk/wCacaVo&#xA;+bNBoaXDMeypFMzH2CqhJPsMFKlHoap+lv8AFn1aXjX6t9R4n6x+jeFeXpdfU9f97w+1w2pz+HCr&#xA;LsCuxVJ31bVLu6uINJtonhtX9Ka+uZGSP1RQukSIrtJw+yxJUBttyCAqu/52z/lw/wCS2FUM+p61&#xA;Hfxac93pSahMjSw2bSSCZ412Z1jJ5FR3IGKoknzWBU/UAB1P77FVkUvmeaJJYn06SKRQ8ciGVlZW&#xA;FQQRsQRiq/8A52z/AJcP+S2KqUuq6zpxWXVba3On8gs17bSPWHkQA0kTp/dg/acP8PUrxBICp3ir&#xA;sVQl/rGk6eFN/e29mG+z68qRVr4cyMVQX+LdFcE2zT3qitJLO2uLmMkdhLFG8f8Aw2Ku/TWry0Ft&#xA;oVyCx+GS6ltoY6eJ4STSj/kXXFXV84Tnpp9gB3rPfVPypY0/HFXDR9alq11rk6sagx2kNvDFQ+Hq&#xA;pcSj/kZirZ8q6PJT6yLi8AIYpdXNxPGzDuYpHaL/AIWmKouw0bR9Or+j7G3s+Qo31eJIqjrvwAxV&#xA;GYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlXlog6dNQ1pfagD8/rs2KprirFfN35d6V5ovIr&#xA;q9u7m3MUQhMVuLb05FWZZwJlmhm9ZQ6D93JWP/JrvirFZ/8AnHDyDO8PqzXxggsf0eloGtxBT0pI&#xA;/rHpiCnr8p3k5/znliqvp3/OPvkyxuNOniu79n0ue2ubUlrVT6lmKRl2jt0d/wDZE8eicRtir03F&#xA;Un85+ofKOtem6Rt9SuPikUutPTaoIDJ1G3XFUpe38/gl76X1U6FNIkt4yRXqI72A0/6SMKrTBogJ&#xA;GrafrHKtTFdG7vonNOpS2kurcD2IHyxVMNGvfIcMwj0iTTba5k+H0IBDDMSOxjHF/oIwKyDFXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUquNFuUvJbzTL02ctwQ1zA8Ymt5XAC&#xA;82SqOH4qBVJFr3BxVv6t5p/6uFj/ANIU3/ZXirvq3mn/AKuFj/0hTf8AZXirvq3mn/q4WP8A0hTf&#xA;9leKu+reaf8Aq4WP/SFN/wBleKu+reaf+rhY/wDSFN/2V4qpnRL27ljbV74XMMTrKlnBEIIGeMhk&#xA;aQM00j8WAYDnxr1B2xVOMVdiqldWlpdwmG6hjuIT1jlUOp+hgRiqWHyj5fU1trU2OxBFhLLZA13+&#xA;IWzxcvpxV36C1GEUtNbvEC/3cU4guIxv+0zx+u30y4q6nnCE1Daffg0+DjPY08fire8vuGKuGs6x&#xA;FtdaHcEg0aS0lt54uP8AMObwSn5enXFXDzdoS0+tSy2ANfjvree0j26j1J0jT/hsVTCy1DT76L1b&#xA;K5iuounqQusi1+akjFUD5s1ubQvLeo6zDbLdvp8LXBtmkMQdY93AcJLQ8a0+Hc7bdcVYt5a/Ne31&#xA;vzFa6NHHp7G5kvoxJaaiLlqWJAMqxmGItG5PEGoNQSAyDlirP8VdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqX33l3QL+Qy3um21xMRT1ZYUZ6ezkch9+K&#xA;of8AwvaRitnd31m4I4tHdTSqoHZYrhpoQP8AYYq79G+Y4W/0fWUmQmp+vWqSsPZTbPZj71OKu+t+&#xA;a4VBm061ulX7TW1yySN/qxSxKg+mXFXf4k9I0vdL1C0qKqfQ+tV9v9Ca6p9NMVXxebPLUkgi/Sdv&#xA;FcEgfVppBDMCexil4SA/MYqs8wfWbifT9Lhne2jvZXN3NCxSX0YULskbjdC7cQWG4XlQhqEKrl8p&#xA;eVlUL+iLNqCnJ4I3Y07szAsx8STXFWIefkfQp9OGheTLbWILgMb1orFJTCFuLZAW4cTQxSymiqzV&#xA;APHirYqxmw82a7f2i3K/lKlggnCSJcwyGb00mgSRkh+pJXmlxVDy/Zc0PCjKoe2886umm3Vze/lK&#xA;7zqpktLe3srgOzPPxjt5A1keLrDV2kBKbD7LNxCrMfJF1pev6jq+nan5Ns9Hu9IMIdTF6iyeq8y1&#xA;VprW15L+45Ky8lZWG4NQFWWt5T8rlSP0RZrUU5JBGjD3VlUMD7jFUmrqH6X/AMKfWpvQr9c+s+q/&#xA;1n9HcePpevX1Of1j4OfLnw78viwqy7ArsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVWTQwzxNFNGssTijxuAyke4O2Ksc1DRtJ0S8stYsNNit4reR11D6nAFf0ZkK+qUiFX4Px&#xA;5bbLU9sKpiPNnlUio1mxI8Rcw/8ANWBW/wDFflb/AKvFj/0kw/8ANWKu/wAV+Vv+rxY/9JMP/NWK&#xA;u/xX5W/6vFj/ANJMP/NWKoSx1XyDYSXMtjeaVaSXspnvHgkto2mmbrJKVI5ue7NviqKPmzyqBU6z&#xA;YgeJuYf+asVSH6xN+mP8YejN+jqfUKekef1Dj6n1r0/7yn1n/Jrw+LphQ//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:93831318BEE2DF1193A8E8AE75DFA592</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:95831318BEE2DF1193A8E8AE75DFA592</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>792.000000</stDim:w>
            <stDim:h>610.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MSLineDrawPSMT</stFnt:fontName>
                  <stFnt:fontFamily>MSLineDrawPSMT</stFnt:fontFamily>
                  <stFnt:fontType>Unknown</stFnt:fontType>
                  <stFnt:versionString>Version 2.007;PS 002.000;Core 1.0.38;makeotf.lib1.7.9032</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>CMR</stFnt:fontName>
                  <stFnt:fontFamily>CMR</stFnt:fontFamily>
                  <stFnt:fontType>Unknown</stFnt:fontType>
                  <stFnt:versionString>Version 2.007;PS 002.000;Core 1.0.38;makeotf.lib1.7.9032</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=0</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>0</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=25</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>63</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=75</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>191</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=0 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=0 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=0 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=25 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=50 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=75 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=100 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=25 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=50 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=75 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=100 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=25 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=50 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=75 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=100 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=0 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=0 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=0 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=13 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=25 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=38 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=50 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=13 M=25 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>12.500000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=50 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=38 M=75 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>37.500000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=100 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=25 Y=13 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=50 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=75 Y=38 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>37.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=100 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=13 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=25 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=38 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=50 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=13 M=0 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>12.500000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=0 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=38 M=0 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>37.500000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=0 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=0 Y=13 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=0 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 Y=38 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>37.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=0 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=13 Y=13 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=25 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=38 Y=38 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>37.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=50 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=25 Y=13 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=50 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=75 Y=38 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>37.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=100 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=13 M=25 Y=13 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>12.500000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=50 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=38 M=75 Y=38 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>37.500000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>37.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=100 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=13 M=25 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>12.500000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=50 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=38 M=75 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>37.500000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=100 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=13 M=13 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>12.500000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=25 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=38 M=38 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>37.500000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=50 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=13 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=25 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=38 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=50 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -559.614 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 559.614 li
532 559.614 li
532 0 li
cp
clp
[1 0 0 1 0 0 ]ct
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%ADOBeginSubsetFont: CMR Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /CMR def
/FontInfo 7 dict dup begin
/Notice (Copyright 2000, 2004 , 2005Adobe Systems Incorporated. All Rights Reserved. U.S. Patent D454,582.Myriad is a registered trademark of Adobe Systems Incorporated.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 66 /B put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 111 /o put
dup 114 /r put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/FamilyBlues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/FamilyOtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/B <1C60D8A8C9B79D2DDA73CBA562CD775BD8708DCD8E9BDB9F0E0177DC043F
B4F1A8C4CD26C616C718D265A8D6703A6D47E3F8A1B7B12560AD317F60E12155
856CA9C25059711A75C068B65463BD75FDE8E1F35A7B7D78F6157390124E47B5
1535C1251DC03D986F9EA19C38C324328B0D51459F89228313041C819F71E915
18EC12B2EB0DAC655C5FB2D629F03ADEC251827A94F19DF929CBEBC2821CF76B
9A242BB0987762DC5FABDB70310B695148> |-
/d <1C60D8A8C9B7E7C1D822193538A56B13640F1C3EE80C415BBD7C96E2BF73
396DB0D9C9230D7704B1D4903E1B0E823160B234020A503047A686661C34B500
4CDCF7754772CF263A11D6B8FC7868BB12CD6A915ACD880C8B0638C394417FA3
7BE535ADC2EFE334704B66B55FC93ABE48255DC988A5DFABA294BF5BF2E02BE2
314DCE6531FAA5DCB4D56DF6C62A6139D41B024DA04272B4B444C44FEBCD2F65
888A63654699808BEDAA> |-
/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6AE0C2DA4B5701EEA600446C4909F
C3F4672ADE87F21B90EA46B653B923660515A1F0669DD61FD45BFFE5F30C06F2
5F4918DC3BDE9DA8749DE48AB2064D02996B1992D92D740E924FC0328428444D
7F57E818435DFAAB95E4B5> |-
/f <1C60D8A8C9B8469EE0EEFD5AEC6CA97A72064EDB5F8138E6D1529C05D71A
D800DE9767801FDF375EF8CD5D17CF8177ABFE55C13157A524A3264793E34DF6
7E6CC595BF4246BA776AF32A10AFD87F61B0A56EEC2C24F2F2> |-
/o <1C60D8A8C9B7967683396363C51B2F1979461F3A00FDA36B3FB5488A82D6
4C89239EA1345F90503AC4C4937CA1D31AE0456BBFC2CD7E6DF92400B629A703
DCCA1CE977B1CE09DA127A889A27E67B6982945251> |-
/r <1C60D8A8C9B825FA276057E42F8B6B56BE61CF56C49E848F1F8C0DBB4CC3
55A060580D0A93A5AC675863E967C6888348BB6A0307CAE2C7E5A0C04CCE8153
CABABF82A896EFF75F39B554C74CA1E2126AA0E73BE8B772EBBEE30A71972C63
0D7D24526AEEFC04035142C31FA6B3B108962236> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QGAHUO+CMR /CMR findfont ct_VMDictPut
/QGAHUO+CMR*1 
[66{/.notdef}rp /B 33{/.notdef}rp /d /e /f 8{/.notdef}rp /o 
2{/.notdef}rp /r 141{/.notdef}rp]
QGAHUO+CMR nf
QGAHUO+CMR*1 [12 0 0 -12 0 0 ]msf
78.3301 404.044 mo
(Bedford)
[6.55188 6.0119 6.76794 3.34808 6.58795 3.80402 0 ]xsh
1 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
145.5 422.544 mo
152.127 422.544 157.5 417.171 157.5 410.544 cv
157.5 401.544 li
157.5 394.917 152.127 389.544 145.5 389.544 cv
51 389.544 li
44.373 389.544 39 394.917 39 401.544 cv
39 410.544 li
39 417.171 44.373 422.544 51 422.544 cv
145.5 422.544 li
cp
@
%ADOBeginSubsetFont: CMR AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QGAHUO+CMR dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B7AED8035FF9728E9C78ACC28F20CC915E5C8F246730235E09
69B06AB4DFB6CD5E100F262B534390FC7CA7055C28ED1E42C84B636867D8A31D
300B2F5F2294ED82992DF7233E5C523837B149A4D365755830345623E9A4E055
720FE49A232DC2065A07388CBE9EB02B9DD8FF5931F0EA71B8534F17457D88BE
F90224252D97A481A1378A56A9E08907> |-
/a <1C60D8A8C9B75946039FC5B56ED6A5087B2F0B1630F4B839ECBCEEA44E70
3DC4106323B0FE7E2AB642908C4D63FEEE93FCF9AFDA709EC76B2A6B438866EA
54711295464BD953D3EBDCF028F138C8DA98583AEFEA07E0E3D9318DCAA5235C
81F8CAE77869F7E7DB4FE2A895A8751E9713E402E5F56B8D9F8A85A4E816A3F5
736139BBC6E35318419585355BABA3365F9437068F54844360043E93A0587094
DC5B241D2351AD29DD00EC> |-
/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C7596B2C0CA5D427D1A2
992AF5BF4D94EE82845832F4DD4400321814ECD5D3CE66072F7E5E7C5430EC46
9D5F7161571A32A96A021C1AB03ECA050447FC0A> |-
/n <1C60D8A8C9B790A816BA887E1EEB5EA22251B57591287932F226429470C6
F5104125FD46BD566113711AC75833C9FEE3F6D848EF41B3B29B720FE91D5709
9036ACB328FF5F27B548C47B09DAAAB22DF7203FD31E4DFCBB6F334EB2AEBC18
B95062C1F81D8B> |-
/t <1C60D8A8C9B821B35E7D138AF8799F79BEF170B4854FD4064F6438DB12B9
6A336B1B646B9C985443CCD47885AEB163F96326A737220357369BBCF971367A
B24D31D50A9A11CBCBD128D32F4EE4E3175171904BA0C5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QGAHUO+CMR /Encoding get
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 110 /n put
dup 116 /t put
pop
%ADOEndSubsetFont
/QGAHUO+CMR*1 
[66{/.notdef}rp /B 16{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c 
/d /e /f 7{/.notdef}rp /n /o 2{/.notdef}rp /r 
/.notdef /t 139{/.notdef}rp]
QGAHUO+CMR nf
QGAHUO+CMR*1 [12 0 0 -12 0 0 ]msf
76.8642 495.551 mo
(Scranton)
[5.98792 5.37598 3.86407 5.78394 6.61194 3.89996 6.58795 0 ]xsh
144.5 514.051 mo
151.127 514.051 156.5 508.679 156.5 502.051 cv
156.5 493.051 li
156.5 486.424 151.127 481.051 144.5 481.051 cv
50 481.051 li
43.373 481.051 38 486.424 38 493.051 cv
38 502.051 li
38 508.679 43.373 514.051 50 514.051 cv
144.5 514.051 li
cp
@
%ADOBeginSubsetFont: CMR AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QGAHUO+CMR dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B7D7E88499B0B4629F6223175CD4E8063229FBCC9F00B932F1
5865B21E5E7BB034E6AF82883E05563056B289C39B2EA350305E00FB98125757
C6B71D805070E392C2F5C67BAB2BDB26729DB33934727F6026751FF00CC19CB2
FCE13DD0FF> |-
/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QGAHUO+CMR /Encoding get
dup 65 /A put
dup 108 /l put
pop
%ADOEndSubsetFont
/QGAHUO+CMR*1 
[65{/.notdef}rp /A /B 16{/.notdef}rp /S 13{/.notdef}rp /a /.notdef 
/c /d /e /f 5{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]
QGAHUO+CMR nf
QGAHUO+CMR*1 [12 0 0 -12 0 0 ]msf
452.42 451.614 mo
(Altoona)
[7.30811 2.83191 3.89996 6.58795 6.58795 6.65991 0 ]xsh
519.5 470.114 mo
526.127 470.114 531.5 464.741 531.5 458.114 cv
531.5 449.114 li
531.5 442.486 526.127 437.114 519.5 437.114 cv
425 437.114 li
418.373 437.114 413 442.486 413 449.114 cv
413 458.114 li
413 464.741 418.373 470.114 425 470.114 cv
519.5 470.114 li
cp
@
%ADOBeginSubsetFont: CMR AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QGAHUO+CMR dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B896187A> |-
/C <1C60D8A8C9B7F7BFE242671C9E817400744FCB1930C8B6D982C063970DBF
718CAF90EB4032F79AFF3BD0DCAB8819135C4DEC30C4AD93CDA5718D518C03D1
31C0ECA750D3497F02641B81219A155BBD4DFC26D705BADFBB56DDF384391247
F88C168EFD4243293DABFBBBE3A19FF63D> |-
/g <1C60D8A8C9B7ECD94DE1A189191AD5F29F5CDF5AA27A54E9CADF1B0D48AF
ADD31B7AC744861D428C2E9828C64107AC3C1F370E77D657249E67D01B32CA8D
E47286033022B7FE2ADAB5880B8BA15ADAB506E67E787503255249A5C18EAB39
49583AC294D57039D73A57012E800A5F1DE0015B558B76663CAEA443CC43AB1C
7D0EA581DBA077AAE05CC1ABFBCB18987F40F7D67565C854506C79470414AF94
EA3318EB3473654AC76A1F02E1D426F218B7D2A89976E745CD03CE15AD5DAD80
0440564510FEC150DF1BF6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QGAHUO+CMR /Encoding get
dup 32 /space put
dup 67 /C put
dup 103 /g put
pop
%ADOEndSubsetFont
/QGAHUO+CMR*1 
[32{/.notdef}rp /space 32{/.notdef}rp /A /B /C 15{/.notdef}rp /S 
13{/.notdef}rp /a /.notdef /c /d /e /f /g 
4{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /.notdef 
/t 139{/.notdef}rp]
QGAHUO+CMR nf
QGAHUO+CMR*1 [12 0 0 -12 0 0 ]msf
439.322 360.614 mo
(State College)
[5.88007 3.97192 5.73596 3.89996 6.0119 2.54388 6.828 6.58795 2.83191 2.83191 6.0119 6.70789 
0 ]xsh
519.5 379.114 mo
526.127 379.114 531.5 373.741 531.5 367.114 cv
531.5 358.114 li
531.5 351.487 526.127 346.114 519.5 346.114 cv
425 346.114 li
418.373 346.114 413 351.488 413 358.114 cv
413 367.114 li
413 373.741 418.373 379.114 425 379.114 cv
519.5 379.114 li
cp
@
%ADOBeginSubsetFont: CMR AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QGAHUO+CMR dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H <1C60D8A8C9B6415B1C8023DCDB0FF1D084A484AEEAD1BCB3E26ED8513BF0
1EB97B2B412C27A814AB0CF1433A6A27B347810AF06165FF360A71FFBED997DE> |-
/b <1C60D8A8C9B7E2CE503F0CE2BC5702634999087F49AD7EC68AF6E0760DC3
07EA142776CFB148873830CAEB36AE950493D9F2EDD2FDA5A7A4D6C282750C8E
40E669AF5CD1CA9E6E42E82091954CDD12078AEF15744C61E28006D0183E186D
2F0A7A37935A5E3F3F87ED5DA87F58431826C86E3F76DCDA2973426486D4612C
A2B5207C22CF15FC5AC58B8A498D4D400E19494D5A529E7B3708AA62887C27C0
34690D9798225445C694> |-
/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5
A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A550BE990A2
B15CF4B9FA0C60C03D9F761CF6CBFF51A513DE> |-
/s <1C60D8A8C9B70FAD6F31E6985339BF1E83F7AE60D35F00D12D254421A910
254A631180139D8657646BEFE6F4E230D67403BE5D54183419D174C6F3CC672F
E0922A5983FC4713FC0C33086E01CB29AB5EA82B559EB0CB9E6675519A48B6C9
9CE7F0B78BC22FE4480BA1B895> |-
/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62D
D6E8467166462C4D4F8F41F04B52D63863D672C5433416D6DF2E3C32BCEEA94F
F3BC9046373D2B57D2890F7578E8913662C9F65FD95A5790251E118509816817
E1CD6A7C5BE0B48DC194> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QGAHUO+CMR /Encoding get
dup 72 /H put
dup 98 /b put
dup 105 /i put
dup 115 /s put
dup 117 /u put
pop
%ADOEndSubsetFont
/QGAHUO+CMR*1 
[32{/.notdef}rp /space 32{/.notdef}rp /A /B /C 4{/.notdef}rp /H 
10{/.notdef}rp /S 13{/.notdef}rp /a /b /c /d /e 
/f /g /.notdef /i 2{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t /u 138{/.notdef}rp]
QGAHUO+CMR nf
QGAHUO+CMR*1 [12 0 0 -12 0 0 ]msf
445.706 540.614 mo
(Harrisburg)
[7.82391 5.78394 3.97192 3.97192 2.80792 4.75195 6.82782 6.61194 3.828 0 ]xsh
519.5 559.114 mo
526.127 559.114 531.5 553.741 531.5 547.114 cv
531.5 538.114 li
531.5 531.486 526.127 526.114 519.5 526.114 cv
425 526.114 li
418.373 526.114 413 531.486 413 538.114 cv
413 547.114 li
413 553.741 418.373 559.114 425 559.114 cv
519.5 559.114 li
cp
@
411.249 367.052 mo
411.248 366.979 li
160.251 402.98 li
160.252 403.053 li
411.249 367.052 li
cp
@
411.5 454.044 mo
411.483 453.968 li
159.5 405.794 li
159.517 405.87 li
411.5 454.044 li
cp
@
412.121 544.289 mo
412.122 544.217 li
158.5 498.543 li
158.5 498.615 li
412.121 544.289 li
cp
@
415.375 453.92 mo
415.36 453.852 li
154.5 497.543 li
154.515 497.611 li
415.375 453.92 li
cp
@
%ADOBeginSubsetFont: MSLineDrawPSMT Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /MSLineDrawPSMT def
/FontInfo 7 dict dup begin
/Notice (Copyright 2000, 2004 , 2005Adobe Systems Incorporated. All Rights Reserved. U.S. Patent D454,582.Myriad is a registered trademark of Adobe Systems Incorporated.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/FamilyBlues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/FamilyOtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/one <1C60D8A8C9B7BA8F425ECEA255C7F445C46B341EF282C71048D555A5D5
98E89496E7235E7E5E61E755DE1DD927709B69AF39C5FFA2F961FADB> |-
/two <1C60D8A8C9B7BA8F694E6FA15FFB6B382A3EE4F45111A59DACA07CBB1A
390893C6F8FDC203687F0DAB4019999EF2C31C2A8E2B5C18284C0FA933EB49F0
D3AAC406EC417696890BDF0C7AE9B4C23364F4C649F84537FC> |-
/three <1C60D8A8C9B7BA8F622456C4A5B0CA9B1BA284AF806928062A6B7B09
FB3F0AFA0642F9B368E55CBEC860ACEDE00F619B43869FF145573EE19FF4FA26
1BF5938247732EEA9C997694C21F3826519E5860C319187A2BE7C4798BE40539
D59DC5F8C368613E2EF361E84E1BE9A2B721FABB539C13C42CCE1FC716B22FBB
381EE1131CEA0A76D50B43FAFEFB6984253871A40EF8DA774460484F> |-
/six <1C60D8A8C9B7BA8F6239473257AB127E7620F87AA168F1AECB0A4CE93C
C295CEFD9192C2967A0DB83DCBD6BBAD18D6960D2101F671B2250912AB87B7A3
12023FCC73A003C62725D7FC83EAC1691C575B6AFB00517E51D41BA56D827F4B
6519D801FB562E8DCF2E48521AD57F7C657FA7114264065AFF4ECE505E9E5389
1A0834E3BEC3F8A67BA2E6FDAC2B> |-
/seven <1C60D8A8C9B7BA8F425ECEA3CCEB01D7DB356DB8BA3E0A3CCCF78FF7
5F8426D973EF7AFAF46E5376078B0FAF79A0> |-
/eight <1C60D8A8C9B7BA8F623D810BCFAA50082B445FDEA9D15914896CD639
03178E46F4BF3526EF43F34E1C43C5D4BB259333F75AC77A2693879487E31A38
ED5E9191D3298AC0D970ED0241AD045F48A1E74AA2C4BE6A3C25B51C1786D2EF
03AE3AE584898B7F8F45ACBB487C3211863FEFD3620CE23C9E829D36E0D56EAB
E748926E17DB146990D6096B0ACBA84EC3179FD7D7DE1B7A8A7122D5F1201E33
3EBC5E306860669F4548CE801F630F0B98FE145245E3B61A937D385E9FFEC75A
53A58A9A8AA3119FE04926CCC605B3BEA563998B78AB28F03D9E0202CFE1CF72
350765F386FE675098260C4913D2BB6EF02533C78A20421F3CD9AE5EB64E891D
3358D805> |-
/nine <1C60D8A8C9B7BA8F63126F4A1F6F4C8A6D297D6FEEB3E1EA33A18C32A
839F51A85CD7DE6BC7BE0FC5E14C273DEF590B88E507C7A736EF2A90ACB7B8F9
A190B2C51A24432873D103FAFC9B3793333CCD91BFB26AA2EDD101FDCA101247
D729F8EA9F184BC3D2FD9C99ABDCAACABC5E792EC3D0438CFE5E32E78D626F92
C945E9BEC772CDF50F38A2D46A5A571E853> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QGAHUP+MSLineDrawPSMT /MSLineDrawPSMT findfont ct_VMDictPut
/QGAHUP+MSLineDrawPSMT*1 
[49{/.notdef}rp /one /two /three 2{/.notdef}rp /six /seven /eight 
/nine 198{/.notdef}rp]
QGAHUP+MSLineDrawPSMT nf
QGAHUP+MSLineDrawPSMT*1 [12 0 0 -12 0 0 ]msf
329.844 368.544 mo
(77)
[6.15582 0 ]xsh
326.766 524.544 mo
(122)
[6.15582 6.15582 0 ]xsh
326.766 460.044 mo
(186)
[6.15582 6.15582 0 ]xsh
329.844 431.544 mo
(39)
[6.15582 0 ]xsh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/QGAHUO+CMR*1 uf
/QGAHUO+CMR uf
/CMR uf
/QGAHUP+MSLineDrawPSMT*1 uf
/QGAHUP+MSLineDrawPSMT uf
/MSLineDrawPSMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 13.0
%%AI8_CreatorVersion: 13.0.2
%%For: (Anna Levy) ()
%%Title: (Fig.16.5b.eps)
%%CreationDate: 10/26/10 6:08 PM
%AI9_DataStream
%Gb"07kBcI(Z7%[c^itlVb>r4QFB3RHUR\XlD/3:?A;/RIcB%kh;ZIZM%#(:dceMk)g+AI16D607J5E1(R.`Vtr^UttpLYP1aot19
%%&@pC5UJ.(U!Q+";AhQ]8Z$#a;@A@R+XQ<FFEu6)IOkB=q.S,U`oGL?2].N5"3"TQrC+E&%f-i`>WTEKLU"WdUYbAgj\bWQo>\le
%<N\%s%XVKXj&<[2R!u/\HV/E7qJK%0q4rP4M:-0Zg?j#XVr'(;Zl)EV.J-_k`P&i(2a8"T')a/<&,YbN[%j-Y?^8pq2nU3,(YMmf
%]:hnF!!2;;#^n+lg`P!TKW")MI_8WD]&Uo23U%%McOj(LQ1@*)2(&_8TIaUTE^$8s?S)<W-fE6A!E$oA1)VO&af/Q(i2Z_C.Xu:>
%:7CQfIkhjj^7KQ'"9O;)Us],_(fN='?]"o1H9(@AU[*@F_,!CYnmqYGK9"AY+5q.=]d=YgJ1o=F9+"o]7j#kV:gq_?U4I.cEe=,p
%i*1.!;+:[FW.D:Kd_?^Ui/T/2-t+(r+dkXrZI$9a+J$d^dQ-)N=pSZfC3(S:;C(q0>#65Cj]R-23R#FpW;G!0DlR*d^=Gd0N\NTq
%]c?j#H_8MZs5gZg82jtqPDR^h]+*t%3\fn3K]G],>-.?XV85*B4^^XU#]naUM=1m;a?0>ZIKQ3<LYO+%kP:b7@%rURY+?9IBD@Nb
%o=#>DV&Wk+FHmHN)=rOo]]Mk;D;AO%a]FquksXK+-\/N1J#3t@phThd-7RB][IJbK,=%1]T(4ht1s1pKS%/$t<k3gsjEQB+W_f<;
%qPRUsI@$2_;J!FcR6IdFis2CHJ<V'NAI!P7!U7ak'V1D];kkb]:\D#ak/W64i]GLQ7H)u$DgjfG7QiScZ-l*$a1%qZShf8[bn5QC
%n<8V\^75'rWs;H>@BtO>3dc9.qu]L\3T5Mt43DbgoYm"XkfkFNK1SRYk6i%(Ctrfd5<8\iYW!SPGPb=6OS8]=8tZ-T=s%goEn^Nu
%UX$IQ<<9Em^V?8up9]TmZiWsHY."<c<Q8^6S\\Z]?MV4hCOY<9J6guSZNhT9?bHR;G5LuNHiUYA.GobL:O/QLG6AONYLaehOcP:5
%htR8@N.Qq'lMi@3!9$J`"'soODu;hYa8f[SWHLYo`-94Bo!$UAh*hUD"&4RH^&I>Ge0HhRR>qK]VjLBSIcELp*QPp=@DF@=5g0':
%g)4uDK&F0tkcE;S.s_Hj%2>@\%]3`$&WSM@-sE<n(C4VPoZgGBBF`/U6Q05@og4G0cl"9S7b+Drqi$cL-7,hZC9G[Z%[sBe\B@fX
%PDT'P[RUV\J_T3obr-mS6ILO]3W=*Rs(IFihnA/o!d$Ec.pm\9$/]`((!Jtm8$?!(&0%*i;g:k:$"d,$IX?U`q.9V/hB`r<O$*9\
%UKbTmY9(ai^uMf]JZI0t\b\*]QtnVgC9--E2U,$B96h_>4F?WIAjhnu"N7Cc"7VSJBsS%')8=jT#ND6NTh$(&*#AU8X>CLrTc6bN
%M28HgZV7sT?Dm]"cGS;KYmffNUHrPH#/8Q?)CL>n6M7lOJ+g!l1]s88:\2A6&=!I<I$S[\iIenq?K?0T=m8YL!D,taU]Db>5>(rC
%#tQKG(%)+-]Jfb:[g'NIT)@J&nh^C5.tIF80EB3BmW=9AjBg/Z;g;:]%Aq%\rqh3R(HR27&iaf)5!eE7668Vul8*H"+CDq5HM=m8
%SgBl^@DoLdWtA5g4p#B!?bhQXA+bECX"j!:'`X%/D'X-lJ`:?(rX<$@#!KYLk#Zjfe]7G6.f\DR`]=$kJ(?!/[^W%JYdO[\epgsU
%:tiSdGkp6%H`7<\%I4)O[Sm8<n+E!f],;LhI;u&"hr@r.rsWRt.D%\@2R&<iEfN+T];ILbJ.D2<?X$ZY#@iMj)h(uTs&OGu+k90_
%$-9otD0%Q+WZ"SFE6Jeg#c;5:N.^RB1'%K:cfS'?h48poEQJCe)Y]^!jsYbPlW#/&"8E9%bfl6k1VM3n@f&"J9-cWE@P1LD;m0tm
%/VE!:%"tkh)H[O*I\Lh%Q@%Pt;P;YCc$c(^<i_L#\QZ!KX+b<&R]C&$R;0=%Wle>@.TV6q[8Nug/#>kC;Q/Y,\Os;nWMD&DMHl8n
%@RV\HbE[+Y>UgQ5KlXntj3$%qVOT9:b&UW7Me/S]/QGF);Q3VH'h\:"Y*:ML9'K6R,aY<i=;$MA@\m0ZQAWXjTpRLqMV2I9QnG7n
%E`"<D7=csg$^F&h:b!.eKgNM8.qB$U6Fr7.a9AOc(5.&m?ceZ+V0k")aQN0*Ho@V=Vt6n#S<reU?H?,fQ!?=Naq\uO>X"M7EnO\E
%Qd2FJE_ac63?_VO<jLh'.9k"3ZMA;hS'>QNl"hh"B;M\s'f+<5,u`*R1;up1PL&;F=YT3jR8cZ$8/X-,E9V,KOtNY*l!h5ccDPaJ
%Cc[bTVc.:i/Z$FnOK,0-WH,#'.]*QPHn(K*VD>,m.Kq01PS-oH>a6g[=Y@fb\KL(s*%,C\N1?24Z7JYS-jrpQW^p^#,Sd/-Pa?Dg
%<m!sI.4**!,`.[,<lKqu(/&+6/;SS5mTImMdUGh577e302AT[E"df[k-ih$c(pf;9TOS&Q/VmfgmW(W:oNE48:*<CB<[p4#:V\B+
%V4JCAS4N)?\,&8#/!b</f!*O>6#3.0oDp+n]d^fodk-QNH1VVZ*@;S.J3Yg=kQ5"BM2/,3,6B\e(B=]%!aPe=5S8+SPQAXo$YI/8
%k>5FfoWO'(^e)<nF9-[iVSQ78+9CJq$fDJ-Lb>&U5Y?,!(''5d$P9>*kA\I<?0!*#3FFYSJ78Mfi@4l`!RoF";[@W/0#.[a!d"HP
%!DT3pE3tkmckoWh9";#:qH(ZQ&0VSu>\09p+>%[9<WJhe$P3`f%UFUc5_S>&ZnLT&$nsM-dP4];q$2!Nj9o#mYQK\!?%?TRg?8U.
%"[Y]qTKeN$\q#qnGn.Y3JZFCCLq6U&F]Hf'._;X1E54W`"h4rQ"C47s^ff"f'Erjg>sOq14@^_2_4CW8NKJ;keQ&^QH>[eU!157P
%,m3#$iQ;-9kMXJb#,"O<!Ed]>WZi,[[$LdkJ\6LE1-cCR+H&A%P9S3RJ<#9@<`+9160OpLoTTQkaoHSGJBIG5:.7!J!94D-K`JIc
%`IKF:5b2V^dB!aM"A#tOE.ijh/S!F5;Z^\NW*<#jIqbR"i$UecH%_T99I2N$!9#CG#k/*+eH['=%@eXFr$)Go,gQJm(GV);@2]^4
%"Q25;M_]5n<&+Qg#acKKV#nM,5c$6)/:amR7L]2f7dU79b5bVeEkpK$Ql:j4D[8c]0Eh`<,-XBjQ4u#B<+@hQ"(%B#ROKG^"@T9J
%W=j`V,1suP?_NAtYhCWXLT-M7W(NO/<D#;0AlL80aKMD&SORRce2U-7KZ8$^Bk]thaU+`Z^I%6nTgaVM80_,NJJ_#ESlN,pEd@o+
%8k<PnYHMUPBX[*1#e'>Bs!o/#=*hQr?h",^CEVN)SjLE%-KYH>Ij43t;)co3QgAm8[RVdd/+%_(Q3S;)/*hY(qTk]#Q1qtBHZ;Bg
%o.'TA-0rP'*gOi9`#B-h@i/rnF:h#,_I?7VF@an)@AerD/FYVMnW:sNU`PhK8F0I^*t`pUnB58!B8Ac'!'+$\MHBr.1,+VtTIL+>
%6;YHaOGL`[8IU1njKKUT&NPXnTr:T#PU[!GW['.*#XVZ/KGbs>3FHqs&scKg=N)+CjIg>15ue=/<A@UlRYXrL66Qh35pQPj2Aq;r
%+Hh:f!E`6b;^22d<W)*uO2KDl/Gl[4_^L%X4ehUX`>!*>3@oTa=A;J!)+:9^KG@*FPslFhgQeuM>/5.lA.ket,pJ_4BEI.Ge_CN"
%!Kg/G6>82IP>YLX;3D8s'o.L.-E[c.AV_m)BOS0"V%tYlBZUF`MkbqA/\\:fbUUJ/+\'R-<Jkc31$0h(4@L,m\h)kYKGft5e"dl%
%,0mVW<]P%&JQ7dF#]LI`bgN!cJcQ&W#Qt?+W2jB5K*A0*K)e:A#ltBqnH:BG0P/IXMO54A0k\X<&.p#cQoGL'$1fqUXX`IRAZPo?
%4NDt&@#dd&@hs\NK>EAaM(^'EJ@ff'U`"b\s/27u$OU%CI-$Y=BY?h%m)%@rEO3`!QHLbqN>Dl9PjrP'7,'"J>dF%^<3+\uV&cau
%bEXq;NkW>Wf(mI8?3TBKkSsIMc>ZqcERkBk$^9j+,_\'QE?1<OkEea<Kr9Mj@Kk,:Cd?9B*Zt8@X>6]X*_k-u0d(+C[FsNp9WI]+
%2!c[]^noHcXK0K!d[cpM)p5MVY<DZ1Tfm)Q9:C&uo8lr\5FLdc'.A?ujti2Lc^EoY96%NN9lm(@-tf"2:a;=lL+F/5X/KBOJ%2fS
%:N_ebX4i8uD?ApGe(ejSjb+jr\<Q-7j!]snL@WN%^,bPPe$"@P(%ob#&ag++HL32:mnWW7$'Z6%oAgeG4O'XfUAT=VES.ggTj2u`
%a[`MHIMMLUW*fD&))/'k33>iR,EU?9@/-lM4:_U:?6hWD"`muq4:_U:N2e!V"`p8]n/N.dZ08tE.PRGol]nk`3STh.>q5DdNc\[,
%#8:C10$?J>VA'8mYu?[JJg<-(E>2!l6tISqrQ<cq/:DLRZEoaeSIFoH8<G3re#&Bs.8%!77/KK$mq#M^,eeWb\M'qRql5;#T(qZ1
%L?Cnr>0*6%ZH0'6MPB(0:d+J`5<\O4PVBl(>kF7nK%'\i7F`b_;10(?bqi/.&S91E%:98"M*PqacK:1SF<<o*nj*ft7"t1skl(hC
%rICFLSAk@jHk0ADn"HI.M2>9Z"6Fd+W2j/ILOJU/iN=eGWU=rrCfcmE$1$D]X?.)<)!SD.'bi*U.Dok7?9P[/_Wn%4ka-Mt;(lj9
%JJCs<Rao5YCO7jqdWsO4p01YFe:'[eR=A;Ys)1mg?,Vm3aKD;MM"hk4^T?56cFYLMV(OQmfiEg5E%NTdZ?!%*NEo\S'kcQ,<_eq1
%(Cgme.F"Y>/;eN,:aZ2&^mlsWaip,34($DP!Y)#;AP#pWUp;5@rGu*"(U7GA_A[e;C[)))P9UgTMNr#bX4:pc=QH]\:rIChK#P6U
%`A3Uf)%K<e4I1jN/EDTkC;tq'Y2#DrDHskLZWteI.0^:sRqHIg?^-aeC&q+pFX`/W>Yeg8CZ=+cT%!iAY"SdF/t<pWPi?IYHfl"\
%S69_\/iG\IP.RsNi%1nq_IA/(.C9J?%F-L`()Ip[=`1a*%FMtLJ%_0JEXS(O8QercZQJ*$*/A!$cZ3!tMto(6g.ViOQ84XZVXPGW
%4#PA`\(X`WGYe/j=\:@h8Z'!pqQXf.3CMYiT?^o\2("4/$P]'TYi(JtFDT4:AG.[Ed1O\(MWB7UZ6k`IN-W`QKANpqq_PRb3?mJ)
%_Id1=E&MI*FLb%he*I*:F*Rf1;DM9<<>3hHC2X?X1MTk0brPPJ=OGk8_)X/UKd23HTK)-%XmeYsbuQ(hb[,)=VbMNNBnn\80%XCn
%*0r1r76BRE7m67Z2dH:Q!e@j?^u>;2M[.b[JuQr55C1Sk=O5@G3]J\L[#86>U"</#2&9p1`ocX<`3g9jo+'b$5?;8&dV75rlf8nk
%^RU3o8;r'$c'ViT2"Rm^pf@a"6=?:(RpoHkXns[0H0-(ng3p!Wp`VNLS7T9;-JZLkCRK7hQKhnNG.3<PnDk@j*1hJca`jA+2h,_-
%F%$*g,]H6Um+:>=&AaA6<'5!J'G!i9EMAC*Fdsl@74KRKW9$E%-`X_u@I9TKk<qZb3]^FD-Yb\>eEQa1U95/`SZ(mCBa;&:6SZtj
%F/L6oM>g7,GbW(h/RHodM'e:+Gr8?IW:Q\/F#^`lNtF"&f/V5=rYfME<;`\ph\-HkkkK6F/^a3qY0WMF8a0nd3hDRLrcCOWdJrSW
%V&9a^!\'J'd\:IhjRn>WZt^H!Q=/.HC*+-M4c2(sRL*[cDNog4$4^j@BLA=a<Yn^ae*<gtV:@I_-)9,[GZTGT9/c9%+6:N_[$T5%
%:JVjLr,I5U=!-<&2S!e#5NkT=r+Yb,$,ej<dJX8`WkB,KBCOf6m]d<)GCSQ5#_)]'7t1\?JWmn0ZOl?9e%87Xm]OIt,Ro'X$h.`h
%*WBtko+@QPVnL3Y:W)8iJmXk7[Z/`jF([n-c=!:F'Fg0!_Y(Rp;^N.]GN-9S\S[=[\hrPc)ePYMiJS4!I(U]^)hHcEAuN2m35_R5
%+`IM_h8=_gBbYE@5EO=Y"8+j['p-oMfsF]V`>0h(o>UB.Z)E)U!_"rn`M,5V>]58[-J[;OBe#6g)$s:gCTg.%h]pRSf7>uWou?2'
%r3:AkRC72bmF35[;b!+ZBhP'dCS/s\\d/>A9+%$kTH-tQ#YLJ=-od144?f\%=iMf@LF1A8EuLFs&^hV>?f7!A1Wd#+4)'%k8>j[;
%b,.m]'((*6Ijo>P6rX"OOEWJb4Fus5>%f0q)7*]iZ?<tVn_+0t=N;nYa(cWoL'CUaFOHpG6VtV_:>2[3.Q1+/dOC:CP=YGi+@-D5
%V#VN1irN^SqSjXad71gDlp/7IQ$dF*Nj20adBB(Hne@NjaH15>5d^%rk`eH(P(g1!rnD1OD4CbjALB^@8@/fRRC/F[hB(%@I-!3X
%M@S\T_m>N0A>`cBO])fM'/0j@`)OsF5mCoZ"el*/_2)K5;hqlns-DAL#M+J=+_tXfU2?!8gigk3nD`Pi\IAa\RDt,(b=9F5Ko1"N
%:YTj31ffQ><n<F-dtF7bj=[//H_KsSC$gE(M'Hd57<W&m'Rkl#5oM:$D4LjrSfo0%2t&Y6iAJ(6@5P;#cmn8-NfoDH!S]jo^6qK+
%(5imq8NZ2o[[u2D<NFL#;&cn]ZI[T&/&dBXMPYHc1lKkk\?4G[Y/L]b@DXiD$q>%7KOfjk_2M*MO<$VqE+GD_&I)[+Uiu`+GL`[j
%2S(dkK$dFWBj6iJURr=m(+nTa=-S),$]7'J_m$CT$;2CYe6s=tQAc&Xj2icY6p!<]=d?+e"uTVm+\P>SNcHB/fM@-cc"[jH98\ns
%DOqYe@oBWNB<fbJ?oHHqZ-?=g"m0e,L]Vij[V/%Yr'0IVW6"PVV/iuIg<Rt)k+p+Q??toZXEJ^;`VZ;d7t2NIj\13><1:KcGhDA)
%,%10jrsE*Q%,fNWF8SHJM;"`pE%nP]CA,5KngH!lpd8^Sg_k:!jAB*/dN8$MjN1FF>W<-+VNV%b)RQ&QpO<lMNA.`TYW5ZPJT:F2
%g;@O7h@Ej3.a]51>(bt9'54/sVTF2am\G:mkU;I$KpMc<me,O]U,eX#\uk3b;1$S)7\cgfTmsS0-.G_UC4CDRSWTXu7t\SM(B'[!
%)6308YP6)@j7g<s+p#D46!M$k9E&g<Z&Xa:k@9j!rT:S`c_Xf!rr49l?,nUENo,?9j'K3sYRK8&fD]itS5/72)%jBT9%RrjrD_/3
%a"1/jQ!=rQbr[O\nf-"ah9P)FAOL:Ls6P:.'+TCZonR*HJ,[ol6"`+N%-2=RIe'*PLb@uJL=$o5-A1cunie5["L*j-rXCs,r+EQG
%@k\q2'n#o`/*$Ni3qWF's)-\O-1(*_B`)3g@fM)-kn!Ut"(6G-p6X39JW*Y#5KbduXY)fL7V!>T+@eeeSDlj0O,kplrsoPH7au:`
%HN2`b/559pknofa5=Ol;S%.,5Ds"m0UAkD&n+YtSM:T.ud0q;o*uB>D>sMcrMn8I$#KsS3Bm*mA(@=V@_1&J/<2U'2Sl:=pD@KGK
%]TXS6PYkgBSY2a(!oqC9n>5*XkYeqHlOF$a!CGJS"6^l%6/Uj`iCFh:UYe[On66b>OlL-!et7fi\(Yoa8CRJgVP5=%\4QU!g69?$
%ct`9CrO1O=,DlL2&qTIqJ5.I"[*X(@pfn?b5[)Nn#3=/l;9#6>;[@_u!lfLnT%/>`5nebL"?sm=!2uhIQmt=i:52T\]6]>)024p\
%rcm&u*,>M)HFo``=EdbVdV1`/lAH"*0[;+_d16kVJ8JO?-0<q*8lW447;&TCUa]0TS^gAjVMR:aOR3C:-W'&L-d>]$f:DieB2(`<
%0qeCknQBITHF*W+D13mao>+7m]("a:dcjNAWVJiR8_<oY)i.355c<>93f`2P9`h]m"PD'BN&jRdL`'Bn#5HZ``:VcBBpJ8o_B;Mp
%<sF6&j2+59ZpmDS$5=!C3Z9j&qtC6&_Ae)is#"I9@87A.=a?CBfFWRkQZgT$[MBg3Fb_OkjKFAPUZfLld9&]JUE-o_#>eOSd@c1g
%jp7V'fh'`t"%P>6'(0/O#PnOTV$4GYbS:BCXp,.JgnBf62rT<9[Rhtmk$(`Omj65+ZY<(Y$%(WL#\P^:SC,:A880[H&>,L[\=\Hu
%R@"ie#T[<,ca?%\@=#8/j:;<DXc+qVL#%;f0C+GU1os5&Amgb\ZU0RtjU\LSaDX$X-&MKe:/n/cLFaFEbZ3/@IF`G'6P>rlku*C^
%`.lIX4,g6SB`/7%8)<'Y)QaFrqRrT!#Yn+$/Nn),7!HQU4LbrgT5&#PqhFm'WGhJ;H_]X\I-oIh;("@@I3^s;YEnuYkr6na`pIA6
%dH^9SpY2J+\BqJ3ro9"fUeJBbp&Z\-R<3eelK!bd+5^GI0j9n8.0Eb@dd\d8*Y!kl?%26<P+A1Y8fZ$5V_)abZ;XEVA.Jf8c\%+p
%a]94?VFPjNahI<H$JfX(EK<Clp*\Jpj\_m&,&u&$f_C<"h"\5/5mK:4*Hs&g2!2M-[PC+ZeDJ0>8Uko8!L,nH^O+"p^gPe9p_4Ql
%$lp/J9P75;/>%8&n>J,EE(p.G-AI%D2uA#?Xk?jf_57(>E;Q,6*9$3o,8n!k=s1mOF6Wn"_N!<Vo;>.;\)c?iW+J"-]QZ6]P+8".
%V`/cV_p9#tmo;=1ETI%#PPhi=5G%L(JV'./9`ahd-MgCfDp/g:2o?,W>d)K/WF:RmE\_M.(LkZak&o)!fL^1&.pL,P`jO7jP]t63
%+iCU"=.)_(P4]c$ff=;,+"J#>@\8rqNd>k=)0\=A9p=])=:e8F93o=&/P)S>B=[07eX_(H4a7Gd9$3+Z2S,X`#Q>*GaomE[G]X[c
%eFi\S8pjGa0'ai"#:$#ZqLAnfHj;"p3>h^UMBFOJYVAGqje>71++)8+^V6D-o?\)R]N+gLl,H1Y6pP5p1?Oe^)jn!(GG8RIMTKnU
%HW1]8)X6a'IF,OjaMR:qdH=GE6tP?P.3HXect\T\*l'Wi)5&@76SK5*R05n1O\+*r.nqgWN,*ET?MN1.CPK]PY8PJ\]k/[0@;ddP
%hJi*Nk^/FEf!2q$58\`C1$DEU`2js#Jr<efZEb9_)EO/]?suGoQQgfj@WOanQQuK4+4\A!]oMA#d=>2SHTZIi)64[oS_!f>j5H#l
%$4\DTcL.'O<h+3OCtWZ1,72[99o*O.;23/4f%tC/H;6[jG&s?S3]tW_b6m5oW7KU=qCNZ@]4pd:+$5>!p-'iZqB_uH0/dD?`J+:!
%^Y"_DXsV-YHbT2rY^3k//ADSe]D>_\[W@l4$qB;]0,TN]Tp9$`[<!#jB0HsEf^@?o0QMJ(5juIOE]jqoG(u^?=C/VTc):9\hKFU*
%\"c+9\Qir0'4!1?UZ/Wn4/q,'Nt6jPm;;YLacFmURFC09',T@PS\>lXBHc,+#>:0e[Dk6'IBXAYn/I^mYM7FULO:fTfnC5\mn"?h
%CqA:*`_Z$F_1ZbO$2i(s)#%6O<#VCeT&F,!`LNIA4Cl/J[M*T062"=p3lYC_i)M4c7_:aa6@=$([""Sfn)b+gDkWH]i$!5A)*L+g
%jbN."<HY4De$]agP_`X4HhE?P1m%e^(pDVNeAkg-1tijT5pPneJPS/?2#*bWj'6_I,J=N"eqMD\Lg*&!WZ=51j)(_V2i[4UK'UFl
%@7kRJ<:4Db(YmSf>R8'X0,r017\</r-VkQ(NRkBgl-7,4Ugp/QCSu<Q7_'(J2UaglKlFB,7^n$/d9$g:S/XU-T2I2fB%3g-nOEF%
%JK%&M@NB7\1YgcqY;eJ0]"\oY6M/4$d?SGoZ^/:`S6?hb<`$+hp$0!P!oV:;ke'b@\2F+0e5dZoSK"[Wp,<IcaZDU<FoXc*C1bsb
%cSma5ZRTlfH6(chi*r`rT%!SaZZL;H)N>Sn67_?&-6H/J-`%Y:RMsgTl".Klg1\'A[PDi<ZoNG8&)BK$k%;"jX6iT1,9o9.3\EP<
%DN,^5#*8K\9;AF#Jk@QPnO@\MjOEC,qBgq@iP!9EVacAT^9[(QBP)ChEAQ>.6I'(8h*2:tkCZFJOfh[(>G3_LVW$0@/Nu>*1l>L7
%S)$n)p<T6Jh%'"NnaLo82&`lRpS&S^bO,U2T[E,Qg1WWR]EbG^c/'hbQEb$?orf=_B]\KZC)Z?S^/0<\U`CC[3VXJ)^K*!C7\a4E
%CA&o6lFJmbs7KPF\2=%!&K7.]fX]Di"NZqiNY7sDNj\Dg\)l?-l-mIGdB1fZE3jPN1E(tP:sIQmVi?a<-g0.G9jJaK2L8ZhCH]-r
%NrbG_L@W(M=R1<rS!Vm=Jn(RbH`a5^UT^kTafWr=i#(;:;bD9u]8AR,H@#;Tl`Rl@F_p\qP.YaNPRDo3a4B]a`qiXL?8$c9SJs`H
%O,P+fj-!oIQ!]B,d4!4sR6^so:PCiD[(.rkR>GNo1qe<2TgiNMU,cH6MS)Wt?_Pl<OekpBQac2?RbI+05&-3:lb^bX)E0-_m"Q%p
%N@%0UO/#_)BYr%9lH.u5C8M>tmXs<(Z,3D)Si""pY/Dml%Ml'W)l1mEal\]l]TMO4f"oWDC6Z1a$JNJkm931olg)<Yg$7)@kbu*0
%;&e?(8=E%pE*WmSDrX=K^$C"#1t'ppEOtgfNZ&WDN`c@0RU9F4Rp6q"UQUTuNs`#gFY"eV423B02X[d7:Ig_[WY?CHS&&t#n0p88
%r-I)PfG0n9o2V]t0F--Q0N;:-UUL_LXjuT$R;@"?7.4u+ZZ>Oqe3o_Rg\rUJp3_sFGrqGT`8-2"IVX_kb2IYcs6R17iV`B-AF'$[
%BQ`\>p/lRBa(";4jfKm(=,o)?Vu+*T%@=8Zhp46f2[RO6\^Ld\PGD+3cDQ=Q/u6gi*TuaVp$:aMA_6&2G5.rAICnt=[MZ\`)g.)6
%XTQN,#P$DDk3C(al]X[.f1n_o357Vir;8F$Xi)c/FblUFrVDi#]]AYVpWjuPV<"0(hERWF/t306DkEec>Y)nRqto!;)iYq#]PZLs
%4"Ki;ebQ=fG?UQ=S1/=eHP`8<2gudM3.;mZ^$+7)K;X&kDb$Rnf*cm(+rj'jPBNrGm7>46Z]!g%H>d@^5k2&8j5BMug%"J%D)3.@
%D$Ss'hX3eA:iu^qg,.[T%O9^qh;TA_-FK=-=Smf_(RV)_-/CE$HCJN_kjarUN0c29Oc=b[dQiQX<A==fRA+'Oa9!ps'?@;L$f-5B
%abRJiK.lF_@ir0m[*50'qAWh&hG(8["0D0D>AnVKn*[Pj/>1t(<5@;J"k-RD/(2G_GsXB4ecrK<gg-0Wq`jp(`_L=:o#kFlFJGhV
%'5l<]qeEI5d?Wui_R377>0NMI1^]+[?f$+:1lAY[dd6pjdob-iCVdB)UUAh>?>ie$24?U/rQ.a*%(Ta2R0!4Z2k"K_;2s]jp+NC7
%46u457\d5jhY!kE;65bX!(PU!FD`pXJ+)7X9(bPjD%p1aPh_TW!(OCabH90h8#%qMe']W\17H0#M//kW,Iqt"Dqo-(L[,]c1KkCN
%TPNHqi*Yb;S5).>jj$mAVfLEZ2O.N-gBfXb31@R1Kd^hi`bb3]d=dE^M2,T[_>'7&5PuuSrU1:"7Y@g<n[5\rJFQ39rNdkJmMj\@
%P_rhre9&G(NEY"[/?-<r?5B60RtKO*\8u4m:!e9Ms&@,aoOh0B+R8%MK&/VU`G"dC'buig>KgK%]=X=>o`mIOTl4._F;LmN5?\YA
%\427-UN@o;s)9-7%_&gjYP.<V+$hoqgQE'q!)eo^?(]%%3g(T6W,%a(]h^[Hp?iXP?/:J"56RRr?Xn(h&s1_C(6E;C1BANr\YO(_
%L[jbga*#/eiBPT!1@^I9c_.ppF+q;,ZH)m^:K2]bAse!o=MAT?).ntErb@G,'7L#M])p0NZCBO/?0*b8^_5K_IdRuf/01nu!3t\?
%`kfNR7r[WsiQd-hKm[Yu4(f],`Qil!j*`HDWB?H#F9DC'rE0YJM$(Ct.UqLb>goa8SH2hS?<<CI#M<%Jc6ek6=K)r)p,Mp?83:*o
%YcAlSqUgL=]23(W"jpX+o%MZ7IDMU?JOK2:ofAci[uL_doC^ga<(IsXMlbrY3MZJ"HtWeC3<o]Z;L'`>9pi)ITo$Ymb'A$`XK0h!
%Zs.nRE<Q^d@Kt'RB)'2:8mgdQ@n>jO#:9iIV<$[,Q.`+=,n2QYkoN9H%aC9Mql"-=q9>pGKZk^<o4rCbYJeO)Ffn-1A[r0oV,pcr
%PK80;$Xu''"1gEm:.3^Vps26Ba54#E+#gafP('4d6iP.E@H5>2K,3T,-""3V_$CXd5c<Q+l]EQuAS""^"I?&V/?+)I-Cp9fhbMG?
%<UF8;"@[&WaZdIH\`n.A-YuqmK&4:0j5^)7mOQ'3+Y/QO0Q[ZUqcn:0d_8#RQMI;_$[N#*<4^]G#4)1qKoX4jQ5T=b^Cb)CY#THt
%<n>r;<bCe:(NQP"/5R*#,f]Uj6-NQ6Rh9+A?Fq>ubT(K>6)oAc("&i:h0jlgj+cN=J4QNB"RUH>9CWIVO1C_mc?/Pq^oh!rVVk"1
%#?FKFDQ<UoOIiAh@o")N)TlSJf)[pZ+`FO+Ys=*#luUaQ%WFhSq)>@Zi&9%oDl1=TFCcd4c`&.f($LOIjC@G1=gp51K[MH#@,a]M
%(<`p.7goDeCOJIFYGp2kEjDL?]=@+0XA->qIVI5pp;5q5C^mm62%Gb">BA>'SCiT)JUeX#0&rM6KRFYSSQZX.piQj'$t96q1B89L
%qQ0D)lhL0302?-;fP6c>nce!'\#s,V=r0n>H6.QnL2OOM;Ut2jhOK/'(d;gqq6*0E?!Oq4*E[QJ-7]B'CISs2!*4CM=_S,,RDa:r
%#)TC/'p#4-]8G`)ZZqgsX<d6#+]1B/\kgG"B]AQN\'`9s^WUD^a`S@0$%knEaK!"ELW5$!K6%u8GS0ZSdDq8`@X/HuchEQpN5'8$
%"p>KYQn=X**DP_hdEsp#YN:73MZ?3KbNm6if4SLq0mDi+phO]I!:qq/YJI;6UX3PfX@aR=<GBb`YU]$00:NcYMo+o7&;/]L=Soue
%#`$H41$FE**1J)+]N>6K**[!I-Wb?S8C/pcA@$0qk2DR!Y!_cM"/7LFfI$7Q?i\)SX0eY_b=mGk\-j0r=jETOTL($L!$*t'2A0&c
%D2lM:(tDo%G.M`qidh8;]aAiU]TMeK_'&,Ec]tuP6^@0mk_9!qW?!=r&![HZns'j'F+;?LP<En#ce==%:Zn%pHH_-)*0c(k;<^m.
%qW=p#A#7&@Ka[_-A!;;Hb<7ENEFn8I_O2m[\A`6C^.$qt?A1l+O(ki0cqm^Pi^W\6cfB=:^%GM"EEV=C;^1Y4(dU`oT+2i8VolJ>
%e:FB#08H=]H+=eD]]+gu8p;VXH`l!XGZ:+.U5pfpF-\JX1210W"pRD(AT?G=B'!\i["#b'NcpCpIpnlLpLX_IYIL0*f;5g%6()!L
%.Lt-S!E0E>3b;NIX$ak5FQi(2;isB5a9J$H]2>VI]X15fK6d)JL)KBUNVdL'BKB:a//RkgZV[()<q":DFe0#,/KF_>icH/77Wn*`
%R@Gd'jk/on_2`#%O,kL*fGc:?6IfK,X+s7[7("-JM+9_sPiJs1;cStD%WR'B/GaeM5o/=?/C(*UpJ4#VZB3o%6T16k!-=EZju?JN
%1+)V?9trVgQ*U0mk<cQ<MR'\#'Y@Y*91tiS`MMOq[k)'U@^iH8]i-M;-'%;Z>8l3ClpS-uR)PjE$42btA>(=?`O%*UX#.K\E[oP3
%;nui65Rc976dK)?#,sC,%>&\-I7)#+O%.6mksAB!2U9W8h4*@["/FdV(cO^]ceq072_HOQ^13s[YLQPo"XhnZ'b07D:1ljG%jJCo
%Q^5JT-('i*K'@_2Z%RD.X'f\%4cD4Pa>L<;IrC=CG9\aVi[Wf5XXkpT(01(G+BjS/0k]'!<]4(dM+nOknL%6bL+Nb[Qq=46>PC!p
%(DW^0j?8*5BoLu00"J&1i(c9lL=qDVo`3Bc1'n;3BTLH*$X^&JKCR8p%?q`3%jl=R=!NLG4+e$bQY#7)H"YL'HZq$26g*+#Sj@#U
%'!PIJSTb:/Q7]U[%\7eJ*T\GI.#0G;R6a>S$SIZ2kL-;t60FOc3,9"pG6XV#/\"mmSRkPJH#.f0k^kg:hALDpLNa%bFP[mW:*,RD
%Ep1.lk_S]E1Eb@6'55HpoU9:Jh(sWUh4r:u]7b.iI!t&l\@p>u1Sb8e7_'@UI>jcqo6$[-Ect53_!-64=E<#mgK=!(;dtHE<RBL\
%bb?(m10A?^316d%jbuH9n`A\[-#X:6_q7H"35-YRQi&T\Xc#42FbsWmqRF@(i5Cp:k7ac3L9UFBOgj#a0fX;*?KoR*Tcf'oqbgSL
%D6+0u@8/%gN`,Hdg<?65%[$JZnY'_Pa:-aK[(gil:N'gAAK076=-T?>Y4FG%2um&/Wan"Ugai!?cb^Pe?BppGYeXkQ`QUqBe^#RT
%k/kl54'/$eMpY2NaOQ]A9YJ;GRoKjnUSZVe[XH\I/XpdEQm5Tn*/?8\S"rtm9d'"6Z22VR-halYJJi`\NtZGSJj#1@^2\_WhObr%
%bVsb0A3e2NHZX#.GN9qpB1soLN.KS<6)NG9r0lsLbnrlWo3elKT1^5tDbeLbaA?[E\N+uu;OL%4N#Dd_6Y/GYos6s.,A1W>I_Cc-
%#VhCB&6L&eG5PrBf$J`-l/S,P`MR$m*;ClJC;fQ&\+J"5o;[D<\9ThL/1[nlo#HNs-[Y:2mCh"X>8=QVG!1dI7o`54hQO$Xm+gT)
%`SE&NeRCe^S6><M.`X51es-gpq4cP)mO<%&[-n,+CK?l\4#ee,E5FMS>b=U'\S3Z$r`btqHMPQ4H*P]U<mn'>*r9He>0KZa9R\&W
%B5q-0V8kT/%%4YdHU\]bHEs_<#+b<VC1UN&eF^$/8_?Y>o>,.YWCq=9&M'@ggcH8cE;!NS\T*S"#-VRGNLr;=?-.hf%UG61P@@jh
%R`Qf7)P(b;Mjk;RArk0-GVlkrh'&u`LH[U:MaqAT4EfK\A[X"pUH(Im:,27q7n`Eo^sFtTO!$JmouM(qmkhD*4YeDl:#\K7ZScM:
%R\**)A'3,%e0BV,$NOf4oGfgRA=,'=/UVJdC<K!#]EnASNO(%V_rG=h,jnrr4t]u-6fZhYd]rRUAod/FO'*]?#q!9\U$Y5`:EMqJ
%cQll[bH#.*2iM7fX'7Q5oGG%mGJ"t#(s`m/4]But5QiId\N<*jW0a8\=7oBQBR+a<ZB>R@_VPl-mXi`#^M"L)bKbmLq>&^M7qTht
%o@nb23VdW=p2([e1InD?jMN]BW%O;F8&b-YAm0rYlA^f&k0+U20d"\`ARqe9E,+g1btYS#HoS/;G5a?XYC&=Q/ch4'>%Tr<g-aC8
%e8h^>3;]_ZHbS,F;ECP+lI[IkN&`65[`PbCDTT,X7EH;k0d#di0:lL2Qk3aQ,XX^IgKMh,_Md]aC]ll`W,s>7O\@B,O1X4aNe-qc
%GeWlnLbY\=%*bBE[tqq"*_Kn2Pmj4s4_Q#ThA!EZZk9O^P@l8\b0pe%jd>k2.iDBZm]Ae(1Q/mb9S<dgj%+nXAN+"%c`C[@P`H7G
%/:e4,/M=L(%"$flH5Ns*m>ARjLI%2n\!Z^?D9=*7!KAaE3s>UIp"`l)`Lo[<8B](FIJR)U7OhBG]St@<T-\$DMCX]Y2m[+l2HNZ5
%Zh$8*7Oloo"MP2M:c?i$)6$FCZh`[IOikBI[%Bu!jol?Qa/5j8&PH.[g^M4T7#5%"%/W^$,8n(j_I5VdCUVO4WGlPE?%BK(<&aq6
%-@a;BWGp(1bCrjQh!N6qVS]mdrM?C.!Q=n96aL5]7k,Jp@ZAQ"noNY.iLM67CMXKBQoD3D*TU<$cr2#r%eN'oB3m<D`nl=V%V/P,
%f1(KNkqK6EH'@34(Dh#tRpbT]j'.q0E'SCJmR"q/#`cGoN#:M%*-;_(l3"U?VoC`kZg#^*m/,gi[ert8C$bGT@_FOCfm2Da.Y!;O
%,(F]=?<*"(jh4dVC1m#ObA\X">s!h))l;iU;mdiem&lS035Y)ib+Gd71*sQ'ma8RIQK-t*DskqG&ZXt-YhdRPj1S[&gRW,c)`jB_
%FD=c>*F">kclr#CA@Lo:jOl-<bqm7T.%=:`/BMe1&(dtDU1:SqgiBYD::XKHH$j=_)QPk%$m.@/2el'16O./q>dDX!Sf)]%eRm7;
%;5&<KII>NsAi5f6/\ei/fY)SW]<,Z")m*DI5.EG<3s_C":R^\hG*a95nXU`Y\2RTj>Z]0k\jjuLMrW\o0&AFr_co_oQ]k&D6TKPJ
%mq.-EA8H<@W>M?C`dFDa.\cb@N^]J$I,pHG;<8m?CC-2c(=Efd$;oKjVomeo4Zi(_AX))8mEdN`B&X5)ZGg'7Vb0-cZnQ+fN@e2Z
%;GWHsnh+nj:0uhAjB0*7`jTN<_J(,Plltj4f/N:EEaE(^q%&Tt*Zo-N0ilnEI(j5&0R%9/>QLTm<j)SBq/Pb,dbQj"-VHLS]?Ym+
%*UW)s:,X,N+(k%Z3it*,91L,5b\T><TlE`OVK9oOi^1MFZg!ta`0gA1i%d3Va@jdTErl`X?^@-TkIX+&;R5Q>,k@\_FB"TK]@kqS
%4\mu,PFmQq5degP3i?4Da4Qu;ZK[kn6Z[(i1:$/7Ep9+g<ELN9cAAr,X.i80VK;#8OY=o%VK9nVdl!tuA^`XgVaT]TAi?4/r3;bG
%2-Vu0;cRn?nG6\E3E>1/?TD1GSL_XERSC7ZM"rKS4qLp\S'G^c`@2"?Z"uJ!>WSc=;A[NRF3:>#gTt\pCcX(`UKfjpr6!^!l's6m
%LejTuS'HU8=SR06q)D/.SWc\+^0Wg<2Ot^&')O:<Y2E\&DiQn!/sK)n(>XO&j`=gu^B(h\/rqOfT_(AGR$],dk"ZHq18#ee?+;7G
%1$@E)H#j6e?KQNUT%_03cDu$/`H#6!rH7=JC8ESR[#E6#De;2q3OJ@qq]&dWQ;00@!c+-=VopZN:Kj)k7t0/O/"Cu_T=&VTO%q,f
%gMJpT9X?mHF?9B`qoERc3Q*#EGik$P&IgV@0m@q]K%E;41W:TMEu:O%mM8"KN]t5+2j&"G4i*-!@?6'/Af-X$0m=,_dP&LWN\i&_
%8($k"47=j;(NrFnF6AD%Cf,usa4r]9^9K72aa;XE<E<XLPqU&8-08:rD-h%_jbimbh(Z4\nA;^u_dfQG$lAikZC^fn6VQ\1p`(XE
%P#Oj&Q#);!F2e-IAL5JQF:[A=5I\t-r9AVuWf$q,4B"G+_[08m'=Q3$mJ005h_PR"pN83T*gg3PJSE;cL2&7q)QGNi['O=-/jar3
%IUU1#&E;VJ@&o&+Vq.fc/c,k)Z]':W#c>AUcUj'LA?rO1G2^U+9<;,>Z8Jo<@>eT>[c8s9flmTfQ'E?<=(]nM[&PCk1PR=2jU0.;
%8sB@@QLeFr@]2RsMc^W1i0hn79iapB22:sRVDG7.Hl!p`QBne$1K`WCL,XaQ&fKI\+6Pebej)(!CG'b$`Bs7%,XhF/<o\KAcfZRc
%!A>V$!bsG;VjhliS10^('?KNs$m$q38GA"qnqf8RHmXHq"&GP/[n'tp6%j+f&^4e,FM]'Q\^cV0E(=J'0"e<?q[%IfS<Pr;q)Ft1
%\!29cnl#%AAi\hqa#@=.c3\^EH*<6@gb#$u94^=B*tme&OQ@(W1#'F;W3TKZ>Ze%qj1+P+WiX2+12p/.DN,L2`A/MQ&o2pi\K^\t
%lHMZ'T\3[7YnhZG)<bV`@fH&)jgR=^[#DM7K0U3qD`9797hY+RS&t/;3FmpM/pQk?mkcAhN%g!N'n,OmL5`A4K,:Z]EjrEXbu%K0
%ffkb[dL7i7gRU'/BJZ/hMIgm$@Nte+P\,1#cBr6C$rN?B(h*+fbb!iu8g\A3@4>pXYf!V<9KB9MXN*J5ET/@.V;g=/lV7m?a$#ma
%Yu9#j/7RJ)$ECD/V7N10_33h^8ilCb2ieGYMr0n;EBufnE:FoLF@`!]aKoG@1F6YYE875N*H_o(#5nmVoek^XSsEucPX_E20gnq3
%Y4f0qjbN."<V`=Dg+OFVY)Z,nA/jmX;NX15@@W=N-@/!AF8&Z&P3![llXB803?N-#ph7d),<N<ukHJfpe#6g"LPp#WceO]Qd\"q6
%G&ZB*KQkIj][H:1]PF9/or<8qdV*5-B8P"qAo@=eUX<6h:GllMLM\h*ef2#oV?']RIFbl4ErT1WY,Q-1l'pn.KGWD"qPI#X6W@b<
%X2jINWV]2h_r&2adg^kh<<lT,/n</-Y1JrbNa&99<taB/SV^QSe*p*SCT[Xq*F<DroYNMa5ao3.opcU7dl1Q*R`fP&PtO9jc2!Xm
%,pVTK7TE.51Cd$T7_$u_cRLu<Qe;9'VgYH`*PB69A+na?cIW<fnRGn2q6B9,$KL1jER4[\R6?kbBmh'a2,bo^Ha]2&Y\MII=WYb8
%EG[%H/tNk<:X]%C9*cHRe8_286E<5SdQA_^B?X!>92Mk(^"',&p*,%0r/d+fHtnl]C\4:?p_ZiVF9]3EVq_f5BBbSnRXjts(uquN
%]4?iJU/nAh8Up)mNgX0!#<$aJ+!5gpZE.]9]MoYL^=;^[h=cht3C:I>AH"XWE6)De^JpN'aob"X>1>e1;DJ)Q$i%bMc<6L84lXJJ
%i`WF_risEC_jiCBCUKhXb^7=RZH3WGI7qpX9,^p=At(;nn#`cr3D<)70#pG)EX"Vn#0a=:?1j/EZT8.IT2fg:$(:[&="GscN@OU2
%AamtVV>u4:s/l_\q?XNl4#IQ-3*RS0DW7IQR*SH7:'H%8hWJ:D*%Se6G`t);]h?M*He^T52GSJ<_XGa+JCOC[/?+/3Ia=P,l(BJR
%ja@WuR:6)4')n1#HY#B$5MSqt\Z`,^pWJ"8'3++@pb.!/`+;9ZkE)h!+QdadcYO.c\Q3<8(O"C?ko;ro^<DiGBI>7l*'fj=86i3_
%mmK<+l^K70d$ZWCErbCs-dQn/T$',pN*1\43IlRVR(:"C`Y8$8F%'6<!*O@CIBm[:Z2e$K!$+'!$sA+PCBRTH+KLLg[ef-W"/to_
%MsGFiP?Q8*I'+j&/bMq(AhVq+L[oF.VC[H*&*5U>aS&CMb3-*o\>2Lf&B$\+^g#6\I.k(.J)X9ga4%>[IOLi;q3;=-b%Ks:4nW>l
%'rA>$CSoThe%'p2#+"k[I^AGOj`[fabaD^/g)Go5eSi:;U%EF)(5fP351e+BlY[#U6fE+br&fjQl%i!b)eo]BqK\^ua3c]V^q"pN
%+cB=<h*U<$Gq86I#bnlUoqR9-E2oPtXQMUip%+2V,5EmMTBkYt[%5:TIS9?=5OVJFScHWPY+PH=d#-@/cLpdfpm<5>EmDQeS9#;Z
%8O%5Ye^'I7[(s5$VYD+bWIFGNV>20$_R]j"9]u7tlVU31/`U)#mo00s3fe1c3U_lslY!6:-M$:]O)N$Z2'$a-juCu=X%TQL$b'Y,
%f.Z93Wh3qdisb,IH)IQZll)JY\UJEhOYQTURH%O:mo01Tp?n=2>X,\s.BD'HZ#flV(P^$Mhr<hqGqX9eS:?ZBr?u>@kjS,6a2aM?
%@+=1V*o@V$*p?Q$(-R_>9o8Vik$UF*O!WM'nT4ZQA8'dsPdIak\UJjBS)[]Nlre&o`+QSj%*a1&TD,=6$Z"ef\UFp$j,E0tZ(8qE
%">]U/eSjUApu\lY/\<soch3dl-pDEHefAlK4kJ$W<'TQia4\f3>D/'BTBk[Bk,>n]0(&FCk>V=kgpP8s>eaG5?KXE%c_2,oh&Brd
%f?_&ETC_gn2kTT=I[p:=`/H]P?DmY)m@A,@6i4EChP^31HJmsGf?Yo/ajCL*d(+V^Vu$5VF2aaBjE7JpBjWicS0sYErL!PL$_?VH
%0pB&:-g/Qr;U>%-`X(/Z6,.L>]G3fN`tgnkcW`+\Xmmu^Y+JYhQk?.QYVIuc\UNBc2V.6KH-c0TNX*")f?S`GT+f/%9EEJIU`%JN
%A'D)]n6A3H/l>cA$_?Tr'+X\7dLZn7/+o,sQ\eu:gVe2$?H[igQ@5V!)Q$$EOE]Wr3Gm1/dPC^(eh-'tLVIPi(M:nfJKQpH5YH[N
%dEZX9-&V90K&Obk1mm2[:6KW\^Lh0>p$l]@N=3Sda68+NKJqHDgQQ_&SV`=j&,F&K\T+;'o$P.k[>1%*i?T$e<%n'4qj5Oh>2se6
%*;\qZl5Rn/0Tg)!IpTHgSbgD+fA#QQZ-p_V\^9Ti_9YhC*$2jR4tjL\lPb7.]m6_K_QU/>=QJ(^qUaEpH#2ep(jjo-N'`Nn`b6X$
%"]koNJ.Ds%T3IG5HM]%TO.CrJJ(D@"67:89O%+JckJ?A'm3F(pcTpZSD7*=>6<2[m'rk?E<M?i^3#-1@Vk9_]G:t\>IdV*42r^_e
%2"[H0Bt=+>M='A!+46;UES?mY\]MRG`ZI^O!e7(Lfo\95$KmcDN[NqDC8"ti.I=F$,9Y)gJfD\$94qZ*`)PdgHL5@Php7esDblF(
%`^ld<b?1Z\agL>YkjEgM\(*!`c5X0dNOQpd:+F#-P)8GFTeK2:Psi'prX7's<ZSAC%hlcVpR+MXS<k@%c:0-bN)5A)?+kr<-Jp:N
%-WGS2d28;qI:tV,AN)O!#?%RB>Pu%bk9nYt/>#6iJ$C1<m).;9U]'rQX4+pOk3Y!k:[dXMo4s\`ddtlO!?S4>]T6%u:?/\MG&+Qq
%[)*H9Q/eQP210@f-rsY4[nGO(0;?SQ=5%"GH%Ea-8c\%(4m9ff^A3sX14B[$6mU.2+>A!D?h3(H8eNf/BY8b9!ujT/T2%iE/O4-%
%!4SFPHjdl?q#e,'$$,o*<oP+p:gVo5I]L1P*fl$LQi3!DXa4phrB@)?)Ai6gqMQd#U(hA,0B2V^CU&M!?lV7'd]YiXhXtdil:#1L
%n5F[R)SmX5C\<sir[^MRY.Z+8q?qE)-hV5a.A3TO.N-[4!_QSk((W0C$/J4Lmab$%YPTM5MR8*^g8EsTTei2r5a=#a*TdFl"cWks
%1F6#HKn-Xl(Y]1-pf=N*rU;4E1I^6jX"jULnKl*-X#PPY75C>QXjO0pBgmiZjTMR7#Z]m[a9rg<h\'hXBU%#q0sQFHZ!K"_-WJ8N
%<GSQJci.b2$<4DW^H153?#P]X]@X%26M@r'-?KuJBEV=/^4-9V^[OCbNsj";[r2JF8Wd`M9*<$_Kf2j)?jGqL[fk$Ro#%.l#b]s:
%9<5gRf95uGqY6e2i2'&Aq.c+E8?u)qZTH&9`;k#VA7YasO/5e0n9b%GT-"U<0Gc-5S*+FE%)?n4Y)8--ho)Gn(*16/!'YRZBf;jS
%0^5&K+Qmt^bs<1aT>p(X+042P*?\0BWA2Y30oVM.4qSHGZVa'dc':a*f8Zl$+*BJlp2R)idO60@VK=U<BW@S8[gDYR^YX?[FH-?6
%GZ(e7s+=X6nVp<cd;agdnGEFbI#l[Sj]\"CTi6`na5%Bj5[gmtYP2#Q[sQ1(l.5AGi<R!JRtK/D=.o`Mj05HtWGP,OjIG/'Nr_.!
%Jehh_3h4+!ji<du$:60n#bHbXAb)rDIH+Nd>3qI[CohVK^be5IW9oBTaX5/J`Y[3(;X3YpID\N_ppS]g`E)pG[(=gRo(%lUoqY-d
%8:<:@Og4X>//LeC,8c=Q"!6+JEHXcbq8aUe,pR91II-!VMX@K!a%/5^=F4G7I:Y@UG#G9NqPr'u'qPcBLWCUKT^<Q^K7/rH_U3ci
%$^H`M>Y$J8"aL-Q7DrBoEYDM)(N/hE-a7#sl%^H4fTO&qC]u&f*V8+CZU9"D\pe')/m0'3)DEfcA:l9Ri`2;r:Ub+;Ac(lMFai!t
%RHeH@;4jh_DV^7CjmOVcAf>q0_E6MhZ.LMMfhn<u.V^mUj!+ro:cXB2\+R,Y:=*l'(/G#r+?d0^W,u#3H`+PPG7MfHm:1"r(0k)o
%?+!Q79^jjF^W)+2`EUDe`O'de!ucK'8dq$Y#O.&]:])cRF,tM$^79-cA@5[3p6@n/9^;VIXs-$->-!_q+%[3GJqeOiM)8(%U4mD*
%aW0AALjU#F8E1,2'(mCjNAI:mC]6`PB4!/D'Fg\c)0j1I8I&Uk-GLuJ$@?mp2VQ*\3fF6,I&'?)&+!qjK1Np"*U=Z3QqemPYGgSW
%n+m`@Es97e2fH/;VW[%n38c;tYEVoS*r.ZhqRFplC[L[!"Ac%0h*a]V(rm2W"q;M$Ql82lCZZ9oH9T*DSgKNq6e`86q3:qg?]LP_
%[!BPSJ/9Zk!!2B0QShd,J=o#B(h]U6SnK6?+4#$OgmN^YG'3E]J\6IE%]^^cm[[K3n]e<G"LZW"4XDEt3.cZK7Ut4,7ZMU&*,qV7
%jN=ZA%1"#"5`U.58=Vj?;F)F"72c<rZP+]K+R:[qfGa"`oPriK8hO,*$7K/d=.mmR<u&Zl>G)LOkPX0"!Yhn*c;O?%"843hoR]QS
%\V;7Bn*Ui-`9&!CahdN9".FY).YtQL5,9A;kZGr\k,T\"@jOs\2f0ebDkl_SNL.@Z3)r4Rja8$p9OfC)#Bu-2mb&>PnT(d@(g(Lr
%"dYFNg">'Wl>'BfXaS!03BL\Klhb*k]QD*u""Psr`"6DkH3R[_#N\EJhqb;N/f-7(%r[,u6S*B[Cb;XHQn%o24:a3-.Uk]*3H-Od
%^pnc2/@$\aMU2X'9b*jhk$])41)%j(E%L"',-63K\oJfINd4W5@2^rpJOniMN>(p-7b#3Z-W"RK`J``No3qjrFst*>?Ib:aD?P:U
%@AQq*5oOf>?SXW!RiGC9]KSVd>.WGpP9,``+c^!RXbu`IZ*OY:=N/\BKPF!B^*(ssF:cI(_<F-ZdD<5YTQ!U!At"+.\i4R!UVCeS
%h6*OXA<7bJlh+Z`o@F__5UM^WKih9.'o4YEF>GHY1Y=?HTsn9C2tN+Zo?HZF^$]6^Up\`_>,jFEPDYFK(Z[Z*TX/En<Dh#IF0K)G
%!7jZ@($R!AgP\LH2,c:7TtU%1nR`ph<42J^@SY3cFrpAF<Sr)nkE^kTiPlXjKgUSc@u,r\80$JQI/3oVn[)=N*,]fL]5P?tIMi!_
%/7DmKJ("+SKqkj;4j6Wnjemd'Q@[Zc<s5@bb((r=>uab[rg"Oe-P[`a"5J1Wor[EGf-BX7<*+?9d'0WNl%J='`g*ZDL\T3ifFF;9
%YpB#lBebL)+e#8@EiM;aog\]LB`4(fDGH6ali]JO+$j4o-4YSs*6$DRh6\"Gdff7Y1%uiBj#^+:1,edh-iu0e`6MA2!7nPL9AgdJ
%:-tr/nqDknf@[8;(&u*;7ro6N@'-(qp2elj0jNL!UsGG$L`3h\X$0R5&k7oKf88ekKe_VtnMi"I4VIPDV22Y^^grU0]q4DB$-eej
%NN*hFJ!Mo<3HMm?=Xm[[DtQ!VIUe0=RI7IDlfEoe6eK&kVeuZ2Hi.M_3P[/TQ<L@m"%J9El9Von<_[*q,58GjjE,E0X'6PfQX(,K
%XY"uB/`P'C#gL\FD'm!'b_<@2X"mon=_(<tHTUKu9XJIE.;Hgqm*aX]#1IZQ[_7J<(JpK$KVloa6(Cc&b1gkp`sB;ao"^WB8ZES%
%XGQiL]Y8`6k:]CAk!@_rcXgQ)YBAPJ9L/`4&*qo#G@,Ztp!_R$5C.7>S9[ip=VR+(]<X`\85+KmBgSqt;\9E3;Ft,)Y0KH#nA=>&
%<L<:j7#*KC^cD8fYg9E+70AV0q))Z!(qZK(gt.lL)^k]r^5!)shGN>7_gH)+Pd9b7+G>q@=].O5<?Xr',_B*';nSc)7GDV2:";fL
%58gEc@XIuVq@j`sO%mpOPhP^rlW:?X>K)b6'b.JeN5'P=K(3G68I^Z(gsC0//lF_3j8P4>35>"sGqXSXWb5R-XkTdEgH!jMC:2T:
%-^mK%8quJ.F<glc>0[CoLl'O-irbUr)?ZYM<K,I%1>Tm69G-1X4iM;56rCdJ%)b52J9@_X7&1S9=M2:,+^^UDj:C[V-s3hfTr<K;
%n&/5+A.se8c>fJs<LBOdMH9`JCZAfhg*OO%So<saC[/>aPOQ8(DdFe,g4ll*EJ^fDZREInO(Fm#YCo[Gnt)rY/*!fB1\Zci4tqdp
%D;QDW"7NI*q9J/g]IhXB@ap_)eqH'ZMfJ63UMR$'@Y7(80-9GW]Kq+)87SY\!OIgt5f1OIoK:qne5e_rl^/DpLra@9Pp8>5'VLtT
%@aQB#?94,a=CSoa93B(LCA!jf<),QqeEO\o*7=D1_\5b&c?f2J?1ID`44\%B4*3Yu=$2eIFr7Ik2T90_C57oP@8f:#<BE`tZD6-)
%I2C1dLKWD#k#XX-"!WjJ'osZ@*I@^CLS4BB4!H/1khN@)_"3nE'`$V/W&flLG;1$O4HLOVm!J!O?q5Ec,@H$sS2VlHokXPJOP0qD
%CgFVIdUShij&4rYn(;)dn>GeU?@?6s'RIAuQJT&Go<(1edEDGmd$G!G/u@f6GEWCHo><`fbg$C90gH\2ksYt?]^cZ^pu;+"&3)'f
%$DL.efc^"h@Xp/L3#U9'<\4B/?V5'62dX%SDeQR]PrHbZC.D_#m_gq,m?iP^TbZFNXJ,r.+c$Sj7,c$,/GPQDVoMJS\uq:n$3D1N
%:$h<gXUD7(0pV^@Q$--HFnZUUBm5nS$(N7!Ej`e1k(\Cr=O#mPpS0cVI0C'\.H4)GB2">12Ul@VcQbrjMgV[./R4M]bK#CS#5!'$
%?o6TnBpJF%NN7*ai9Ao3RMp0Y%R`!OZU%/FW,<OW=mRG!U4r44HQC^Te0AYI`*1"q8:=HT!Yp_aKl.`Yq>);?;)e'Z`@]<_*#X.(
%m;ta*UN*@E$N-Rle+q/"TmiIjK+u@2(U_+ABkBnI4#Iigg:N"4;B25YB[-&iAoei+Jc^^MFajK"ZW>=87QTFt*hY"RRT>=N.Fh@]
%+P9u5MM^lO9,3P^&Ct,eNk1gUl'XP*Xd^$ZqtW;,(J]m*-^NKL'Lbe):j6WP]3G!i6?JtJ*[IL0H7Y7^>3h"0:>ml7GVJeF(T(^C
%=?;p\4.A3QZK,-T3$pkKRjE7j>i.OT<!V^E=4YoQW`^*l$e;ohYGsE@pL1oGaD;u#Wlc#_-TWtHi<2A-4q]YQH$\16k`\tAbL5F%
%2DgEiJ@D?.#Y3n]Z;?Qkp:.PG;K(hh%oAH%k%s%u6d9O`-bdk$/R"lL;&6:Mq.Z=AfbQ0-IB-)SCl;?EqCFPlZ7T7KNu9kCX;5[<
%a4m=7SDS)1WYXu'DR^[E(8!9lZY>b<d>D%M/fM!63%(YRa*1T`44<He;DdIf%0!9Q/Dj/D<`']Vg@."a=L^lZLV4f;5:'O;@5Em-
%X]9S`g'cW:RiY4'mmtT3'N7.OBoud[+cGgTXo_XnP+:>Ic0C4q7,?5HB^+Kg]t#,R&>(B<TbT1M-ffZ^_HCutW2i[,bB^S-#F;%s
%,22e>$C@M$@L^mU.pS*086-DZ[6bY"d$/q>W"X1pDljT<+!$hL-U_b>,">:WR&<up*1`2_d0`$Y6L<4,l@d2d..VAR&tu09g;[UL
%$;Crn2CsI1>?'5Q%%Zn#2+#$T,g?EcVClM?22.$%A27B!i3iR$bQTZNjhg5p5r\)G!s-FXi.A*o0UE'J:FioNfOOI=<!%C!5MeLc
%XkX\!ci6"@=nD;<O#&ie7?[U+4(etceQPEW&[.*E[d:i',3#jY[d:i',+<[4T5WD85t0jH?M8%`@D+EN^Z,kolM`G>YLEU_9H.o?
%4Jt*6aC4]PhX^!8-8QJ/@#nZiKQ+R=490CS6tuAI;LVFtfG<0l#p:=HYK6%kAfbe8^)bslp_E&$<u2>.M)[`MTCm>:X?`T+U=]sX
%<NNo'f.Un3qDN;%q9WSIF.o!ql8];gOu4p'-44c6rAbCkQ#f'FfsqO2:[S^EZ0>kW_:J=gZo*/4eCO?%[&O!U(UCFXPm/E/k*";&
%AdeM2GQ#L#rC'>GFFH8W9?g(=LtImB2G;)VLb6Vk/HN=9GJmO@0j]cTL"@nc/#M^e[;"5JM\3\XHE9]#hFi_6c!t]g<q:Y4rhYAD
%7ko^A!GC;RdQ"LT$c_`d,LJM>)XQ8_n^V_PH7T$LL(S<seE=r@?Cn$@-IQD<Db&p+l00Y@g58/J[d'Q^^G(")mmk%_(-FQFe/_\d
%@;bgD\gaI@82"c/r*&@dT<c/V&)Z(q`YE;BjKsZTlkO=gO3bIn^$HJMjLYta'2483o5d_J#Kn/L2^\j,4c0ZAF)u@uR$UrBk@WhK
%eL<sr4[,9.'f@M94KBYu6VLEIdFS6=?,6a$EY_Z>;%ZN+<j2m+h@naQIauA)B`";(3`6tlPuV,e+<Klfe>-dIlHBmB,M#%V5VG[q
%g]Bq`R`M2e@7K+c:2QKP[Emr$1k-Vaq8'5e':K$CI!m-@hgFV2[_)2?m'jpjI&6UUm;-.0CjkJhFXh3D'`b=jh_9>/ZV_,r#(9ES
%hl"nH*<P1Eh-L0M_K1Bh\9f2I5*N]PiqiYB[2hWl,dR!5=kb\'9mkMW]tTH5*=oIsSc84VXmHs;4'@"/B@_6>Msm9BgHh=c-7QJi
%hqCgN]El!*/<h=9Ui.0Y^T7hEU/YX@2=1oA%/4^14NM-[Am4LY71Kh@dTbhK^=)u1+/>B2UlQOp]9**tF)+-L5P`)%B%G0]02UG#
%&Z;Ut=QYsgGN4GnH%#!5D.]3c(D]g8=-ik+lrT=<RoprY<$a:-b7(R;N.\BjDujt%48?4gA*/@1g]D,b&UokmG#/;>OEadPp/3Ae
%4R&mdoLt)Sc9Q6E@c'-L:EnX67QVW[-n+6p)pV[*`:p"k%PXa+:j$mHmc.Oue)i9jSYugM]W2u#EC653CDNp6UVC.aT?8UP$Eq2q
%24r#?S&uF4ZBT_dVedh>0?_V<11sPU-Fl?R4r)///AiA;>2clm!hlg89+:=P6N>PUps+PCJBA_W<4-S;W_meOL(Hogl$A,*EW%n9
%%[!i#9L`(Y1qbNT[]<PEHWS(n-;/_J$$Pt^efuKi;GW@?$^K16C:RQV`9Ar!QM>_e#*uc<!9,.Kro9;(&[E0H:ph+#^'uZQ;I>l.
%hbRcaZ&P<$FcS5Ib&om[U[np&`M5ko-s?2Yl3eFVERc2J\#!VuBU%4`e95(flSFpoDCV`3oNCC2_jfA<9k,4>RGRiPpnmQ_9SrVK
%p4C^TT93\>IG*4YeHOuuAZIApe4$iOgQ*5VUKam$'?1Dr:nuQo>+J`K8*ru8Jg.(pK\*@Q]<,@rTd"K!M]!nkqn/N=79$QV^D,$s
%`[qf%FO5Y%;CuQNIA4_ROgS^fgI1KAcR#qr'"?@[:$thZ"]AX`Vc64Ymc!L_87&\HLtuDG%^(MpdV&8u=L]jQDp;P]=GjKS])"=8
%ZAqOqoLu^Y#$NjgXA"4?d(70#$?=F\aq=3F\T3=f5Qp"7Pl*lG&DP:Y@AGWOPJ5_B@9js4ngq/h&]Ch0U3[[j6_h86^9/Cn@r7K`
%XPbJm[b*dsLm"\;LnpttiL\ts)aUs`p<bmP8\E?+G'JCRYgi;D1CaQZC;RRU!puC7g&45,al\"%aXXBE^-Xs%->GpCq,Qd`oW)GK
%=;&bHgB.J6S;EIZW,d?=9"LaL2l]7sbQtEI5J(/m&6"-Z<m1^Ab@s`iSW13&h0pKlD/js^:_^,1SO%Co-s+RKPObA0rDrcY^h/*M
%1eNOY\TCtg%m!<*:/ZhQPZ0P$3Fk&XP*g7NpO)Ao@.eQ<=ah1TGAWYYI'A5SH!no`:sZV'Ojf(JW%2.up%FtF91]T"W)O6RKG+Y2
%kH:;.&P@;hHp;EphPu4pXXnR1DGhGf;htr[O7nY+j5&M,p2.)rGY$Xi7SaNrG.cgoBJFG1n!mY/].;*M5gec['ZP`im.egu"Zh-[
%(CV[[.qj<#kg(#I1e[?(0?B?^)bflWSq=4j12kGr>kaOQ>_kZa/M)f:L?9qE(7%D=VOd/'BOP%s6A^)ddDE1[?b5fk7LRD6AV[9<
%5Fn!D4om"V-_Y.8:MO!r<C.RmN17<BUY!XO]kTU]A"lK#YEM+'ZS:oJ!ZsKo[!rXG8+s)*aF;B+p7BQ#F\,F^eGMmOM\i@sZ$;rm
%bSsYD3NV]-gR&`lK_B6=%mI$51RF8EXSe^20sLH@h'>R&?8oS9F'AMscFtD?1$FLQWkEqS/Wa7KGI%lba])up.C/PK9Np&.iZC7p
%-6)9&^5]0a0/"&i11Z/@4m\#Y6V#4PP*?)HH+VNXhErZce$AD;7mQ>g.Ms2W.PGLaHc-<Href,`61;#0c5kZJBUjarH3NJt$EulE
%>"b_&$K'Q,OFsK[0?F>WIZ$VmL@b/FBd_$HC+rUl/%][gM-;A!<#&m8XsR%Dl\,%p6q1?$hqbuK?nDj3a=bJ.mFfaFp?[7HGL-+?
%@q0+eaIF<@FN"!a#:/)]m#\_%`Uk/`\WF'n,h\R4D0nNX1ST0(#E6V!pIOr1-5%o0W??GZ6%J\D!YCGfU)mtj5_!GiI-$(jD%fKX
%WTO`oYJ$#13XF5)0aQ8XTg=4X#Fp=K1L])ids7G(c1?ds9r&]iJZ"0DRn2VLhsfKBe5?;`Z;pEf$-uS)Xb-(E`)6WhJ<[_Si:9_m
%MX[JJqM5p[,e!r36-c./=(%^ocRMQ/`9bC7O.9#W4'?)2f:0G%hP1pan919"<P7Z+Y#R/TJ.0Y]cgW..N@`S8G6N4A?-b"kPNZJ(
%."u-O^#2]jj(tBmOuPfN\<'36Y/Q(OCc&UsN=+aeSsZ9'Gf^S__@W1AWN\:uMNo[YgSu*V"CFuOM7gd\Tnk39YLF&>#.MgX7NY.k
%%oj5VX,'rbqF`ZfTqM3?\m0Y0W^.ED4Vb7j+L5h8N-m?2oBSTP[?";(^p1EsV`*=@@2Un^=fXMagZK@k`^-=KBK.mldm-Rq,&89"
%*4,@5ob(Gei`ed4RSHI!ZWGO\b9e!gaC769P?`q'gR44i>T"hC?CXWG@B"K)*ldhXk\VcV481Cs%=HS_P/&INjr;rk4_!sX#-K72
%bTUe2e^gH)mQg:hl(,=&7#GLEE;k^f@?oFR8c%WjO@-4_UXO6!LV@_Q9V7pZ*4nocd$(,0;0aY34T/_k1<p-1R!:U5KFTN3?&/*J
%JPP7f"+!./qAD8=ABNUi8^Kd\L2^=#H9Kom7(9%TQ.AG662!W&9_AZ,o`-sf&L$d53,ud8L\C'T,-Y@Oe[@-6EO@Q*^KSTO*?=7=
%\pP,>KJZaE=H$2pZ73W&gG?(2p<dT_lnr,!GO/0g\W9'e]%3uGFO$#L>n8O*JX<_gn,>c,d-E/M+3V!WeIPlq9rM^r>a,eH\E,TT
%^D5*JEQI(L'fEbe/RHL??lZeDnSeBQ\?m]-dk?*bE#iA7_+C0<4;?9ZcJ(rioirYM!II=Rfj't%Q,h:TR*]qi8moljEkTcdoRh$*
%@c_l?1NL/gl`*"Y3YY9`@Hp/+f_p]o\"q"7MFZqCPaaAt`/I*5TKqO.S@/8rO"<n*%a3;O)i@*A06Xb'Vrj'urpg$AjT'YTEl2[h
%hk?AT\53I&1mA<(pF[G_?]3&s[pO(Q;+@&m+I<'EqO>_76n&q6dV8>=5`b4_/rU/C`(6QXk<cA"@5KEWgQV&uh]2S$CnaFD-hZfC
%EaU[gb.^3qX[!`7,J6?WGSNLP*3[`.=&'#8i4ln=aQa&r.b#UEGdKqlek2S\^2&0JL]*8(2r'=#J8\*cUHdIb/WLLoIR@+bi8t;o
%r.7Fg"]Bo8^uMa4kb(s/3F&;rAHLg]i9hA8>St=6oXr3*ZcR;Sb2hLL2^\s3UaTg)HVqkZG?HqobKAOE:4U)*::ilCle5W.K>5uP
%OTc>giWdKM&gs`pl<HYNAu&+,H^2\<T;/$gh@bTn$D`&Umtq#ml)(Q]^I4-ZcAcH;Y2BFf'@:iGAIrCXR:JJlI759Bae6%3U4?[=
%PEKr5/a9`)neOM$5CgK-#Bf]j"@1.$!hc8kT`d'g-#ee=?&=c()ZWN'K8'"M!JAcM6T9<i!)I^;Feu7tWZBW*dRPK!5>.;^cN`5g
%1NZPuKFF"h,kJ;a!I.Pr*.`k<.$^!9M+eQMZJ)E3OgcW3I?5)`K=_$^J=Ons!d]Q7=fmcBWSIW9AuW7^\.t/^@%I9&TOh(mDFFHX
%%+Ub,\^e9k=/69/2l,8oXCIk3`46aO/;p5;`;1\[0j2`K+I4>,$t@m,VY1"G2OuQf/>lB&M"OsR@f=jXZ2P$FNDu7iW](P"@_FQ#
%`-PMXMR9)8L.'Dt@f=,Z+O87<@SsRb=FW^]-H[YHM^]$i`O#fe@QJGI@PM?oZ$o>2XPXp=efQ'Fl.(n8'8Z>,&.n/5eLQe3&F28$
%lduf*"XJ"s&>b'm0X&5N$-b$jr="uP%3gjRj?6$eBMVAqWB?U1]SO'KH'EqOWMGVI@@8?48LZ6CJB5POfm!Yt0o%`[OMuXWe:fr:
%*iALaC!'W@!8eL%9a]Q1B$,WKBgG!./e)r<:IIHdoL-p#A@6To,#U30I3>T0<$n#-Vc1*Or%*JmjeSu6.hf,uOJ!3Q*`n"9V4dju
%EbesV"dk)sD@t`gqVb",T-o]j@NN],bc^QC<^4/3!F"\a8sVnN^U^5pW$11o%IA56QWR=(M06p5X@l`+?&krCS9=XC54p*sRR)YI
%RVa5LqXf()6b+*m]0/ua5K:t*8tal+%joPX15%T;O-)2P>*ZnuF79ul!hX/F5oDnfErRf&Bfp)~>
%AI9_PrivateDataEnd

%%EndDocument

 endTexFig
 968 4533 a Fg(Figure)e(16.5.)40 b Fi(T)-8 b(ree)560
4642 y(for)30 b(the)f(feasible)h(solution)f(of)h(Example)g(15.7)p
eop end
%%Page: 175 10
TeXDict begin 175 9 bop 1933 91 a Fk(x)p Fh(16.)41 b(Phase)32
b(1)91 b Fg(175)183 311 y Fi(W)-8 b(e)31 b(con)m(tin)m(ue)g(no)m(w)h
(with)g(Example)f(15.7.)45 b(W)-8 b(e)32 b(mark)m(ed)f(with)h(a)g(*)f
(the)0 420 y(p)s(ositions)40 b(that)g(w)m(ere)h(c)m(hosen)g(as)g(w)m(e)
h(found)e(a)h(feasible)g(solution)g(\(T)-8 b(able)0 530
y(16.6\).)p 767 648 1167 4 v 767 716 a Fk(j)30 b Fi(77)167
b Fk(j)31 b Fi(39)167 b Fk(j)30 b Fi(105)121 b Fk(j)767
808 y(j)h Fi(*)f Fk(j)h Fi(*)g Fk(j)289 b(j)31 b Fi(220)767
899 y Fk(j)289 b(j)h(j)f(j)p 767 925 V 767 994 a(j)30
b Fi(150)121 b Fk(j)31 b Fi(186)121 b Fk(j)30 b Fi(122)121
b Fk(j)767 1085 y(j)289 b(j)122 b Fi(*)g Fk(j)g Fi(*)f
Fk(j)31 b Fi(280)767 1177 y Fk(j)289 b(j)h(j)f(j)p 767
1203 V 767 1271 a(j)76 b Fi(170)f Fk(j)i Fi(120)e Fk(j)h
Fi(210)f Fk(j)781 1527 y Fg(T)-9 b(able)36 b(16.6.)j
Fi(Basic)30 b(p)s(ositions)560 1637 y(for)g(the)f(feasible)h(solution)f
(of)h(Example)g(15.7)183 1884 y(The)41 b(edges)g(corresp)s(ond)e(to)i
(the)g(selected)g(p)s(ositions,)j(and)d(the)g(cost)0
1993 y(p)s(er)36 b(unit)g(is)h(written)f(on)g(them.)60
b(Because)35 b(w)m(e)i(seek)f(a)h(solution)f(up)g(to)h(an)0
2103 y(additiv)m(e)29 b(constan)m(t,)e(to)i(solv)m(e)g(for)f(the)g(p)s
(oten)m(tials)f(w)m(e)j(can)e(start)f(b)m(y)j(setting)0
2213 y Ff(u)52 2227 y Fc(1)122 2213 y Fi(=)f(0.)47 b(Then)32
b(the)f(equation)h Ff(c)1156 2227 y Fc(11)1261 2213 y
Fi(=)d Ff(v)1405 2227 y Fc(1)1468 2213 y Fk(\000)22 b
Ff(u)1613 2227 y Fc(1)1687 2213 y Fi(forces)31 b Ff(v)1990
2227 y Fc(1)2060 2213 y Fi(=)e(77.)47 b(Similarly)-8
b(,)0 2322 y(the)36 b(equation)g Ff(c)584 2336 y Fc(12)697
2322 y Fi(=)h Ff(v)849 2336 y Fc(2)915 2322 y Fk(\000)25
b Ff(u)1063 2336 y Fc(1)1142 2322 y Fi(forces)35 b Ff(v)1449
2336 y Fc(2)1527 2322 y Fi(=)i(39.)61 b(Using)37 b(this)g(v)-5
b(alue)37 b(of)g Ff(v)2659 2336 y Fc(2)0 2432 y Fi(in)f(the)e(equation)
h(for)g Ff(c)838 2446 y Fc(22)950 2432 y Fi(forces)f
Ff(u)1264 2446 y Fc(2)1340 2432 y Fi(=)g Fk(\000)p Fi(147,)j(whic)m(h,)
g(when)e(substituted)0 2541 y(in)m(to)d(the)e(equation)h(for)g
Ff(c)901 2555 y Fc(23)978 2541 y Fi(,)i(forces)d Ff(v)1338
2555 y Fc(3)1407 2541 y Fi(=)e Fk(\000)p Fi(25.)45 b(Th)m(us,)33
b(w)m(e)f(ha)m(v)m(e)g(found)f(all)0 2651 y(the)g(p)s(oten)m(tials)g
(based)g(on)g(the)g(c)m(hoice)h(of)f Ff(u)1557 2665 y
Fc(1)1627 2651 y Fi(=)d(0.)46 b(All)34 b(other)c(solutions)i(to)0
2761 y(the)j(system)g(of)h(equations)f(just)g(solv)m(ed)h(are)f
(clearly)h(obtained)e(b)m(y)i(adding)0 2870 y(the)d(same)g(constan)m(t)
f(to)i(all)g(p)s(oten)m(tials.)50 b(W)-8 b(e)34 b(represen)m(t)e(the)h
(p)s(oten)m(tials)f(in)0 2980 y(Figure)d(16.7)h(and)g(T)-8
b(able)30 b(16.8.)109 1668 y
 17808430 18945146 0 0 34995896 37035130 startTexFig
 109 1668 a
%%BeginDocument: Fig.16.7b.eps
%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Fig.16.7b.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Anna Levy
%%CreationDate: 10/26/10
%%BoundingBox: 0 0 532 563
%%HiResBoundingBox: 0 0 532 562.0440
%%CropBox: 0 0 532 562.0440
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.2
%AI9_PrintingDataBegin
%ADO_BuildNumber: Adobe Illustrator(R) 13.0.2 x434 R agm 4.4379 ct 5.1039
%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2010-10-26T18:13:29-04:00</xap:CreateDate>
         <xap:ModifyDate>2010-10-26T18:18:45-04:00</xap:ModifyDate>
         <xap:MetadataDate>2010-10-26T18:18:45-04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>244</xapGImg:width>
                  <xapGImg:height>256</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD0AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FULqOqWmnw&#xA;pJcFiZHEcMUaNJLI5BPFI0BZjQEmg2AJNACcVQg1nUSK/oK+3/y7L/spxVv9Maj/ANWK+/4Ox/7K&#xA;cVd+mNR/6sV9/wAHY/8AZTirv0xqP/Vivv8Ag7H/ALKcVd+mNR/6sV9/wdj/ANlOKrX126iUyT6N&#xA;fxQr9uRRbzFR4+nBNLK3yRCcVRn6U079HfpL6zH9Q9P1vrPIcOFK8q4qisVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdiqB17Ujpei32p0jYWMElw4mdoo+MSl2LOiTMoCg9EPyxVKfJXmfW&#xA;dfivn1LSotMNnLHBxiuWuqzGFJJ4yTDbgGF5PTanIcgw7YqyTFXYqoXd/Y2Ufq3lxFbRfzzOsa/e&#xA;xGKpLaanpWqeaoZbK8gvI7WxlCNBIkqhppY+dShbeka/f74VZDgV41efkFrzx3kGmedJ9Gtb9w1x&#xA;b2NvPGvD1JmZB/phqGWejF+RJFT4BVHXnkQaNp4TzV52tryKbU1vLGHzBGJbFQIJIRarDcXXKQD1&#xA;g6VlNGVWoTWqqVQfkxrOsXK+ZNL/ADKuZpZ7RbS11SzDz/ulljZ+E7XczEO8TFgrceTGlF+DFU98&#xA;leRfPsHmh9a1fzJqS6da3lz6WjXTiRbuCW2jjSRwlzdJHxm5sqjbuEjrxxV6firEfTT6t9VoPq/6&#xA;e/uv2f776x/yd+P54UMuwJdirsVdirsVdirsVdirsVdirsVdirsVdirsVUbu+srKL1ry4jtounqT&#xA;Osa1+bEDFUt/xf5bY0tr5b5uvGxV7xuhO62yyntirf8AiJpSfqelahdAdW9EW3h2vHtievbFXDUP&#xA;M0vxQaRFEn8t5diOTv2t4rpf+GxVr0fN8oqbywtSf91rbTXBGw6SGeCv/AYq3+hNTf8Av9dvSD9u&#xA;OJLWJDvWgIgMg/4OuKtHynpDik5urlf2kuLy6ljbam8bymP/AIXFURaeXfL9nN61pplpbzf78igj&#xA;RuteqqD1xVZq+m3s1za6hp8qR39mJEVJq+lLDNxMkTld0q0aEOAeJHQioKq0XPmmm+n2Nf8AmNm/&#xA;7JMVb+s+af8Aq32P/SbN/wBkmKpbrml+YdYitopra3gFrOLmMw3zisqI6xFg9k4Ppu4lTb7aKdwK&#xA;FVX0m013StLtNMs9NsltbKFIIAb6YnhGoUcj9U3O2574qi/rPmn/AKt9j/0mzf8AZJiqySfzayFY&#xA;rKwjc7CRruaQL/lcBbR8qeHIV8RirX+G4/0N9R9dvrXrfW/r3Fef1v1fX9Xj0pz/AGenH4emKpxi&#xA;rsVSGC2uNaurq5ubmeLToJnt7K1tpXt+RgJjlllkiZJCfVDqq8uNADSpxVFf4a07/f19/wBxC+/6&#xA;rYqwP8xfOWh+SNW0mzurfULqDUYrq4lkj1O/EqR2gRn9OMM6yNwctRnTp1JIGKsef85vKr3Nv9T0&#xA;vWJdPkaxWe6n1aS3eL69FPKvON7qicRAN5HRTUtyCBWcqnHlz8xvKnmLXNJ0rT7LWof0r6jRz3mo&#xA;zQ0ijjnb1FiS7lmb95atGaqvHud15BXov+GtO/39ff8AcQvv+q2KoLV9Pk0jT59V026uRJYxtPNb&#xA;3FxNcxTxRDm8ZE7ScCyqeLpQg9aiqlVGS+avL8crQJeLc3CEq8For3UqsvUNHbrIwPzGKrf8RGVu&#xA;NnpeoXVPtN6H1YDen/H41tX6MVaGo+ZZqtBo8cKdlvbtY3PXtbx3a/8ADYq4RebpQWN1YWtekQt5&#xA;rmg2/wB2Ga3r3/Y/pirv0Jqjr+/128JP20hjtYkI32X9y8i/8HXFXHyppLrxne7uQR8az3t3IjGn&#xA;VozL6fb+WmKoi18ueXrSYT2ml2lvMOksUESMN6/aVQeuKphirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdiqSaFdxW93e6NOwjvY7ie5hRjQzQXMrTiWMHqEaUxt4MvgRiqd4q7FWM6rrnmS387&#xA;aPpVrYerol4jtfXvoyvwIjlb+/U+lFxaOMcXBL8/h+ycVZNirsVSXzfdRLod1YKwa/1OGW0sLUEc&#xA;5ZZUKAKPBeXJ26KtWOwxVc3lbTlJa1mu7J/2PQupxGpP8sDO8H3pirv0Z5ihattrXrKRuL+1jlof&#xA;FTbGy/GuKtC781wAevp1rdqv23tblkkb3WGaNUHyM2KtjzIsbBb3TNQtGb7I+rm5B/2VkbpV/wBk&#xA;RiqrZ+Z/Lt5KsNtqVs9wxoLf1FWavShiYhwfYjFUzxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxVD32m6dfxrFf2sN3Gp5Kk8ayKGHcBwd8VQf8AhTyt/wBWex/6Rof+acVd/hTyt/1Z&#xA;7H/pGh/5pxV3+FPK3/Vnsf8ApGh/5pxV3+FPK3/Vnsf+kaH/AJpxV3+FPK3/AFZ7H/pGh/5pxVEW&#xA;Oi6NYSNLY2FvaSuOLvBEkbMoNaEqBUYqjMVdirsVdiqjd2dneQmC7gjuIG+1FKiuh+asCMVS3/CO&#xA;gJ/vLA9gOpWwmms1J8Slu8St9IxV36G1mGrWmtzsR9mK8igniA8P3a28x+mXFXGTzfByBhsNQHUO&#xA;sk1k1PD0yl2Cf9mMVd/iC4iIF7o99bp3mRI7pK+y20k01PcxjFUq806/p+oeXtQ0/T9SgsdXuITH&#xA;Zpf3FxpTrI2yuWURXKhTv8A36VFcVUvy38t+b9Fh1E+YtZGrrdzLJYESzT8I6Ekl5jsW5AcY1CUU&#xA;GlS2KsyxV2KuxVSuru1tLeS5u5kt7eIcpZpWCIo8WZiAMVS7/Fnl4/ZvFdezorup9wyqQR7jGld/&#xA;ivQP+Wr/AJJyf804aV3+K9A/5av+Scn/ADTjSu/xXoH/AC1f8k5P+acaV3+K9A/5av8AknJ/zTjS&#xA;uHmzy5UB7+KHkQFaYmJST0AaQKKnwwUqbYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYqgdX1bTNOhgOosUgvJ4rKM+m8imW4bhGr8FYKrMePJ6LU0rvirEvLOsflR5quVXy1JC936Bui&#xA;9hHPYyiH1WhJeSNYHWsiMOLGp60oa4qyP/D91DUWWs30CdVikaK5Wvu1xHLMR/z0xV3DzhBxIlsN&#xA;QHRkZJrI07HmGvAT/sBiqheeaLnTITLq+mPbxKaPdRXFtJAB4gyyQSn5elXFUssfMvl3zR5ns4rK&#xA;V7u30+GW4CNDMsYuSyKjnmiryiXnxNafF4gYVZlgVJfOZ80f4Zvk8qrF+n5lSGwknKrHC0sixtO/&#xA;IMCIEZpePFq8acW6FVglpqv5/R6tOZtGtpNPmFi0KSNav6TtAv1uMNHcwMEE3L4yshH7KODRVVt3&#xA;5j/5yIjila18r6dcN9XrArtFE5uPVoRIo1CRVX0q/Zkbehr+yFXqyFiill4sQCy1rQ+FcVc6I6Mj&#xA;qGRgQykVBB2IIOKsQ9IfoX9DVP1L9K/UeNWr9V9X1PQrX7HD91T+TbChmGBLsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVUbu9s7OEzXc8dvCDQySuqLX5sQMVS4+bfL7f7z3Rvtqn6hFLe0/1vqy&#xA;y0+nFUJqF2NWhSJvL97d28c8VxC8hhtk9W3kWaJysk0cwCugO8f0HFUk8ufl6mg3iXeiaNY6RcLA&#xA;1stxJe3uoFYpXV3X0ZBEnImNPiD1ooWvEDFWS/ovzDMa3OtmGnQWFtFEPp+s/Xfwpirv8L2T1N1d&#xA;X125PxmS7nRW9jFC8UNPbhiqvZ+W/L1lKs1pplrBOtKTRwxrJt/lgcvxxVT1WC9hv7bVbOE3Rgjk&#xA;gubRCqySRSsjBkLlVLxtHsrMBRm3rSqrh5ksafHb3yP3Q2N21D80iZT9BxVv/Eunf75vv+4fff8A&#xA;VHFWH/mPomn+dLKzszPdWMds8sjzHRryec+pE0QWKQohiHxValeVADtWpVOPKMmneXfLdhovqahe&#xA;GyjKG5bTLuLkWYseMaQ8I1BaiouyrQDpgVOP8S6d/vm+/wC4fff9UcVWSeZIitLOwv7uc/ZiFrLb&#xA;/fJdLBGP+CxVDfoPUv0L9uL9MfWv0j1Po+r6vqejypXh6f7rnxr+1xrtirIMVdiqRx3et6pcXBsJ&#xA;YbLToJXt1uJI2mmmkhYpKUXlGsapIpQFg3KhNAKEqq36N1//AKvH/TtH/XCqUalrcel6iNP1HzMl&#xA;pcfVzds01qqQpAHEXOSc/uowXYKOTCp6Yqhk846A6qyeftKdWYIpWSyartyCqKSbk8GoPY4q3aeb&#xA;dFvGtktvPOnSS3ZiFtCDaiV2nCmJRGXD8n5rxWld8VT/APRuv/8AV4/6do/64qh7q61zRwt1e3EV&#xA;/pYdUuWWEwzwq5C+rUOyOiE1YcVIWpqaUIVPsVUrq7tLSEzXU0dvCOskrBFH0sQMVSw+bvLzGlvd&#xA;fXiByIsI5b2grTf6sstPpxV36fvJKm00W+nSpCSuILdSR0qs8scwB8fTxV3rebpqBbWxswSD6rzy&#xA;3LKD1BiWKAVHtLTFXfozzFN/vTrfo0FB9QtYot69T9ZN7+FMVd/hezkqbu7vrt2J5s93PEpDdVMU&#xA;DQw09uGKq9n5b8vWcomtdMtYZxT9+kKCTboS9ORPuTiqY4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FUp8sSK1hcoD8cd/frIndSbyVxUdqqwYexBxVNsVSPX/JXl3X7u2u9VglmuLP/eR0ubmD&#xA;0mDhw8YhkjCyclHxj4u1aYq8m1rSfy40jXH1CDyZc3d5pk2jW1hdm41NGWOeRrSOSaGRC8SwNZAL&#xA;RH9Sqn9vFWX+Qvy/8kXeh2GtpoK2Es8SfVo0vru6j+rQ3Kz2rxvKY/hkMMc/2Ad/iqS1VXo2KpJ5&#xA;2+LypqcKzPBLcwm3gaMKXaWf91HGodXH7x2CdO+1DviqVN5U8yLV7nUhrDNUMkk95poIJ6H6rLJF&#xA;/wAkcKq1pYxafKJT5RiFylGF1YNazGtevqTm1mJHX7NcVTL/ABZoyf71G4sRUK0l3bXFvEpPYzSI&#xA;sX/D4FR1jqul6grPYXkF2qGjNBIkoB9yhOKorFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYqll35ftJrx763lmsb6QKJbi1fj6gQUX1I2DxSEDYMyEgbVpirX6H1H/AKvt9/wFj/2T&#xA;Yq79D6j/ANX2+/4Cx/7JsVd+h9R/6vt9/wABY/8AZNirv0PqP/V9vv8AgLH/ALJsVd+h9R/6vt9/&#xA;wFj/ANk2Kug8v24u47y7uJ9QuYTWB7lxwjahHJYoljhDUNOXDl79cVTTFXYq7FUFfaHomoOr3+n2&#xA;126/ZaeGOQj5FwcVQY8qadGoFnPeWRWvpiG7n4LX+WGR5If+ExVs6Z5hhJNrrXrVFCL+2imANeq/&#xA;VjZH764q76x5thBD2VleKpH7yK4kgdh3pE8Uig/OXFXf4ikiYC80nULVCaLJ6SXIP0Wb3LD6Rira&#xA;ebfLRYJJqENtMTQQXZ+qzV/4xTiN/wAMVW+ZtR1ezsbO50iNbkve2kdyvoyXB+qTSrHNIgiZSDGj&#xA;+py+IUHTuFWO+S/N/mzVdXtbbVLF4bWS0upp5X0u+sOMsd36dr8dw8iAy29XeI7qf2jWgVZ3irsV&#xA;dirTuiIzuwVFBLMTQADckk4qln+K/K3/AFeLH/pJh/5qxV3+K/K3/V4sf+kmH/mrFXf4r8rf9Xix&#xA;/wCkmH/mrFXf4r8rf9Xix/6SYf8AmrFXf4r8rf8AV4sf+kmH/mrFV8HmTy7cTJDBqlpLNIeMcSTx&#xA;MzE9goapxVMcVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirTojoyOoZGBDKRUEHYgg4&#xA;qlLeUfLXIvDp8VpKes9mDaS77/3tuY3/ABxVo+Xpoy31LWL+1U0/dmSO6FR73cdw/wA6NirvQ82w&#xA;7rd2V6oO0UkEtu5X3mSWZa/KLFXDVPMMJAutEMxPRrC5hmUf631n6kfuBxV3+KtMjWt3Fd2RArIb&#xA;i1nVE/1plRofufFUE99o3mLXLezhurfUdOtYHubmGKRJo2mLosHqKpYEIObANtXi3UAhVkoAAoNg&#xA;OgxVgXnq6/Nq21uOXyjZQX2lrBGzxTSQKWnC3fJOMhjYqzG35H1VpT4a1eiqSxax/wA5Evp9vdz6&#xA;Lpkd4FLy6ZEE3cpcIqNM96ylVaOFzxoTzAr8DclVbT9Y/PuLTbSK50Syubz07xbi4lMEZEkVmj2j&#xA;OkV5wIlui8ZKUqoqVjrirIPy181695ittZbWEtFk07UGsoXsSrxMqwxSN8azXKuVaQrWqnxRWqoV&#xA;ZZdWlrd28ltdwpcW8o4ywyqHRh4MrAg4qxes/wChf0T68npfpP8AR/rc29X6t6vPhzryr6X7rlXl&#xA;TetcKGW4EuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpNqyXNnqtrrE&#xA;Fu9zCkUlrfxQjlN6bsrxyqvV/SZWqi/EQxIqRQqqg8y6cR/c33/cPvv+qOKt/wCJdO/3zff9w++/&#xA;6o4qxjzze6zqljHBoUlxAfUiZy1tq9nMnGQM0iXFvDIG/dhl9J4ipJDE0XixVV8i3d5o+jSWmsy6&#xA;heXJuZpYpZINTvZBDI3JEeeW2h5Eb/ZjVQKADapCsi/xLp3++b7/ALh99/1RxVbJ5msVUmO1v5ZO&#xA;iRrY3alj2HKSJEWvizAeJxVBfofVP0N6vBf0r9d/SX1bkOFfV5+hzpSvo/By6cvi6YVf/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/">
         <xapMM:DocumentID>uuid:96831318BEE2DF1193A8E8AE75DFA592</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:98831318BEE2DF1193A8E8AE75DFA592</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource"/>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>792.000000</stDim:w>
            <stDim:h>610.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MSLineDrawPSMT</stFnt:fontName>
                  <stFnt:fontFamily>MSLineDrawPSMT</stFnt:fontFamily>
                  <stFnt:fontType>Unknown</stFnt:fontType>
                  <stFnt:versionString>Version 2.007;PS 002.000;Core 1.0.38;makeotf.lib1.7.9032</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>CMR</stFnt:fontName>
                  <stFnt:fontFamily>CMR</stFnt:fontFamily>
                  <stFnt:fontType>Unknown</stFnt:fontType>
                  <stFnt:versionString>Version 2.007;PS 002.000;Core 1.0.38;makeotf.lib1.7.9032</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xapTPg:Fonts>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=0</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>0</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=25</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>63</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=75</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>191</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=0 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=0 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=0 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=25 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=50 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=75 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=100 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=25 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=50 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=75 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=100 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=25 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=50 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=75 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=100 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=0 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=0 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=0 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=13 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=25 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=38 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=50 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=13 M=25 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>12.500000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=50 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=38 M=75 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>37.500000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=100 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=25 Y=13 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=50 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=75 Y=38 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>37.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=100 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=13 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=25 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=38 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=50 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=13 M=0 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>12.500000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=0 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=38 M=0 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>37.500000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=0 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=0 Y=13 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=0 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=0 Y=38 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>37.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=0 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=13 Y=13 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=25 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=38 Y=38 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>37.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=50 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=25 Y=13 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=50 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=75 Y=38 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>37.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=100 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=13 M=25 Y=13 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>12.500000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>12.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=50 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=38 M=75 Y=38 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>37.500000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>37.500000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=100 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=13 M=25 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>12.500000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=50 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=38 M=75 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>37.500000</xapG:cyan>
                           <xapG:magenta>75.000000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=100 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=0 M=0 Y=0 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=13 M=13 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>12.500000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=25 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=38 M=38 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>37.500000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=50 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=25 M=13 Y=25 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>25.000000</xapG:cyan>
                           <xapG:magenta>12.500000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=50 M=25 Y=50 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>25.000000</xapG:magenta>
                           <xapG:yellow>50.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=75 M=38 Y=75 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>75.000000</xapG:cyan>
                           <xapG:magenta>37.500000</xapG:magenta>
                           <xapG:yellow>75.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>C=100 M=50 Y=100 K=0</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>50.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -562.044 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 562.044 li
532 562.044 li
532 0 li
cp
clp
[1 0 0 1 0 0 ]ct
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
%ADOBeginSubsetFont: CMR Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /CMR def
/FontInfo 7 dict dup begin
/Notice (Copyright 2000, 2004 , 2005Adobe Systems Incorporated. All Rights Reserved. U.S. Patent D454,582.Myriad is a registered trademark of Adobe Systems Incorporated.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 66 /B put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 111 /o put
dup 114 /r put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/FamilyBlues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/FamilyOtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/zero <1C60D8A8C9B7BA8F6239473D6D0952B7B5E4CF4EC97A525E022C9B4FC
88EFB3F3BAD779956899C836BBD2FC8F5F391C07FB0B2C3B92A06F4A639C8E43
BB10FDB531B59E83D98A9AB718650C50F38FC91524BAA33EC4FF9905D1A9C> |-
/B <1C60D8A8C9B79D2DDA73CBA562CD775BD8708DCD8E9BDB9F0E0177DC043F
B4F1A8C4CD26C616C718D265A8D6703A6D47E3F8A1B7B12560AD317F60E12155
856CA9C25059711A75C068B65463BD75FDE8E1F35A7B7D78F6157390124E47B5
1535C1251DC03D986F9EA19C38C324328B0D51459F89228313041C819F71E915
18EC12B2EB0DAC655C5FB2D629F03ADEC251827A94F19DF929CBEBC2821CF76B
9A242BB0987762DC5FABDB70310B695148> |-
/d <1C60D8A8C9B7E7C1D822193538A56B13640F1C3EE80C415BBD7C96E2BF73
396DB0D9C9230D7704B1D4903E1B0E823160B234020A503047A686661C34B500
4CDCF7754772CF263A11D6B8FC7868BB12CD6A915ACD880C8B0638C394417FA3
7BE535ADC2EFE334704B66B55FC93ABE48255DC988A5DFABA294BF5BF2E02BE2
314DCE6531FAA5DCB4D56DF6C62A6139D41B024DA04272B4B444C44FEBCD2F65
888A63654699808BEDAA> |-
/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6AE0C2DA4B5701EEA600446C4909F
C3F4672ADE87F21B90EA46B653B923660515A1F0669DD61FD45BFFE5F30C06F2
5F4918DC3BDE9DA8749DE48AB2064D02996B1992D92D740E924FC0328428444D
7F57E818435DFAAB95E4B5> |-
/f <1C60D8A8C9B8469EE0EEFD5AEC6CA97A72064EDB5F8138E6D1529C05D71A
D800DE9767801FDF375EF8CD5D17CF8177ABFE55C13157A524A3264793E34DF6
7E6CC595BF4246BA776AF32A10AFD87F61B0A56EEC2C24F2F2> |-
/o <1C60D8A8C9B7967683396363C51B2F1979461F3A00FDA36B3FB5488A82D6
4C89239EA1345F90503AC4C4937CA1D31AE0456BBFC2CD7E6DF92400B629A703
DCCA1CE977B1CE09DA127A889A27E67B6982945251> |-
/r <1C60D8A8C9B825FA276057E42F8B6B56BE61CF56C49E848F1F8C0DBB4CC3
55A060580D0A93A5AC675863E967C6888348BB6A0307CAE2C7E5A0C04CCE8153
CABABF82A896EFF75F39B554C74CA1E2126AA0E73BE8B772EBBEE30A71972C63
0D7D24526AEEFC04035142C31FA6B3B108962236> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QGAHUS+CMR /CMR findfont ct_VMDictPut
/QGAHUS+CMR*1 
[48{/.notdef}rp /zero 17{/.notdef}rp /B 33{/.notdef}rp /d /e /f 
8{/.notdef}rp /o 2{/.notdef}rp /r 141{/.notdef}rp]
QGAHUS+CMR nf
QGAHUS+CMR*1 [12 0 0 -12 0 0 ]msf
78.3301 404.044 mo
(Bedford)
[6.55188 6.0119 6.76794 3.34808 6.58795 3.80402 0 ]xsh
95.1721 418.544 mo
(0)sh
1 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
145.5 422.544 mo
152.127 422.544 157.5 417.171 157.5 410.544 cv
157.5 401.544 li
157.5 394.917 152.127 389.544 145.5 389.544 cv
51 389.544 li
44.373 389.544 39 394.917 39 401.544 cv
39 410.544 li
39 417.171 44.373 422.544 51 422.544 cv
145.5 422.544 li
cp
@
%ADOBeginSubsetFont: CMR AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QGAHUS+CMR dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B8391507657C5BAF19A31D4BBDD7E17920BDF55F2EA39
E0E> |-
/one <1C60D8A8C9B7BA8F425ECEA255C7F445C46B341EF282C71048D555A5D5
98E89496E7235E7E5E61E755DE1DD927709B69AF39C5FFA2F961FADB> |-
/four <1C60D8A8C9B7BA8F425ECEAC1E8FFE1F2E4A9E9BFE692DFC86F0914D1
950B7E9330CFAE2AE0CE50BC8F9A81B99E65C7EB21064416D8548FA09CC9C658
8AD65393A47B2EBDED97474D4C03B3488707365B1350A023199FD7F8930> |-
/seven <1C60D8A8C9B7BA8F425ECEA3CCEB01D7DB356DB8BA3E0A3CCCF78FF7
5F8426D973EF7AFAF46E5376078B0FAF79A0> |-
/S <1C60D8A8C9B7AED8035FF9728E9C78ACC28F20CC915E5C8F246730235E09
69B06AB4DFB6CD5E100F262B534390FC7CA7055C28ED1E42C84B636867D8A31D
300B2F5F2294ED82992DF7233E5C523837B149A4D365755830345623E9A4E055
720FE49A232DC2065A07388CBE9EB02B9DD8FF5931F0EA71B8534F17457D88BE
F90224252D97A481A1378A56A9E08907> |-
/a <1C60D8A8C9B75946039FC5B56ED6A5087B2F0B1630F4B839ECBCEEA44E70
3DC4106323B0FE7E2AB642908C4D63FEEE93FCF9AFDA709EC76B2A6B438866EA
54711295464BD953D3EBDCF028F138C8DA98583AEFEA07E0E3D9318DCAA5235C
81F8CAE77869F7E7DB4FE2A895A8751E9713E402E5F56B8D9F8A85A4E816A3F5
736139BBC6E35318419585355BABA3365F9437068F54844360043E93A0587094
DC5B241D2351AD29DD00EC> |-
/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C7596B2C0CA5D427D1A2
992AF5BF4D94EE82845832F4DD4400321814ECD5D3CE66072F7E5E7C5430EC46
9D5F7161571A32A96A021C1AB03ECA050447FC0A> |-
/n <1C60D8A8C9B790A816BA887E1EEB5EA22251B57591287932F226429470C6
F5104125FD46BD566113711AC75833C9FEE3F6D848EF41B3B29B720FE91D5709
9036ACB328FF5F27B548C47B09DAAAB22DF7203FD31E4DFCBB6F334EB2AEBC18
B95062C1F81D8B> |-
/t <1C60D8A8C9B821B35E7D138AF8799F79BEF170B4854FD4064F6438DB12B9
6A336B1B646B9C985443CCD47885AEB163F96326A737220357369BBCF971367A
B24D31D50A9A11CBCBD128D32F4EE4E3175171904BA0C5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QGAHUS+CMR /Encoding get
dup 45 /hyphen put
dup 49 /one put
dup 52 /four put
dup 55 /seven put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 110 /n put
dup 116 /t put
pop
%ADOEndSubsetFont
/QGAHUS+CMR*1 
[45{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one 2{/.notdef}rp /four 2{/.notdef}rp 
/seven 10{/.notdef}rp /B 16{/.notdef}rp /S 13{/.notdef}rp /a /.notdef 
/c /d /e /f 7{/.notdef}rp /n /o 2{/.notdef}rp 
/r /.notdef /t 139{/.notdef}rp]
QGAHUS+CMR nf
QGAHUS+CMR*1 [12 0 0 -12 0 0 ]msf
76.8642 495.551 mo
(Scranton)
[5.98792 5.37598 3.86407 5.78394 6.61194 3.89996 6.58795 0 ]xsh
88.1743 510.051 mo
(-147)
[3.6839 6.15582 6.15582 0 ]xsh
144.5 514.051 mo
151.127 514.051 156.5 508.679 156.5 502.051 cv
156.5 493.051 li
156.5 486.424 151.127 481.051 144.5 481.051 cv
50 481.051 li
43.373 481.051 38 486.424 38 493.051 cv
38 502.051 li
38 508.679 43.373 514.051 50 514.051 cv
144.5 514.051 li
cp
@
%ADOBeginSubsetFont: CMR AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QGAHUS+CMR dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7BA8F622456C4A5B0CA9B1BA284AF806928062A6B7B09
FB3F0AFA0642F9B368E55CBEC860ACEDE00F619B43869FF145573EE19FF4FA26
1BF5938247732EEA9C997694C21F3826519E5860C319187A2BE7C4798BE40539
D59DC5F8C368613E2EF361E84E1BE9A2B721FABB539C13C42CCE1FC716B22FBB
381EE1131CEA0A76D50B43FAFEFB6984253871A40EF8DA774460484F> |-
/nine <1C60D8A8C9B7BA8F63126F4A1F6F4C8A6D297D6FEEB3E1EA33A18C32A
839F51A85CD7DE6BC7BE0FC5E14C273DEF590B88E507C7A736EF2A90ACB7B8F9
A190B2C51A24432873D103FAFC9B3793333CCD91BFB26AA2EDD101FDCA101247
D729F8EA9F184BC3D2FD9C99ABDCAACABC5E792EC3D0438CFE5E32E78D626F92
C945E9BEC772CDF50F38A2D46A5A571E853> |-
/A <1C60D8A8C9B7D7E88499B0B4629F6223175CD4E8063229FBCC9F00B932F1
5865B21E5E7BB034E6AF82883E05563056B289C39B2EA350305E00FB98125757
C6B71D805070E392C2F5C67BAB2BDB26729DB33934727F6026751FF00CC19CB2
FCE13DD0FF> |-
/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QGAHUS+CMR /Encoding get
dup 51 /three put
dup 57 /nine put
dup 65 /A put
dup 108 /l put
pop
%ADOEndSubsetFont
/QGAHUS+CMR*1 
[45{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /.notdef /three /four 
2{/.notdef}rp /seven /.notdef /nine 7{/.notdef}rp /A /B 16{/.notdef}rp 
/S 13{/.notdef}rp /a /.notdef /c /d /e /f 
5{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /.notdef 
/t 139{/.notdef}rp]
QGAHUS+CMR nf
QGAHUS+CMR*1 [12 0 0 -12 0 0 ]msf
452.42 451.614 mo
(Altoona)
[7.30811 2.83191 3.89996 6.58795 6.58795 6.65991 0 ]xsh
466.094 466.114 mo
(39)
[6.15582 0 ]xsh
519.5 470.114 mo
526.127 470.114 531.5 464.741 531.5 458.114 cv
531.5 449.114 li
531.5 442.486 526.127 437.114 519.5 437.114 cv
425 437.114 li
418.373 437.114 413 442.486 413 449.114 cv
413 458.114 li
413 464.741 418.373 470.114 425 470.114 cv
519.5 470.114 li
cp
@
%ADOBeginSubsetFont: CMR AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QGAHUS+CMR dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B896187A> |-
/C <1C60D8A8C9B7F7BFE242671C9E817400744FCB1930C8B6D982C063970DBF
718CAF90EB4032F79AFF3BD0DCAB8819135C4DEC30C4AD93CDA5718D518C03D1
31C0ECA750D3497F02641B81219A155BBD4DFC26D705BADFBB56DDF384391247
F88C168EFD4243293DABFBBBE3A19FF63D> |-
/g <1C60D8A8C9B7ECD94DE1A189191AD5F29F5CDF5AA27A54E9CADF1B0D48AF
ADD31B7AC744861D428C2E9828C64107AC3C1F370E77D657249E67D01B32CA8D
E47286033022B7FE2ADAB5880B8BA15ADAB506E67E787503255249A5C18EAB39
49583AC294D57039D73A57012E800A5F1DE0015B558B76663CAEA443CC43AB1C
7D0EA581DBA077AAE05CC1ABFBCB18987F40F7D67565C854506C79470414AF94
EA3318EB3473654AC76A1F02E1D426F218B7D2A89976E745CD03CE15AD5DAD80
0440564510FEC150DF1BF6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QGAHUS+CMR /Encoding get
dup 32 /space put
dup 67 /C put
dup 103 /g put
pop
%ADOEndSubsetFont
/QGAHUS+CMR*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /.notdef 
/three /four 2{/.notdef}rp /seven /.notdef /nine 7{/.notdef}rp /A 
/B /C 15{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c 
/d /e /f /g 4{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]
QGAHUS+CMR nf
QGAHUS+CMR*1 [12 0 0 -12 0 0 ]msf
439.322 360.614 mo
(State College)
[5.88007 3.97192 5.73596 3.89996 6.0119 2.54388 6.828 6.58795 2.83191 2.83191 6.0119 6.70789 
0 ]xsh
466.094 375.114 mo
(77)
[6.15582 0 ]xsh
519.5 379.114 mo
526.127 379.114 531.5 373.741 531.5 367.114 cv
531.5 358.114 li
531.5 351.487 526.127 346.114 519.5 346.114 cv
425 346.114 li
418.373 346.114 413 351.488 413 358.114 cv
413 367.114 li
413 373.741 418.373 379.114 425 379.114 cv
519.5 379.114 li
cp
@
%ADOBeginSubsetFont: CMR AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
QGAHUS+CMR dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7BA8F694E6FA15FFB6B382A3EE4F45111A59DACA07CBB1A
390893C6F8FDC203687F0DAB4019999EF2C31C2A8E2B5C18284C0FA933EB49F0
D3AAC406EC417696890BDF0C7AE9B4C23364F4C649F84537FC> |-
/five <1C60D8A8C9B7BA8F622456C498CD57E93AA5454FC364F93ECEC83D391
3500E43A82F14121F71966C4788C2353DA5A8BD5D8CFB5314B38B5B35B8DBF6E
6B89948F26F660C16062F6C0ACEFA240305DC4EBB618986C70F22D9BDD5EF2FA
4DDB132186E4364560E4CE6F0F405A0BF> |-
/H <1C60D8A8C9B6415B1C8023DCDB0FF1D084A484AEEAD1BCB3E26ED8513BF0
1EB97B2B412C27A814AB0CF1433A6A27B347810AF06165FF360A71FFBED997DE> |-
/b <1C60D8A8C9B7E2CE503F0CE2BC5702634999087F49AD7EC68AF6E0760DC3
07EA142776CFB148873830CAEB36AE950493D9F2EDD2FDA5A7A4D6C282750C8E
40E669AF5CD1CA9E6E42E82091954CDD12078AEF15744C61E28006D0183E186D
2F0A7A37935A5E3F3F87ED5DA87F58431826C86E3F76DCDA2973426486D4612C
A2B5207C22CF15FC5AC58B8A498D4D400E19494D5A529E7B3708AA62887C27C0
34690D9798225445C694> |-
/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5
A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A550BE990A2
B15CF4B9FA0C60C03D9F761CF6CBFF51A513DE> |-
/s <1C60D8A8C9B70FAD6F31E6985339BF1E83F7AE60D35F00D12D254421A910
254A631180139D8657646BEFE6F4E230D67403BE5D54183419D174C6F3CC672F
E0922A5983FC4713FC0C33086E01CB29AB5EA82B559EB0CB9E6675519A48B6C9
9CE7F0B78BC22FE4480BA1B895> |-
/u <1C60D8A8C9B794D34CED683BC0F75FB25BE8ECA5D4F8D235649E81E6A62D
D6E8467166462C4D4F8F41F04B52D63863D672C5433416D6DF2E3C32BCEEA94F
F3BC9046373D2B57D2890F7578E8913662C9F65FD95A5790251E118509816817
E1CD6A7C5BE0B48DC194> |-
systemdict /gcheck known {setglobal} if end {end} if
end
QGAHUS+CMR /Encoding get
dup 50 /two put
dup 53 /five put
dup 72 /H put
dup 98 /b put
dup 105 /i put
dup 115 /s put
dup 117 /u put
pop
%ADOEndSubsetFont
/QGAHUS+CMR*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
/three /four /five /.notdef /seven /.notdef /nine 7{/.notdef}rp 
/A /B /C 4{/.notdef}rp /H 10{/.notdef}rp /S 13{/.notdef}rp 
/a /b /c /d /e /f /g /.notdef 
/i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r 
/s /t /u 138{/.notdef}rp]
QGAHUS+CMR nf
QGAHUS+CMR*1 [12 0 0 -12 0 0 ]msf
445.706 540.614 mo
(Harrisburg)
[7.82391 5.78394 3.97192 3.97192 2.80792 4.75195 6.82782 6.61194 3.828 0 ]xsh
464.252 555.114 mo
(-25)
[3.6839 6.15582 0 ]xsh
519.5 559.114 mo
526.127 559.114 531.5 553.741 531.5 547.114 cv
531.5 538.114 li
531.5 531.486 526.127 526.114 519.5 526.114 cv
425 526.114 li
418.373 526.114 413 531.486 413 538.114 cv
413 547.114 li
413 553.741 418.373 559.114 425 559.114 cv
519.5 559.114 li
cp
@
411.249 367.052 mo
411.248 366.979 li
160.251 402.98 li
160.252 403.053 li
411.249 367.052 li
cp
@
411.5 454.044 mo
411.483 453.968 li
159.5 405.794 li
159.517 405.87 li
411.5 454.044 li
cp
@
412.121 544.289 mo
412.122 544.217 li
158.5 498.543 li
158.5 498.615 li
412.121 544.289 li
cp
@
415.375 453.92 mo
415.36 453.852 li
154.5 497.543 li
154.515 497.611 li
415.375 453.92 li
cp
@
%ADOBeginSubsetFont: MSLineDrawPSMT Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /MSLineDrawPSMT def
/FontInfo 7 dict dup begin
/Notice (Copyright 2000, 2004 , 2005Adobe Systems Incorporated. All Rights Reserved. U.S. Patent D454,582.Myriad is a registered trademark of Adobe Systems Incorporated.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
15 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/FamilyBlues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/FamilyOtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapH [67] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
8 dict dup begin
/one <1C60D8A8C9B7BA8F425ECEA255C7F445C46B341EF282C71048D555A5D5
98E89496E7235E7E5E61E755DE1DD927709B69AF39C5FFA2F961FADB> |-
/two <1C60D8A8C9B7BA8F694E6FA15FFB6B382A3EE4F45111A59DACA07CBB1A
390893C6F8FDC203687F0DAB4019999EF2C31C2A8E2B5C18284C0FA933EB49F0
D3AAC406EC417696890BDF0C7AE9B4C23364F4C649F84537FC> |-
/three <1C60D8A8C9B7BA8F622456C4A5B0CA9B1BA284AF806928062A6B7B09
FB3F0AFA0642F9B368E55CBEC860ACEDE00F619B43869FF145573EE19FF4FA26
1BF5938247732EEA9C997694C21F3826519E5860C319187A2BE7C4798BE40539
D59DC5F8C368613E2EF361E84E1BE9A2B721FABB539C13C42CCE1FC716B22FBB
381EE1131CEA0A76D50B43FAFEFB6984253871A40EF8DA774460484F> |-
/six <1C60D8A8C9B7BA8F6239473257AB127E7620F87AA168F1AECB0A4CE93C
C295CEFD9192C2967A0DB83DCBD6BBAD18D6960D2101F671B2250912AB87B7A3
12023FCC73A003C62725D7FC83EAC1691C575B6AFB00517E51D41BA56D827F4B
6519D801FB562E8DCF2E48521AD57F7C657FA7114264065AFF4ECE505E9E5389
1A0834E3BEC3F8A67BA2E6FDAC2B> |-
/seven <1C60D8A8C9B7BA8F425ECEA3CCEB01D7DB356DB8BA3E0A3CCCF78FF7
5F8426D973EF7AFAF46E5376078B0FAF79A0> |-
/eight <1C60D8A8C9B7BA8F623D810BCFAA50082B445FDEA9D15914896CD639
03178E46F4BF3526EF43F34E1C43C5D4BB259333F75AC77A2693879487E31A38
ED5E9191D3298AC0D970ED0241AD045F48A1E74AA2C4BE6A3C25B51C1786D2EF
03AE3AE584898B7F8F45ACBB487C3211863FEFD3620CE23C9E829D36E0D56EAB
E748926E17DB146990D6096B0ACBA84EC3179FD7D7DE1B7A8A7122D5F1201E33
3EBC5E306860669F4548CE801F630F0B98FE145245E3B61A937D385E9FFEC75A
53A58A9A8AA3119FE04926CCC605B3BEA563998B78AB28F03D9E0202CFE1CF72
350765F386FE675098260C4913D2BB6EF02533C78A20421F3CD9AE5EB64E891D
3358D805> |-
/nine <1C60D8A8C9B7BA8F63126F4A1F6F4C8A6D297D6FEEB3E1EA33A18C32A
839F51A85CD7DE6BC7BE0FC5E14C273DEF590B88E507C7A736EF2A90ACB7B8F9
A190B2C51A24432873D103FAFC9B3793333CCD91BFB26AA2EDD101FDCA101247
D729F8EA9F184BC3D2FD9C99ABDCAACABC5E792EC3D0438CFE5E32E78D626F92
C945E9BEC772CDF50F38A2D46A5A571E853> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/QGAHUT+MSLineDrawPSMT /MSLineDrawPSMT findfont ct_VMDictPut
/QGAHUT+MSLineDrawPSMT*1 
[49{/.notdef}rp /one /two /three 2{/.notdef}rp /six /seven /eight 
/nine 198{/.notdef}rp]
QGAHUT+MSLineDrawPSMT nf
QGAHUT+MSLineDrawPSMT*1 [12 0 0 -12 0 0 ]msf
329.844 368.544 mo
(77)
[6.15582 0 ]xsh
326.766 524.544 mo
(122)
[6.15582 6.15582 0 ]xsh
326.766 460.044 mo
(186)
[6.15582 6.15582 0 ]xsh
329.844 431.544 mo
(39)
[6.15582 0 ]xsh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/QGAHUS+CMR*1 uf
/QGAHUS+CMR uf
/CMR uf
/QGAHUT+MSLineDrawPSMT*1 uf
/QGAHUT+MSLineDrawPSMT uf
/MSLineDrawPSMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 13.0
%%AI8_CreatorVersion: 13.0.2
%%For: (Anna Levy) ()
%%Title: (Fig.16.7b.eps)
%%CreationDate: 10/26/10 6:18 PM
%AI9_DataStream
%Gb"07pO;BgdkH)c_"Rh#80AU*C-"M3o\MrePH[B(:tFLhrStN`1Ql!R>IHuRkBYqUmH*6N`jVs(R\nJk-5%d#`na\-qbcYW]bX5;
%o-%6cK[T[<-sKN$87]2XV@@sra=/R?(8,'3pGW$%\tbHTmnF`2bIpYh0O,!N3mG,el?05\*Ppe,i>Fb:LCVWLmB0J-2#fTs5J/,"
%rX@N*(0$J[dltdBk(*=)I,+17g0/9l>)IZpk?>KmeTul:jsX2"8a)SD4I=(T:?uTkrMg=X6>8<:*imV3"II$gLB\3]hrO<6pT65h
%BdYSeXgRm4YD;=1mMZ$gf1$tb'_G+SDNkZM%qp4';uMU16atded@`L7pUZD?;YPn=h=!0j)MYRJAOC2UC]%Nm!W=CPOAeKOPRh?3
%8gp1\]55`Cp:II*[2(f>^9tSJhXL.4V#<b*:`PG>g]%@caq`i-=X$Yf`Z8o8fkht4.d0`\N;p-6dQ74Lr,&Rb7&,t8-!PjjJW&[K
%6Q6'GoK$J=YdI;6dU*$&)pLV$J:Ih]E89'V(VM?Sd3KWA?HItu<#5GU62/g$9I:RujDbhN.?r$>c,mIeRFI.06$4$0k5aot0GDKZ
%p.)a,VKXWd>T^=Wf'ED/o&L>LI4A%k="sUuh1QB$7Trm^2P<_=d&KU!;MXG^@^Xr?pV%7+!?34/R+j5eI&H^)hO2.K)u+g9([_I7
%+T@=H,Ad^/FgOsg.t.nq^GV[e]NB!X[/moXMT#V/(<_5Fm7sQ.<h"$fOX;-/!,"1ZfI/)&Qf])Y;P].b'*/7@J/7Som;K7DPp,$D
%ETM+.jVn+r&2j$X7X_;)T=.>aD,R6*Q"c_!]"!&Pm#eS:;RT)\m?qO4UaoqQFA.RPXeLD,2TrOt+!93%CdA:`9md%fMo1Z8kb(c]
%[5Wb[ip4,'d7.T[3C"/>Iu<a7GI-%Mm/W@TR-^KSQMB%s"-`NT*/Qq8/a^/1p_$.?biVgZhPd9aMoD]@4R=n[T7Zm;h\cs>gYK,7
%aS>cWXXej]SW<qU3TL.Q60hg/Wdoeshqu];gUMlRMul^uY.+BdeqRk"XkmDj;>^6me,73M!P@'(bmo,/Ie=33g[;YbnH%FJUODl+
%*US8ch%<1kSPHeX7R$/@IhR`N15\,ul2RfA4bP'9(3E-t^@D4W+p3X@V8`tD'Als=ahq0VG8h]]#rE=X\)smg6'KN+FZemHSmk;H
%qi1&`Fb9DFL&pW(!A04XBW'HK#_M6nU9iJ6:bt1hDkQ=XZSrp,M?m[R6I@:U]1=WNC3HaP5dNtPn'U@1B,92GKoS`uA#__&grH5/
%,q3h*=*$r>[EqSVLM`1MRS:YDo50$I*On6bepP@<5tIG@ZljgX]-#;6pq+upO+7^e?0t:4CVk;4729mjbl74Q&B)RlkQkK-6%[ch
%[JSNB;L^8$/FNuTgNsP2'[\L@`><aZ"5n/gn^,6_XBkbgCYZ>P`OAd76_!csU8'i57J#c#;eoe)&Z@q>LSFZ5Dtk#N]iWXaHT<VB
%]IY>k<"X(9q\_=SE0D$kh07c`UH]Hj6$RnfJ=t8X#d_p<+Qm=SE.Ho,g<EBnrVeFd5ejR=+nc/Sf(]^,@2ir$+iY#Bk6p;>\+\2X
%$$%16!r#(+,:"(G@^?Rer2o^fO;BENB@I>=Ea#ACi&(J/F[*6pP*Sr'%aa_:q4I--?KYH:s0k]nL;<R%@"&05M8Z91e44HJcR58<
%]W)Kgj8NBZ]dH3&A3qZgd3n.;^gDi$OT(3oL<(2#[*elTO_:Y*]-$XHmp^gSTT@IilS">2n?Mu.qK4u>O0mi&cJO^10F3pJj5FY7
%U=\^urNj6o];\$7:JprfN]'Z%#MnDmJ[E$8]n!F8;#gO\>(P,Y/\oR0k1\!QOLA7[Btpnk@(\F&,4?jl%+Np\Apo_YNW4'm-)U&&
%nCtfLlH'@l4Du8-r"#`,hnc^#[!,W);..:;X52Z:Vq7h-Bg)RF*4g"tqL2G>B`a=J!Xcd9Ck8kch+%k*d.q=\YMno05&7[h3<pIH
%RU'=appjNR@R#CX^sD?uM**REboj_rZbBtuLF;4OV(VGPNn?,.o<hC/0;:hWU$GK20#;N<]N,?(>-O[P&8JUV[8s8lCSb4><iG+q
%\QZG-WMOBF9rZ5lWEQ?'X-IG1>,i@=Kke>jX(JE#C:^EGQ)\)S.^_mV;Q5m2V+S!jW8rY)Y*,nt.d;go;(?TT.bDhnEi!"nQcd9f
%Tq!e!b1Ug4S1^jRV(@t0;QWnM<D)@NWDkD`9)2AfPV$H=l&o4J8odK9MR?p$==KPoV.-]3.-?Gu@^_XQVMf1d.EY)Y:b,KQPsW#X
%.MN8E6GAO3A.+el\tBh'Jm=E.[<si=ad;UqHnf!LkCn:9T?V$>l+@Ah7l`6aC:S)^Ot5]f\RM_'bNEoVCbCoEkL?#bPB0X1QE=aL
%flFNc/S5CDHo;5qbtL$d<O5:uc:UF#QDnIGR<#0h.:rpTHmY3%Ahocr7a3>!3?tA9l"[em/uMA,@_.ZHVfV*=3g3=:e[1L*dumm5
%X(k'TX!P0P(=^!ik1$K$;:DPF.]TRB8kl97'rA!rPbM&Pnk)[!.N'P7W/@=jMBpg7Wa(\0E_.n+"d&.4ckA0T>#o3'Q=7lf_*gmL
%(K*g+J4VG,.4[^),cFq1@E#o+8>4+G$'Z/*M.0RL_c-11euI'GPL<9hadr7Y]SC^-MM]:V2R3q%%N8"W&@0e',Q+q)dcah!s'XDd
%EmY$r"B1:4^dXW8\;Dsa5Qc*/Du_?6"`OY[5o334+:Phhp59(TeQ#$;9)&IX"Pc<[TJp6s>U9@_+<J)ohLL@EJuJjJ6l053TI@AO
%Th5IhG7<"jrW/Gi2PUX.#&kNa1;Fna*F1@QJG87/C]GqM(EaL?"M+S'b67p+&Tt.5lRJZZ'mp#o!\qMkJZ/e#65O#5&/r+[_1:n!
%"h4n-Lb:si8jU5m6XqA^6ZnN@5hA98E)cp#J=+^fL^'Z70#1U4FE@Q["50FW.&gA]&F:"=Wd'K$>?+p0(&b2,Ws/h7g]Li4]>.(d
%"_7V'"^OAj^h;!t`*"SrA0MWP$,Fn)8]OY5[2P_$L*0'<W<ul[i,&\$/7<H=Xo_u2R^=i#"c]<)6U<ta"je@4$O@m`"H`el-t#.d
%_+Xjm";l"ceHZeAri&.Y)5+#]:fe^:X8qH`65'PWY2W;L5`8GIW%nh3R/n5NWPCoPA;^^`"IRdJL0ZA_Tn\-0eMR,h!I>!"!gI%W
%QjLi57ahMPY+^CHO&/Z$^bIU[3O6Fbo"[a&![)Fg,=r'9!PqJ3IY551!r"u,ZbVKLR/pA=,.n%XWh@H8kXoO,^qWju/o\-JE4)29
%bcQDpT`k.F:o"FsJ:K$M.n!l="(O_Vk43fUPm*hK'#I7+Uahrc#rjDdN=,Ru\gRQZc(T0F8dU4:[&I!#@T$]:Va?%6au\2n"G]QC
%^iW%Z/?b8'5ua5A0IluN[/LeD6th-.d_uuXTp09\[EC5S.hG`Z.]XM`AXbr+4eG-HS[?"9M9rBUl1FsIKWn\`q8R^f's!(VPPG.!
%]U(n>-kfjcf-RpJV)b^fq[skZZ<UJVq\%,Fq7s$BGQIOOUn[<X$Fn7(95m%oOGeoR)@G%LoZigJNdQN!S13Z`W'eGI&9h77$!?11
%R:f)S/GG7YEsOrRqCLTla26.8Iol[X\ce8&"JfU:%a.+C$JL0+KS:N\K,L-q"@4GD3ERVK&5,>mQ\9'Y''=:-=S*/XW\+R`6kB^@
%k_LK8l]SK,0nRJ4eWPQr(bFo\Y_k:MV\"MJ!g\F/#*rLL&4o,4"76/oX=L2:r$f5P1PMHOV4V&e@EF:%!:+r!lbeT/ecbSHqW+lL
%R)(P680J-eP`dYWW`Z_\@hlA,jX/%o5o30^0G2\8_?m9R<SR[#T88.UA<\76YahF5(!%j*$S+SL=TZbZ=dIFO@LGg\>&M`N$Y5Sh
%#qoJ03<bdKK]tg^P$tp9'-(K*99At,1:U"\-?'5H/obJo1P&&dD$[dpg^O=_+=@^3-kP%-3=Q*!$j7+I%#.U1`OZ'X_#suDL]J+i
%'I)QD=9r:aR/`C)0.LATPf"Uf5QWVG(fC_'B*_ZubiL<V"2K/A!E[2ZOmp@1#%8:"&W[T46p(Ko'<k$6"JPY;=AI'gAF8qfR#dp5
%'=j;7?eZl#,+j-5V[U%@+95>u?i).]/qn;Ec:cMcc-@iW]WrS[cFO/T#4l!k<Ud\Zeg8[%k#Il.Er6T@&'PhJeQ5@7)5Q7IQ!a5X
%V#J508Kf\pkX@,"AgrY!q]/_*do_YXlEhO/F0sZFGW1cM4<F,V=sA'c[6i'JZA`m<emh?uQMt/#ra3/V[.GZ^3bDL8Wg92L\!0IK
%^!*^K.?rr<Yb%ZpdtD>#dB\ukbqQ)Y9/f4=MWRno0=*l0`VQL%a=9(-_F?J@1;+Rf2ha$(&Mm\G0ZFE`74q6djUBl`[a1@CdC`*6
%A\eZH7aS8\<QfPug@$<0MJ$&^/8Lhcd7[D]4h(W2griSB5%<Rt=2DP,k#F/iF4MlZeZ+5K-/B,'kt!LU:D07RJd"@OSq_h#58'QB
%Jd"nLOILh*?TiW@$5Rl.?lp+#c`6TZ\ZWU2._%)Oq#r)c\EUh!(UhNW:S9.j5r!9"EDhm-V^6m<.@R2?`+<7Xf9N*a_*N6^noL"g
%RiEl_'MR5&;CFu5:5BbeB^<@3l^Yn::Fu6Oh/Zk4=RCsi^1:A!FK:*FQmR`]DQYBjV@)-WDn"1/qa;=nHc&6I=XF:#5$u`T&lma7
%TsuZF`#;Lh]\'MY:mMAtL(IV`Gf@$UA18H#Ys;8;$\W5D0[1-\p`MPt&&e1'Ze6D"qNdN8Zoh0>LT8)3,n&Af:(6ReG*[#`a2W:.
%=]_iaS\_ln;2:9/lVp04_O.cjVY8h5f.3qOb*IL5G7`$ic50UQe=CCnelp[p8X.N,B"Rqtoh=B^<07'&GPqJA`R7+)aai_)]$#o%
%dJV20^"g8Yi`u=<URc7%"UEY"ngl0/b.?5jK38L5?KL6I3HO6-17$?^b/'eT#)BMS-O+X4YU2GA'&7lVg^(9SP*71P)3W:*OS1>8
%KjViWI2Znj3NT1rYtg<Yn/>?9's(GKY[Wa8MF%Wmr@/TC1)A&(l=L2N7133IQEcMr)Q4Yik.5VDhn/Ec2GJ4s/Q3W)-pGi(<443@
%ASMEBP]J?Hi7q,fhJ3b:2kKXCs6`P[.kXqYHqNpOWkD>f%DaYUAeuD<6ckm%C^:O$G%S!&\.mX7`J.ce)mbG3_(IZ/`.i*e`P5Hs
%J%:8-\YN8(1>@iXI#_JeWFpM!ho5S^3,PN<,tBPNZ8VFof/qg9dp0;WD>p.!A$VA-4]6*FU\&&Ee]70hYs4dirH:BQZqdRL*5Dp,
%qG$k<r(CZ%Or<ZGr3&Zj=!S_/Gs\.tSC?^cB<j``4.F)3Snr4tQ:&]F-46)$K/_$bE&E[m^ap49#?5&>>"J%!?tH)kL"laI:;MkF
%9EZ10C_]VH%mY-Nhceuoil5/]r3KV0Bq%"tnYQcT[(4sKV$gD6=;Ph9V[`=+);d4>di/;`hLL.VB5J\d>77kl>Q<nM$YquEh!5NU
%KJP6,VhEnsZ1_:u*>k-Jf+?P+81lU74asL0(h>D5I?nF]G/'Q)Ar)KJK4aI'/=QB9#lH1UF<Rk3GYPH@c.76-nN72<M>!NU07HI:
%[c!NjNsYQci&^"*E.rVJVql.J)4'&e:;Bfs2>Q+Xmq'fs$(`R'K`p7GJF0oL!tj=e5l&=[D#UY,'dq-`;9+M[?D:\6M-<XgF/#,H
%!nPYRISM_AU8*qNJ"ieR7@j.5-0dNgfSRaGP]fmX"lp>V20[bQQK[d*K-r]BdGbTuSnR[sQe20=LcQ%R]n!es$Q.iCG`OY5rND>q
%:\g(:qE<6qM2kAYdLo7rlhZ4XQ^%1jV>WuBk"g>g')g_T;OS?i66P[S;d.V9"9m8L1nu]4</38D7:..$"Oi8cV_8]=]&+oU(R5ha
%S+rYMS11Db[bX[09BY$a(6%6Za*S0+8YUd6q4L"0THg$tIlc:[&.c@c^Uj1eZmJ2!h-N#U&s&L==stPMkO!2LVT)ghF:A1tQkg&Y
%FRo`Tp>O%FGk>&c*BFVb5>%Ub4M<bmj_e7R8A_%OKofEahVnKp2XfU=F5.Wr"uK#V0DKZ:(oL"IE-FeFkR7Y&5g]X)+C%^2*GmX]
%E$nCe"g8TO:mZoglQ!*l2u)B"L`UA)pdQGdJ/S3c1!XHX;[OP^J%+p>=W2QiiX_94r]n6E(^1WP5q^'T^[s!(c?O@#YV,4NY##F!
%FK+>[,raSO\d<TKIbID)4@VXPagipal1^!Ugi]9M(qm3N!e4IG8S&mtaftVOFNWlH0&u/Zm-GD^9,A`op':]j!AlTsN1bi@L_=3N
%p@5DBk89]L*h#J-NAWDb,G[9l^;(g\B2TUKG;AUcOA=K@Pfq_U,eNr,r_hZ4Lo0g$+Rc]Tn--PXd_[+ua-\1)OIZJsO4Q6kaZ3DD
%5$$i;%5aaS@Zheg)1i2rG;?9!kh&.CaeV2%:GU`RMZb'i=$j8QN=V7Jmi.10AJb$^.YE$^-i(>e*+P2tU0feHj=)p^O<M/:JaDAH
%cm_GRMM&1lrjuoD?(;'ZjX*3j89PE)c!"q,D]`Xk[W7g_AHqtIn=8R?\EVU2j:oQ"":W2S0blc]O?kmOJ]qLQ(_Ia)RLlt&hbflc
%?nE3-E_\M=]*@N>D6J`u5@2WoD6S!&2HGc@/g==9<,@_D`e@X*Z!uL/ZBeIE-KL+=GEEd0KuT1<Zi:mY7l:"!b$Zn;I`V4K=tD#\
%S-A)D+[48^T/P]e26QIX1ij/R.HiN\8OnnnCS2O%lm&or7>ghMQo^5-V_1k).Wfj`7BMlWFnO3TZ*Kp0BcSS=,BY#=CHe``0S2BR
%0F\;G&_d;Z\0598@iH[m-7CF*9J\?=+<6Qoc+iJFZ?kf1CHE_B*HdRS;b=:kkoaot6/HKJ.<&ueOb[up/lkYS.0E'Xj)D;74:i<)
%ec@#-Z.[C%>WoKnfr5E@3gsL"N>/^k(+n:k,.a*T-.C[4.@H)cA'I!TlF[/@7XB@H>-$Wae!L/HM7b$&[%V76+8monjETlc\_^EJ
%5j:m^e.a+QU2^^EG')?Ua0RZ/J!ftF2C+l.bt]\@Dmih(=SO-<MHK0:i6caipdH7G`hQtW2fb-tG1o=S.&Va:4_Qh/lF0^Q;+?'+
%f'<acPP%bZ\/-WT7m16;k`juus(IE2@;)?`Z`ag)_tNi7K9tt;5B(bD6ut&.m55-Ncl5"KS%KPU%N@pOQGsmp[/BZBV[K\lc-^4O
%IN=J+^#rjE0PK__qM2,=6iBu`\'K5q2:-I7)"9K@U-GD;I3$&LjmMV`q#8lk/0pgJcj@)QP/!JgXQ-&=q9YmA\,!.oF/]sLr-o#[
%cgf2mit!4(Yg\'MG_R5pC]CqJc=@Z;gqQ/,?=Wr`d%SZG;f%\g'7ik>/l`2rdU2Cmk`]XIHGTXJJ5C]LJ-#W-)9e`QoKZ6YM1C0T
%c,E<SdfV>$SC]H$H_XI,]:lp!8EKuF;7XI#kEZ&uUH@q(#B(O+)oBeirj`NPs7O-rm:,&N]/^`-(JEB[+EY3.Y/UL0:@IRCC[j[0
%./BLs(t$qn::_ZkN"(m/>T4^B5m3700)be\jU+K,DSC;n\*I+_d,2i1@-[b+WW-nr@V``h#D\39(Wa>JCVqLQg.(C>+L1sVkVME(
%qXS"CQ2`gG^9phE"]I6n5704?A$Mlb;g@f%.dXBQaAV5m,cT2rU#($IOp?\qUI"@l^jXn2n6;gH&&%WIb5NDJWKDM_J1pa$D5[nm
%CSBU'D9td2UENuo7bZaGc]J[]0X]Pj%^=2)q-/1bo`h,AAuF=1F5(VD3FkB!e/n<[^9l6;8d0fFHJeu_P-J[c`gfD5phAH7Ye_\t
%ALR/Pri6Eq!":"B5u.GM79.H1q=/^ZLB@J*/!Oa^1h_&fr?gILgE3B'h$OTc.oeKk;)=eUW/qGJ*:jsE+>*tFH)ma+]Q[M4W]%*F
%,h3A5,q?.*AkCZ6&LRdg>laGKWibunq:b8D7t8`c1XJZ&RANQG>qOQ>G!F!k%kVnOlPib=]g("MmI<+m5KGA>ZJ0g1@P\:O<Em_d
%;;A!FLfU)I)r>mnQI[6hL6ee^nYeCP]s_ESp#I*$&13JHMa6KGi?Ab8US4K:ML/qUk;:QkpB7rL>(TZMeU($,S048@nh=^]4ocDf
%lIc"#/2mE@pKrK5^LFp:U(gX\Tn[k`gN#"Y+HN](hCD4@&OJj*PH52t9K81JhI%mf\iktJL"]hV'mmj,!=04kTo]I;iI`P]8Ll%J
%>Lo52)9mPM)+W!ZHP*FeB.VH#dDkNDBuB0HVbJ>icbY]Z9T4@P;JP0T2WuAZDpFDq5sVZ>'*b8:2\=bUR935%MA5(T(+DEr[)c=b
%i0o8qqY`^;W;k^BL!$dDSrq<'A^bng/4\A;;798];R?lk>1)28A?F5ET29+Grf*l(aWR/3>?Zp&C?!Lc'CS807p+]cKs:L)46tc_
%`)gc'F'%!3UqYf'^Q&b,WSZPXjkG'ob\p+g@@%nH2*77(=(&Sr5!?r?qOP)[hO$XP]QK!Y+GDSGG/mRQQrs1SrKS:q*Q`geTS7*^
%J22%q?JiB<n(gj@eZhgTZcmCdC5bbr[5:R"5bN4HW+_QED'RL$l0^7UeNQ6lqs??1+iqjp#[<sLb&h/>:7<CD5B2o,IPtCYFem]1
%AgsN1GI=-.!RdhDm\amt1CFC`#3l0E*JX^0r`_%K^sH`X\3OglM>H?/gn0*%XT<r^gjS3l#e4u_gGQF-fuaaV'uYg`^+%&6]hFup
%6J'pA#Vsbs>+p`8q=X:"6S.k6na@&hdi\5=gBM@@m&!V=`jW/AZ[('teI?gEabX_r^TREgUQ-KoYju9P?ie&2TBYI>3TBk3ha3Fj
%FLaK`DfJiRVTo$*c?m[G2G2Pk6CDB[8ra=_PprO-9+EKjQHONq>Z-mShZV*IhY[1H)[-uRF;/6Mfe%'nroc7W.plmS4LMBhr_6cd
%$AEoO22AC&d<F&pkFeQFbeUn]B*rV9^S%H_OS=Q,=&DOf^OJ[,%m%\k]Yn8tJ@*/n:n`L0^dLD6KE'=2`1n#Q9[Ip-kRl1^:9u%D
%Ds6;1F9F.5[4X5GnPKi0d$TKfq;h>U->h6RR2CJ0Yul73M?6X"*T!q0ZFc,tQu,st"V_nP!B<Bf#;S6N2?uSki*)QXckFAA3!u-K
%Jtq\JVWnANVAVhRZT-*85.('QUTiEeNj;Wf3D)BcRtnH(+2%?ZI\_mEXDc#fLAk*[qNEhC.n?W#Tp?+Wlif$O=X?:W(_P2m#Tjtq
%bRa&\`',-5g=W?jW=BOM87-?ILYaUm<J-[fhS0$bQt*(H^!S4^*)e\O;[/Y4pDVY@^U$!7U7-mj+^-lFmfX4cVk9W)F7HoU\!PE?
%1rOrAXmrO;9.mr,odWRCr,=O-rAdd'0.";O\u(oL:<d/@`O`X/0e-2[$h^^Z`O!g$j^#IR1>aSOc*QbL32Y7giRhlO=pZRJ>PmAm
%p*1H8Dg`X]@n4!ko_pqK2@AqeZQDaLeYQ4"I!Y\bAP:a*g##8ibK%)tX,@^0:`<EqLQ1WB_-ZolG['u9M8RPTp8IWR+@Of(8'aVL
%[@$8l_WBFL?K2auhVASf`K`7/f+$s0>p5a5Cr;0tpCrQ45$g;]-Ot&EiM:Ro8E/cK'_bgM<#Hb:T&F+VV7`8ChIXIj2Nf`$?LD!^
%>1QnlpK9!W#$[S#`C0`>J*3IYgrf)'>XL$LhHfuX3dA/u.X/;TMqVc_o?B;&EcUg]g1t64VMP]e_0F(-UbNQ-K>IER!ZFYs8RhNY
%8qS432U'cB=3=J1CKYC(bIHYDX4kCb1u*VmoAfUH4hPS?*2Xug:Zm5YJ&-!8,=LJUgPXN4C@ks(Gkc7#DR?!^b,jtnV3m6+/KH]N
%N=$9QCpnagO5OVUNGaEEK:s8&YT#`f+4:P>g+'/NiC`)`M&SnUiZ)ar1YQ*EXg/m?hqgm]C%[S@kX)D:?-8_WNZ=$F/#ZUMG&^gX
%!-!*9EcPJ;H8YOCeJI[,fo=RH4"GZ]W>drQD?)p!C1d-.:KCL9Z`:0h3\B,8i8SP&5,YlB7qM]+2&`e>Ki[hK:#2^+&'Js+1u35H
%daL\1ZdDJ0G[][`BQN[M*4^Z%m*-H.f&!^gQ)r,EFBEoi]c,^$p[2sHN^ckr"I0as_j0$JJCWjkr$"X?dI$g$<hiQp:u1\U1qU8>
%IPk4D,4)S3D]bh0j6de+U^OThHK7`33bL?S:Q1>SNT+"2All@#SRZi<)e!_?m%5i&7TWmR4fti(kB=^tctKTNCp]<Th#^T>AoEl1
%a&o\2NNXk\B_C>bAfL!jNmtSBAseQ1m/@E7?]1gbX&1$,21)hoBR;YKoCZ?@H8KpiPKqde+hQ-S,fl=)QBi@Ba*R`t^$aS;dDPC$
%afEgpFL?.Q[i0t*:sCm6a6+PJXZWr;X+oF$D"P"ceiR2t*WRNop!k)V=<$#"X/G9M,.#\_mFP@a7\?<2UMHo-^bNFRLU?\uHkBjI
%H?B)Tl_^tmb&$]iPWJJR</>po`0YC)`qiMqSkjhofSps@`!5tT@@>e^oiEna2%&qaB+X%f,H3sID(^e4G,!Y2N3D^!W6r,5BT<n\
%@o).RB4uC.i+Nhej^n+$8T4='Yj.<,bL5?H"uiQ`CdiR8NMZotO8VMsB[Y-H)QE5D@^ZK#mXX):Z,29&JMaqYXX5"f%Mrp$/#:S5
%dFu;D]WoZTqX3K0C/f:3$JNJoj\ek9)U#mgg"P*3kb,U0di2RS:"`%JHWc4WDr=+8mE7u:2U]SA@HR7^">qYP*-2,TW3EpR1HO?E
%7MQ_`*Y_tnQgomC_1#V2YM<GB*qgUmFX]3c2o?T_hEu\/r-I.'fohiBP==&,R"JQd*%<I>cs$]YHgM0&Cp(2lU\?CJ=kN]>)kr;a
%[QDPN5ON,GhMt'NH0[)<hmsu>YdYV/3PMYfZG568XWQos0+QZR&#@684J!EPhAUEai?8#F['MVrnbDt=rF@L(Q"7VR+5P%n,ZPIp
%4s_ce&T]S\38_e0?T.AR>97]AU0$H9lQ)%qV:Fn.6+_g-1*G0#9g"cK(D#l9%u[i&RkZe?IX?21q.ob1NB?!c&3IK!orS]m`T-:Q
%T3h(]bHp*_5+Z<2RRrQY+'7obLl($WpWl'*#!ZY2D;H\1$]/,JrDpNjWf7dS2(sd!995\q^\/G1?Uq7p>?B5Ad5L=X@'KHSWpZBH
%UZcR;9pL?*V6kGo>5C_WSSSQ[rqUmXIU&j+hi;'pU8sE9n;G?Ac'T&Fh76j/>48rsZ&QK.ip1)$[8kjbqLuHr/58p_k0bgD^GH>%
%*j!QD7-3bRXc]fYcI"uS+rn:WNR=pCZiVh7P6]F,$f-3laG3uh]eAToq$q;gC0<[CG?804H8ER!*FQ#<)ePk'@XI\]`W@(865>eJ
%U1>5/?pRrK4A"h]SY[AZ%C[*Q`;]MGa^XFUl0QT&eo[\OfE6$@P5BR3UsXnM;pr!LWE.._HSc(eEE?FqFu5)`ERO4@'5O[qU\/TG
%]?tqQE,.A3g)A6)0)fD%&!l"SGO,<YU`3%#02[_k:Nt*_7U+'ZMcQVCp!2Z]UJ\+PlMsE,en6q1^:j2WFJ8COGrCO]%[>aM*<8QE
%LKCZKRm)h_V):c<6H!USCF#L2,)t[3$bQe\OmXe_36Ybr:4TKu4+MhF'6,jHEKrUle6(i%)VJ/3iHR0&;<)'^r"Yp8"WF_lY!j!V
%DC#mSQ[6OoK)P2>N:akJ$lB)T-H4StcN(t?$2r2Y7%%t8qbT=n7T7dXni(;pjh@hjU3TdkNir&`qU*lJP;PYt-1Op77*qPpZ[l,B
%R1"=^?]eD_^M9^'C95B*[^WYENDP+T1KsX`_a\j-3r3>#d>)L[=PD(h,5@3160N8^lhl(TNm//8i`iVO/d4KIo(C0>\6VSpA%_*[
%-+r(^SJq?K8o-/`-1DuX:L^MI(c2Q?)e0,o%>`\fNrPWsCN@Gi[cN-2d.m+&k"UP38A&S3h7gJ9<[uX4rXsuI^5uonH[Jr0XKQZg
%+P6PAcatb+"PWSQQ;;'nP9IQ`@9C=.hH,/DB#-#3YBg2Rk0hE?b`G>6(Hp_06mdWclYpmi5idimq:m=.:=`?l./2s1bg?[%*dT+B
%n:%C[e]2+SX?pJ#Y^WgX.qK.A<?I5kNnuap'(bf"qK#FO?!X\8U)!<O#M\sFb*WF.4]U%/on18C6[Jfi*";+D6:5'"OgO9BV>mKU
%2Z==n`oCO'qe`'G$&U/:"S>T?W2+6sDN^]Q_arKQC>#bje'k[(J,&O:M\+hObkkT9c:^d%RRgp[l*q6N9CLulrKNSXW:![M@B)+8
%M?k5k$OuQ%:E]4t27!RV8P8/)jt]e.O?`SHafK?i;^A1UGc$\GI@UaT1H#?kRgY"WB4^(80>?]=f@l:Pgj`=QPgWiGT8g(3;O!l/
%q+\t4^2G_m6ncn9q"f$hbA2B+:E>"_jq(1sSY&PfUuo-d[rYQY=L(5Tg.QJ4moOs#+70B</7-6n^d@&pK2D!:Yi$`VXo<9]$JPA^
%o]jkb7C/$MUU1DT"p7i9kOAoJr*b;>a;:EcoUW_tB'Psf#np@j>%q"bn!=So<G!$q1CXt,r4F07YLQ>Q0fuS0&RopD2W5d$]9\Ij
%9'PIr8[NJQiOXq<V)ekKGdKp0%@rQ*0.#7mn?L0??A#,jUrm!+8pkBRr7G!ja/&lF*-3`sa_i^53nk6rXt&p+LO\!tet[Dn8&WM.
%mpa+KVMG.E6/_"M6q]XC7o1__Pp"2hdh030C$Q&$>6_kgM!Q-4_cJ^-#q0!C"#>:":UVSt>FMFGRs)tY_cu272GImI=rC&cJ;7!3
%%kVbdSiR:<I<Z;//Ao,34KD--G2^uN3AH%kH_A8!(,.fPJFP3e]&*0$htGdgi<1-)mugnh+?]/F'jOl,TuegG_b\t6/S@MPqJG,^
%1C0"pO4Tiuf:MUe0AK;4/3HJX.L?,k65'"n<b;D9km!HE`&C1%M<fSTpW&;:(!U/6YqGE*8XsW@d4G[%:!%s"o"gLhU6/N,=-qK9
%b<-OQ%[67n;h)7e9o(b5k;BX1/ERD9O6sQtne?8>msRbHIU08a";#(eQH+OLa&C^UBH0s;$:!cX!+UQ@Gn=BLF0L8+2fsH62(hp[
%q3]FX?rs4fCU.JPV%9)rZu6%KQ1gr=[F<)t@<Z+96"=5krS\NFr<'YKA7C5--OA=!k<L[*:)W9=Q+T-j[L5=MY$:I"37[E>LcXXJ
%-qlgD$,%c)5l\VKm3qcc&RZU@64R:%E/+S[d)g8mLJO7r7<NNQCGQ_qF`T`,h6E5i@)5U=_A"nHA:.0n83>XJjY-(!AKhY2Tg(*9
%_^>,O120e';?hC6N-TZR0<X;;Ro&16gsT>dI3CTSjks<aqD5OnC$Y<BWN^+L,(]Es,i@['&'KB+R=0j0U<4HfnbRO_Tl4D@_Ke(r
%C%.S<:fRpDA(p`+1;'::qJ?"Qm.#?M&N:MrTVU+6#"LJKng1`ei+SJKiFmIBY'Mnm\0A?/RgGLK.m=C`<T_!Zj2o^$nc`$jbfnIB
%JT/=W47-DGEjPi#^RP[%]>V$?ZVH'u1P`YF>gKb>f%H(ZN@mX?LYTIkbm.RIZ?=:<TOQY:A6[i2AC*ED!mBK'<Ms]H4H&6PIIpUl
%1>5A?&(\tOFRh1i+VMk.TsA(.hOhoY4;fW<g%tgGkqJH_qVE_]3EI:Pn]@2N)onVC!(DpS2j=DtY/*k7&!nW!C-`UJT6e.!-Wh[m
%WZp:?ndLdDo_SbY(1*1QcFN05%mQYkOFP6)elVqSbYo;2rF#<@\<`1^qRsSB[)3)0'r!Q%[&)HPf_%@#>5IU3/e,#_AKeMs]B7Z4
%=g_?^EEpi>da1-cLPg`%bU*d]96e;s$QYfl[U%9PV;[E+;42Tu!Y/^$@X*nTHM6E)OKq/d&Z"UX)d4cqBU%;@/l\+uj8;$h]b\k3
%0FEAdE<F.j*&_p-`?g5[2k5!X[sJIX^bT1ohGAdkF:Rs6+]9\-)%kYQJgnYM9Xb[l--VQ9"k2eaB9C3m\Ro4;h`?2M]uZ+e\4S\e
%$ZkmI7@!gjL__1:m#gtbb!n01Ymk/)p1-e7E-WU11Wa[Op"gAV:bg*AdDu'K`X'uWP/hGAmM*PmbYMKT"c1`nM,QC/4ZZn%HFB%G
%-U*$NUWBr7313Q+>;:7!&TgRXbThkf5CuWp]49t?3bG.!"J'[-^hb`IrXj6A[,A#?FT)koP_EYF(qR4q"<A4/3)^6V8#(A5SQE2V
%UbQuj&Th'\i+t,iN]D7#Z'hkk1WIf;8'p33hDrO$q+&f:/0r]_d.p2Y&_i#C6aCn]:nM7FC\NDSNWe)+p-.O('#Lo;j[#!gp?$.T
%,<X?%bJj&<j0[m>/-ks5o36MA:+)8#P']s[b!M2^&hfcFK&5m-[OUbNK>f3kPH?<=bQq16Qk(5tio[I0N,+*:j%Joc.4Fc7\X>6Z
%QUp1IJ/QQ9:4+4+!IdXg#^`$Xpb2LI%\leL00GZG'u\O.T;j]:NK'VXSY8Gf0=?>(:$`5(n?fr)oKAa2-A^NRmD[OXHE.]rgN^`O
%UA-Q`SY'u@!Ph$!-20aE]/&:=/0$D*=..kJ$eDEP\6Xri"g,nWH#dub`m^g'Zfn7:aL-kV9`<aLRl(HJUSZV]C\sRh?8c@AZ$WMG
%(_5SD1J+Xm)aG+MA+c,]%d`A<!jgn]mRR9A"FhD`qqqPQH@LN+Ye\nb_]J1In'e8`p:c<LS1q=sf*C0^"M&!:$;6u^2k_%=bC[hp
%Ii`TWJMAkm+@H+?.nn>HO32i:A98pg#q?>PWh0]/4u"jWp?QuX7u6s\KtmdF]AY\-E4XVq8=uPG/j9I9@lH)Tf-#5i]4GroS6m!V
%`6FY-?s.auP<T)t4kfV,DZ?gKf<2'q[-P'NA#a!1l#pJqi8g3>.W1ig="P1Um#gslTlM,/jP1V]aVSI3iuR+p7/JNC32=odahcp9
%"q02PIXO*TkG>`U"s8,rk[tiY`5OnM?W2,2E\Agjf!3Hk`oP0KG7q4c=*P]H@`Zi;]Ha.q_ik2q1$DS%:b0TKVP0&6NhT:#SISCF
%X=hmA7(dKu0^gttJ8Mj&@cKF"%=Z-0.mGudFX8,91:j8V-H5mD23C>IdlZ@t(,mD,lkZ"+H%5$=]0fjRoE3Zd4;O?%q1*_lb%+gn
%qbp[/=?c63qfB'a^sH+opE82Q[E&Ucs"LgJ/M\^[9bASNfpX`+/]]+\E5h"bC6:gQ"TU?(G`ES^Z<Wd@kJ"D]G/^/XSVDdq`d*g1
%rkU^+'"9OU!0\ts6K>jidW*oJ-8OlY%sU6M#pt"QTl%e]%j+._cR*"rMlYkt2b`.cX.)+uoDl?U[D*ad(uGl;1K$3b5m.GEGoK'J
%W)oX9=%uaZBR+U:Z',O@UAc3:hLa%eIPE&+jrFuqZLdZXO%^)q(NfZ/I,a,Sm(4J$-MC7FLkk$a:n9$VNq2KtT4f1\Y;\*1Rke/d
%_K\&dSWUJ&_s+FE/i1n&j5HLdf]i.cr8QZTVZ]i%CS('8kR:H5=3IT&iS;&ZhXP&r#jGGCeqO4q@ba/0Y![rWFA%W-/]o\!M<S^R
%Eq]!K`.U*5+Z\iX37_Q%*F;^+ium8/7qF1?ZUAi-HG%kSFs$KeO69/CK,@*<6/QRjHAOAbnk]nPUh%QTp7R80q,#^!lQBSf-VmKl
%eV>Xbb-COm:GT"8gcD"'-Pgu/Qj@?S`fU\%bA"c%Sk7%c'ordrb^g1"/KS]l$-p+*ol*<S]+oZ.LI%3YO-g57D9Bo2!KAc#ao[*b
%"s,D5Z_0c"8FqX.IJB4?6n2.o^PLBpT/f<8apZFdRn4i&RgY".an_Jh+r0C2"5ec8W&<)s&ZJS;p[ZEZ,*i0FkTH')bR5U+T0lP0
%4dMUK\/%duL_-u"((HW::,;GOKu8:SdV,2.6fHDYHN8,ITl:-D>kX[*6K,HAQ8=63H*8a])%,OUpZEG%#7q8D%IK&3'VTJ4K\%jn
%aj4ZsKP*m;f:h"d@bS=QI?7fi4^WVrgX-B4SGDs`>%\@d(m%U+IKp`cUr0hTm=u*G]=EGZfHfcNS\WB1KELd,n.mbp7L7e?iku,"
%E%im5\ddkfA;t)nZRt?cmf!,J=1PA;SaVB0;PQ9tg3hbiW-l_KP.6!I=k*/k/)0UcMp:*O4=`hXGPqY:Y*<]\&%._/ZF*LPiWu$#
%.=8B"b80GfZq\SM3RYku?JV4*4B1\k?s@F.qcg73[i<Y$2jB_+Ai4=8a-Ka:BpX*lYZpNHp?37Xjr7a\=7*U^NaT?8]1^I>;-N>t
%Y?7kC.i-=Na-TZ%Z._R\E2mWY;.m*P8s%`rLcUIi7bB<BROQQPV:rc*M+=>o`CTj(o&:ZupZr^_[ZpH&[!oT2kL!sl2fd\;CjJV(
%Sb_@,4$'nBDR<T\XP)cYM<(m6i87KbhKX0AFHg=&;p,eD3LoJ\XiO?p^=F6'/^Xl7^.g[(;0)i[+\kTkEnP)&($ou,E0FW\An(HS
%U5JhAQ)R,t2SC-S.(^d4dP(?'iZ)6Eq-64`aoOM+32?D+N`FM41Wco'9*0m22_^F8Y8,>Dp2!bhod%O+idQ?)'.8q6ZbfG/7#lVA
%W"i'7h4X9Ajr31Ge3pPC<gT=W"ciM#r*;)&2dVmu=miHA-_R4d^%7)Xj0?MG*_g8]VISir`9%q3`u:C#pLlTgS<jeLjr@+9)A$QB
%j,DaF=<c'KRZ7Oe]RH8a1gT#G+`iL;j-.Qj7ak4?1=seM<pOIoku`*EEWXcRUZkmcFA1S`RA/qJMP8k8B-,HBXB7OW\I,Z2e$3"*
%[4=;9BKB1\LjYV'1`\*4cIA*@(/;hI:5R7\cY,Ajr:+<bROjnf<RhdF]E-E%XK$[./#S9%o7Yb$UZpnHYoq">!+N9)e$6>Y=?c5\
%7FSMNku]rDB8`Ws`R9%&fen17SWgKZ/6u)"jlFg2X9s@QPGaA:F.`jUIf;>LVhq9\WANK/Q.&4Ofn#jdT0hQE%US\F4Q17VBK@g8
%%b.J.KPA71_!PfHi)ft/O2I$@h;`D<!3n3_)H,:CGMj-Ym&cU3L[aAMk,\+(0'8J'NYRK6\L[Ml0.:UI+InCHb`cs_53=r6b/cdX
%XY<>E\64Bh9<RW%1ZO\HV<:.+2U2]._!JB;%cc"e/`=,J(<a(gLJk5?5MuA3'bS@`LrV9[57_\28^cC^YmGl9mO%Kpo]@h.M=+tN
%F%>Ds$k/r$qFkkOF4_kfh#mghVn$;VbFf-Y.Dh=>(.Di04+B1'%sCUD\b!dN4tf<a1j=o22nmN]Fo*r.aGUIuntggiV`9V%[F5l)
%=OCNQ)htd:SN3"6J&(0(iIRUjeFWBFKIbqT5VbWdTH\,VaVRK,Q1(n^<h]jeD^Q%o]RA)`f>&B**X_PU7.E[($rbF[>:8=rGbUDj
%M$0CD^).1f9[+ejgAJUWcKFF$FZuY/F%&:<6@<Bm@Ebtg_QYNZe\_ttCXqDZrIjI(7m(Dme)0M;&n;oDm!PC1\?b?#CNYL#%'4"[
%;%1c/rM;@NWIUqQ1,F;h+q;ks9&[uK7*.&W;#\mD3C)iMpZgp/%GG"0)9;g(!g5B#=5of8e<^j1W:mN&J:O+n`9('<NYr8/H4pH;
%GXjqmS#=h(1j!IbQ-Wp:H?]K8!d:Va4gW1MP1+sE&6Jt@fRqZ?-QGkqb('e/nj!DO*F>OgXh*MK<dk)sK%C'"kI@!-Yfe4W096BV
%1??Ssa-X8]edQb%jQ"J)>'O\iRj(ef']d0UPW+qRcH9DOOs\:i(LS18cR6UNQ1(!+j)4"p=t9B*4%Z)P5aIJC`an7mU<9&f@UYgB
%%eJIQ<7re2ahUPT\@-dTArD&t#cnItkDIbFX#1:8JnBN+^for]YG7;h((7:#0><ugd^&ej/HV=l^>640*D>\(D^WGlq2ca<\E(QJ
%r54n(&RcY&/*>OL*"cW.4"iYXj^rC#S"m!BAc#GM90:'Of']%?6Yk'`QS5+(&/2=0TeOA7DoOo-@YhVV^^.PP@Ib8eE[p<O%*L)4
%LDd!JEQ,HEntpcPiZq&=/#A_2c]]8ldQQ=WZ#V=%=i>_F'ia9'9D-A=_%Yj4:,1)WRmr0Qq/8s7\R=P8S3=k,-->`iH*4)YY/&6f
%dQJN";20>"kZ8C4cUh/a7[TTE*XoL=#RSnjfZr;RmV93IQ+Q<hVmr50fIrRhDm6AqQc'!e`d-E"6r0Ugn"+E&Eo^Z@m!%mNnSfH+
%HUg1<3N:QQ_mX_TUQR2M0#%=.lkP2?q-8nqKR7#kGW.t-0+>$1H8[8'/kW#_NFiuHPSfBip1@ZZ)Qb@p<27`$ChrR7fr-\`%B/j[
%Za&p1qmR.0$r%\"?Y&UJ]_KMC2jJ@m;5J-252#VW\+b?nhnHeA%=sSjH5@A=A'HVY2mgns=/23k&DlZ2NE\H]n;cr&ScH2F06B*u
%lC(Wo:#*CQB>ha\2:%HZEpHuldLQe6I&2&/fEnNS(R'h06g6E5[l3Y6745ARHfok3@@cW?k;F3%T.Y>nguJ,No97Gn'n9:%QA*7=
%ro[p7?V]2O5'1N`<uCC>/%9$=PaP\B.m\W$2KLLB(GAG0aU4(:)TU>6Oi^k/I%o&:4LQVr8dbu&E14K5WYf@\5\37&aZViD98hDK
%ct@_GW+jGkmF*NQ"RnNZ13XC.g`<;b<a_8!?<Yj=eILi)H_k4b=/hdL?/6k(rjjY!cBP6l/DHL\goK&;E>*]?='<^Red7*O$fIrJ
%*-QU8BFhH'a.B;s?#'ZA(sG#/QF2e2pfoAn<S]hs4(,SY`<'*mW&"6QEK_C5K4a$"2"I[=S5HW;KnfWTf=W*c<>j+qNQa-^1J\,8
%f_)ECqTLr/!CFT)2`cW9qlhRlPFY")Am-("15*o'TH8LG!foNsf>t)*O)UU?O=WV*kp,nl.GUVI:]BMs9GCtOj;2a@`d2i#>O_>*
%kKq65/ii^?4V3^t?c`rgB]o-FTpuNcl)PAWLhD>8]1N:2/GL_'M"qW0Wm#g.h7m=bX@uGn@.I\(I`_27=?r%OaWM@\jC^6(V*->M
%KaW6CLNErt.:8s0!d'V?3sO'l*"pRIVTYoNBmnGu!O<TL3sKY=Hh'QBofVeIECL!"`W-3S1%Tq;KGjI8Z(em.J@mUe!Dt`U;1Q;6
%J.0^f5np!\*WZuXaLaq8g3rRR!RuI+q"8q#8^/V3T4^X%\L-Fu[_g:RPY[*S75<#RPg>q`m@R"n(U0)_Vke\G@Qk\!k*2+Vm<A(r
%,irNJbF3cU5$%[*)3XPN]$s88fQTbumJ2nq1t\,Gc\TAGBD%bdCacL"IM54lc09$m3ih.sB1&)4rFYW/jj*2T+*BMtZ_;>E^EAFY
%?T@$bcA%cT?9eIkIKD[]1Z\6#G?L_(mUjW-kHD*O4G]l[lUMDNOk%dClZpXcIfB=?,lVBK]RG;sgPjBn\(($Gq2[!Z!siOG5Q:bX
%*NOJHp%.kOQls+`b2aZ2R)E.EO$'cFfcl/_aQmL1^N!iXRl2`J0GOo_#uhT"p%-e1O;+0S?9eIkIM:i'RmYEsCjGtq[CAW]Pkk)$
%bcAjE)4;\PT3mpkLHO@T-a-n42liQhjPpAgrVXQ3"F^g+2m8k*<b1!4?Dbg0kF^:cF`te^H2YBBV4:TPg%,"8D[_gm^=i,Sq/:B&
%S:?j;IMB.,qYPC1q"WhiXBIaWn]`6FJ^3O>CHapG-/LkTK0QO]O14NCH2[)?kWDb-Zncu75;Ta-\Q;"@<8'2.)'0AW'Bf&[cg!Hq
%2Ql69Ro(-fbj3<9O)GM=k`aP8id?,PXed&92n8JU9pCO]=dASHSQYR\q.KA17m9\>f5DEg`h1l/?d6to2k=1L@Wkee#u>F/bj.3%
%h!9'-r>;q]T&).m?9eHn!qPm+^3me#r<2T&L^@R_r3H1hSXo0o6[)j$s/^ZC$iC]arE(dM9InmlH2[ZIq?<F2`?4^4QdsE*/f[[2
%P=JqDDS,"(H2W,&dWP-A'JWC0?9`pui:S-"b3S5o(_T"jHX8pd`R)'62a^n9<qr'DUqt\$R4>D4s,N'p\ouf?IfB>^cKNtroD5^7
%Ajm(%mNkShf8h`!G/h1Dr`u7m3+pD"k7S8aFNP4+Ah/kJ:R?oC#WfnG79qBjM2lYRn/eH&`/qao]fg2ZC!s<AYa-;ThP8u8aU9n:
%1Ed#6'/2bGo!G[V^(Nm)@,^<tC`H3-.u,R];-:-2n]#N%:klsYlGqg^9LdU!ea(+H0p@S-5PN+Q\@JoGjU8-DpIf]<iOr)>>caKQ
%$b&pb[AEK\`Cf3lHeqlP55WIgH/n'JpXO#+m!QJdI3*(bKn9jrHJ&2,3g]^Kn)p=@mET9K4<.]kf434kkAi]YlSeA#q"l>Nrn`^n
%m>M73oB=>)TItp7H<O+'85#T@Z+J$1<P/l-N,JSFI5ds&Ug"]F[b"9kX,lqkYYmLdSNjjfQJRa=de8u+]=>"8ou5dM<'NSC*":QU
%ahdanCLt#=3-n"\&*o@D><g[5B)_!89h?1W]h-bTh"+qKZ+h]Da-r24ftF(uI-K4$<4T%E)n!rMk*qV;P2m3[.K,dAJ^on3kF\)6
%5D,MEp*b<:F:boN$EZ;-3dsXPXY*+]:6tJ:SPnP0]Y;/OEk]#N/hA)Vj(<6Y9[c?dR;4AR!jmd8L'tE&A9cIM'N"kn)2OU=JScu.
%W5R,e?6UDZD&'#`]"PL^%F(&"1`WrF.r3<k-!e2:rES`GUX_uLO@D9\WN,=Q^sg4"SbL<cUZ-1bjX=HVCi7i394tBtj8S$j*iW&K
%NE6E]j'6h5p$4$[@>VuSM9*1Bh;-hLX&!LMj`XRedH#DMDdP^48\Fjk!p>'iD'^I4q3+3%IL19f,gk3d0K4>clLs=+$?+N5]R=c'
%08:`,PE+U+JCmU-DV*nC(5VeQ#B"aKjS!Sl,m<e4]!Sa4;L=G[+%Yir4!-QMNUQrEI6`!5+a%/9(T[1dEobbuOe?&dat<Mmj4HYT
%IeBuADLNg-09StTT>lea(`oY]D_*`iB5sqjr@.DO^-EQ#WE9$U#sB#GacJNG:r(Mg]UNadkZ/jL^HP*1\kh@^aD5-PkB*4@9notW
%W"MPP@8?>qd&>;q[Z'K3Q12'Ko%WRe^=B94]=XF"1.;goCN8n6r(DaQ(CC"?M.P:B7\^bKdY\`Cb"G@i4Anlf@S]=$B3i)PU/B>I
%a2BK%a6M3[l@`n@<jdr[na'%PX[H/>Mi5K4puV>p]60N*.cqdV;*n?h]CW7eag_#;o,#/gNFDA8qYJ/t1aP%tI2P;[VU.f3lu"#<
%n=&:G;RtPG#m"#^N\gO8cD@98)W*dD(3lYoCHf@@+HgP?eEgd3688J(5'\"Gia\DK#5m?1h[tYBD9N/5j6"H<P6!Z6kN]Res%O7D
%^nP=`(r42c1!R^4*@>k#"6>tCTfIqGmDBLK(ZX&HRp?0>#Ml:<,=aJ0_&4ud2Rc:l^U\<T`c\',c&Y%-5l3Oj)JKn0=AudL&2_p4
%EZ9[W^0e&!1Q<Wp)'3lN1&mm_Ean-/7!'ED$+qrY2W"V$[G:!:,BRZ2qRBPF*%20[lH=%8pMK;S;WdX[S+)'4gsp<<jf@#8mBL$H
%Mq$?fBQ=T&l=5?=StLdB^Pq<[DY\;=YC]SC$\G:Q6J60jqqq0L?7iQ7"?'">-"%W5A^klsM<0m8YJh=/;UYF/k3]^;_XQsYRk2<4
%N^9^mm4!K"&u2$TW>;IOFt5>Vr^PGti,'RUU;VTf[Plg9-mKedB<5X>DbD06Gbjn7:7>XfJpj^@=H%[i<og`SeF9hFlWku('QFZ2
%K&i/&^L/#IMis7sDf[q;FH@7^C2m6OB)l.0Y*[JcE4'HN\klmf%<K]8'[aa_$Ld"T0EU![f\S[G;jWcm-][/KSIsG'7<pg.7KF+I
%Wk*Sb;-0b:0.3@_bD42=7oROL6lkscAmD<_YMsG3OB!I8\KN!7Xn%\s2$pFcG;D87G@1ooHF7E)^A1bpbUs&d"7ATYNW]k@7WIcK
%l!]0C,B)I2phZpI=>A18kfefB!k^:+hEgm"8r/X!_"/JQ@9qm(]nhCG'Z+M?Rs9f&-<HDcKWei]HVFV\,kR3-;Mfg'CL2Y#Ln_hD
%J1sFmlJgAE,qJNVC8q&o!B,6^6E;R4#o[?.Q%WfG0e'd5Q9VU(Wb5]MLI]ac=iH5uMY(XHQ/4*AlV!nqhC8t@/;H0IAD7H(Zr`uU
%>F"'K`5djj,Gh5o;8q:qX,<'2<?]t3lE[5j!)-;J#]*&W*d3)A/s01RdM(Al[B2DL70c7GOf)8F`m`[nfKS`C/X6Nne^8rUma0"E
%N]g5)1NZTSYr'@4m0ejK_Q@m)A@(lk"$Xe(BiD9;7&rE$X%g5D,,`;NNk/0%)bUZ'")@9!90ZlR)9_eCS\fu$1(RQ6/>3!tg<VR3
%=V/1OpV\OAMIo\r]uP*/NCI9Ac5o6RVsB@!C,!,]q^)lGBHS]FV^;uCBHT:[$2Vg=%1qm)ESH=90,OgY"C@on$OE[q?W8jPl/jnG
%!WiOWmBs.#!J4=lBg]mcI8mQLGs$=DJq*hDfGkd=57Um?#cEIPb76Y]klkPuc'm3Y7QP"F@L"4kFrsWj^FfsX80pFh!:A@?(f4J$
%Fh-s1-/U2$Bi1o<NXCGqWsX4gpB4JU.j0TQgZZJ@(J]k7G<dPC""dmPh4%Q%JWIHbPI1t\*sOV9:=TT?o-5PgS-c0&0d(aBJ9*sY
%<IpGF;1Im)Ver588DVoL<M3pGl>.FER6T]T.QB.L:,LtO%PuQf0'-WjF>c(<nEfI@W:q;m:KR(NRhi!q$9g?S8n!NM=%0kT"bKXM
%%%[*_<@!q)A6d)mTtX_dWlQfqh@J*XWa*70'@Y.TI`YX$8G]:U@`,Hs@q!o</XCcFCl(^D(fgM`Q'`0(l6#9O9TrEDYGEciS#VA%
%V&b[#8SK/c%V%G#o4AnGIE4<W$cf+gQ.Mp)!6&.WkW%_)U+ZaFBL!ZrQ?(+#,VlG<2H(S0:J54G`P6!-i\VL'%4`;VWg%C4Z@,=A
%p"B!2K57PCHWXHbA(r^8\5L^+eBOUJXTC.+ESX0o<8PR%+QRZdo9GDE)`K2e"$&)ofCr1aU:.'S'tus_45!aom?5dL>ci[kKN;"W
%8rWn<@ef1\5/*;AmH77Qq0K/f>/%0[m"NcZ\!t!^_:IaaANP?i;(:rt4Bb*.,:Ud"S"I5";e!AH%5c.K'U`tr3\,>N+03AE\+^*0
%S#XM"#NILB\8*p[Y1-X=p/*Y)e2#O2YIRJ*kiTDpBi3d1A"=6IQq`E_LU&J'/DQu1LuWchcF(Y';\FU.W>46lH*[@MPj[%,4QgH.
%YNFG0B3.T8/*dHNVg,V'Q7aW`$\[NO:s7i&3f2kf4h`?caRLN>nsYq+dA@Fodl9Ji;5O5pbAFo2!R6O"I:_43\Y_IG*q,g1$M<JB
%dTE:(?Z=aW*QcF#qu@Z_$HTrSi:c6C]Rt:.h;E"aCNjo8]t,<4)_%5e1[S[+/ot!LfY0N'<gVG,1PU,;DU^H>!d)?qWXm25Mu2Gf
%R3aX!ZUXgtd'";K#eW-"-l3[J1:6P$;&F5`@Y,7;Q9CdHXg-bPm2"Yj9<\jDD8[Z</1,N*TP<E:XlM0J_uS#`**I4!^1Y@9Up4d9
%R%"e*+5N4*g.!sU,D07c?S7*IT>*"?!FnN#M2`2&/b>:iXU&_DLo+B7;#DqK&Xs`_B&15'rH89W*(D]p5.n17'U7&El4^HGgf`2S
%bLsce=RWD[Fg#7d?)oH1H&#rYDVr[2BYTM.CDQHB[I1JA9nl<)KtOn#Nmh0WdGcT%FrRDfjU"^X\mJGO]EN#EK@^gEr/`a\,^*a&
%OL3V](>6Q>3XXYKPMDcGhZ.PN3QL1So00RmJn#s//SC7CcBaC*;V4rd&D)1L9iDpln3%LrjkV"pk]'PqO/+D3-MKc?m)O7'"(IEe
%'?jh-hM3A5hoB#"9k+m$IT\9>%S;P35>kf`*Lg5K>9>?oK85KL+Q:+>8K7'XZ.ug3mXRhM=4,E)Z9bY&qUUcgMNSCYcQdjB$V$+%
%/JPr>JD`SS0c'hWN!fDncH0D@&H:]i*TM(!;\jgo0/qM*`QRB9Y-D\tXDiEOREfS`\T1c`MqWnT::R/[1+1oi`JuAm`eqGQC9(3T
%Le`R2M*nT-)$:MuW#M/B2K(ZZ8mB\=N=<_D`LqWi5dh9^EV<@9g*0arG&`s4C2RtT)nH5"3[F8rhB`82H?GUPS"]/el9Q""9O]gn
%A9JW>$L@gkn.^_gp<K:m.P,B\+EHtDZfD<`RY-!-b4D)U1PFgt(bD=%fY$A>;3nSmRgL4*iBs@<d_:]Hdr`gM]lXm:3@T:g.H?-,
%2K#jqT8-LBM]Y?QHMT_N7e94kNBV"M:G%%uhMKFo\O;dVLL%e.<]nr6Z'%LnVn+gI0c&`M@="F;jE-*h0q?lS19r&B87)VQekX)i
%\QdrrL#q?u/T\K:2L6P*_L;#-;sgf[FC\H8.(+]oZ;7ZI#i:HZ*7YNBii.1H;=1T#06Pn1V08q8UitCs0H5n)l,,Hjg(@ts*FtGR
%<'9<AG*q!n>Oc+#*Ft7lk^oQt\tI!e[L[&&@4Wn,Z1ok"5l(O-^<S3-7om'"lc<NR#Q/ugR]=N=;Fs%eQ.YhSQ6,:(5sa5Dg;cCm
%Z++PN2a@O,L`.p_WsA^B[SgBo3josgi.2`cVWNJR*dAT0*Y-fo`J;Rikd(OWQQMOC`9I_=HCMB@@Q15L'QnktF2mC*WRj8jQleFS
%S;e-U@J/Sf"!N-9>]jNmJJE5X-9Ag.V>]?Y7?/D,h6&B<PhFP"p/rQMV+P]YXK.>G3cUCn0P1AP&?"nHTEu2N-AoJg&GnCLpWcX+
%>@STgf@@@6KbP+/fId5-,*E*e9#lhA?]&eih/VkIii3!`\#%lK/qajm4l$aU]sDU6r).-KZD?"mmp:L/3r)3<Y)?u)S)M;,lQVj4
%Al@.*&>phkht.#DrF%r_4;0/qe=L.<jj.c1=KgJZa%29LoHtd?+B3bJ1?N814R\r-&[u\"P8ID#>-Ig'l,g!fq`B[\g3p7YKo_li
%nWtr:EQk%MDCP85VBf.Jf0ugG2)D&6\Lf7cQAJ&>_VnRMh:jZAM(6M]-A0PGer'5<8.O3s>JLtU0o9G.-(?\Yj$mi<VDje'nX43]
%Wd&YLABW/QmEAlGiRmR<`kGIU4lf!M,./Y0R9RV)H>QT`5G81,l*9<nNhhY<Sk&Jq,25)R&Ah$EH>uje?E9n^<cYk=34BpJCF(@A
%>Rs8Kq<'UUVipgo(f3LVkpnsRjZ(?A:pe:];1)Uj+4;Q7b#!bQP4CThfJEF.;p1Q/kYVGJTo7.QkBgqYY?L#P;sPL:7A()B,bSua
%_"G]6$=qb:>^+-!\KA%HO$Lq8;);lS]?IOS'dB_:mCZN-6A2bDSbJ#-jZ+=ZSoI1l6<:$"/PZ,nRau[O)kVLH.n#=RD>M:?c'uV.
%<f"!2[*u-jNJXRh]=-8Ll3^]@mA<q5Pl-rb?6uV6el#e!=ktYhXNftQ[/s$<-]Cj!7<3kl"jsW#&I8%)<!-ta+19+?]7N+R?PIE_
%0C2A77=Efd@WuIL/Xl7pS\c;iCPt+Ka-M4'1UY*qk_,hYn"CKA7jeupr`Z#):1t#i$IB+L)VIV2S<$F$jbo1#3$4^<[bbY1L%E[u
%K`J7%V%_iZdn+[K4c[jULtoe>(%U[DUTGV6SIk2'ph>HRd0YM_^K,"V1=]muKU:\20>3!#N!"/gA6!#QKsK?+Ut8EGLg;C@^O_N]
%%eMQg#nLQ"Ffcsri%PUdXJUcFU=aqn33Y9_^E]Y[/>hK[p*duYE'gOpLZA'",BS8F?7>O8_onOiWY#!hGbi;%WE>b&o14d,,2/Z>
%7j>+#F1FfQ'gm<jeI'.R-0T^tmnoRsnk"m-!na)Vn47('6oqS2r'H7iG<sTZf4-N2Elp)h@JBN7MQpKdM>"U4cf9g&`kAbt2jP']
%,U*YB?^XV/!PE>t.:QDq4;n/Sb]@cnGtr#@%Lt:aH\JA="c4"bPC&"]F+k0nUO.]mF+rQZ3O=(Oqc\*t;^<KT&s&_oD.n_.elt7K
%j2a.```qVeOf^"?b3nH#_=H8E(-]\\3fLc(l+Ap!I5VqS498b-k?Wh<3<`I_X!7!b%:tjJD:r@1Q#7>An/^Wd4/pktmM^VbR#Z)8
%iW=/K5c4A/>^U<</ud#qhj`ij0,8CuiE#Hf'\sk#B_ff.mB+&G$@7s(ed8N5\dD!DSJ(Jn__I6c`h(01._0&+K_G=dZ?KNunOXG5
%G/!<(G6'@mp"6Ls/=nhUV3`#!PX_*ZC@N^LQ3rQ%H=cqb7`i1MqJ0YdMnRM>Iu-OT_)]fXI%IQZ,!PoIT4SgG\(7=uld'pY8'4Kt
%D?Bl[=]/;<]6W_1o\OgB=WRV';.cr+QBjV!BMT4/E6$6rLNkmQ>n1cp_6<U//d(6E:3(+d?KS'V]1.![7i[d4`Ei0.1j`2)MNo:X
%o>ei+luj8<M-J-YakI_R+CKlA]?VMiPcD(2<&>@SWB,r2254l';DkJH;D[?nX0pibCD[#lNiTSFMD_5[BZJZ2&ngXBcHjlGC#f6C
%NiTSF8tFQmpDm=NX&YO#a#0kZNn3nOpWt1R-B'C;&!CPSZce!M38>hFMt*h3"A(1fFW9\c)nD,u<q,#05P?]_XLZ;E.0du0qmmF+
%4JaFZ_E_-*I35m?[Vqf'p_YL8Ej^#tqEkIZ?a(#Mq,@q4oMN&u9RJpfM't$B?Q1]5F`b@9BP:W$lMX'?V=Pt]UV;.\<Js@;8*\OV
%Jn3X/V8d!E@N[-RiS>`c_MYV,3eRdBFE6"M&FWBXV[[m_&M\;i&n@.t$kpmhs#*#g1)S&$rKQ(/a<.8k(X4M0cAd-BP;&W>1^U4(
%TLfuH`9FR2*5%p(S9S);kLk68rTt.KY8bDSQbpk=HA>X<355'$/\G?#bg0aHcqg7'Eo3J?qEX0(R:>(1e+s'O<^*_ll0q]?7WmWc
%*-=A&MsA*O32"rs;0Cen*/IU'Sj)-b`IVFf4FP.NMM(?E4\$T6QK"S'r)egiUVJFs*SYA-.@/t$a(/@r&D[^'g,`["ZcN"3p<gS]
%`blkjr%m6d53,/jkJ948DI:PkgIF6I2Cp,'e`C=Pj((d0,4Fs$e3QE+*'6=!l6#7!ZB1$>l_$I17VZJHQW:LJdi120fZ&bO>V5<B
%-*apj[q+Yf+1^/qG)Erggu/+Ie7")=BsCr.hGL<=hh@KX;&JF"'[>TFE1!E2JabBY,8/RMSbetdI?7gp0K1\[#(X>-FX6@r==eO2
%a]0.Z:F4_AKdH:[m=bJ_0HCE2[j,6+0#-M27jr"ugt\l*Q06tsN1Df$<qPaE*:F)Im1m5_[RtM_XoV@EhEA7NpPC08l%(qbQUd#U
%E?s(LKr+EIANLg6Mn;'1<Vc/o2eO!GbT%1F4rpsH)>"Ts-9'aVA7QgpUAh$:M.N>g\a[PN*-d-^]'sr*n.=KK)-qL$$EO.RXngV6
%jqEuRmo]P+5q1I%#&E:L2CJa\@eqNJiPM?8H/6()ofb1'%!Zr=&gIJ\j/n,:oUG&SS@X;V;i!m@N=:d@Q[cflTZ<#d01/#t2]D=i
%U.+;)@l,_)k-E&(@`M9c;!SpEpe!3=]Ms(oBQ$/3L!3VBW)T#mZlsF\NGlkg=4H?L%r>7eg!tdTi!2=i=G`>aJmF=aU"tI:W\#&f
%hk.-eZ%%lL5C5ILAD,%MWXH7kTt0McYg`jBoXT87:Di7-+l6h0$YBm)`=5pi^8HkpkaADt?3/cP^%;Li-m<F`(Yr>+gA`.f,>Sp^
%dt4BDXlYc`p#+>3/\"oF%cguDa?qLkfEu_+&+R_8-$EX$Z]#JM^9]Sr/!jTa)umuSL%W<&(,W^'O]A0S_d]@D(4hfe2oW`0ntoAl
%5>gG?2u:?'S$)(Ak'q+ZL?p2b1]!61*>pRVDZ)!'Ec%2lYlVlkn[g\Ql.BC7&]*S_0Vr7]'q<#!g-F=m-?3iU,>p,.)FN4S*rus0
%k0uA!hVa]kq[Osu;_q-02NS>1!KIWc*Zsu5$?VZgP^sPZ'0"c<Spt.%F`a,c@:sXu5V)L:Z;R=?Roi-QrB7Qqr())H'CDNommW0k
%bKBE\/I*kG.JVK&"0mu?A`aF[,:L"nDF[ZaeY=oME'dp5l<b\0iqVZs/Zua>V-Tb+\3*Eg"mn64q$t@(q[\G=36)L3cKs[mrSA>G
%TXVTSq\tC9r0;.U&[eHCG7"S8p+`lF"8$b@H+CZ1>LMASL:84G%@1fo:d$VbM="t0XY(-1kHh)kI%HG6V]0S/+aTKqA4*CE)k&aX
%5.9aD3de:cfmf\*Qdo"Ab_**$>QpaC12jlnEc71I]:qK\1\U2oA;[2Y_<[SBcauWd$.jaR>C1%!7=otG\'RFVC&..&ZJcXK3c?9K
%</^.a"&on@<Sag/6@2j*$QBg?<B)ju%EjPCjGQS%Y[NZHX/9,H"6(+V%SL9R-@En2M>$]YRc]l5<B&&;**@8:pc\Z6])SMVZ/V7!
%Dr(G((<9$pg9XpsdR!LEEHXd8lQ8naY_YTucAY,[Oe"_EZu91::]OH#"0CjB'cdBpcaM5%HNB[e?/]@1Adn.`%W,XZ2'EU6>pX)j
%CC.Tf:-VLb:8maV$2Gka9BMYqRP'a&;0<29gbPQj?iXE[#nC':E_gLaC)+tD#`]WSA!?UVHeT6=ZN.MIUR'<lmkp:0<[DT^>K<Xo
%/('ETkg.h=[2?e@5=`/ZT0:8:Pa(Fq4?6W`B+[NF2Dqpg#:OOr5iB^^#p!YdCR.cb>[<((CsDMiTBD>8e.M1bA3?q:h]BYeH7IU1
%HqUFJRfSNN?k/(\PR1P=(jLD9,OHR;J4.+)eNB+3@<PQZ#@"N^HFXiOWEE\!ECRd;;t?hsCT\MTItXqt26rjg2D\P>K%l5/5*f.A
%/U\)BmULYsUFs=J<pXYI!+9T;@VT\of!^>[K<5UR3+J5+XeEg^^-+t=[\iYg[*=q,M4:b4AU.Q?o[KJ)%E$XdcTlkc/r>XMXZ0+T
%A+M]q3s^K6_P'Lg+;J]7N9drg;8e34PPT,@X]P%A\Mc4g:YCq*X3i0*kHpM4=YFaoKo#861JYWXCfjp'V"MTe7E9_J0!0U;N>KVj
%jj.J-&5qDm9Nb.Jm-<[8on$r3Y_BmprrHaIMZIVl2)_qm@^(_#O"DRoM0j[%S[D4-fU6B;@5H*e<,POn=@DL?!=erX_<iQ%V))q+
%pSsWS$\suuU:5,YlU**@DAs@!?>NY%D^QO:1QO]6\':0Cc2RA.(cnqH-FgCV>u^N$Rpdi6'XU%E="b91,q@Jk?8PPp2:L\1RkuV.
%*b4`+!!)/mE-j&!./nN;JKhE:K4"AY\W?[bUhge>'UY6=VM]j85@8JPUe,T-`>KPoLhG=%F&oP$<[$j>^,`5r)6:h\k*`Q5cI#Pf
%5?gHXP1-+H:<nU4ZZ/JS*"UaFm;=<qX:&KW:R3ZGX^5k;Bc#L\UIsulr2k*3Ts]ta4>60jjYIY=Xk1uf`/+GVo/`%bc;/2]_32n+
%b'Ti][C^[lfrVhZ[p)Vrc^;;UM#pK!KLe):osGBl*ShIIM9e)mH?i;?j5[Q=E8pAa&l)&S$H]:,Q,/4AW8D1$ml$=^[9i9)Q!+Z_
%<JY$EGqm]2g>=n=%(Gf>)qV&mmk0#g*B`+KQ+Pc;"\r!QELsIC)s4MZGJlTbd->+X9TEVp#q)mIWmLS-RrC4;>X7?(7t9*P]B]c^
%HMK!0CNm5(amSC\3<#3n+MUBY3.^%cYlAQ[:lJmLfGMf#9A^7*"5_2_Xe*ikd*9r`6f$]5aja<rP%'h(04<\'KINY<.AR18VT]Q"
%18HXH.ikGh;_&bl1L@/b;UU=m;n9<"TYc4$6,.)L)6YHtfgk.Dr3TtHBMd^75p09Icn3jnifrqWU>)j&/-c,bG]GW/SMerY-,`mE
%]!SDC.W-&`EZE7=SO]:<-*8E89qRK17Z%HpU*#ts8SA,J_k.^U]cko-]l]+rTZ!-o0dGN7*hLJ5/P^5F;m`%S4AN"fT6MJHVQ]Mf
%@edLHPWs3orSg8NHYkd;'#VY=&pq6)RqXER'>7`9q0d**-t,Q?o]oY;aJnGl,t<>@(TrS\!g'$aBop\AD<ut52dW%(M!ZS99@PtD
%^'A5:A<2QgdCr3G^s&O/]Bph,G(OCW2k5\@?SKQMa[u3?^?_.6TD/"Fbo``6@S`hBeFHQo(MDg!#KAC'Tl^n`1R-:0-iBp@D(VXu
%3(3?`JUo,UDal28"lE(V`E@Q;3XVMrpcN&-?X$lt_r==Uf/=Wa+-VInLUGl`M6h7_;n\'RrJdD%\UZ+_AU5$&oTLTLd(W)a(j"e(
%ds4#*a0.;B=e)a,DXNB'foDGf+j1`nN\_s"B$>;8OlHkX11QV+NZ;]qnB)WTS5HN^b&PFn%*:<K)+T]CZ5#N$Q89sL`u1KIfs7,f
%j>\qLH%mk_*')=6LA,Lec8]j7;$g*sc#OR1c=Xpa;)W-S1QEGfX;#4ZAi\nmEFr!D2H?&!NZ;[AWgkEZ)$a<6.E\O6Ei)prQfF#T
%7@AXk1QDf=.,^%ec8]j7"fEaVb]:^cj3/`:fd'_GAkX;cRH;Ym^ba$a$n9>X/8#q;GbcaW,g.&qN\cSt:7^L*,KC[VfPF^93-(P6
%R%b"#3TI&g`j$u!S9YX_b]/C1Z.ZFQc&eZ9Jh1OS3R2Fib,3@&2N:+r4NeU4N\aFem*'LIkGX]:k9t6)4rJ.o__1<nC9<8"rRN,B
%hS<W5;_.QTQ)MFJU.hB(*gt^"7YVYb7_ZDT?sd4"_jY6k,UIaS[dn/#LH)E-Aut>bS:8kA^KI7)#>+b,jje]#dP(IY&+bKbM2)TT
%VpC4$?UeBshdC!*U0`8D>NRHrW6(kVEblGa0ne"F[.!GV)7m5H62C?h8!#ma(T->WP\;VfTp,hr&5JaQG_I`aD=8XPSa+b>SR1;j
%<GS?145f?MT4Ai`bsddRdMmsHc7c/dT<g3<(s64GBk,V?&82!;GWoGK=79<?.$!#?+p.+"iMMnan+K=1pF"D=cn!k]2e0_-a[VXq
%3@uKLE%MuAIk;h)6F>[^Q4:Ie2%Cbo@2um[nSd5-<I<$<Vgen?bZgqhN%`hc)_DRHh6$Rcg=.]UBX*)iUTQu_$tH;nII]+dRFIJ>
%Qt,p1+5`Gi$8K*f334orr%eDbnb/U"QX8Pj_WFq,IS2[PYBZk%d"/"S<K@W92C[#,HrqkGF\83YD@NQOT-b#dn7%HO]btmA9s+9k
%"?DNTpj]^T^g=D(n6G@hkcG%4&qMFng1]83"Z"CMmA&KS2#h4k5n9#MJd_P%'gf3h%k3nTH6Ap%NE79\$]!eFW6l>(cXLlJWjLYQ
%m9[7^p_-guO)>FHQ[>"E>)8DkL9g-=.!.t*L=5Q@L,M#_To76K'IptL2h-tG&_'gZ6OJZ`Ns+j85Y6@Tr7:SQ/a[JdQfX<R53`UV
%(_>1$6.5W><W.K<IJE=?*rQgGLCQ]GO&Dp1=ud78M3a547:W$\CD_)s&'rVo\kpJE1*Is5LVM_u/>Z:NP1/l2WIWjee5SW0)L$H5
%rg!`J%fL5]GD.UIg8IH*A9`tN+@"&$WrHf>8Muc5Z3B8gZ=&-AIc>[s!raX2ncc?Ik,5#EWrE#R4dLgVS-6>7$b/*fRIJ?CaQ0Y+
%636q?5c0]1)inM9__/-ge8.T/DtE$AJfK4>IDl^8q?$nOQ;o1q7D2"k@#@V8(<sIsTNF,QQF$Z#j&m!!@oe>%bbbB3kgnri6bh/5
%C=ZpU7'V3,*TN_"]EN3:VK3"\'LbV/<(R,[VK7"a%HC;HYMp2J'\qf/>?)hbbC]^9/X$DKo)ShOPKS^)$8\\g+_fB7"WYcaD]<XG
%V,Y5ko+=72WfGlUk-nKn1C\A?FOdJ6(^b0%\1'M[4rK1J'7s>OALE;Y7g*;$S>/BO.]ON-W\mK1!>')pCOoS^VeH^3[fjY3XT`2*
%&V:t$/sFb&'H4o%B*a=<Y*p(C6bs5RZ5pmGK?6BKRh3NDl2n6dLd4X7D'5.n%M6f$#DhJ8_2cKTecoUTQ@RW#[6SOl6?"`],<%Ll
%S"1]F2S3^)Uf&<nDp$A1,7mL=hP_PhMZ[?nIgHIN=lB0[/9B*n4N`l^+MFF225R)VA<mTYij.WB*Zh.V;DsMGNi]%@N!ob3&!']U
%&b*h'icn?2pYA[_l4A9//g.$j)O1DPe*&\9jYE2P"--n;$&Q/#e7h%-!PQko3L<e>g<GLGbt.JXXHq>g<%aA+j6H0@/:NmdE\adk
%_EpM=7Z;\!&UK[rro;.lFcdGI,'(1^GY@=W-^d;P4=\DU/5n77/uV8<k["I,TgrfsQ#ZcrRO4eaC`kV)f9Mb6?0OB#V9Z=uAWCmf
%<P^-M$J'SOkgs&E3D\k^o0`t3T(jc?'2kSn<\:P1_+T\s&f*;Obn'2Nctmo6%J);jrmjE\DRVQ>NjM!_$%35h+k3NGL7c/ockH2m
%-k<;Oj-oK;!dQ@Q-3~>
%AI9_PrivateDataEnd

%%EndDocument

 endTexFig
 669 4610 a Fg(Figure)36 b(16.7.)j Fi(T)-8 b(ree)30 b(represen)m
(tation)684 4719 y(of)g(the)g(p)s(oten)m(tials)e(in)j(Example)f(15.7)p
eop end
%%Page: 176 11
TeXDict begin 176 10 bop 0 91 a Fg(176)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)896
388 y Fk(j)31 b Fi(77)166 b Fk(j)31 b Fi(39)167 b Fk(j)31
b(\000)p Fi(25)96 b Fk(j)p 637 415 1426 4 v 820 483 a
Fi(0)30 b Fk(j)h Fi(77)166 b Fk(j)31 b Fi(39)167 b Fk(j)31
b Fi(105)121 b Fk(j)896 574 y(j)h Fi(*)f Fk(j)i Fi(*)e
Fk(j)290 b(j)30 b Fi(220)896 666 y Fk(j)289 b(j)h(j)g(j)p
637 692 V 657 761 a(\000)p Fi(147)30 b Fk(j)h Fi(150)120
b Fk(j)31 b Fi(186)121 b Fk(j)31 b Fi(122)121 b Fk(j)896
852 y(j)289 b(j)123 b Fi(*)e Fk(j)h Fi(*)g Fk(j)30 b
Fi(280)896 943 y Fk(j)289 b(j)h(j)g(j)p 637 970 V 896
1038 a(j)76 b Fi(170)f Fk(j)i Fi(120)e Fk(j)i Fi(210)e
Fk(j)880 1187 y Fg(T)-9 b(able)36 b(16.8.)j Fi(P)m(oten)m(tials)545
1297 y(for)29 b(the)h(feasible)f(solution)h(of)g(Example)g(15.7)183
1449 y(No)m(w)c(w)m(e)h(can)e(compute)f(the)h(v)-5 b(alues)26
b Ff(w)1532 1463 y Fe(ij)1622 1449 y Fi(=)f Ff(c)1758
1463 y Fe(ij)1834 1449 y Fi(+)12 b Ff(u)1969 1463 y Fe(i)2011
1449 y Fk(\000)g Ff(v)2138 1463 y Fe(j)2203 1449 y Fi(for)26
b(the)f(other)0 1559 y(\(non)m(basic\))43 b(p)s(ositions.)83
b(W)-8 b(e)45 b(put)f(them)g(in)h(T)-8 b(able)45 b(16.8)f(in)i(paren)m
(theses)0 1668 y(\(T)-8 b(able)38 b(16.9\).)67 b(Because)37
b(one)h(of)h Ff(w)1298 1682 y Fe(ij)1402 1668 y Fi(in)g(this)g(example)
g(is)g(negativ)m(e,)i(our)0 1778 y(tableau)d(is)j(not)e(optimal.)69
b(W)-8 b(e)40 b(could)f(sho)m(w)h(the)f(basic)h(solution)f(for)g(the)0
1887 y(primal)d(problem)g(b)m(y)h(replacing)e(eac)m(h)g(*)h(represen)m
(ting)e(a)i(c)m(hosen)f(p)s(osition)0 1997 y(with)30
b(the)f(v)-5 b(alue)30 b(assigned)f(to)h Ff(x)1126 2011
y Fe(ij)1221 1997 y Fi(at)g(the)f(time)h(of)g(that)f(c)m(hoice.)896
2155 y Fk(j)i Fi(77)166 b Fk(j)31 b Fi(39)167 b Fk(j)31
b(\000)p Fi(25)96 b Fk(j)p 637 2181 V 820 2250 a Fi(0)30
b Fk(j)h Fi(77)166 b Fk(j)31 b Fi(39)167 b Fk(j)31 b
Fi(105)121 b Fk(j)896 2341 y(j)h Fi(*)f Fk(j)i Fi(*)e
Fk(j)41 b Fi(\(130\))e Fk(j)30 b Fi(220)896 2432 y Fk(j)289
b(j)h(j)g(j)p 637 2459 V 657 2527 a(\000)p Fi(147)30
b Fk(j)h Fi(150)120 b Fk(j)31 b Fi(186)121 b Fk(j)31
b Fi(122)121 b Fk(j)896 2619 y(j)31 b Fi(\()p Fk(\000)p
Fi(74\))23 b Fk(j)123 b Fi(*)e Fk(j)h Fi(*)g Fk(j)30
b Fi(280)896 2710 y Fk(j)289 b(j)h(j)g(j)p 637 2737 V
896 2805 a(j)76 b Fi(170)f Fk(j)i Fi(120)e Fk(j)i Fi(210)e
Fk(j)713 2969 y Fg(T)-9 b(able)36 b(16.9.)j Fi(The)30
b(basic)g(solution)596 3078 y(for)f(the)h(dual)g(problem)f(to)h
(Example)g(15.7)183 3231 y(As)22 b(men)m(tioned)f(previously)-8
b(,)24 b(the)d(computed)e(v)-5 b(alues)22 b(of)f Ff(w)2178
3245 y Fe(ij)2265 3231 y Fi(corresp)s(ond)0 3340 y(to)32
b(the)f(en)m(tries)g(of)h(the)f(last)h(ro)m(w)h(of)f(the)f(tableau)f
(whic)m(h)j(w)m(e)f(ha)m(v)m(e)h(in)f(mind)0 3450 y(without)41
b(writing)h(it)g(do)m(wn,)j(except)c(for)g(the)h(last)f(en)m(try)h(in)h
(the)e(tableau)0 3559 y(whic)m(h)f(is)h(the)e(curren)m(t)g(v)-5
b(alue)40 b(of)f(the)h(ob)5 b(jectiv)m(e)39 b(function.)69
b(No)m(w)41 b(w)m(e)f(are)0 3669 y(ready)29 b(for)h(a)g(piv)m(ot)h
(step.)1096 3800 y Fj(Exercises)0 3931 y Fg(1{3.)86 b
Fi(Find)30 b(a)g(feasible)g(solution)f(for)h(eac)m(h)f(transp)s
(ortation)e(problem.)0 4083 y Fg(1.)p 632 4095 1436 4
v 632 4164 a Fk(j)290 b(j)f(j)h(j)f(j)632 4255 y(j)h(j)f(j)h(j)f(j)31
b Fi(35)632 4347 y Fk(j)290 b(j)f(j)h(j)f(j)p 632 4373
V 632 4442 a(j)h(j)f(j)h(j)f(j)632 4533 y(j)h(j)f(j)h(j)f(j)31
b Fi(20)632 4624 y Fk(j)290 b(j)f(j)h(j)f(j)p 632 4651
V 632 4719 a(j)99 b Fi(20)g Fk(j)g Fi(10)f Fk(j)i Fi(10)e
Fk(j)h Fi(15)f Fk(j)p eop end
%%Page: 177 12
TeXDict begin 177 11 bop 1933 91 a Fk(x)p Fh(16.)41 b(Phase)32
b(1)91 b Fg(177)0 311 y(2.)p 632 323 1436 4 v 632 392
a Fk(j)290 b(j)f(j)h(j)f(j)632 483 y(j)h(j)f(j)h(j)f(j)31
b Fi(35)632 574 y Fk(j)290 b(j)f(j)h(j)f(j)p 632 601
V 632 669 a(j)h(j)f(j)h(j)f(j)632 761 y(j)h(j)f(j)h(j)f(j)31
b Fi(9)632 852 y Fk(j)290 b(j)f(j)h(j)f(j)p 632 879 V
632 947 a(j)h(j)f(j)h(j)f(j)632 1038 y(j)h(j)f(j)h(j)f(j)31
b Fi(11)632 1130 y Fk(j)290 b(j)f(j)h(j)f(j)p 632 1156
V 632 1225 a(j)h(j)f(j)h(j)f(j)632 1316 y(j)h(j)f(j)h(j)f(j)31
b Fi(20)632 1407 y Fk(j)290 b(j)f(j)h(j)f(j)p 632 1434
V 632 1502 a(j)99 b Fi(40)g Fk(j)g Fi(10)f Fk(j)i Fi(10)e
Fk(j)h Fi(15)f Fk(j)0 1729 y Fg(3.)p 609 1742 1482 4
v 609 1810 a Fk(j)290 b(j)f(j)h(j)g(j)609 1901 y(j)g(j)f(j)h(j)g(j)30
b Fi(35)609 1993 y Fk(j)290 b(j)f(j)h(j)g(j)p 609 2019
V 609 2088 a(j)g(j)f(j)h(j)g(j)609 2179 y(j)g(j)f(j)h(j)g(j)30
b Fi(90)609 2270 y Fk(j)290 b(j)f(j)h(j)g(j)p 609 2297
V 609 2365 a(j)g(j)f(j)h(j)g(j)609 2457 y(j)g(j)f(j)h(j)g(j)30
b Fi(111)609 2548 y Fk(j)290 b(j)f(j)h(j)g(j)p 609 2574
V 609 2643 a(j)g(j)f(j)h(j)g(j)609 2734 y(j)g(j)f(j)h(j)g(j)30
b Fi(20)609 2826 y Fk(j)290 b(j)f(j)h(j)g(j)p 609 2852
V 609 2921 a(j)77 b Fi(140)e Fk(j)99 b Fi(91)f Fk(j)i
Fi(10)e Fk(j)h Fi(19)g Fk(j)0 3147 y Fg(4{7.)77 b Fi(Find)42
b(a)h(feasible)f(solution)g(and)g(the)g(corresp)s(onding)d(total)j
(trans-)0 3257 y(p)s(ortation)28 b(cost.)0 3420 y Fg(4.)p
51 3540 2598 4 v 51 3609 a Fk(j)j Fi(1)167 b Fk(j)31
b Fi(2)167 b Fk(j)31 b Fi(3)167 b Fk(j)31 b Fi(1)167
b Fk(j)31 b Fi(2)167 b Fk(j)30 b Fi(3)168 b Fk(j)30 b
Fi(1)167 b Fk(j)31 b Fi(2)167 b Fk(j)31 b Fi(3)167 b
Fk(j)51 3700 y(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)31
b Fi(10)51 3791 y Fk(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)p
51 3818 V 51 3886 a(j)31 b Fi(0)167 b Fk(j)31 b Fi(3)167
b Fk(j)31 b Fi(2)167 b Fk(j)31 b Fi(0)167 b Fk(j)31 b
Fi(1)167 b Fk(j)30 b Fi(2)168 b Fk(j)30 b Fi(1)167 b
Fk(j)31 b Fi(2)167 b Fk(j)31 b Fi(1)167 b Fk(j)51 3978
y(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)31 b Fi(20)51
4069 y Fk(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)p
51 4095 V 51 4164 a(j)31 b Fi(2)167 b Fk(j)31 b Fi(1)167
b Fk(j)31 b Fi(0)167 b Fk(j)31 b Fi(1)167 b Fk(j)31 b
Fi(2)167 b Fk(j)30 b Fi(1)168 b Fk(j)30 b Fi(2)167 b
Fk(j)31 b Fi(1)167 b Fk(j)31 b Fi(1)167 b Fk(j)51 4255
y(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)31 b Fi(12)51
4347 y Fk(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)p
51 4373 V 51 4442 a(j)31 b Fi(1)167 b Fk(j)31 b Fi(1)167
b Fk(j)31 b Fi(1)167 b Fk(j)31 b Fi(2)167 b Fk(j)31 b
Fi(2)167 b Fk(j)30 b Fi(2)168 b Fk(j)30 b Fi(2)167 b
Fk(j)31 b Fi(2)167 b Fk(j)31 b Fi(1)167 b Fk(j)51 4533
y(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)31 b Fi(8)51
4624 y Fk(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)p
51 4651 V 51 4719 a(j)31 b Fi(2)167 b Fk(j)31 b Fi(3)167
b Fk(j)31 b Fi(4)167 b Fk(j)99 b Fi(5)g Fk(j)g Fi(1)g
Fk(j)g Fi(2)g Fk(j)g Fi(3)f Fk(j)77 b Fi(14)e Fk(j)i
Fi(16)e Fk(j)p eop end
%%Page: 178 13
TeXDict begin 178 12 bop 0 91 a Fg(178)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)0
311 y Fg(5.)p 51 405 2598 4 v 51 474 a Fk(j)31 b Fi(1)167
b Fk(j)31 b Fi(2)167 b Fk(j)31 b Fi(3)167 b Fk(j)31 b
Fi(1)167 b Fk(j)31 b Fi(2)167 b Fk(j)30 b Fi(3)168 b
Fk(j)30 b Fi(1)167 b Fk(j)31 b Fi(2)167 b Fk(j)31 b Fi(3)167
b Fk(j)51 565 y(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)31
b Fi(15)51 656 y Fk(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)p
51 683 V 51 751 a(j)31 b Fi(0)167 b Fk(j)31 b Fi(3)167
b Fk(j)31 b Fi(2)167 b Fk(j)31 b Fi(0)167 b Fk(j)31 b
Fi(1)167 b Fk(j)30 b Fi(2)168 b Fk(j)30 b Fi(1)167 b
Fk(j)31 b Fi(2)167 b Fk(j)31 b Fi(1)167 b Fk(j)51 843
y(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)31 b Fi(15)51
934 y Fk(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)p
51 960 V 51 1029 a(j)31 b Fi(2)167 b Fk(j)31 b Fi(1)167
b Fk(j)31 b Fi(0)167 b Fk(j)31 b Fi(1)167 b Fk(j)31 b
Fi(2)167 b Fk(j)30 b Fi(1)168 b Fk(j)30 b Fi(2)167 b
Fk(j)31 b Fi(1)167 b Fk(j)31 b Fi(1)167 b Fk(j)51 1120
y(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)31 b Fi(12)51
1212 y Fk(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)p
51 1238 V 51 1307 a(j)31 b Fi(1)167 b Fk(j)31 b Fi(1)167
b Fk(j)31 b Fi(1)167 b Fk(j)31 b Fi(2)167 b Fk(j)31 b
Fi(2)167 b Fk(j)30 b Fi(2)168 b Fk(j)30 b Fi(2)167 b
Fk(j)31 b Fi(2)167 b Fk(j)31 b Fi(1)167 b Fk(j)51 1398
y(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)31 b Fi(8)51
1489 y Fk(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)p
51 1516 V 51 1584 a(j)31 b Fi(2)167 b Fk(j)31 b Fi(8)167
b Fk(j)31 b Fi(4)167 b Fk(j)76 b Fi(15)g Fk(j)g Fi(11)g
Fk(j)99 b Fi(2)g Fk(j)g Fi(3)f Fk(j)i Fi(4)e Fk(j)i Fi(1)e
Fk(j)0 1824 y Fg(6.)p 51 1919 V 51 1987 a Fk(j)31 b Fi(1)167
b Fk(j)31 b Fi(2)167 b Fk(j)31 b Fi(3)167 b Fk(j)31 b
Fi(1)167 b Fk(j)31 b Fi(2)167 b Fk(j)30 b Fi(3)168 b
Fk(j)30 b Fi(1)167 b Fk(j)31 b Fi(2)167 b Fk(j)31 b Fi(3)167
b Fk(j)51 2079 y(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)31
b Fi(15)51 2170 y Fk(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)p
51 2197 V 51 2265 a(j)31 b Fi(0)167 b Fk(j)31 b Fi(3)167
b Fk(j)31 b Fi(2)167 b Fk(j)31 b Fi(0)167 b Fk(j)31 b
Fi(1)167 b Fk(j)30 b Fi(2)168 b Fk(j)30 b Fi(1)167 b
Fk(j)31 b Fi(2)167 b Fk(j)31 b Fi(1)167 b Fk(j)51 2356
y(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)31 b Fi(5)51
2448 y Fk(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)p
51 2474 V 51 2543 a(j)31 b Fi(2)167 b Fk(j)31 b Fi(1)167
b Fk(j)31 b Fi(0)167 b Fk(j)31 b Fi(1)167 b Fk(j)31 b
Fi(2)167 b Fk(j)30 b Fi(1)168 b Fk(j)30 b Fi(2)167 b
Fk(j)31 b Fi(1)167 b Fk(j)31 b Fi(1)167 b Fk(j)51 2634
y(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)31 b Fi(12)51
2725 y Fk(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)p
51 2752 V 51 2820 a(j)31 b Fi(1)167 b Fk(j)31 b Fi(1)167
b Fk(j)31 b Fi(1)167 b Fk(j)31 b Fi(2)167 b Fk(j)31 b
Fi(2)167 b Fk(j)30 b Fi(2)168 b Fk(j)30 b Fi(2)167 b
Fk(j)31 b Fi(2)167 b Fk(j)31 b Fi(1)167 b Fk(j)51 2912
y(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)31 b Fi(18)51
3003 y Fk(j)244 b(j)g(j)g(j)g(j)g(j)g(j)f(j)h(j)g(j)p
51 3029 V 51 3098 a(j)31 b Fi(12)121 b Fk(j)31 b Fi(8)167
b Fk(j)31 b Fi(14)121 b Fk(j)99 b Fi(5)g Fk(j)g Fi(1)g
Fk(j)g Fi(2)g Fk(j)g Fi(3)f Fk(j)i Fi(4)e Fk(j)i Fi(1)e
Fk(j)0 3338 y Fg(7.)40 b Fi(Example)31 b(2.4.)p 318 3450
2065 4 v 318 3519 a Fk(j)f Fi(55)167 b Fk(j)31 b Fi(30)167
b Fk(j)30 b Fi(40)167 b Fk(j)31 b Fi(50)167 b Fk(j)31
b Fi(40)166 b Fk(j)31 b Fi(0)213 b Fk(j)318 3610 y(j)289
b(j)h(j)f(j)h(j)f(j)h(j)31 b Fi(50)318 3702 y Fk(j)289
b(j)h(j)f(j)h(j)f(j)h(j)p 318 3728 V 318 3796 a(j)30
b Fi(35)167 b Fk(j)31 b Fi(30)167 b Fk(j)30 b Fi(100)121
b Fk(j)31 b Fi(45)167 b Fk(j)31 b Fi(60)166 b Fk(j)31
b Fi(0)213 b Fk(j)318 3888 y(j)289 b(j)h(j)f(j)h(j)f(j)h(j)31
b Fi(30)318 3979 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p
318 4006 V 318 4074 a(j)30 b Fi(40)167 b Fk(j)31 b Fi(60)167
b Fk(j)30 b Fi(95)167 b Fk(j)31 b Fi(35)167 b Fk(j)31
b Fi(30)166 b Fk(j)31 b Fi(0)213 b Fk(j)318 4165 y(j)289
b(j)h(j)f(j)h(j)f(j)h(j)31 b Fi(50)318 4257 y Fk(j)289
b(j)h(j)f(j)h(j)f(j)h(j)p 318 4283 V 318 4352 a(j)99
b Fi(25)f Fk(j)h Fi(10)g Fk(j)g Fi(20)f Fk(j)i Fi(30)e
Fk(j)h Fi(15)f Fk(j)i Fi(30)e Fk(j)0 4592 y Fg(8.)38
b Fi(Pro)m(v)m(e)24 b(that)f(an)m(y)g(feasible)h(solution)f(deriv)m(ed)
g(b)m(y)h(our)f(metho)s(d)f(is)i(a)g(v)m(ertex)0 4701
y(of)30 b(the)f(feasible)h(region.)p eop end
%%Page: 179 14
TeXDict begin 179 13 bop 1933 91 a Fk(x)p Fh(17.)41 b(Phase)32
b(2)91 b Fg(179)0 311 y Fk(x)p Fj(17.)56 b(Phase)42 b(2)0
444 y Fi(Supp)s(ose)21 b(that)i(after)f(computing)f(p)s(oten)m(tials,)j
(some)f Ff(w)1925 458 y Fe(ij)2013 444 y Fi(is)h(negativ)m(e.)38
b(Then)0 554 y(according)32 b(to)i(the)g(simplex)h(metho)s(d,)f(Phase)g
(2,)h(w)m(e)g(ha)m(v)m(e)g(to)f(exclude)f Ff(w)2635 568
y Fe(ij)0 663 y Fi(from)28 b(the)g(basis)g(and)g(include)g(another)f(v)
-5 b(ariable)28 b(instead.)39 b(In)28 b(terms)g(of)g(the)0
773 y(ro)m(w)33 b(problem,)g(w)m(e)h(m)m(ust)f(include)f
Ff(x)1298 787 y Fe(ij)1396 773 y Fi(in)m(to)h(the)f(basis)h(instead)f
(of)g(another)0 882 y(v)-5 b(ariable.)62 b(When)36 b(w)m(e)i(do)f
(this,)i(the)e(ob)5 b(jectiv)m(e)36 b(function)g(should)h(impro)m(v)m
(e)0 992 y(or)h(at)g(least)f(k)m(eep)h(the)f(same)h(v)-5
b(alue.)65 b(Graphically)-8 b(,)40 b(this)e(c)m(hange)f(of)h(basis)0
1102 y(corresp)s(onds)23 b(to)i(adding)g(a)g(new)g(edge)g(to)g(the)g
(tree)f(and)h(remo)m(ving)h(one)e(edge)0 1211 y(from)i(the)g(resulting)
g(lo)s(op)g(to)g(form)g(a)h(new)f(tree.)38 b(W)-8 b(e)27
b(will)h(use)f(Example)f(2.4)0 1321 y(to)31 b(illustrate)g(this)h(pro)s
(cess.)44 b(W)-8 b(e)32 b(b)s(egin)f(b)m(y)h(using)g(the)f(north)m(w)m
(est)f(metho)s(d)0 1430 y(to)g(\014nd)f(a)h(basic)g(feasible)g
(solution)f(\(T)-8 b(able)30 b(17.1\).)p 318 1544 2065
4 v 318 1613 a Fk(j)g Fi(55)167 b Fk(j)31 b Fi(30)167
b Fk(j)30 b Fi(40)167 b Fk(j)31 b Fi(50)167 b Fk(j)31
b Fi(40)166 b Fk(j)31 b Fi(0)213 b Fk(j)318 1704 y(j)99
b Fi(25)f Fk(j)h Fi(10)g Fk(j)g Fi(15)f Fk(j)290 b(j)f(j)h(j)31
b Fi(50)318 1795 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p
318 1822 V 318 1890 a(j)30 b Fi(35)167 b Fk(j)31 b Fi(30)167
b Fk(j)30 b Fi(100)121 b Fk(j)31 b Fi(45)167 b Fk(j)31
b Fi(60)166 b Fk(j)31 b Fi(0)213 b Fk(j)318 1982 y(j)289
b(j)h(j)122 b Fi(5)f Fk(j)100 b Fi(25)e Fk(j)289 b(j)h(j)31
b Fi(30)318 2073 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p
318 2100 V 318 2168 a(j)30 b Fi(40)167 b Fk(j)31 b Fi(60)167
b Fk(j)30 b Fi(95)167 b Fk(j)31 b Fi(35)167 b Fk(j)31
b Fi(30)166 b Fk(j)31 b Fi(0)213 b Fk(j)318 2259 y(j)289
b(j)h(j)f(j)122 b Fi(5)g Fk(j)99 b Fi(15)f Fk(j)i Fi(30)e
Fk(j)31 b Fi(50)318 2351 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p
318 2377 V 318 2446 a(j)99 b Fi(25)f Fk(j)h Fi(10)g Fk(j)g
Fi(20)f Fk(j)i Fi(30)e Fk(j)h Fi(15)f Fk(j)i Fi(30)e
Fk(j)333 2634 y Fg(T)-9 b(able)36 b(17.1.)k Fi(First)30
b(feasible)f(solution)h(of)g(Example)g(2.4)183 2767 y(The)f(corresp)s
(onding)e(transp)s(ortation)f(cost)k(is)g(25)20 b Fk(\001)g
Fi(55)g(+)g(10)f Fk(\001)i Fi(30)e(+)h(15)g Fk(\001)0
2877 y Fi(40)11 b(+)g(5)g Fk(\001)g Fi(100)g(+)g(25)g
Fk(\001)g Fi(45)g(+)g(5)g Fk(\001)g Fi(35)g(+)g(15)g
Fk(\001)g Fi(30)g(+)g(30)g Fk(\001)g Fi(0)27 b(=)e(1375)11
b(+)g(300)g(+)g(600)g(+)g(500)g(+)0 2986 y(1125)j(+)g(175)g(+)g(450)g
(+)g(0)25 b(=)g(4525.)39 b(W)-8 b(e)27 b(will)i(see)d(that)g(ignoring)h
(the)f(ob)5 b(jectiv)m(e)0 3096 y(function)34 b(will)j(result)e(in)g
(this)h(case)e(in)i(man)m(y)g(piv)m(ot)g(steps)f(on)g(the)f(w)m(a)m(y)j
(to)0 3205 y(an)29 b(optimal)g(table.)39 b(Usually)-8
b(,)32 b(it)d(pa)m(ys)h(to)f(sp)s(end)f(some)h(time)g(at)f(Phase)h(1)g
(of)0 3315 y(solving)36 b(a)g(transp)s(ortation)c(problem)j(so)h(w)m(e)
g(need)f(to)g(sp)s(end)g(less)h(time)g(at)0 3425 y(Phase)30
b(2.)40 b(As)31 b(b)s(efore,)e(w)m(e)h(pro)s(ceed)e(to)h(\014nd)h(the)f
(p)s(oten)m(tials)g(\(T)-8 b(able)30 b(17.2\).)447 3603
y Fk(j)h Fi(55)166 b Fk(j)31 b Fi(30)167 b Fk(j)31 b
Fi(40)167 b Fk(j)30 b(\000)p Fi(15)96 b Fk(j)31 b(\000)p
Fi(20)96 b Fk(j)31 b(\000)p Fi(50)95 b Fk(j)p 188 3630
2324 4 v 371 3698 a Fi(0)30 b Fk(j)h Fi(55)166 b Fk(j)31
b Fi(30)167 b Fk(j)31 b Fi(40)167 b Fk(j)30 b Fi(50)167
b Fk(j)31 b Fi(40)167 b Fk(j)31 b Fi(0)212 b Fk(j)447
3790 y(j)99 b Fi(25)f Fk(j)i Fi(10)e Fk(j)h Fi(15)g Fk(j)289
b(j)h(j)f(j)31 b Fi(50)447 3881 y Fk(j)289 b(j)h(j)g(j)f(j)h(j)f(j)p
188 3908 V 254 3976 a(\000)p Fi(60)30 b Fk(j)h Fi(35)166
b Fk(j)31 b Fi(30)167 b Fk(j)31 b Fi(100)121 b Fk(j)30
b Fi(45)167 b Fk(j)31 b Fi(60)167 b Fk(j)31 b Fi(0)212
b Fk(j)447 4067 y(j)289 b(j)h(j)122 b Fi(5)g Fk(j)99
b Fi(25)f Fk(j)290 b(j)f(j)31 b Fi(30)447 4159 y Fk(j)289
b(j)h(j)g(j)f(j)h(j)f(j)p 188 4185 V 254 4254 a(\000)p
Fi(50)30 b Fk(j)h Fi(40)166 b Fk(j)31 b Fi(60)167 b Fk(j)31
b Fi(95)167 b Fk(j)30 b Fi(35)167 b Fk(j)31 b Fi(30)167
b Fk(j)31 b Fi(0)212 b Fk(j)447 4345 y(j)289 b(j)h(j)g(j)122
b Fi(5)f Fk(j)99 b Fi(15)g Fk(j)g Fi(30)f Fk(j)31 b Fi(50)447
4436 y Fk(j)289 b(j)h(j)g(j)f(j)h(j)f(j)p 188 4463 V
447 4531 a(j)99 b Fi(25)f Fk(j)i Fi(10)e Fk(j)h Fi(20)g
Fk(j)g Fi(30)f Fk(j)h Fi(15)g Fk(j)g Fi(30)f Fk(j)588
4719 y Fg(T)-9 b(able)36 b(17.2.)k Fi(P)m(oten)m(tials)30
b(for)f(T)-8 b(able)31 b(17.1)p eop end
%%Page: 180 15
TeXDict begin 180 14 bop 0 91 a Fg(180)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)183
311 y Fi(W)d(e)34 b(to)s(ok)g(the)g(\014rst)g(p)s(oten)m(tial)f(0)i
(for)f(the)g(\014rst)g(ro)m(w)h(arbitrarily)-8 b(.)54
b(The)0 420 y(transp)s(ortation)22 b(cost)i(can)h(b)s(e)g(also)h
(computed)d(using)j(p)s(oten)m(tials)e(instead)g(of)0
530 y(the)g(\015o)m(w:)38 b(55)9 b Fk(\001)g Fi(25)g(+)g(30)g
Fk(\001)g Fi(10)g(+)g(40)g Fk(\001)g Fi(20)g Fk(\000)g
Fi(15)g Fk(\001)g Fi(30)g Fk(\000)g Fi(20)g Fk(\001)g
Fi(15)g Fk(\000)g Fi(50)g Fk(\001)g Fi(30)g Fk(\000)g
Fi(\(0)g Fk(\001)g Fi(50)g Fk(\000)g Fi(60)g Fk(\001)0
639 y Fi(30)g Fk(\000)g Fi(50)g Fk(\001)g Fi(50\))24
b(=)h(4525)p Ff(:)f Fi(As)i(in)f(the)e(previous)h(example,)i(the)e
(feasible)g(solution)0 749 y(determines)k(a)j(tree)d(in)j(the)e
(graphical)g(represen)m(tation)e(\(Figure)i(17.3\).)30
-148 y
 18945146 16103345 1315635 16050749 36377313 53020098 startTexFig
 30 -148 a
%%BeginDocument: Fig.17.3.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(r) 6.0
%%For: (Christopher Byrne) (Penn State)
%%Title: (ch6fig4.eps)
%%CreationDate: (11/8/18) (19:43)
%%BoundingBox: 20 244 553 806
%%HiResBoundingBox: 20.8125 244.5552 552.8125 805.4043
%%DocumentProcessColors: Black
%%DocumentFonts: CMR
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set)
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 62 -44 733 238
%AI3_DocumentPreview: Header
%AI5_ArtSize: 504 324
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 300
%AI5_NumLayers: 1
%AI5_OpenToView: -306 828 -1.5 790 529 58 1 1 3 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: CMR
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _CMR CMR
[/_CMR/CMR 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0D0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A
4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777776757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404050505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
1 Ap
0 R
0 G
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
459.624 361.5 m
459.7474 361.5423 L
153.0009 405.0001 L
152.8776 404.9578 L
459.624 361.5 L
s
0 Ap
300 Ar
2 w
308.3125 419.625 m
S
1 Ap
800 Ar
1 w
470.3853 428.4284 m
469.8793 428.439 L
145.4977 399.0001 L
146.0036 398.9895 L
470.3853 428.4284 L
s
0 To
1 0 0 1 20.8125 794.125 0 Tp
TP
0 Tr
0 O
0 g
/_CMR 12 Tf
0 Ts
100 Tz
0 Tt
1 TA
%_ 0 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 0 2 2 3 Th
0 Tq
14.5 0 Tl
0 Tc
0 Tw
(\r) TX
TO
0 To
1 0 0 1 119.0625 398.125 0 Tp
TP
0 Tr
1 g
(\r) TX
TO
0 To
1 0 0 1 116.8125 300.625 0 Tp
TP
0 Tr
0 g
(\r) TX
TO
0 R
0 G
492.7489 250.5064 m
492.5829 250.5929 L
145.4969 320.9999 L
145.6628 320.9134 L
492.7489 250.5064 L
s
455.9212 371.4217 m
455.8785 371.479 L
179.7038 312.5783 L
179.7465 312.521 L
455.9212 371.4217 L
s
479.6179 413.3963 m
479.5432 413.4694 L
151.5032 488.9988 L
151.5778 488.9257 L
479.6179 413.3963 L
s
500.9996 544.3875 m
501.2379 544.4825 L
127.5001 472.5012 L
127.2617 472.4063 L
500.9996 544.3875 L
s
u
0 To
1 0 0 1 493.0625 317.5552 0 Tp
TP
-20.3423 0 Td
0 Tr
0 O
1 g
(Altoona) Tx
(\r) TX
17.0068 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
540.3126 299.0552 m
546.9395 299.0552 552.3125 304.4279 552.3125 311.0553 C
552.3125 320.0551 L
552.3125 326.6824 546.9395 332.0552 540.3126 332.0552 C
445.8124 332.0552 L
439.1855 332.0552 433.8125 326.6824 433.8125 320.0551 C
433.8125 311.0553 L
433.8125 304.4279 439.1855 299.0552 445.8124 299.0552 C
540.3126 299.0552 L
b
U
u
0 To
1 0 0 1 493.0625 372.5552 0 Tp
TP
-36.0102 0 Td
0 Tr
(State College) Tx
(\r) TX
32.6748 -14.5 Td
(1) Tx
(\r) TX 
TO
1 R
0 G
540.3126 354.0552 m
546.9395 354.0552 552.3125 359.4279 552.3125 366.0553 C
552.3125 375.0551 L
552.3125 381.6814 546.9395 387.0552 540.3126 387.0552 C
445.8124 387.0552 L
439.1857 387.0552 433.8125 381.6806 433.8125 375.0551 C
433.8125 366.0553 L
433.8125 359.4276 439.1857 354.0552 445.8124 354.0552 C
540.3126 354.0552 L
b
U
u
0 To
1 0 0 1 493.0625 263.5552 0 Tp
TP
-27.9946 0 Td
0 Tr
(Harrisburg) Tx
(\r) TX
24.6592 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
540.3126 245.0552 m
546.9395 245.0552 552.3125 250.4279 552.3125 257.0553 C
552.3125 266.0551 L
552.3125 272.6824 546.9395 278.0552 540.3126 278.0552 C
445.8124 278.0552 L
439.1855 278.0552 433.8125 272.6824 433.8125 266.0551 C
433.8125 257.0553 L
433.8125 250.4279 439.1855 245.0552 445.8124 245.0552 C
540.3126 245.0552 L
b
U
u
0 To
1 0 0 1 492.5 482 0 Tp
TP
-20.3423 0 Td
0 Tr
(Altoona) Tx
(\r) TX
17.0068 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
539.7501 463.5 m
546.377 463.5 551.75 468.8728 551.75 475.5001 C
551.75 484.4999 L
551.75 491.1272 546.377 496.5 539.7501 496.5 C
445.2499 496.5 L
438.623 496.5 433.25 491.1272 433.25 484.4999 C
433.25 475.5001 L
433.25 468.8728 438.623 463.5 445.2499 463.5 C
539.7501 463.5 L
b
U
u
0 To
1 0 0 1 492.5 536 0 Tp
TP
-36.0102 0 Td
0 Tr
(State College) Tx
(\r) TX
32.6748 -14.5 Td
(1) Tx
(\r) TX 
TO
1 R
0 G
539.7501 517.5 m
546.377 517.5 551.75 522.8728 551.75 529.5001 C
551.75 538.4999 L
551.75 545.1262 546.377 550.5 539.7501 550.5 C
445.2499 550.5 L
438.6232 550.5 433.25 545.1254 433.25 538.4999 C
433.25 529.5001 L
433.25 522.8724 438.6232 517.5 445.2499 517.5 C
539.7501 517.5 L
b
U
u
0 To
1 0 0 1 492.5 427 0 Tp
TP
-27.9946 0 Td
0 Tr
(Harrisburg) Tx
(\r) TX
24.6592 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
539.7501 408.5 m
546.377 408.5 551.75 413.8728 551.75 420.5001 C
551.75 429.4999 L
551.75 436.1272 546.377 441.5 539.7501 441.5 C
445.2499 441.5 L
438.623 441.5 433.25 436.1272 433.25 429.4999 C
433.25 420.5001 L
433.25 413.8728 438.623 408.5 445.2499 408.5 C
539.7501 408.5 L
b
U
0 g
300 Ar
434.422 482.382 m
434.422 482.9602 L
177.6413 482.9602 L
177.6413 482.382 L
434.422 482.382 L
f
433.6404 312.8984 m
433.6404 313.4766 L
176.8596 313.4766 L
176.8596 312.8984 L
433.6404 312.8984 L
f
u
0 To
1 0 0 1 117.75 483.3228 0 Tp
TP
-21.0073 0 Td
0 Tr
1 g
800 Ar
(Bedford) Tx
(\r) TX
17.6719 -14.5 Td
(0) Tx
(\r) TX 
TO
0 R
0 G
165.0001 464.8227 m
171.627 464.8227 177 470.1955 177 476.8229 C
177 485.8226 L
177 492.45 171.627 497.8227 165.0001 497.8227 C
70.4999 497.8227 L
63.873 497.8227 58.5 492.45 58.5 485.8226 C
58.5 476.8229 L
58.5 470.1955 63.873 464.8227 70.4999 464.8227 C
165.0001 464.8227 L
b
U
u
0 To
1 0 0 1 120.0625 315.6177 0 Tp
TP
-24.0073 0 Td
0 Tr
(Scranton) Tx
(\r) TX
20.6719 -14.5 Td
(0) Tx
(\r) TX 
TO
0 R
0 G
165.3126 297.1177 m
171.9395 297.1177 177.3125 302.4904 177.3125 309.1178 C
177.3125 318.1176 L
177.3125 324.7449 171.9395 330.1177 165.3126 330.1177 C
70.8124 330.1177 L
64.1855 330.1177 58.8125 324.7449 58.8125 318.1176 C
58.8125 309.1178 L
58.8125 302.4904 64.1855 297.1177 70.8124 297.1177 C
165.3126 297.1177 L
b
U
u
0 To
1 0 0 1 119.0625 403.125 0 Tp
TP
-21.0073 0 Td
0 Tr
(Bedford) Tx
(\r) TX
17.6719 -14.5 Td
(0) Tx
(\r) TX 
TO
0 R
0 G
166.3126 384.625 m
172.9395 384.625 178.3125 389.9978 178.3125 396.6251 C
178.3125 405.6249 L
178.3125 412.2522 172.9395 417.625 166.3126 417.625 C
71.8124 417.625 L
65.1855 417.625 59.8125 412.2522 59.8125 405.6249 C
59.8125 396.6251 L
59.8125 389.9978 65.1855 384.625 71.8124 384.625 C
166.3126 384.625 L
b
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument

 endTexFig
 676 2246 a Fg(Figure)36 b(17.3.)j Fi(T)-8 b(ree)30 b(for)f(T)-8
b(able)31 b(17.1)183 2382 y(Next)38 b(w)m(e)g(compute)f(the)g(v)-5
b(alues)38 b(for)f(the)h(dual)g(slac)m(k)g(v)-5 b(ariables)38
b(\(dis-)0 2492 y(crepancies\))31 b Ff(w)541 2506 y Fe(ij)605
2492 y Fi(.)50 b(In)33 b(tableau)f(form,)i(eac)m(h)e(non)m(basic)g
Ff(w)2019 2506 y Fe(ij)2118 2492 y Fi(app)s(ears)f(at)h(the)0
2602 y(left)39 b(margin)g(with)h(a)f(basic)g Ff(x)1081
2616 y Fe(ij)1185 2602 y Fi(at)g(the)g(righ)m(t)g(margin,)j(and)d(its)h
(v)-5 b(alue)39 b(at)0 2711 y(the)d(basic)g(solution)g(is)i(0.)60
b(The)36 b(basic)h Ff(w)1476 2725 y Fe(ij)1577 2711 y
Fi(corresp)s(onds)d(to)i(non)m(basic)g Ff(x)2635 2725
y Fe(ij)0 2821 y Fi(and)k(app)s(ears)f(at)h(the)g(b)s(ottom)e(of)j(the)
f(tableau,)i(so)e(their)g(v)-5 b(alues)41 b(b)s(elong)0
2930 y(to)d(the)f(last)h(ro)m(w.)64 b(Discrepancies)36
b Ff(w)1341 2944 y Fe(ij)1445 2930 y Fi(are)h(determined)f(b)m(y)j(the)
e(selected)0 3040 y(p)s(ositions)f(in)i(T)-8 b(able)38
b(17.1.)62 b(Recall)37 b(that)g(the)f(discrepancies)g(are)g(zeros)h(at)
0 3150 y(the)d(selected)g(p)s(ositions)g(and)h(are)f(not)h(written)f
(there)g(but)g(are)h(written)f(in)0 3259 y(paren)m(theses)j(elsewhere.)
68 b(In)40 b(other)e(w)m(ords,)43 b(the)c(discrepancies,)h(lik)m(e)h
(the)0 3369 y(\015o)m(w,)31 b(are)e(determined)f(b)m(y)j(the)e(tree)g
(\(see)g(Figure)h(17.3\).)462 3575 y Fk(j)h Fi(55)167
b Fk(j)30 b Fi(30)167 b Fk(j)31 b Fi(40)167 b Fk(j)31
b Fi(-15)136 b Fk(j)31 b Fi(-20)137 b Fk(j)31 b Fi(-50)136
b Fk(j)p 203 3602 2294 4 v 386 3670 a Fi(0)30 b Fk(j)h
Fi(55)167 b Fk(j)30 b Fi(30)167 b Fk(j)31 b Fi(40)167
b Fk(j)31 b Fi(50)166 b Fk(j)31 b Fi(40)167 b Fk(j)31
b Fi(0)212 b Fk(j)462 3762 y(j)115 b Fi(25)83 b Fk(j)114
b Fi(10)83 b Fk(j)100 b Fi(15)e Fk(j)79 b Fi(\(65\))46
b Fk(j)79 b Fi(\(60\))47 b Fk(j)64 b Fi(\(50\))d Fk(j)462
3853 y(j)290 b(j)f(j)h(j)f(j)h(j)f(j)p 203 3880 V 310
3948 a Fi(-60)30 b Fk(j)h Fi(35)167 b Fk(j)30 b Fi(30)167
b Fk(j)31 b Fi(100)121 b Fk(j)31 b Fi(45)166 b Fk(j)31
b Fi(60)167 b Fk(j)31 b Fi(0)212 b Fk(j)462 4039 y(j)64
b Fi(\(-80\))32 b Fk(j)63 b Fi(\(-60\))32 b Fk(j)138
b Fi(5)106 b Fk(j)114 b Fi(25)83 b Fk(j)c Fi(\(20\))47
b Fk(j)64 b Fi(\(-10\))31 b Fk(j)g Fi(30)462 4131 y Fk(j)290
b(j)f(j)h(j)f(j)h(j)f(j)p 203 4157 V 310 4226 a Fi(-50)30
b Fk(j)h Fi(40)167 b Fk(j)30 b Fi(60)167 b Fk(j)31 b
Fi(95)167 b Fk(j)31 b Fi(35)166 b Fk(j)31 b Fi(30)167
b Fk(j)31 b Fi(0)212 b Fk(j)462 4317 y(j)64 b Fi(\(-65\))32
b Fk(j)63 b Fi(\(-20\))32 b Fk(j)102 b Fi(\(5\))70 b
Fk(j)137 b Fi(5)106 b Fk(j)115 b Fi(15)83 b Fk(j)114
b Fi(30)83 b Fk(j)31 b Fi(50)462 4408 y Fk(j)290 b(j)f(j)h(j)f(j)h(j)f
(j)p 203 4435 V 462 4503 a(j)115 b Fi(25)83 b Fk(j)114
b Fi(10)83 b Fk(j)115 b Fi(20)83 b Fk(j)114 b Fi(30)83
b Fk(j)115 b Fi(15)83 b Fk(j)114 b Fi(30)83 b Fk(j)438
4719 y Fg(T)-9 b(able)36 b(17.4.)j Fi(Discrepancies)29
b Ff(w)1614 4733 y Fe(ij)1709 4719 y Fi(for)h(T)-8 b(able)30
b(17.2)p eop end
%%Page: 181 16
TeXDict begin 181 15 bop 1933 91 a Fk(x)p Fh(17.)41 b(Phase)32
b(2)91 b Fg(181)183 311 y Fi(Some)20 b(of)g(the)g(basic)g
Ff(w)943 325 y Fe(ij)1028 311 y Fi(are)g(negativ)m(e,)i(so)f(the)e
(solution)h(is)h(not)f(optimal.)0 420 y(W)-8 b(e)21 b(m)m(ust)h(pic)m
(k)g(a)f(negativ)m(e)g(basic)g Ff(w)1254 434 y Fe(ij)1340
420 y Fi(and)g(switc)m(h)g(it)g(with)h(a)f(non)m(basic)g
Ff(w)2561 434 y Fe(i)2587 416 y Fb(0)2611 434 y Fe(j)2645
416 y Fb(0)2675 420 y Fi(,)0 530 y(whic)m(h)i(is)h(accomplished)e(in)h
(the)f(table)h(b)m(y)g(switc)m(hing)g(a)g(non)m(basic)f
Ff(x)2365 544 y Fe(ij)2453 530 y Fi(with)h(a)0 639 y(basic)h
Ff(x)275 653 y Fe(i)301 635 y Fb(0)326 653 y Fe(j)360
635 y Fb(0)389 639 y Fi(.)40 b(W)-8 b(e)24 b(pic)m(k)i
Ff(w)858 653 y Fc(21)961 639 y Fi(=)f Fk(\000)p Fi(80)g(and)f(decide)g
(to)g(switc)m(h)h Ff(x)2126 653 y Fc(21)2228 639 y Fi(with)g(a)g(basic)
0 749 y(v)-5 b(ariable.)37 b(In)21 b(graphical)g(terms,)h(w)m(e)g(are)e
(adding)h(an)g(edge)f(from)h(w)m(arehouse)e(2)0 858 y(to)25
b(store)g(1,)h(whic)m(h)g(destro)m(ys)f(the)g(tree)f(structure)f(of)j
(the)e(graph)h(b)m(y)h(creating)0 968 y(the)j(lo)s(op)h(\(2)p
Ff(;)15 b Fi(1\))p Ff(;)g Fi(\(2)p Ff(;)g Fi(3\))p Ff(;)g
Fi(\(1)p Ff(;)g Fi(3\))p Ff(;)g Fi(\(1)p Ff(;)g Fi(1\))28
b(\(Figure)g(17.5\).)171 -88 y
 16918026 17997903 1315635 16050749 36377313 53020098 startTexFig
 171 -88 a
%%BeginDocument: Fig.17.5.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(r) 6.0
%%For: (Christopher Byrne) (Penn State)
%%Title: (ch6fig5.eps)
%%CreationDate: (11/9/18) (1:56)
%%BoundingBox: 20 244 553 806
%%HiResBoundingBox: 20.8125 244.5552 552.8125 805.4043
%%DocumentProcessColors: Black
%%DocumentFonts: CMR
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set)
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 62 -44 733 238
%AI3_DocumentPreview: Header
%AI5_ArtSize: 504 324
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 300
%AI5_NumLayers: 1
%AI5_OpenToView: -126 708 -1 790 529 58 1 1 3 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: CMR
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _CMR CMR
[/_CMR/CMR 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0D0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A
4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777776757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404050505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
1 Ap
0 R
0 G
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
459.624 361.5 m
459.7474 361.5423 L
153.0009 405.0001 L
152.8776 404.9578 L
459.624 361.5 L
s
0 Ap
300 Ar
2 w
308.3125 419.625 m
S
1 Ap
800 Ar
1 w
470.291 429.4239 m
470.4147 429.4356 470.282 429.4307 470.1578 429.4333 c
470.0294 429.436 469.9874 427.4365 469.859 427.4392 c
469.8587 427.4392 469.9035 429.4387 469.9031 429.4387 c
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.8793 427.439 l
469.8793 429.439 l
469.789 429.4349 l
465.7888 429.0719 465.9696 427.08 461.9694 426.717 c
458.0037 426.3571 457.8229 428.3489 453.8572 427.989 c
449.8616 427.6264 450.0424 425.6345 446.0469 425.272 c
442.0843 424.9123 441.9035 426.9041 437.941 426.5445 c
433.9454 426.1819 434.1261 424.1901 430.1305 423.8275 c
426.1661 423.4677 425.9853 425.4595 422.0208 425.0997 c
418.0196 424.7366 418.2003 422.7448 414.199 422.3816 c
410.2265 422.0211 410.0457 424.0129 406.0731 423.6524 c
402.0592 423.2882 402.24 421.2963 398.226 420.932 c
394.2376 420.5701 394.0569 422.5619 390.0685 422.1999 c
386.1053 421.8403 386.2861 419.8484 382.3229 419.4888 c
378.3113 419.1247 378.1306 421.1165 374.119 420.7525 c
370.1283 420.3903 370.309 418.3984 366.3183 418.0363 c
362.3474 417.6759 362.1667 419.6677 358.1958 419.3074 c
354.2437 418.9487 354.4245 416.9568 350.4724 416.5982 c
346.4597 416.2341 346.279 418.2258 342.2664 417.8617 c
338.2657 417.4986 338.4464 415.5068 334.4457 415.1437 c
330.4547 414.7815 330.274 416.7733 326.2829 416.4111 c
322.2991 416.0496 322.4799 414.0578 318.4961 413.6962 c
314.5165 413.3351 314.3358 415.3269 310.3562 414.9657 c
306.3773 414.6046 306.5581 412.6128 302.5792 412.2517 c
298.597 411.8903 298.4162 413.8821 294.434 413.5207 c
290.4433 413.1586 290.6241 411.1667 286.6334 410.8046 c
282.6284 410.4411 282.4476 412.4329 278.4426 412.0695 c
274.5104 411.7126 274.6912 409.7208 270.7591 409.3639 c
266.8044 409.005 266.6236 410.9968 262.6689 410.6379 c
258.682 410.2761 258.8628 408.2843 254.8759 407.9225 c
250.9476 407.566 250.7669 409.5578 246.8385 409.2013 c
242.8611 408.8403 243.0419 406.8485 239.0645 406.4875 c
235.1304 406.1305 234.9496 408.1223 231.0155 407.7653 c
227.1186 407.4116 227.2994 405.4198 223.4026 405.0661 c
219.4166 404.7044 219.2359 406.6962 215.25 406.3345 c
211.2654 405.9729 211.4462 403.981 207.4616 403.6194 c
203.5863 403.2678 203.4056 405.2595 199.5303 404.9079 c
195.6257 404.5535 195.8064 402.5617 191.9017 402.2073 c
187.9277 401.8467 187.747 403.8385 183.7731 403.4778 c
179.8207 403.1192 180.0015 401.1273 176.0491 400.7686 c
172.2295 400.422 172.0488 402.4138 168.2292 402.0672 c
164.3314 401.7134 164.5122 399.7216 160.6144 399.3679 c
156.704 399.013 156.5233 401.0048 152.6129 400.6499 c
149.0101 400.323 149.1935 398.3457 145.592 398.0046 c
145.4683 397.9928 145.601 397.9977 145.7253 397.9951 c
145.8536 397.9924 145.8955 399.992 146.0239 399.9893 c
146.0242 399.9893 145.9789 397.9898 145.9792 397.9898 c
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0036 397.9895 l
146.0036 399.9895 l
146.0939 397.9936 l
150.0941 398.3566 149.9133 400.3485 153.9135 400.7115 c
157.8792 401.0714 158.06 399.0796 162.0257 399.4395 c
166.0213 399.8021 165.8405 401.7939 169.836 402.1565 c
173.7986 402.5161 173.9794 400.5243 177.9419 400.8839 c
181.9375 401.2465 181.7568 403.2384 185.7523 403.601 c
189.7168 403.9608 189.8976 401.969 193.8621 402.3287 c
197.8633 402.6918 197.6826 404.6837 201.6838 405.0468 c
205.6564 405.4073 205.8372 403.4155 209.8097 403.776 c
213.8237 404.1403 213.6429 406.1322 217.6569 406.4964 c
221.6453 406.8584 221.826 404.8666 225.8144 405.2285 c
229.7776 405.5882 229.5968 407.5801 233.56 407.9397 c
237.5716 408.3038 237.7523 406.312 241.7639 406.676 c
245.7546 407.0382 245.5739 409.03 249.5646 409.3922 c
253.5355 409.7525 253.7162 407.7608 257.6871 408.1211 c
261.6392 408.4797 261.4584 410.4716 265.4105 410.8303 c
269.4231 411.1944 269.6039 409.2026 273.6165 409.5668 c
277.6172 409.9298 277.4365 411.9217 281.4372 412.2847 c
285.4282 412.6469 285.6089 410.6551 289.5999 411.0173 c
293.5838 411.3788 293.403 413.3707 297.3868 413.7322 c
301.3664 414.0934 301.5471 412.1016 305.5267 412.4627 c
309.5055 412.8238 309.3248 414.8157 313.3036 415.1767 c
317.2859 415.5381 317.4666 413.5463 321.4489 413.9077 c
325.4396 414.2699 325.2588 416.2617 329.2494 416.6239 c
333.2545 416.9873 333.4352 414.9956 337.4403 415.359 c
341.3724 415.7158 341.1916 417.7077 345.1238 418.0645 c
349.0785 418.4234 349.2592 416.4316 353.2139 416.7905 c
357.2008 417.1523 357.02 419.1442 361.0069 419.506 c
364.9353 419.8625 365.116 417.8707 369.0443 418.2272 c
373.0217 418.5881 372.841 420.58 376.8183 420.9409 c
380.7525 421.298 380.9332 419.3062 384.8673 419.6632 c
388.7642 420.0168 388.5834 422.0087 392.4802 422.3623 c
396.4661 422.724 396.6469 420.7323 400.6328 421.094 c
404.6173 421.4556 404.4365 423.4474 408.4211 423.809 c
412.2964 424.1607 412.4771 422.1689 416.3524 422.5206 c
420.257 422.8749 420.0763 424.8668 423.9809 425.2211 c
427.9549 425.5818 428.1356 423.59 432.1096 423.9506 c
436.0619 424.3093 435.8811 426.3011 439.8335 426.6598 c
443.653 427.0064 443.8337 425.0146 447.6532 425.3612 c
451.551 425.715 451.3702 427.7068 455.268 428.0605 c
459.1783 428.4154 459.4887 426.1014 463.3543 426.7899 c
466.9565 427.4314 466.6891 429.0827 470.291 429.4239 c
s
0 To
1 0 0 1 20.8125 794.125 0 Tp
TP
0 Tr
0 O
0 g
/_CMR 12 Tf
0 Ts
100 Tz
0 Tt
1 TA
%_ 0 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 0 2 2 3 Th
0 Tq
14.5 0 Tl
0 Tc
0 Tw
(\r) TX
TO
0 To
1 0 0 1 119.0625 398.125 0 Tp
TP
0 Tr
1 g
(\r) TX
TO
0 To
1 0 0 1 116.8125 300.625 0 Tp
TP
0 Tr
0 g
(\r) TX
TO
0 R
0 G
492.7489 250.5064 m
492.5829 250.5929 L
145.4969 320.9999 L
145.6628 320.9134 L
492.7489 250.5064 L
s
502.5487 380.0587 m
502.0091 379.9988 L
133.2346 305.0981 L
133.7743 305.158 L
502.5487 380.0587 L
s
479.8351 414.3724 m
479.8861 414.3611 480.2798 414.1477 480.2424 414.1843 c
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.5432 412.4694 l
479.5432 414.4694 l
479.7675 414.4439 l
475.7276 415.3741 475.2788 413.425 471.2389 414.3553 c
467.2297 415.2784 467.6785 417.2273 463.6694 418.1504 c
459.628 419.0809 459.1792 417.1319 455.1378 418.0624 c
451.1255 418.9863 451.5742 420.9352 447.5619 421.8591 c
443.5138 422.7911 443.065 420.8421 439.0169 421.7742 c
434.9955 422.7001 435.4443 424.649 431.423 425.5749 c
427.3616 426.5101 426.9129 424.561 422.8516 425.4961 c
418.8142 426.4257 419.2629 428.3747 415.2256 429.3043 c
411.2117 430.2285 410.7629 428.2795 406.7491 429.2037 c
402.6888 430.1385 403.1376 432.0875 399.0773 433.0224 c
395.0367 433.9527 394.5879 432.0037 390.5473 432.934 c
386.5253 433.8601 386.9741 435.809 382.9522 436.7351 c
378.948 437.6571 378.4992 435.708 374.4951 436.63 c
370.5075 437.5481 370.9563 439.4971 366.9688 440.4152 c
362.9216 441.3471 362.4729 439.398 358.4257 440.3298 c
354.3886 441.2594 354.8373 443.2083 350.8002 444.1379 c
346.771 445.0656 346.3223 443.1166 342.293 444.0443 c
338.2693 444.9708 338.718 446.9197 334.6943 447.8462 c
330.6731 448.7721 330.2244 446.823 326.2032 447.7489 c
322.1813 448.675 322.63 450.6239 318.6081 451.5499 c
314.5815 452.4771 314.1327 450.528 310.1061 451.4552 c
306.0701 452.3844 306.5189 454.3334 302.4829 455.2627 c
298.4319 456.1954 297.9832 454.2464 293.9322 455.1791 c
289.9497 456.0961 290.3984 458.0451 286.4159 458.962 c
282.4108 459.8842 281.962 457.9352 277.9569 458.8574 c
273.9203 459.7868 274.369 461.7358 270.3324 462.6652 c
266.3512 463.5819 265.9024 461.6328 261.9211 462.5495 c
257.8932 463.477 258.3419 465.4259 254.314 466.3533 c
250.3279 467.2712 249.8791 465.3221 245.893 466.2399 c
241.9436 467.1492 242.3924 469.0982 238.443 470.0075 c
234.4125 470.9356 233.9638 468.9865 229.9333 469.9145 c
225.9097 470.841 226.3585 472.7899 222.3348 473.7164 c
218.3013 474.6451 217.8526 472.696 213.819 473.6248 c
209.8785 474.5321 210.3273 476.481 206.3867 477.3883 c
202.3992 478.3065 201.9505 476.3574 197.9629 477.2755 c
194.0246 478.1823 194.4733 480.1313 190.535 481.0381 c
186.6151 481.9407 186.1664 479.9916 182.2465 480.8941 c
178.2922 481.8046 178.741 483.7536 174.7867 484.664 c
170.8786 485.5639 170.4298 483.6148 166.5217 484.5147 c
162.58 485.4223 163.0288 487.3712 159.0872 488.2788 c
155.4074 489.126 154.9718 487.2022 151.2859 488.0227 c
151.2349 488.034 150.841 488.2476 150.8784 488.2111 c
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.5778 487.9257 l
151.5778 489.9257 l
151.3535 487.9512 l
155.3934 487.021 155.8422 488.9701 159.8821 488.0399 c
163.8913 487.1168 163.4425 485.1678 167.4516 484.2447 c
171.493 483.3142 171.9418 485.2632 175.9832 484.3327 c
179.9955 483.4089 179.5468 481.4599 183.5591 480.5361 c
187.6072 479.604 188.056 481.553 192.1041 480.621 c
196.1255 479.695 195.6767 477.7461 199.698 476.8202 c
203.7593 475.8851 204.2081 477.8341 208.2694 476.899 c
212.3068 475.9694 211.858 474.0204 215.8954 473.0908 c
219.9093 472.1666 220.3581 474.1157 224.3719 473.1915 c
228.4322 472.2566 227.9834 470.3076 232.0437 469.3728 c
236.0843 468.4424 236.5331 470.3914 240.5737 469.4611 c
244.5957 468.535 244.1469 466.5861 248.1688 465.66 c
252.173 464.738 252.6218 466.6871 256.6259 465.7651 c
260.6135 464.847 260.1647 462.8981 264.1522 461.9799 c
268.1994 461.0481 268.6481 462.9971 272.6953 462.0653 c
276.7324 461.1357 276.2836 459.1868 280.3208 458.2572 c
284.35 457.3295 284.7987 459.2786 288.8279 458.3508 c
292.8517 457.4244 292.4029 455.4754 296.4267 454.5489 c
300.4478 453.623 300.8966 455.5721 304.9178 454.6462 c
308.9397 453.7202 308.4909 451.7712 312.5128 450.8452 c
316.5394 449.9181 316.9882 451.8671 321.0148 450.94 c
325.0508 450.0107 324.602 448.0617 328.638 447.1324 c
332.689 446.1997 333.1378 448.1488 337.1887 447.216 c
341.1712 446.299 340.7225 444.3501 344.705 443.4331 c
348.7101 442.5109 349.1589 444.46 353.164 443.5378 c
357.2006 442.6084 356.7519 440.6594 360.7885 439.73 c
364.7698 438.8133 365.2185 440.7623 369.1998 439.8456 c
373.2277 438.9182 372.779 436.9692 376.8069 436.0418 c
380.7931 435.124 381.2418 437.0731 385.2279 436.1553 c
389.1773 435.2459 388.7285 433.297 392.6779 432.3876 c
396.7084 431.4596 397.1571 433.4087 401.1876 432.4806 c
405.2112 431.5542 404.7624 429.6053 408.7861 428.6788 c
412.8196 427.7501 413.2683 429.6992 417.3019 428.7704 c
421.2424 427.8631 420.7936 425.9142 424.7341 425.0069 c
428.7216 424.0887 429.1704 426.0378 433.1579 425.1197 c
437.0962 424.2129 436.6475 422.2639 440.5858 421.3571 c
444.5056 420.4546 444.9544 422.4036 448.8742 421.5011 c
452.8285 420.5906 452.3797 418.6416 456.3339 417.7312 c
460.242 416.8313 460.6908 418.7804 464.5989 417.8805 c
468.5405 416.973 468.1112 414.6838 472.1137 414.1014 c
475.8873 413.5524 476.1489 415.1929 479.8351 414.3724 c
s
1 O
0.3 g
1 R
0.3 G
500.8051 545.3684 m
500.9307 545.3934 501.4886 543.5059 501.6076 543.5533 c
501.6078 543.5534 500.8663 545.4109 500.8665 545.411 c
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.2379 543.4825 l
501.2379 545.4825 l
501.0488 545.4644 l
496.475 544.5836 496.8532 542.6196 492.2794 541.7387 c
487.6621 540.8495 487.2838 542.8133 482.6665 541.924 c
478.0662 541.0381 478.4444 539.0741 473.8441 538.1881 c
469.2602 537.3053 468.8819 539.2691 464.298 538.3863 c
459.7297 537.5065 460.1078 535.5425 455.5395 534.6627 c
450.9198 533.773 450.5415 535.7368 445.9218 534.8471 c
441.3134 533.9595 441.6916 531.9956 437.0833 531.1081 c
432.4851 530.2225 432.1068 532.1863 427.5086 531.3007 c
422.9193 530.4169 423.2975 528.4529 418.7082 527.5691 c
414.1262 526.6866 413.748 528.6504 409.166 527.768 c
404.5897 526.8866 404.9679 524.9227 400.3915 524.0413 c
395.819 523.1607 395.4407 525.1245 390.8681 524.2438 c
386.2972 523.3635 386.6754 521.3996 382.1044 520.5192 c
377.5326 519.6387 377.1543 521.6026 372.5825 520.7221 c
368.0071 519.8409 368.3852 517.8769 363.8098 516.9957 c
359.2276 516.1132 358.8493 518.077 354.267 517.1945 c
349.6743 516.31 350.0525 514.3461 345.4597 513.4615 c
340.8522 512.5742 340.474 514.538 335.8665 513.6506 c
331.3207 512.7751 331.6989 510.8112 327.1531 509.9357 c
322.5871 509.0563 322.2088 511.0202 317.6428 510.1408 c
313.0504 509.2563 313.4285 507.2924 308.8361 506.4079 c
304.2968 505.5337 303.9185 507.4975 299.3791 506.6232 c
294.8039 505.7421 295.1821 503.7781 290.6069 502.897 c
286.0772 502.0246 285.6989 503.9884 281.1692 503.116 c
276.5904 502.2342 276.9685 500.2702 272.3897 499.3884 c
267.8446 498.513 267.4663 500.4769 262.9212 499.6015 c
258.3074 498.7129 258.6856 496.749 254.0717 495.8604 c
249.4728 494.9746 249.0945 496.9385 244.4956 496.0527 c
239.9026 495.1682 240.2809 493.2042 235.688 492.3197 c
231.0895 491.434 230.7112 493.3979 226.1128 492.5123 c
221.6057 491.6442 221.9839 489.6803 217.4768 488.8122 c
212.9426 487.939 212.5643 489.9028 208.0301 489.0296 c
203.4443 488.1464 203.8224 486.1824 199.2366 485.2992 c
194.6922 484.424 194.3139 486.3878 189.7695 485.5126 c
185.2449 484.6412 185.6231 482.6773 181.0985 481.8058 c
176.5599 480.9317 176.1817 482.8956 171.6431 482.0215 c
167.1879 481.1634 167.5661 479.1995 163.1109 478.3415 c
158.5351 477.4602 158.1568 479.424 153.581 478.5428 c
149.0992 477.6796 149.4774 475.7156 144.9956 474.8525 c
140.5308 473.9926 140.1525 475.9564 135.6877 475.0965 c
131.4993 474.2899 131.8785 472.3499 127.6945 471.5203 c
127.569 471.4954 127.011 473.3828 126.8921 473.3355 c
126.8918 473.3354 127.6334 471.4779 127.6331 471.4778 c
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.2617 471.4063 l
127.2617 473.4063 l
127.4508 471.4243 l
132.0247 472.3052 131.6465 474.2692 136.2203 475.1501 c
140.8376 476.0393 141.2159 474.0755 145.8332 474.9647 c
150.4334 475.8507 150.0553 477.8147 154.6555 478.7007 c
159.2395 479.5835 159.6177 477.6196 164.2017 478.5025 c
168.77 479.3823 168.3918 481.3463 172.9601 482.2261 c
177.5799 483.1158 177.9582 481.152 182.5779 482.0417 c
187.1862 482.9292 186.808 484.8932 191.4164 485.7807 c
196.0146 486.6663 196.3928 484.7025 200.991 485.588 c
205.5803 486.4719 205.2021 488.4358 209.7915 489.3197 c
214.3734 490.2022 214.7517 488.2383 219.3337 489.1208 c
223.91 490.0022 223.5318 491.9661 228.1081 492.8475 c
232.6807 493.7281 233.059 491.7643 237.6315 492.6449 c
242.2025 493.5253 241.8243 495.4892 246.3953 496.3696 c
250.9671 497.2501 251.3453 495.2862 255.9172 496.1667 c
260.4926 497.0479 260.1144 499.0119 264.6898 499.8931 c
269.2721 500.7756 269.6504 498.8117 274.2326 499.6943 c
278.8254 500.5788 278.4472 502.5427 283.0399 503.4273 c
287.6474 504.3146 288.0257 502.3508 292.6332 503.2382 c
297.179 504.1136 296.8008 506.0776 301.3466 506.9531 c
305.9126 507.8325 306.2909 505.8686 310.8569 506.748 c
315.4493 507.6325 315.0711 509.5964 319.6635 510.4809 c
324.2029 511.3551 324.5812 509.3913 329.1205 510.2655 c
333.6957 511.1467 333.3175 513.1107 337.8927 513.9918 c
342.4224 514.8642 342.8007 512.9004 347.3304 513.7727 c
351.9093 514.6546 351.5311 516.6185 356.11 517.5004 c
360.6551 518.3758 361.0333 516.4119 365.5784 517.2873 c
370.1923 518.1759 369.8141 520.1398 374.4279 521.0284 c
379.0269 521.9141 379.4052 519.9503 384.0041 520.836 c
388.597 521.7206 388.2188 523.6846 392.8117 524.5691 c
397.4101 525.4548 397.7884 523.4909 402.3868 524.3765 c
406.8939 525.2446 406.5157 527.2085 411.0228 528.0765 c
415.557 528.9498 415.9353 526.986 420.4695 527.8592 c
425.0554 528.7424 424.6772 530.7064 429.2631 531.5896 c
433.8074 532.4648 434.1857 530.5009 438.7301 531.3762 c
443.2547 532.2476 442.8766 534.2115 447.4012 535.0829 c
451.9397 535.957 452.318 533.9932 456.8565 534.8673 c
461.3117 535.7253 460.9335 537.6893 465.3887 538.5473 c
469.9646 539.4286 470.3428 537.4648 474.9187 538.346 c
479.4004 539.2092 479.0222 541.1731 483.504 542.0363 c
487.9688 542.8962 488.4928 540.6254 492.8831 541.8087 c
497.0337 542.9273 496.6212 544.5389 500.8051 545.3684 c
b
u
0 To
1 0 0 1 493.0625 317.5552 0 Tp
TP
-20.3423 0 Td
0 Tr
0 O
1 g
(Altoona) Tx
(\r) TX
17.0068 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
540.3126 299.0552 m
546.9395 299.0552 552.3125 304.4279 552.3125 311.0553 C
552.3125 320.0551 L
552.3125 326.6824 546.9395 332.0552 540.3126 332.0552 C
445.8124 332.0552 L
439.1855 332.0552 433.8125 326.6824 433.8125 320.0551 C
433.8125 311.0553 L
433.8125 304.4279 439.1855 299.0552 445.8124 299.0552 C
540.3126 299.0552 L
b
U
u
0 To
1 0 0 1 493.0625 372.5552 0 Tp
TP
-36.0102 0 Td
0 Tr
(State College) Tx
(\r) TX
32.6748 -14.5 Td
(1) Tx
(\r) TX 
TO
1 R
0 G
540.3126 354.0552 m
546.9395 354.0552 552.3125 359.4279 552.3125 366.0553 C
552.3125 375.0551 L
552.3125 381.6814 546.9395 387.0552 540.3126 387.0552 C
445.8124 387.0552 L
439.1857 387.0552 433.8125 381.6806 433.8125 375.0551 C
433.8125 366.0553 L
433.8125 359.4276 439.1857 354.0552 445.8124 354.0552 C
540.3126 354.0552 L
b
U
u
0 To
1 0 0 1 493.0625 263.5552 0 Tp
TP
-27.9946 0 Td
0 Tr
(Harrisburg) Tx
(\r) TX
24.6592 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
540.3126 245.0552 m
546.9395 245.0552 552.3125 250.4279 552.3125 257.0553 C
552.3125 266.0551 L
552.3125 272.6824 546.9395 278.0552 540.3126 278.0552 C
445.8124 278.0552 L
439.1855 278.0552 433.8125 272.6824 433.8125 266.0551 C
433.8125 257.0553 L
433.8125 250.4279 439.1855 245.0552 445.8124 245.0552 C
540.3126 245.0552 L
b
U
u
0 To
1 0 0 1 492.5 482 0 Tp
TP
-20.3423 0 Td
0 Tr
(Altoona) Tx
(\r) TX
17.0068 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
539.7501 463.5 m
546.377 463.5 551.75 468.8728 551.75 475.5001 C
551.75 484.4999 L
551.75 491.1272 546.377 496.5 539.7501 496.5 C
445.2499 496.5 L
438.623 496.5 433.25 491.1272 433.25 484.4999 C
433.25 475.5001 L
433.25 468.8728 438.623 463.5 445.2499 463.5 C
539.7501 463.5 L
b
U
u
0 To
1 0 0 1 492.5 427 0 Tp
TP
-27.9946 0 Td
0 Tr
(Harrisburg) Tx
(\r) TX
24.6592 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
539.7501 408.5 m
546.377 408.5 551.75 413.8728 551.75 420.5001 C
551.75 429.4999 L
551.75 436.1272 546.377 441.5 539.7501 441.5 C
445.2499 441.5 L
438.623 441.5 433.25 436.1272 433.25 429.4999 C
433.25 420.5001 L
433.25 413.8728 438.623 408.5 445.2499 408.5 C
539.7501 408.5 L
b
U
0 g
300 Ar
434.422 482.382 m
434.422 482.9602 L
177.6413 482.9602 L
177.6413 482.382 L
434.422 482.382 L
f
u
0 To
1 0 0 1 120.0625 315.6177 0 Tp
TP
-24.0073 0 Td
0 Tr
1 g
800 Ar
(Scranton) Tx
(\r) TX
20.6719 -14.5 Td
(0) Tx
(\r) TX 
TO
0 R
0 G
165.3126 297.1177 m
171.9395 297.1177 177.3125 302.4904 177.3125 309.1178 C
177.3125 318.1176 L
177.3125 324.7449 171.9395 330.1177 165.3126 330.1177 C
70.8124 330.1177 L
64.1855 330.1177 58.8125 324.7449 58.8125 318.1176 C
58.8125 309.1178 L
58.8125 302.4904 64.1855 297.1177 70.8124 297.1177 C
165.3126 297.1177 L
b
U
u
0 To
1 0 0 1 119.0625 403.125 0 Tp
TP
-21.0073 0 Td
0 Tr
(Bedford) Tx
(\r) TX
17.6719 -14.5 Td
(0) Tx
(\r) TX 
TO
0 R
0 G
166.3126 384.625 m
172.9395 384.625 178.3125 389.9978 178.3125 396.6251 C
178.3125 405.6249 L
178.3125 412.2522 172.9395 417.625 166.3126 417.625 C
71.8124 417.625 L
65.1855 417.625 59.8125 412.2522 59.8125 405.6249 C
59.8125 396.6251 L
59.8125 389.9978 65.1855 384.625 71.8124 384.625 C
166.3126 384.625 L
b
U
436.6619 533.5113 m
436.7864 533.5764 437.8561 531.9284 437.9662 532.0157 c
437.9827 532.0288 436.7409 533.5965 436.7575 533.6096 c
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
437.3783 531.8257 l
437.3783 533.8257 l
436.9225 533.7158 l
433.7211 532.0762 434.6327 530.2961 431.4313 528.6565 c
428.2693 527.0371 427.3576 528.8173 424.1956 527.1979 c
421.016 525.5694 421.9277 523.7893 418.748 522.1609 c
415.5489 520.5225 414.6372 522.3026 411.4381 520.6642 c
408.2769 519.0452 409.1885 517.2651 406.0273 515.6461 c
402.8446 514.0161 401.9329 515.7963 398.7503 514.1663 c
395.5438 512.5241 396.4555 510.744 393.249 509.1019 c
390.0782 507.4779 389.1665 509.2581 385.9956 507.6341 c
382.7982 505.9966 383.7098 504.2165 380.5125 502.579 c
377.3493 500.959 376.4376 502.7391 373.2743 501.1191 c
370.0813 499.4838 370.993 497.7037 367.8 496.0684 c
364.6392 494.4497 363.7276 496.2298 360.5668 494.611 c
357.3722 492.975 358.2839 491.1949 355.0893 489.5588 c
351.9245 487.9379 351.0128 489.7181 347.8479 488.0972 c
344.6441 486.4564 345.5558 484.6763 342.352 483.0355 c
339.1744 481.4082 338.2628 483.1883 335.0852 481.5609 c
331.9335 479.9468 332.8451 478.1667 329.6934 476.5525 c
326.4946 474.9143 325.5829 476.6945 322.3841 475.0562 c
319.2059 473.4285 320.1175 471.6484 316.9393 470.0207 c
313.7804 468.4029 312.8687 470.183 309.7098 468.5652 c
306.5688 466.9565 307.4804 465.1764 304.3394 463.5678 c
301.2145 461.9674 300.3027 463.7475 297.1778 462.1471 c
293.9866 460.5127 294.8982 458.7326 291.707 457.0982 c
288.5213 455.4667 287.6096 457.2468 284.4239 455.6153 c
281.2396 453.9845 282.1513 452.2044 278.967 450.5736 c
275.7791 448.9409 274.8674 450.7211 271.6796 449.0884 c
268.5711 447.4964 269.4828 445.7164 266.3743 444.1244 c
263.2567 442.5277 262.345 444.3078 259.2274 442.7111 c
256.0923 441.1055 257.0039 439.3254 253.8689 437.7198 c
250.7056 436.0998 249.7939 437.8799 246.6306 436.2599 c
243.5267 434.6702 244.4384 432.8901 241.3344 431.3005 c
238.1824 429.6862 237.2707 431.4664 234.1187 429.8521 c
231.0067 428.2583 231.9183 426.4782 228.8063 424.8843 c
225.6094 423.2471 224.6977 425.0272 221.5009 423.39 c
218.4236 421.814 219.3352 420.0339 216.258 418.4579 c
213.1733 416.8781 212.2616 418.6582 209.177 417.0784 c
206.0492 415.4765 206.9608 413.6965 203.8331 412.0946 c
200.7496 410.5154 199.8379 412.2955 196.7544 410.7164 c
193.6668 409.1351 194.5785 407.355 191.4909 405.7737 c
188.3225 404.151 187.4108 405.9312 184.2425 404.3085 c
181.3932 402.8492 182.3 401.0963 179.4628 399.6137 c
179.3383 399.5486 178.2686 401.1966 178.1585 401.1094 c
178.1419 401.0962 179.3836 399.5284 179.367 399.5152 c
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
178.7462 399.2992 l
178.7462 401.2992 l
179.202 399.4091 l
182.4035 401.0487 181.4918 402.8288 184.6932 404.4684 c
187.8552 406.0878 188.7669 404.3076 191.9289 405.927 c
195.1085 407.5555 194.1969 409.3356 197.3765 410.964 c
200.5756 412.6024 201.4873 410.8222 204.6864 412.4607 c
207.8476 414.0797 206.936 415.8598 210.0972 417.4788 c
213.2798 419.1088 214.1915 417.3286 217.3742 418.9586 c
220.5806 420.6007 219.669 422.3808 222.8754 424.023 c
226.0463 425.6469 226.958 423.8668 230.1288 425.4907 c
233.3262 427.1283 232.4145 428.9084 235.6119 430.5459 c
238.7751 432.1659 239.6868 430.3858 242.8501 432.0058 c
246.0431 433.6411 245.1314 435.4212 248.3244 437.0564 c
251.4851 438.6752 252.3968 436.895 255.5576 438.5138 c
258.7521 440.1499 257.8405 441.93 261.0351 443.5661 c
264.1999 445.1869 265.1116 443.4068 268.2765 445.0276 c
271.4803 446.6685 270.5686 448.4485 273.7724 450.0893 c
276.9499 451.7167 277.8616 449.9365 281.0392 451.5639 c
284.1909 453.1781 283.2792 454.9581 286.431 456.5723 c
289.6298 458.2106 290.5415 456.4304 293.7403 458.0686 c
296.9185 459.6964 296.0068 461.4765 299.1851 463.1042 c
302.344 464.722 303.2557 462.9418 306.4145 464.5596 c
309.5556 466.1683 308.6439 467.9484 311.7849 469.557 c
314.9099 471.1575 315.8216 469.3773 318.9465 470.9777 c
322.1377 472.6121 321.2261 474.3922 324.4173 476.0266 c
327.603 477.6581 328.5147 475.878 331.7004 477.5095 c
334.8847 479.1403 333.973 480.9204 337.1573 482.5512 c
340.3451 484.1839 341.2568 482.4037 344.4447 484.0363 c
347.5531 485.6283 346.6415 487.4084 349.7499 489.0004 c
352.8675 490.5971 353.7792 488.8169 356.8968 490.4136 c
360.0319 492.0192 359.1202 493.7993 362.2553 495.4049 c
365.4186 497.0249 366.3303 495.2448 369.4935 496.8648 c
372.5974 498.4545 371.6858 500.2346 374.7897 501.8242 c
377.9416 503.4385 378.8533 501.6584 382.0053 503.2726 c
385.1173 504.8664 384.2057 506.6465 387.3177 508.2403 c
390.5145 509.8776 391.4262 508.0974 394.623 509.7346 c
397.7002 511.3106 396.7886 513.0907 399.8658 514.6667 c
402.9504 516.2465 403.8621 514.4663 406.9467 516.0461 c
410.0744 517.6479 409.1627 519.428 412.2904 521.0298 c
415.3738 522.609 416.2855 520.8288 419.3688 522.4079 c
422.4563 523.9892 421.5447 525.7693 424.6321 527.3505 c
427.8002 528.973 428.9601 526.9491 431.9617 528.8622 c
434.6991 530.6069 433.8236 532.0282 436.6619 533.5113 c
s
u
0 To
1 0 0 1 117.75 483.3228 0 Tp
TP
-21.0073 0 Td
0 Tr
0 O
1 g
(Bedford) Tx
(\r) TX
17.6719 -14.5 Td
(0) Tx
(\r) TX 
TO
0 R
0 G
165.0001 464.8227 m
171.627 464.8227 177 470.1955 177 476.8229 C
177 485.8226 L
177 492.45 171.627 497.8227 165.0001 497.8227 C
70.4999 497.8227 L
63.873 497.8227 58.5 492.45 58.5 485.8226 C
58.5 476.8229 L
58.5 470.1955 63.873 464.8227 70.4999 464.8227 C
165.0001 464.8227 L
b
U
u
0 To
1 0 0 1 492.5 536 0 Tp
TP
-36.0102 0 Td
0 Tr
(State College) Tx
(\r) TX
32.6748 -14.5 Td
(1) Tx
(\r) TX 
TO
1 R
0 G
539.7501 517.5 m
546.377 517.5 551.75 522.8728 551.75 529.5001 C
551.75 538.4999 L
551.75 545.1262 546.377 550.5 539.7501 550.5 C
445.2499 550.5 L
438.6232 550.5 433.25 545.1254 433.25 538.4999 C
433.25 529.5001 L
433.25 522.8724 438.6232 517.5 445.2499 517.5 C
539.7501 517.5 L
b
U
0 g
300 Ar
438.3904 313.3984 m
438.3904 313.9766 L
181.6096 313.9766 L
181.6096 313.3984 L
438.3904 313.3984 L
f
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument

 endTexFig
 1076 2411 a Fg(Figure)35 b(17.5.)508 2521 y Fi(Cycle)30
b(arising)g(from)g(adding)f Ff(x)1621 2535 y Fc(21)1729
2521 y Fi(to)h(the)f(basis)183 2655 y(W)-8 b(e)22 b(start)f(a)i(\015o)m
(w)f(of)g Ff(")j Fk(\025)h Fi(0)c(on)g(the)f(new)h(c)m(hosen)g(edge,)h
(from)f(w)m(arehouse)0 2764 y(2)k(to)g(store)e(1;)k(that)d(is,)j(w)m(e)
e(set)g Ff(x)1127 2778 y Fc(21)1230 2764 y Fi(=)f Ff(")p
Fi(.)39 b(W)-8 b(e)26 b(m)m(ust)g(adjust)f(the)h(\015o)m(w)g(around)0
2874 y(the)33 b(lo)s(op)g(to)g(satisfy)g(the)g(balance)f(constrain)m
(t.)50 b(Therefore)31 b(w)m(e)j(subtract)d Ff(")0 2984
y Fi(from)k Ff(x)273 2998 y Fc(23)386 2984 y Fi(so)h(as)f(not)g(to)g
(exceed)f(the)g(supply)i(at)f(w)m(arehouse)f(2.)56 b(Then)35
b(w)m(e)0 3093 y(add)28 b Ff(")h Fi(to)f Ff(x)410 3107
y Fc(13)517 3093 y Fi(to)g(meet)g(the)g(demand)g(of)g(store)g(3.)40
b(On)29 b(the)f(last)h(edge)e(of)i(the)0 3203 y(lo)s(op)34
b(w)m(e)i(subtract)d Ff(")h Fi(from)h Ff(x)1061 3217
y Fc(11)1139 3203 y Fi(,)i(whic)m(h)e(a)m(v)m(oids)h(exceeding)d(the)h
(supply)h(of)0 3312 y(w)m(arehouse)29 b(1)h(and)f(the)h(demand)f(at)g
(store)g(1)h(\(T)-8 b(able)30 b(17.6\).)348 3493 y Fk(j)h
Fi(55)212 b Fk(j)31 b Fi(30)212 b Fk(j)31 b Fi(40)213
b Fk(j)30 b Fi(-15)183 b Fk(j)31 b Fi(-20)182 b Fk(j)31
b Fi(-50)182 b Fk(j)p 44 3519 2613 4 v 272 3587 a Fi(0)30
b Fk(j)h Fi(55)212 b Fk(j)31 b Fi(30)212 b Fk(j)31 b
Fi(40)213 b Fk(j)30 b Fi(50)213 b Fk(j)31 b Fi(40)212
b Fk(j)31 b Fi(0)258 b Fk(j)348 3679 y(j)60 b Fi(25)20
b Fk(\000)g Ff(")29 b Fk(j)138 b Fi(10)105 b Fk(j)61
b Fi(15)19 b(+)i Ff(")29 b Fk(j)101 b Fi(\(65\))70 b
Fk(j)102 b Fi(\(60\))69 b Fk(j)102 b Fi(\(50\))69 b Fk(j)31
b Fi(50)348 3770 y Fk(j)p 395 3762 40 40 v 62 w Fi(|||)p
Fk(j)77 b Fi(-)31 b(-)f(-)h(-)46 b Fk(j)31 b Fi(|||)p
1364 3762 V 32 w Fk(j)335 b(j)g(j)g(j)p 44 3797 2613
4 v 196 3865 a Fi(-60)30 b Fk(j)h(j)g Fi(35)156 b Fk(j)31
b Fi(30)212 b Fk(j)31 b Fi(100)111 b Fk(j)31 b(j)f Fi(45)213
b Fk(j)31 b Fi(60)212 b Fk(j)31 b Fi(0)258 b Fk(j)348
3956 y(j)31 b(j)g Fi(\(-80\))e Ff(")-18 b Fk(j)72 b Fi(\()30
b(-60\))39 b Fk(j)80 b Fi(5)20 b Fk(\000)g Ff(")p Fk(j)31
b(j)122 b Fi(25)f Fk(j)102 b Fi(\(20\))69 b Fk(j)87 b
Fi(\(-10\))54 b Fk(j)31 b Fi(30)348 4048 y Fk(j)p 395
4040 40 40 v 62 w Fi(|||)p Fk(j)77 b Fi(-)31 b(-)f(-)h(-)46
b Fk(j)31 b Fi(|||)p 1364 4040 V 32 w Fk(j)335 b(j)g(j)g(j)p
44 4074 2613 4 v 196 4143 a Fi(-50)30 b Fk(j)h Fi(40)212
b Fk(j)31 b Fi(60)212 b Fk(j)31 b Fi(95)213 b Fk(j)30
b Fi(35)213 b Fk(j)31 b Fi(30)212 b Fk(j)31 b Fi(0)258
b Fk(j)348 4234 y(j)87 b Fi(\(-65\))54 b Fk(j)87 b Fi(\(-20\))54
b Fk(j)125 b Fi(\(5\))93 b Fk(j)160 b Fi(5)129 b Fk(j)137
b Fi(15)106 b Fk(j)137 b Fi(30)106 b Fk(j)31 b Fi(50)348
4325 y Fk(j)335 b(j)g(j)h(j)f(j)g(j)g(j)p 44 4352 V 348
4420 a(j)137 b Fi(25)106 b Fk(j)138 b Fi(10)105 b Fk(j)138
b Fi(20)106 b Fk(j)137 b Fi(30)106 b Fk(j)137 b Fi(15)106
b Fk(j)137 b Fi(30)106 b Fk(j)1099 4610 y Fg(T)-9 b(able)36
b(17.6.)547 4719 y Fi(Adjusting)30 b(b)m(y)g Ff(")g Fi(the)g(\015o)m(w)
g(around)f(the)g(lo)s(op)p eop end
%%Page: 182 17
TeXDict begin 182 16 bop 0 91 a Fg(182)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)183
311 y Fi(The)25 b(c)m(hange)g(in)h(the)f(transp)s(ortation)e(cost)i(is)
h(\(35)12 b Fk(\000)g Fi(100)g(+)g(40)g Fk(\000)g Fi(55\))p
Ff(")21 b Fi(=)0 420 y Fk(\000)p Fi(80)p Ff(")p Fi(.)80
b(Note)44 b(that)e(the)h(co)s(e\016cien)m(t)e Fk(\000)p
Fi(80)j(is)g(exactly)f(the)g(v)-5 b(alue)43 b(of)h Ff(w)2610
434 y Fe(ij)2675 420 y Fi(!)0 530 y(T)-8 b(o)40 b(get)g(the)f(b)s(est)g
(impro)m(v)m(emen)m(t)h(in)g(the)g(ob)5 b(jectiv)m(e)39
b(function,)i(w)m(e)g(giv)m(e)f Ff(")0 639 y Fi(the)g(maxim)m(um)h(p)s
(ossible)f(v)-5 b(alue|namely)40 b(5.)71 b(This)41 b(determines)e(the)g
Ff(x)2635 653 y Fe(ij)0 749 y Fi(to)c(deselect,)f(or,)j(equiv)-5
b(alen)m(tly)d(,)37 b(the)d(edge)g(to)h(remo)m(v)m(e)g(from)g(the)f
(graph)g(to)0 858 y(restore)d(it)j(to)e(a)i(tree.)48
b(W)-8 b(e)33 b(mo)m(v)m(e)h Ff(x)1270 872 y Fc(21)1381
858 y Fi(in)m(to)g(the)e(basis)h(and)g Ff(x)2190 872
y Fc(23)2301 858 y Fi(out)f(of)h(the)0 968 y(basis)d(to)g(arriv)m(e)g
(at)g(a)g(new)g(basic)f(solution)h(\(T)-8 b(able)30 b(17.7\).)p
318 1200 2065 4 v 318 1268 a Fk(j)g Fi(55)167 b Fk(j)31
b Fi(30)167 b Fk(j)30 b Fi(40)167 b Fk(j)31 b Fi(50)167
b Fk(j)31 b Fi(40)166 b Fk(j)31 b Fi(0)213 b Fk(j)318
1360 y(j)99 b Fi(20)f Fk(j)h Fi(10)g Fk(j)g Fi(20)f Fk(j)290
b(j)f(j)h(j)31 b Fi(50)318 1451 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p
318 1478 V 318 1546 a(j)30 b Fi(35)167 b Fk(j)31 b Fi(30)167
b Fk(j)30 b Fi(100)121 b Fk(j)31 b Fi(45)167 b Fk(j)31
b Fi(60)166 b Fk(j)31 b Fi(0)213 b Fk(j)318 1637 y(j)122
b Fi(5)f Fk(j)290 b(j)f(j)100 b Fi(25)e Fk(j)289 b(j)h(j)31
b Fi(30)318 1729 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p
318 1755 V 318 1824 a(j)30 b Fi(40)167 b Fk(j)31 b Fi(60)167
b Fk(j)30 b Fi(95)167 b Fk(j)31 b Fi(35)167 b Fk(j)31
b Fi(30)166 b Fk(j)31 b Fi(0)213 b Fk(j)318 1915 y(j)289
b(j)h(j)f(j)122 b Fi(5)g Fk(j)99 b Fi(15)f Fk(j)i Fi(30)e
Fk(j)31 b Fi(50)318 2006 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p
318 2033 V 318 2101 a(j)99 b Fi(25)f Fk(j)h Fi(10)g Fk(j)g
Fi(20)f Fk(j)i Fi(30)e Fk(j)h Fi(15)f Fk(j)i Fi(30)e
Fk(j)1099 2321 y Fg(T)-9 b(able)36 b(17.7.)557 2430 y
Fi(Second)29 b(feasible)h(solution)f(to)h(Example)g(2.4)183
2649 y(The)c(transp)s(ortation)d(cost)i(is)j(no)m(w)e(20)13
b Fk(\001)g Fi(55)g(+)g(10)g Fk(\001)g Fi(30)g(+)g(20)g
Fk(\001)g Fi(40)g(+)g(5)g Fk(\001)g Fi(35)g(+)0 2759
y(25)20 b Fk(\001)h Fi(45)f(+)g(5)g Fk(\001)h Fi(35)f(+)h(15)f
Fk(\001)g Fi(30)g(+)h(30)f Fk(\001)h Fi(0)k(=)h(4125)f(=)h(4525)19
b Fk(\000)i Fi(80)f Fk(\001)g Fi(5.)42 b(W)-8 b(e)31
b(pro)s(ceed)0 2868 y(to)f(\014nd)f(the)h(new)f(v)-5
b(alues)30 b(for)g(the)f(dual)h(v)-5 b(ariables)30 b(\(T)-8
b(able)30 b(17.8\).)447 3165 y Fk(j)h Fi(55)166 b Fk(j)31
b Fi(30)167 b Fk(j)31 b Fi(40)167 b Fk(j)30 b Fi(65)167
b Fk(j)31 b Fi(60)167 b Fk(j)31 b Fi(30)166 b Fk(j)p
188 3192 2324 4 v 371 3260 a Fi(0)30 b Fk(j)h Fi(55)166
b Fk(j)31 b Fi(30)167 b Fk(j)31 b Fi(40)167 b Fk(j)30
b Fi(50)167 b Fk(j)31 b Fi(40)167 b Fk(j)31 b Fi(0)212
b Fk(j)447 3352 y(j)99 b Fi(20)f Fk(j)i Fi(10)e Fk(j)h
Fi(20)g Fk(j)63 b Fi(\(-15\))32 b Fk(j)64 b Fi(\(-20\))32
b Fk(j)63 b Fi(\(-30\))32 b Fk(j)f Fi(50)447 3443 y Fk(j)289
b(j)h(j)g(j)f(j)h(j)f(j)p 188 3469 V 325 3538 a Fi(20)30
b Fk(j)h Fi(35)166 b Fk(j)31 b Fi(30)167 b Fk(j)31 b
Fi(100)121 b Fk(j)30 b Fi(45)167 b Fk(j)31 b Fi(60)167
b Fk(j)31 b Fi(0)212 b Fk(j)447 3629 y(j)137 b Fi(5)106
b Fk(j)79 b Fi(\(20\))47 b Fk(j)79 b Fi(\(80\))47 b Fk(j)114
b Fi(25)83 b Fk(j)c Fi(\(20\))47 b Fk(j)63 b Fi(\(-10\))32
b Fk(j)f Fi(30)447 3721 y Fk(j)289 b(j)h(j)g(j)f(j)h(j)f(j)p
188 3747 V 325 3816 a Fi(30)30 b Fk(j)h Fi(40)166 b Fk(j)31
b Fi(60)167 b Fk(j)31 b Fi(95)167 b Fk(j)30 b Fi(35)167
b Fk(j)31 b Fi(30)167 b Fk(j)31 b Fi(0)212 b Fk(j)447
3907 y(j)79 b Fi(\(15\))46 b Fk(j)79 b Fi(\(60\))47 b
Fk(j)79 b Fi(\(85\))47 b Fk(j)137 b Fi(5)106 b Fk(j)115
b Fi(15)83 b Fk(j)114 b Fi(30)83 b Fk(j)31 b Fi(50)447
3998 y Fk(j)289 b(j)h(j)g(j)f(j)h(j)f(j)p 188 4025 V
447 4093 a(j)114 b Fi(25)83 b Fk(j)115 b Fi(10)83 b Fk(j)115
b Fi(20)83 b Fk(j)114 b Fi(30)83 b Fk(j)115 b Fi(15)83
b Fk(j)114 b Fi(30)83 b Fk(j)1099 4312 y Fg(T)-9 b(able)36
b(17.8.)416 4422 y Fi(P)m(oten)m(tials)30 b(and)f(discrepancies)g
Ff(w)1636 4436 y Fe(ij)1731 4422 y Fi(for)h(T)-8 b(able)30
b(17.7)p eop end
%%Page: 183 18
TeXDict begin 183 17 bop 1933 91 a Fk(x)p Fh(17.)41 b(Phase)32
b(2)91 b Fg(183)183 311 y Fi(W)-8 b(e)37 b(ha)m(v)m(e)g(executed)e(one)
h(piv)m(ot)h(step,)h(replacing)d Ff(x)2039 325 y Fc(23)2154
311 y Fi(with)i Ff(x)2421 325 y Fc(21)2536 311 y Fi(as)f(a)0
420 y(basic)30 b(v)-5 b(ariable,)30 b(resulting)f(in)i(a)f(new)f(tree)g
(\(Figure)g(17.9\).)30 -150 y
 18945146 10893473 1315635 16050749 36377313 53020098 startTexFig
 30 -150 a
%%BeginDocument: ch6fig6.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(r) 6.0
%%For: (Christopher Byrne) (Penn State)
%%Title: (ch6fig6.eps)
%%CreationDate: (11/12/18) (1:46)
%%BoundingBox: 20 244 553 806
%%HiResBoundingBox: 20.8125 244.5552 552.8125 805.4043
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set)
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 62 -44 733 238
%AI3_DocumentPreview: Header
%AI5_ArtSize: 504 324
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 300
%AI5_NumLayers: 1
%AI5_OpenToView: -126 708 -1 790 529 58 1 1 3 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0D0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A
4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777776757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404050505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
1 Ap
0 R
0 G
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
459.624 361.5 m
459.7474 361.5423 L
153.0009 405.0001 L
152.8776 404.9578 L
459.624 361.5 L
s
0 Ap
300 Ar
2 w
308.3125 419.625 m
S
0 To
1 0 0 1 20.8125 794.125 0 Tp
TP
0 Tr
0 O
0 g
800 Ar
1 w
/_Helvetica 12 Tf
0 Ts
100 Tz
0 Tt
1 TA
%_ 0 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 0 2 2 3 Th
0 Tq
14.5 0 Tl
0 Tc
0 Tw
(\r) TX
TO
0 To
1 0 0 1 119.0625 398.125 0 Tp
TP
0 Tr
1 g
(\r) TX
TO
0 To
1 0 0 1 116.8125 300.625 0 Tp
TP
0 Tr
0 g
(\r) TX
TO
1 Ap
0 R
0 G
492.7489 250.5064 m
492.5829 250.5929 L
145.4969 320.9999 L
145.6628 320.9134 L
492.7489 250.5064 L
s
502.5487 380.0587 m
502.0091 379.9988 L
133.2346 305.0981 L
133.7743 305.158 L
502.5487 380.0587 L
s
u
0 To
1 0 0 1 493.0625 372.5552 0 Tp
TP
-36.0102 0 Td
0 Tr
0 O
1 g
(State College) Tx
(\r) TX
32.6748 -14.5 Td
(1) Tx
(\r) TX 
TO
1 R
0 G
540.3126 354.0552 m
546.9395 354.0552 552.3125 359.4279 552.3125 366.0553 C
552.3125 375.0551 L
552.3125 381.6814 546.9395 387.0552 540.3126 387.0552 C
445.8124 387.0552 L
439.1857 387.0552 433.8125 381.6806 433.8125 375.0551 C
433.8125 366.0553 L
433.8125 359.4276 439.1857 354.0552 445.8124 354.0552 C
540.3126 354.0552 L
b
U
u
0 To
1 0 0 1 493.0625 263.5552 0 Tp
TP
-27.9946 0 Td
0 Tr
(Harrisburg) Tx
(\r) TX
24.6592 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
540.3126 245.0552 m
546.9395 245.0552 552.3125 250.4279 552.3125 257.0553 C
552.3125 266.0551 L
552.3125 272.6824 546.9395 278.0552 540.3126 278.0552 C
445.8124 278.0552 L
439.1855 278.0552 433.8125 272.6824 433.8125 266.0551 C
433.8125 257.0553 L
433.8125 250.4279 439.1855 245.0552 445.8124 245.0552 C
540.3126 245.0552 L
b
U
u
0 To
1 0 0 1 492.5 482 0 Tp
TP
-20.3423 0 Td
0 Tr
(Altoona) Tx
(\r) TX
17.0068 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
539.7501 463.5 m
546.377 463.5 551.75 468.8728 551.75 475.5001 C
551.75 484.4999 L
551.75 491.1272 546.377 496.5 539.7501 496.5 C
445.2499 496.5 L
438.623 496.5 433.25 491.1272 433.25 484.4999 C
433.25 475.5001 L
433.25 468.8728 438.623 463.5 445.2499 463.5 C
539.7501 463.5 L
b
U
0 g
300 Ar
434.422 482.382 m
434.422 482.9602 L
177.6413 482.9602 L
177.6413 482.382 L
434.422 482.382 L
f
u
0 To
1 0 0 1 120.0625 315.6177 0 Tp
TP
-24.0073 0 Td
0 Tr
1 g
800 Ar
(Scranton) Tx
(\r) TX
20.6719 -14.5 Td
(0) Tx
(\r) TX 
TO
0 R
0 G
165.3126 297.1177 m
171.9395 297.1177 177.3125 302.4904 177.3125 309.1178 C
177.3125 318.1176 L
177.3125 324.7449 171.9395 330.1177 165.3126 330.1177 C
70.8124 330.1177 L
64.1855 330.1177 58.8125 324.7449 58.8125 318.1176 C
58.8125 309.1178 L
58.8125 302.4904 64.1855 297.1177 70.8124 297.1177 C
165.3126 297.1177 L
b
U
0 g
300 Ar
438.3904 313.3984 m
438.3904 313.9766 L
181.6096 313.9766 L
181.6096 313.3984 L
438.3904 313.3984 L
f
u
0 To
1 0 0 1 493.0625 317.5552 0 Tp
TP
-20.3423 0 Td
0 Tr
1 g
800 Ar
(Altoona) Tx
(\r) TX
17.0068 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
540.3126 299.0552 m
546.9395 299.0552 552.3125 304.4279 552.3125 311.0553 C
552.3125 320.0551 L
552.3125 326.6824 546.9395 332.0552 540.3126 332.0552 C
445.8124 332.0552 L
439.1855 332.0552 433.8125 326.6824 433.8125 320.0551 C
433.8125 311.0553 L
433.8125 304.4279 439.1855 299.0552 445.8124 299.0552 C
540.3126 299.0552 L
b
U
0 R
478.407 544.2928 m
477.8674 544.2329 L
109.093 469.3322 L
109.6326 469.3921 L
478.407 544.2928 L
s
475.4385 414.2597 m
475.2725 414.35 L
128.1865 492.8653 L
128.3524 492.775 L
475.4385 414.2597 L
s
454.9997 544.9975 m
454.512 544.8064 L
154.5003 389.6275 L
154.988 389.8187 L
454.9997 544.9975 L
s
u
0 To
1 0 0 1 492.5 536 0 Tp
TP
-36.0102 0 Td
0 Tr
0 O
1 g
(State College) Tx
(\r) TX
32.6748 -14.5 Td
(1) Tx
(\r) TX 
TO
1 R
0 G
539.7501 517.5 m
546.377 517.5 551.75 522.8728 551.75 529.5001 C
551.75 538.4999 L
551.75 545.1262 546.377 550.5 539.7501 550.5 C
445.2499 550.5 L
438.6232 550.5 433.25 545.1254 433.25 538.4999 C
433.25 529.5001 L
433.25 522.8724 438.6232 517.5 445.2499 517.5 C
539.7501 517.5 L
b
U
u
0 To
1 0 0 1 117.75 483.3228 0 Tp
TP
-21.0073 0 Td
0 Tr
(Bedford) Tx
(\r) TX
17.6719 -14.5 Td
(0) Tx
(\r) TX 
TO
0 R
0 G
165.0001 464.8227 m
171.627 464.8227 177 470.1955 177 476.8229 C
177 485.8226 L
177 492.45 171.627 497.8227 165.0001 497.8227 C
70.4999 497.8227 L
63.873 497.8227 58.5 492.45 58.5 485.8226 C
58.5 476.8229 L
58.5 470.1955 63.873 464.8227 70.4999 464.8227 C
165.0001 464.8227 L
b
U
u
0 To
1 0 0 1 119.0625 403.125 0 Tp
TP
-21.0073 0 Td
0 Tr
(Bedford) Tx
(\r) TX
17.6719 -14.5 Td
(0) Tx
(\r) TX 
TO
0 R
0 G
166.3126 384.625 m
172.9395 384.625 178.3125 389.9978 178.3125 396.6251 C
178.3125 405.6249 L
178.3125 412.2522 172.9395 417.625 166.3126 417.625 C
71.8124 417.625 L
65.1855 417.625 59.8125 412.2522 59.8125 405.6249 C
59.8125 396.6251 L
59.8125 389.9978 65.1855 384.625 71.8124 384.625 C
166.3126 384.625 L
b
U
u
0 To
1 0 0 1 492.5 427 0 Tp
TP
-27.9946 0 Td
0 Tr
(Harrisburg) Tx
(\r) TX
24.6592 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
539.7501 408.5 m
546.377 408.5 551.75 413.8728 551.75 420.5001 C
551.75 429.4999 L
551.75 436.1272 546.377 441.5 539.7501 441.5 C
445.2499 441.5 L
438.623 441.5 433.25 436.1272 433.25 429.4999 C
433.25 420.5001 L
433.25 413.8728 438.623 408.5 445.2499 408.5 C
539.7501 408.5 L
b
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument

 endTexFig
 71 1449 a Fg(Figure)36 b(17.9.)j Fi(T)-8 b(ree)30 b(resulting)f(from)h
(remo)m(v)-5 b(al)30 b(of)g Ff(x)1954 1463 y Fc(23)2062
1449 y Fi(from)g(the)f(basis)183 1612 y(Some)24 b Ff(w)486
1626 y Fe(ij)575 1612 y Fi(are)g(still)h(negativ)m(e,)g(ho)m(w)m(ev)m
(er,)i(so)d(the)g(table)f(is)j(not)d(optimal.)0 1722
y(W)-8 b(e)38 b(ha)m(v)m(e)f(three)f(negativ)m(e)h(en)m(tries)g(in)h
(the)e(table)h(from)g(whic)m(h)g(to)g(c)m(ho)s(ose.)0
1832 y(Cho)s(osing)g Ff(w)472 1846 y Fc(14)588 1832 y
Fi(=)i Fk(\000)p Fi(15)f(corresp)s(onds)d(to)j(adding)f(an)h(edge)f(to)
h(the)f(graph)0 1941 y(from)30 b(w)m(arehouse)f(1)h(to)f(store)g(4,)i
(creating)d(the)h(lo)s(op)871 2154 y(\(1)p Ff(;)15 b
Fi(4\))p Ff(;)g Fi(\(1)p Ff(;)g Fi(1\))p Ff(;)g Fi(\(2)p
Ff(;)g Fi(1\))p Ff(;)g Fi(\(2)p Ff(;)g Fi(4\))p Ff(:)183
2367 y Fi(Cho)s(osing)k Ff(w)637 2381 y Fc(15)740 2367
y Fi(=)26 b Fk(\000)p Fi(20)20 b(corresp)s(onds)e(to)j(adding)f(an)g
(edge)g(to)g(the)g(graph)0 2477 y(from)30 b(w)m(arehouse)f(1)h(to)f
(store)g(5,)i(creating)d(the)h(lo)s(op)313 2690 y(\(1)p
Ff(;)15 b Fi(5\))p Ff(;)g Fi(\(1)p Ff(;)g Fi(1\))p Ff(;)g
Fi(\(2)p Ff(;)g Fi(1\))p Ff(;)g Fi(\(2)p Ff(;)g Fi(4\))p
Ff(;)g Fi(\(3)p Ff(;)g Fi(4\))p Ff(;)g Fi(\(3)p Ff(;)g
Fi(5\))57 b(\(Figure)29 b(17)p Ff(:)p Fi(10\))p Ff(:)30
2224 y
 18945146 10893473 1315635 16050749 36377313 53020098 startTexFig
 30 2224 a
%%BeginDocument: Fig.17.10.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(r) 6.0
%%For: (Christopher Byrne) (Penn State)
%%Title: (ch6fig7.eps)
%%CreationDate: (11/12/18) (2:36)
%%BoundingBox: 20 244 553 806
%%HiResBoundingBox: 20.8125 244.5552 552.8125 805.4043
%%DocumentProcessColors: Black
%%DocumentFonts: CMR
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set)
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 62 -44 733 238
%AI3_DocumentPreview: Header
%AI5_ArtSize: 504 324
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 300
%AI5_NumLayers: 1
%AI5_OpenToView: -126 708 -1 790 529 58 1 1 3 42
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: CMR
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _CMR CMR
[/_CMR/CMR 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0D0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A
4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777776757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404050505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
1 Ap
0 R
0 G
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
459.8877 363.4825 m
459.9524 363.4739 460.3341 359.6291 460.3958 359.6503 c
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
459.7474 359.5423 l
459.7474 363.5423 l
460.028 363.5225 l
456.248 364.058 455.6869 360.0976 451.9069 360.6331 c
448.1657 361.1631 448.7268 365.1236 444.9857 365.6536 c
441.2198 366.1871 440.6587 362.2267 436.8928 362.7602 c
433.0998 363.2976 433.6609 367.258 429.8678 367.7954 c
426.1111 368.3276 425.55 364.3672 421.7932 364.8994 c
418.0064 365.4359 418.5675 369.3963 414.7806 369.9328 c
411.0285 370.4644 410.4674 366.504 406.7153 367.0355 c
402.9297 367.5719 403.4907 371.5323 399.7051 372.0686 c
395.9521 372.6003 395.391 368.6399 391.6381 369.1716 c
387.8474 369.7086 388.4085 373.6691 384.6178 374.2061 c
380.8572 374.7389 380.2961 370.7784 376.5354 371.3112 c
372.8046 371.8398 373.3657 375.8002 369.6348 376.3288 c
365.8601 376.8636 365.299 372.9031 361.5242 373.4379 c
357.7756 373.969 358.3367 377.9294 354.588 378.4605 c
350.7886 378.9988 350.2274 375.0384 346.428 375.5766 c
342.6496 376.1119 343.2106 380.0724 339.4322 380.6077 c
335.6736 381.1402 335.1125 377.1797 331.3538 377.7122 c
327.6136 378.2421 328.1747 382.2026 324.4345 382.7325 c
320.711 383.26 320.1499 379.2995 316.4265 379.8271 c
312.6343 380.3643 313.1954 384.3248 309.4032 384.862 c
305.6183 385.3983 305.0572 381.4378 301.2723 381.974 c
297.4912 382.5097 298.0523 386.4701 294.2713 387.0058 c
290.49 387.5415 289.9289 383.5811 286.1477 384.1168 c
282.3612 384.6532 282.9223 388.6136 279.1359 389.1501 c
275.4322 389.6748 274.8711 385.7144 271.1674 386.2391 c
267.453 386.7653 268.0141 390.7257 264.2998 391.252 c
260.5671 391.7808 260.0059 387.8203 256.2732 388.3492 c
252.5124 388.882 253.0735 392.8424 249.3126 393.3753 c
245.6165 393.8989 245.0555 389.9384 241.3594 390.4621 c
237.6185 390.9921 238.1796 394.9525 234.4387 395.4825 c
230.7475 396.0054 230.1864 392.045 226.4953 392.5679 c
222.7311 393.1012 223.2922 397.0617 219.528 397.595 c
215.7842 398.1253 215.2231 394.1649 211.4794 394.6953 c
207.7398 395.2251 208.3009 399.1855 204.5613 399.7153 c
200.8016 400.248 200.2405 396.2875 196.4808 396.8202 c
192.8077 397.3405 193.3688 401.301 189.6957 401.8214 c
185.9384 402.3537 185.3773 398.3932 181.62 398.9255 c
177.8601 399.4582 178.4212 403.4187 174.6614 403.9513 c
170.9962 404.4706 170.4351 400.5101 166.7698 401.0294 c
163.1423 401.5433 163.7034 405.5038 160.0759 406.0177 c
156.6787 406.499 156.1384 402.5651 152.7372 403.0175 c
152.6725 403.0261 152.2906 406.8708 152.2289 406.8497 c
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.8776 402.9578 l
152.8776 406.9578 l
152.597 402.9775 l
156.377 402.442 156.9381 406.4025 160.7181 405.8669 c
164.4593 405.3369 163.8982 401.3765 167.6393 400.8464 c
171.4052 400.3129 171.9663 404.2734 175.7321 403.7398 c
179.5252 403.2024 178.9641 399.242 182.7572 398.7046 c
186.5139 398.1724 187.075 402.1329 190.8318 401.6006 c
194.6186 401.0641 194.0575 397.1037 197.8444 396.5672 c
201.5965 396.0356 202.1576 399.9961 205.9097 399.4645 c
209.6953 398.9282 209.1343 394.9677 212.9199 394.4314 c
216.6728 393.8997 217.2339 397.8601 220.9869 397.3285 c
224.7776 396.7914 224.2165 392.831 228.0072 392.2939 c
231.7678 391.7611 232.3289 395.7216 236.0896 395.1888 c
239.8204 394.6602 239.2593 390.6998 242.9902 390.1712 c
246.7649 389.6365 247.326 393.5969 251.1008 393.0621 c
254.8494 392.531 254.2883 388.5706 258.037 388.0395 c
261.8365 387.5012 262.3976 391.4617 266.197 390.9234 c
269.9754 390.3881 269.4144 386.4277 273.1928 385.8923 c
276.9514 385.3598 277.5125 389.3203 281.2712 388.7878 c
285.0114 388.2579 284.4503 384.2975 288.1905 383.7676 c
291.914 383.24 292.4751 387.2005 296.1985 386.673 c
299.9907 386.1357 299.4296 382.1753 303.2218 381.638 c
307.0067 381.1018 307.5678 385.0622 311.3527 384.526 c
315.1338 383.9903 314.5727 380.0299 318.3537 379.4942 c
322.135 378.9585 322.6961 382.919 326.4774 382.3833 c
330.2638 381.8468 329.7027 377.8864 333.4891 377.35 c
337.1928 376.8252 337.7539 380.7857 341.4577 380.261 c
345.172 379.7347 344.6109 375.7743 348.3253 375.2481 c
352.058 374.7192 352.6191 378.6797 356.3518 378.1509 c
360.1127 377.618 359.5516 373.6576 363.3125 373.1248 c
367.0085 372.6011 367.5696 376.5616 371.2657 376.038 c
375.0066 375.508 374.4455 371.5475 378.1864 371.0175 c
381.8776 370.4946 382.4387 374.4551 386.1298 373.9321 c
389.894 373.3988 389.3329 369.4384 393.0971 368.9051 c
396.8409 368.3747 397.402 372.3351 401.1457 371.8047 c
404.8854 371.2749 404.3242 367.3145 408.0639 366.7847 c
411.8235 366.252 412.3847 370.2125 416.1443 369.6799 c
419.8175 369.1595 419.2564 365.199 422.9295 364.6786 c
426.6868 364.1463 427.2479 368.1068 431.0052 367.5745 c
434.7651 367.0418 434.204 363.0813 437.9639 362.5487 c
441.6291 362.0294 442.1903 365.9898 445.8555 365.4706 c
449.4831 364.9566 449.2508 360.315 452.9116 360.4641 c
456.5066 360.6106 456.4868 363.9349 459.8877 363.4825 c
s
0 Ap
300 Ar
2 w
308.3125 419.625 m
S
0 To
1 0 0 1 20.8125 794.125 0 Tp
TP
0 Tr
0 O
0 g
800 Ar
1 w
/_CMR 12 Tf
0 Ts
100 Tz
0 Tt
1 TA
%_ 0 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 0 2 2 3 Th
0 Tq
14.5 0 Tl
0 Tc
0 Tw
(\r) TX
TO
0 To
1 0 0 1 119.0625 398.125 0 Tp
TP
0 Tr
1 g
(\r) TX
TO
0 To
1 0 0 1 116.8125 300.625 0 Tp
TP
0 Tr
0 g
(\r) TX
TO
1 Ap
0 R
0 G
492.7489 250.5064 m
492.5829 250.5929 L
145.4969 320.9999 L
145.6628 320.9134 L
492.7489 250.5064 L
s
502.1455 382.0176 m
502.2627 382.0417 502.2092 382.0333 502.0903 382.0201 c
501.9519 382.0047 502.393 378.0291 502.2545 378.0138 c
502.2421 378.0124 501.8006 381.9879 501.7882 381.9866 c
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
502.0091 377.9988 l
502.0091 381.9988 l
501.6111 381.9588 l
497.0603 381.0345 497.8564 377.1145 493.3056 376.1902 c
488.7743 375.2699 487.9782 379.1898 483.4469 378.2695 c
478.9347 377.3531 479.7309 373.433 475.2186 372.5166 c
470.6604 371.5908 469.8643 375.5108 465.3061 374.585 c
460.7636 373.6624 461.5597 369.7424 457.0172 368.8198 c
452.4895 367.9002 451.6934 371.8201 447.1656 370.9005 c
442.6518 369.9838 443.448 366.0637 438.9342 365.147 c
434.4332 364.2328 433.6371 368.1528 429.1362 367.2386 c
424.5782 366.3129 425.3744 362.3928 420.8164 361.4671 c
416.266 360.5429 415.4699 364.4628 410.9195 363.5387 c
406.375 362.6157 407.1712 358.6956 402.6267 357.7727 c
398.0862 356.8505 397.2901 360.7704 392.7496 359.8482 c
388.2109 358.9264 389.0071 355.0064 384.4684 354.0846 c
379.9292 353.1627 379.1331 357.0826 374.5938 356.1607 c
370.0512 355.2381 370.8474 351.318 366.3047 350.3954 c
361.7555 349.4715 360.9594 353.3914 356.4102 352.4675 c
351.9289 351.5573 352.7251 347.6373 348.2439 346.7271 c
343.7527 345.815 342.9566 349.7349 338.4653 348.8227 c
333.9598 347.9077 334.756 343.9876 330.2504 343.0726 c
325.7254 342.1535 324.9293 346.0735 320.4043 345.1544 c
315.8538 344.2302 316.6499 340.3102 312.0994 339.386 c
307.6028 338.4727 306.8067 342.3926 302.3101 341.4794 c
297.7787 340.5591 298.5749 336.639 294.0435 335.7187 c
289.5586 334.8078 288.7625 338.7277 284.2777 337.8169 c
279.7449 336.8963 280.5411 332.9762 276.0083 332.0556 c
271.5106 331.1421 270.7145 335.0621 266.2168 334.1486 c
261.75 333.2414 262.5462 329.3213 258.0794 328.4141 c
253.5372 327.4916 252.7412 331.4116 248.199 330.4891 c
243.6656 329.5683 244.4618 325.6483 239.9284 324.7276 c
235.3927 323.8064 234.5966 327.7263 230.0609 326.8051 c
225.6201 325.9032 226.4163 321.9831 221.9756 321.0812 c
217.5124 320.1747 216.7163 324.0946 212.2531 323.1882 c
207.7439 322.2724 208.5401 318.3523 204.0309 317.4365 c
199.5702 316.5305 198.7741 320.4504 194.3133 319.5445 c
189.8814 318.6443 190.6776 314.7243 186.2456 313.8242 c
181.812 312.9237 181.0159 316.8436 176.5822 315.9431 c
172.0974 315.0323 172.8936 311.1122 168.4088 310.2014 c
163.9521 309.2962 163.156 313.2162 158.6993 312.311 c
154.3625 311.4302 155.1587 307.5102 150.8219 306.6294 c
146.3556 305.7223 145.5595 309.6422 141.0932 308.7351 c
136.9649 307.8966 137.764 303.9885 133.6379 303.1392 c
133.5207 303.1151 133.5742 303.1235 133.6931 303.1367 c
133.8316 303.1521 133.3902 307.1277 133.5287 307.143 c
133.5411 307.1444 133.9832 303.1689 133.9957 303.1703 c
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
133.7743 303.158 l
133.7743 307.158 l
134.1724 303.198 l
138.7232 304.1223 137.927 308.0423 142.4778 308.9666 c
147.0091 309.8869 147.8052 305.967 152.3365 306.8873 c
156.8488 307.8037 156.0526 311.7238 160.5648 312.6402 c
165.123 313.566 165.9191 309.6461 170.4773 310.5718 c
175.0199 311.4944 174.2237 315.4145 178.7662 316.337 c
183.294 317.2566 184.0901 313.3367 188.6178 314.2563 c
193.1316 315.173 192.3354 319.0931 196.8493 320.0098 c
201.3502 320.924 202.1463 317.0041 206.6472 317.9182 c
211.2052 318.8439 210.409 322.764 214.967 323.6897 c
219.5174 324.6139 220.3135 320.694 224.8639 321.6181 c
229.4084 322.5411 228.6122 326.4612 233.1567 327.3842 c
237.6972 328.3063 238.4933 324.3864 243.0339 325.3086 c
247.5725 326.2304 246.7763 330.1504 251.315 331.0722 c
255.8543 331.9941 256.6504 328.0742 261.1896 328.9961 c
265.7323 329.9187 264.9361 333.8388 269.4787 334.7614 c
274.028 335.6853 274.824 331.7654 279.3733 332.6893 c
283.8545 333.5995 283.0583 337.5195 287.5396 338.4297 c
292.0308 339.3418 292.8269 335.4219 297.3181 336.3341 c
301.8237 337.2491 301.0275 341.1692 305.533 342.0842 c
310.0581 343.0033 310.8541 339.0834 315.3792 340.0024 c
319.9297 340.9266 319.1336 344.8466 323.6841 345.7709 c
328.1807 346.6841 328.9768 342.7642 333.4734 343.6775 c
338.0048 344.5978 337.2086 348.5178 341.74 349.4382 c
346.2249 350.349 347.021 346.4291 351.5058 347.34 c
356.0386 348.2606 355.2424 352.1806 359.7752 353.1012 c
364.2729 354.0147 365.069 350.0948 369.5667 351.0083 c
374.0335 351.9154 373.2373 355.8355 377.7041 356.7427 c
382.2463 357.6652 383.0424 353.7453 387.5845 354.6678 c
392.1179 355.5885 391.3217 359.5086 395.8551 360.4293 c
400.3908 361.3505 401.187 357.4306 405.7227 358.3518 c
410.1634 359.2537 409.3672 363.1737 413.8079 364.0756 c
418.2712 364.9821 419.0673 361.0622 423.5305 361.9687 c
428.0397 362.8845 427.2435 366.8045 431.7527 367.7203 c
436.2135 368.6263 437.0095 364.7064 441.4703 365.6124 c
445.9022 366.5125 445.1061 370.4325 449.538 371.3327 c
453.9717 372.2331 454.7678 368.3132 459.2015 369.2137 c
463.6863 370.1246 462.8901 374.0446 467.3749 374.9555 c
471.8316 375.8606 472.6277 371.9407 477.0845 372.8459 c
481.4213 373.7267 480.6251 377.6467 484.962 378.5275 c
489.4283 379.4346 490.6925 374.9454 494.9758 376.5021 c
499.0692 377.9898 498.0197 381.1683 502.1455 382.0176 c
s
u
0 To
1 0 0 1 493.0625 372.5552 0 Tp
TP
-36.0102 0 Td
0 Tr
0 O
1 g
(State College) Tx
(\r) TX
32.6748 -14.5 Td
(1) Tx
(\r) TX 
TO
1 R
0 G
540.3126 354.0552 m
546.9395 354.0552 552.3125 359.4279 552.3125 366.0553 C
552.3125 375.0551 L
552.3125 381.6814 546.9395 387.0552 540.3126 387.0552 C
445.8124 387.0552 L
439.1857 387.0552 433.8125 381.6806 433.8125 375.0551 C
433.8125 366.0553 L
433.8125 359.4276 439.1857 354.0552 445.8124 354.0552 C
540.3126 354.0552 L
b
U
u
0 To
1 0 0 1 493.0625 263.5552 0 Tp
TP
-27.9946 0 Td
0 Tr
(Harrisburg) Tx
(\r) TX
24.6592 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
540.3126 245.0552 m
546.9395 245.0552 552.3125 250.4279 552.3125 257.0553 C
552.3125 266.0551 L
552.3125 272.6824 546.9395 278.0552 540.3126 278.0552 C
445.8124 278.0552 L
439.1855 278.0552 433.8125 272.6824 433.8125 266.0551 C
433.8125 257.0553 L
433.8125 250.4279 439.1855 245.0552 445.8124 245.0552 C
540.3126 245.0552 L
b
U
u
0 To
1 0 0 1 492.5 482 0 Tp
TP
-20.3423 0 Td
0 Tr
(Altoona) Tx
(\r) TX
17.0068 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
539.7501 463.5 m
546.377 463.5 551.75 468.8728 551.75 475.5001 C
551.75 484.4999 L
551.75 491.1272 546.377 496.5 539.7501 496.5 C
445.2499 496.5 L
438.623 496.5 433.25 491.1272 433.25 484.4999 C
433.25 475.5001 L
433.25 468.8728 438.623 463.5 445.2499 463.5 C
539.7501 463.5 L
b
U
0 g
300 Ar
434.422 482.382 m
434.422 482.9602 L
177.6413 482.9602 L
177.6413 482.382 L
434.422 482.382 L
f
u
0 To
1 0 0 1 120.0625 315.6177 0 Tp
TP
-24.0073 0 Td
0 Tr
1 g
800 Ar
(Scranton) Tx
(\r) TX
20.6719 -14.5 Td
(0) Tx
(\r) TX 
TO
0 R
0 G
165.3126 297.1177 m
171.9395 297.1177 177.3125 302.4904 177.3125 309.1178 C
177.3125 318.1176 L
177.3125 324.7449 171.9395 330.1177 165.3126 330.1177 C
70.8124 330.1177 L
64.1855 330.1177 58.8125 324.7449 58.8125 318.1176 C
58.8125 309.1178 L
58.8125 302.4904 64.1855 297.1177 70.8124 297.1177 C
165.3126 297.1177 L
b
U
0 g
300 Ar
438.3088 315.3967 m
438.4241 315.4014 440.3904 313.5138 440.3904 313.6292 c
440.3904 313.7696 436.3904 313.7696 436.3904 313.91 c
436.3904 313.9433 440.3904 313.9433 440.3904 313.9766 c
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 311.9766 l
438.3904 315.9766 l
438.3904 315.9766 l
435.2353 315.9766 435.2353 311.9766 432.0802 311.9766 c
428.9157 311.9766 428.9157 315.9766 425.7513 315.9766 c
422.576 315.9766 422.576 311.9766 419.4007 311.9766 c
416.2131 311.9766 416.2131 315.9766 413.0254 315.9766 c
409.8906 315.9766 409.8905 311.9766 406.7557 311.9766 c
403.6076 311.9766 403.6076 315.9766 400.4595 315.9766 c
397.2963 315.9766 397.2963 311.9766 394.1331 311.9766 c
390.9528 311.9766 390.9527 315.9766 387.7724 315.9766 c
384.643 315.9766 384.643 311.9766 381.5136 311.9766 c
378.3654 311.9766 378.3654 315.9766 375.2171 315.9766 c
372.0475 315.9766 372.0475 311.9766 368.8779 311.9766 c
365.6839 311.9766 365.6838 315.9766 362.4898 315.9766 c
359.3431 315.9766 359.3431 311.9766 356.1963 311.9766 c
353.0221 311.9766 353.0221 315.9766 349.8479 315.9766 c
346.7196 315.9766 346.7196 311.9766 343.5913 311.9766 c
340.4316 311.9766 340.4316 315.9766 337.2719 315.9766 c
334.1562 315.9766 334.1562 311.9766 331.0405 311.9766 c
327.8886 311.9766 327.8885 315.9766 324.7366 315.9766 c
321.5427 315.9766 321.5427 311.9766 318.3489 311.9766 c
315.1918 311.9766 315.1918 315.9766 312.0347 315.9766 c
308.9142 315.9766 308.9143 311.9766 305.7938 311.9766 c
302.6216 311.9766 302.6216 315.9766 299.4494 315.9766 c
296.3073 315.9766 296.3073 311.9766 293.1653 311.9766 c
290.0522 311.9766 290.0522 315.9766 286.9391 315.9766 c
283.7586 315.9766 283.7586 311.9766 280.5781 311.9766 c
277.4154 311.9766 277.4154 315.9766 274.2527 315.9766 c
271.104 315.9766 271.104 311.9766 267.9553 311.9766 c
264.8158 311.9766 264.8159 315.9766 261.6764 315.9766 c
258.5399 315.9766 258.5399 311.9766 255.4035 311.9766 c
252.262 311.9766 252.262 315.9766 249.1205 315.9766 c
245.9634 315.9766 245.9634 311.9766 242.8062 311.9766 c
239.738 311.9766 239.738 315.9766 236.6698 315.9766 c
233.5686 315.9766 233.5686 311.9766 230.4674 311.9766 c
227.3101 311.9766 227.3101 315.9766 224.1528 315.9766 c
221.0435 315.9766 221.0435 311.9766 217.9342 311.9766 c
214.8572 311.9766 214.8571 315.9766 211.7801 315.9766 c
208.7096 315.9766 208.7096 311.9766 205.6391 311.9766 c
202.5307 311.9766 202.5307 315.9766 199.4223 315.9766 c
196.377 315.9766 196.3771 311.9766 193.3318 311.9766 c
190.2971 311.9766 190.2971 315.9766 187.2624 315.9766 c
184.436 315.9766 184.5152 312.0936 181.6912 311.9783 c
181.5759 311.9736 179.6096 313.8612 179.6096 313.7458 c
179.6096 313.6054 183.6096 313.6054 183.6096 313.465 c
183.6096 313.4317 179.6096 313.4317 179.6096 313.3984 c
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
181.6096 315.3984 l
181.6096 311.3984 l
184.7647 311.3984 184.7647 315.3984 187.9198 315.3984 c
191.0843 315.3984 191.0843 311.3984 194.2487 311.3984 c
197.424 311.3984 197.424 315.3984 200.5993 315.3984 c
203.7869 315.3984 203.7869 311.3984 206.9745 311.3984 c
210.1094 311.3984 210.1094 315.3984 213.2443 315.3984 c
216.3924 315.3984 216.3924 311.3984 219.5405 311.3984 c
222.7037 311.3984 222.7037 315.3984 225.8669 315.3984 c
229.0472 315.3984 229.0473 311.3984 232.2276 311.3984 c
235.357 311.3984 235.357 315.3984 238.4864 315.3984 c
241.6346 315.3984 241.6346 311.3984 244.7828 311.3984 c
247.9525 311.3984 247.9525 315.3984 251.1221 315.3984 c
254.3161 315.3984 254.3161 311.3984 257.5101 311.3984 c
260.6569 311.3984 260.6569 315.3984 263.8037 315.3984 c
266.9779 315.3984 266.9779 311.3984 270.1521 311.3984 c
273.2804 311.3984 273.2804 315.3984 276.4087 315.3984 c
279.5684 315.3984 279.5684 311.3984 282.7281 311.3984 c
285.8437 311.3984 285.8438 315.3984 288.9595 315.3984 c
292.1114 315.3984 292.1114 311.3984 295.2634 311.3984 c
298.4573 311.3984 298.4573 315.3984 301.6511 315.3984 c
304.8082 315.3984 304.8082 311.3984 307.9653 311.3984 c
311.0858 311.3984 311.0857 315.3984 314.2062 315.3984 c
317.3784 315.3984 317.3784 311.3984 320.5506 311.3984 c
323.6927 311.3984 323.6927 315.3984 326.8347 315.3984 c
329.9478 315.3984 329.9478 311.3984 333.0609 311.3984 c
336.2414 311.3984 336.2414 315.3984 339.4219 315.3984 c
342.5846 315.3984 342.5846 311.3984 345.7473 311.3984 c
348.896 311.3984 348.896 315.3984 352.0447 315.3984 c
355.1842 315.3984 355.1841 311.3984 358.3236 311.3984 c
361.4601 311.3984 361.4601 315.3984 364.5965 315.3984 c
367.738 315.3984 367.738 311.3984 370.8795 311.3984 c
374.0366 311.3984 374.0366 315.3984 377.1938 315.3984 c
380.262 315.3984 380.262 311.3984 383.3302 311.3984 c
386.4314 311.3984 386.4314 315.3984 389.5326 315.3984 c
392.6899 315.3984 392.6899 311.3984 395.8471 311.3984 c
398.9565 311.3984 398.9565 315.3984 402.0658 315.3984 c
405.1428 315.3984 405.1428 311.3984 408.2199 311.3984 c
411.2904 311.3984 411.2904 315.3984 414.3609 315.3984 c
417.4693 315.3984 417.4693 311.3984 420.5777 311.3984 c
423.623 311.3984 423.6229 315.3984 426.6682 315.3984 c
429.7029 315.3984 430.1875 310.8087 433.1553 311.4425 c
436.081 312.0673 435.4848 315.2814 438.3088 315.3967 c
f
0 R
0 G
800 Ar
478.0038 546.2517 m
478.121 546.2758 478.0675 546.2674 477.9486 546.2542 c
477.8102 546.2388 478.2513 542.2632 478.1128 542.2479 c
478.1004 542.2465 477.6589 546.222 477.6465 546.2207 c
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.8674 542.2329 l
477.8674 546.2329 l
477.4694 546.1929 l
472.9186 545.2686 473.7147 541.3486 469.1639 540.4243 c
464.6326 539.504 463.8365 543.4239 459.3052 542.5036 c
454.793 541.5872 455.5892 537.6671 451.0769 536.7507 c
446.5187 535.8249 445.7226 539.7449 441.1644 538.8191 c
436.6219 537.8965 437.4181 533.9765 432.8755 533.0539 c
428.3478 532.1343 427.5517 536.0542 423.0239 535.1346 c
418.5101 534.2179 419.3063 530.2978 414.7925 529.3811 c
410.2915 528.4669 409.4954 532.3869 404.9945 531.4727 c
400.4365 530.547 401.2327 526.6269 396.6747 525.7012 c
392.1243 524.777 391.3282 528.6969 386.7778 527.7728 c
382.2333 526.8498 383.0295 522.9297 378.485 522.0068 c
373.9445 521.0846 373.1484 525.0045 368.6079 524.0823 c
364.0692 523.1605 364.8654 519.2405 360.3267 518.3187 c
355.7875 517.3968 354.9914 521.3167 350.4521 520.3948 c
345.9095 519.4722 346.7057 515.5521 342.163 514.6295 c
337.6138 513.7056 336.8177 517.6255 332.2685 516.7016 c
327.7872 515.7914 328.5834 511.8714 324.1022 510.9612 c
319.611 510.0491 318.8149 513.969 314.3236 513.0569 c
309.8181 512.1418 310.6143 508.2217 306.1087 507.3067 c
301.5837 506.3876 300.7876 510.3076 296.2626 509.3885 c
291.7121 508.4643 292.5082 504.5443 287.9577 503.6201 c
283.4611 502.7068 282.665 506.6267 278.1684 505.7135 c
273.637 504.7932 274.4332 500.8731 269.9018 499.9528 c
265.4169 499.0419 264.6208 502.9618 260.136 502.051 c
255.6032 501.1304 256.3994 497.2103 251.8666 496.2897 c
247.3689 495.3762 246.5728 499.2962 242.0751 498.3827 c
237.6083 497.4755 238.4045 493.5554 233.9377 492.6483 c
229.3955 491.7257 228.5995 495.6457 224.0573 494.7232 c
219.5239 493.8024 220.3201 489.8824 215.7867 488.9617 c
211.251 488.0405 210.4549 491.9604 205.9192 491.0392 c
201.4785 490.1373 202.2746 486.2172 197.8339 485.3153 c
193.3707 484.4088 192.5746 488.3287 188.1114 487.4223 c
183.6022 486.5065 184.3984 482.5864 179.8892 481.6706 c
175.4285 480.7646 174.6324 484.6845 170.1716 483.7786 c
165.7397 482.8784 166.5359 478.9584 162.1039 478.0583 c
157.6703 477.1578 156.8742 481.0777 152.4405 480.1772 c
147.9557 479.2664 148.7519 475.3463 144.2671 474.4355 c
139.8104 473.5303 139.0143 477.4503 134.5576 476.5451 c
130.2208 475.6643 131.017 471.7443 126.6802 470.8635 c
122.2139 469.9564 121.4178 473.8763 116.9515 472.9692 c
112.8232 472.1307 113.6223 468.2226 109.4962 467.3733 c
109.379 467.3492 109.4325 467.3576 109.5514 467.3708 c
109.6899 467.3862 109.2485 471.3618 109.387 471.3771 c
109.3994 471.3785 109.8415 467.403 109.854 467.4044 c
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
109.6326 467.3921 l
109.6326 471.3921 l
110.0307 467.4321 l
114.5815 468.3564 113.7853 472.2764 118.3361 473.2007 c
122.8674 474.121 123.6635 470.2011 128.1948 471.1214 c
132.7071 472.0378 131.9109 475.9579 136.4231 476.8743 c
140.9813 477.8001 141.7774 473.8802 146.3356 474.8059 c
150.8782 475.7285 150.082 479.6486 154.6246 480.5711 c
159.1523 481.4907 159.9484 477.5708 164.4761 478.4904 c
168.9899 479.4071 168.1938 483.3272 172.7076 484.2439 c
177.2085 485.1581 178.0046 481.2382 182.5055 482.1523 c
187.0635 483.078 186.2673 486.9981 190.8253 487.9238 c
195.3757 488.848 196.1718 484.9281 200.7222 485.8522 c
205.2667 486.7752 204.4705 490.6953 209.015 491.6183 c
213.5556 492.5404 214.3516 488.6205 218.8922 489.5427 c
223.4308 490.4645 222.6347 494.3845 227.1733 495.3063 c
231.7126 496.2282 232.5087 492.3083 237.048 493.2302 c
241.5906 494.1528 240.7944 498.0729 245.337 498.9955 c
249.8863 499.9194 250.6824 495.9995 255.2316 496.9234 c
259.7128 497.8336 258.9167 501.7536 263.3979 502.6638 c
267.8891 503.5759 268.6852 499.656 273.1764 500.5682 c
277.682 501.4832 276.8858 505.4033 281.3913 506.3183 c
285.9164 507.2374 286.7124 503.3175 291.2375 504.2365 c
295.788 505.1607 294.9919 509.0807 299.5424 510.005 c
304.039 510.9182 304.8351 506.9983 309.3317 507.9116 c
313.8631 508.8319 313.0669 512.7519 317.5984 513.6723 c
322.0832 514.5831 322.8793 510.6632 327.3641 511.5741 c
331.8969 512.4947 331.1007 516.4147 335.6336 517.3353 c
340.1313 518.2488 340.9273 514.3289 345.425 515.2424 c
349.8918 516.1495 349.0956 520.0696 353.5624 520.9768 c
358.1046 521.8993 358.9007 517.9794 363.4428 518.9019 c
367.9762 519.8226 367.18 523.7427 371.7134 524.6634 c
376.2491 525.5846 377.0453 521.6647 381.581 522.5859 c
386.0217 523.4878 385.2255 527.4078 389.6662 528.3097 c
394.1295 529.2162 394.9256 525.2963 399.3888 526.2028 c
403.898 527.1186 403.1018 531.0386 407.611 531.9544 c
412.0718 532.8604 412.8678 528.9405 417.3286 529.8465 c
421.7606 530.7466 420.9644 534.6666 425.3963 535.5668 c
429.83 536.4672 430.6261 532.5473 435.0598 533.4478 c
439.5446 534.3587 438.7484 538.2787 443.2332 539.1896 c
447.69 540.0947 448.486 536.1748 452.9428 537.08 c
457.2796 537.9608 456.4835 541.8808 460.8203 542.7616 c
465.2866 543.6687 466.5508 539.1795 470.8341 540.7362 c
474.9276 542.2239 473.878 545.4024 478.0038 546.2517 c
s
475.4385 414.2597 m
475.2725 414.35 L
128.1865 492.8653 L
128.3524 492.775 L
475.4385 414.2597 L
s
454.0749 546.7709 m
454.1831 546.8273 454.1562 546.8151 454.0426 546.7705 c
453.9165 546.7211 455.3762 542.997 455.2501 542.9475 c
455.246 542.9459 453.7865 546.6702 453.7824 546.6686 c
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
454.512 542.8064 l
454.512 546.8064 l
453.5932 546.5828 l
449.9226 544.6842 451.7603 541.1314 448.0897 539.2328 c
444.3907 537.3195 442.553 540.8724 438.854 538.9591 c
435.1819 537.0597 437.0196 533.5068 433.3475 531.6075 c
429.644 529.6918 427.8062 533.2447 424.1027 531.3291 c
420.4242 529.4264 422.2619 525.8735 418.5834 523.9708 c
414.8699 522.05 413.0322 525.6029 409.3186 523.6821 c
405.6278 521.773 407.4655 518.2202 403.7746 516.3111 c
400.1061 514.4136 398.2683 517.9664 394.5998 516.0689 c
390.8909 514.1505 392.7286 510.5977 389.0198 508.6793 c
385.33 506.7707 383.4923 510.3236 379.8025 508.4151 c
376.1313 506.5162 377.9689 502.9633 374.2977 501.0644 c
370.6441 499.1746 368.8064 502.7275 365.1529 500.8377 c
361.4502 498.9225 363.2879 495.3696 359.5851 493.4544 c
355.8952 491.5458 354.0575 495.0987 350.3676 493.1901 c
346.6892 491.2875 348.5269 487.7346 344.8485 485.832 c
341.1799 483.9344 339.3422 487.4873 335.6736 485.5897 c
332.013 483.6963 333.8507 480.1435 330.1902 478.2501 c
326.5355 476.3597 324.6978 479.9126 321.0431 478.0222 c
317.3918 476.1336 319.2295 472.5808 315.5782 470.6921 c
311.9275 468.8038 310.0897 472.3567 306.4389 470.4683 c
302.7852 468.5784 304.6229 465.0256 300.9691 463.1357 c
297.3084 461.2422 295.4706 464.7951 291.8099 462.9015 c
288.1373 461.0019 289.975 457.4491 286.3024 455.5494 c
282.6121 453.6406 280.7743 457.1935 277.084 455.2847 c
273.3689 453.363 275.2066 449.8102 271.4914 447.8885 c
267.8294 445.9944 265.9916 449.5472 262.3296 447.6531 c
258.6311 445.74 260.4688 442.1872 256.7703 440.2742 c
253.1151 438.3835 251.2774 441.9364 247.6222 440.0458 c
243.9126 438.127 245.7503 434.5742 242.0407 432.6554 c
238.3573 430.7502 236.5196 434.3031 232.8363 432.3979 c
229.1713 430.5022 231.009 426.9493 227.344 425.0536 c
223.6869 423.162 221.8491 426.7149 218.192 424.8232 c
214.5277 422.9279 216.3654 419.3751 212.7012 417.4797 c
209.0087 415.5698 207.1709 419.1227 203.4784 417.2127 c
199.8485 415.3352 201.6862 411.7824 198.0563 409.9048 c
194.4725 408.0511 192.6348 411.604 189.0509 409.7502 c
185.4857 407.9061 187.3234 404.3533 183.7581 402.5092 c
180.1643 400.6503 178.3266 404.2032 174.7328 402.3443 c
171.1854 400.5094 173.0231 396.9565 169.4756 395.1216 c
165.9034 393.2739 164.0657 396.8268 160.4934 394.9791 c
157.0375 393.1915 158.8751 389.6533 155.4251 387.8541 c
155.3169 387.7977 155.344 387.81 155.4576 387.8545 c
155.5837 387.904 154.1235 391.628 154.2496 391.6774 c
154.2537 391.679 155.7141 387.9551 155.7182 387.9568 c
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
154.988 387.8187 l
154.988 391.8187 l
155.9068 388.0422 l
159.5774 389.9408 157.7397 393.4936 161.4103 395.3923 c
165.1093 397.3056 166.947 393.7527 170.646 395.666 c
174.3181 397.5653 172.4804 401.1182 176.1525 403.0176 c
179.856 404.9332 181.6938 401.3803 185.3973 403.296 c
189.0758 405.1987 187.2381 408.7515 190.9166 410.6542 c
194.6301 412.575 196.4678 409.0221 200.1813 410.9429 c
203.8722 412.852 202.0345 416.4048 205.7254 418.3139 c
209.3939 420.2115 211.2317 416.6586 214.9002 418.5561 c
218.609 420.4745 216.7714 424.0274 220.4802 425.9458 c
224.17 427.8543 226.0077 424.3014 229.6975 426.2099 c
233.3687 428.1089 231.531 431.6617 235.2023 433.5607 c
238.8559 435.4505 240.6936 431.8976 244.3471 433.7873 c
248.0498 435.7026 246.2122 439.2554 249.9149 441.1706 c
253.6048 443.0792 255.4425 439.5263 259.1324 441.4349 c
262.8108 443.3376 260.9731 446.8904 264.6515 448.7931 c
268.3201 450.6906 270.1578 447.1377 273.8264 449.0353 c
277.487 450.9287 275.6493 454.4815 279.3098 456.375 c
282.9645 458.2653 284.8022 454.7125 288.4569 456.6028 c
292.1082 458.4914 290.2705 462.0443 293.9218 463.9329 c
297.5726 465.8213 299.4103 462.2684 303.0611 464.1567 c
306.7149 466.0466 304.8771 469.5995 308.5309 471.4894 c
312.1916 473.3829 314.0294 469.83 317.6901 471.7235 c
321.3627 473.6231 319.5251 477.176 323.1977 479.0756 c
326.888 480.9844 328.7257 477.4315 332.416 479.3404 c
336.1312 481.262 334.2935 484.8148 338.0087 486.7365 c
341.6707 488.6307 343.5084 485.0778 347.1705 486.972 c
350.869 488.885 349.0313 492.4378 352.7298 494.3509 c
356.385 496.2415 358.2227 492.6887 361.878 494.5793 c
365.5875 496.4981 363.7498 500.0509 367.4594 501.9697 c
371.1428 503.8749 372.9805 500.322 376.6639 502.2272 c
380.3288 504.1229 378.4911 507.6757 382.1561 509.5714 c
385.8133 511.4631 387.651 507.9102 391.3082 509.8019 c
394.9724 511.6972 393.1347 515.25 396.799 517.1453 c
400.4915 519.0553 402.3292 515.5024 406.0217 517.4123 c
409.6516 519.2899 407.8139 522.8427 411.4438 524.7203 c
415.0277 526.574 416.8654 523.0211 420.4493 524.8749 c
424.0145 526.719 422.1768 530.2718 425.7421 532.1159 c
429.3359 533.9748 431.1736 530.422 434.7674 532.2808 c
438.3149 534.1158 436.4772 537.6686 440.0247 539.5035 c
443.597 541.3513 446.0662 537.4117 449.2864 539.8213 c
452.5246 542.2444 450.6251 544.9718 454.0749 546.7709 c
s
u
0 To
1 0 0 1 492.5 536 0 Tp
TP
-36.0102 0 Td
0 Tr
0 O
1 g
(State College) Tx
(\r) TX
32.6748 -14.5 Td
(1) Tx
(\r) TX 
TO
1 R
0 G
539.7501 517.5 m
546.377 517.5 551.75 522.8728 551.75 529.5001 C
551.75 538.4999 L
551.75 545.1262 546.377 550.5 539.7501 550.5 C
445.2499 550.5 L
438.6232 550.5 433.25 545.1254 433.25 538.4999 C
433.25 529.5001 L
433.25 522.8724 438.6232 517.5 445.2499 517.5 C
539.7501 517.5 L
b
U
u
0 To
1 0 0 1 119.0625 403.125 0 Tp
TP
-21.0073 0 Td
0 Tr
(Bedford) Tx
(\r) TX
17.6719 -14.5 Td
(0) Tx
(\r) TX 
TO
0 R
0 G
166.3126 384.625 m
172.9395 384.625 178.3125 389.9978 178.3125 396.6251 C
178.3125 405.6249 L
178.3125 412.2522 172.9395 417.625 166.3126 417.625 C
71.8124 417.625 L
65.1855 417.625 59.8125 412.2522 59.8125 405.6249 C
59.8125 396.6251 L
59.8125 389.9978 65.1855 384.625 71.8124 384.625 C
166.3126 384.625 L
b
U
u
0 To
1 0 0 1 492.5 427 0 Tp
TP
-27.9946 0 Td
0 Tr
(Harrisburg) Tx
(\r) TX
24.6592 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
539.7501 408.5 m
546.377 408.5 551.75 413.8728 551.75 420.5001 C
551.75 429.4999 L
551.75 436.1272 546.377 441.5 539.7501 441.5 C
445.2499 441.5 L
438.623 441.5 433.25 436.1272 433.25 429.4999 C
433.25 420.5001 L
433.25 413.8728 438.623 408.5 445.2499 408.5 C
539.7501 408.5 L
b
U
0 R
452.0975 302.6734 m
452.204 302.6033 452.3379 302.4931 452.2487 302.5841 c
452.2486 302.5842 449.4055 299.7706 449.4054 299.7707 c
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
450.8196 299.1849 l
450.8196 303.1849 l
451.9306 302.848 l
448.3428 305.2447 446.1208 301.9186 442.5331 304.3153 c
438.9682 306.6967 441.1901 310.0228 437.6253 312.4042 c
434.0293 314.8064 431.8073 311.4802 428.2113 313.8825 c
424.6363 316.2706 426.8582 319.5967 423.2832 321.9849 c
419.7291 324.3591 417.5071 321.033 413.953 323.4072 c
410.3633 325.8052 412.5852 329.1313 408.9956 331.5292 c
405.4242 333.915 403.2023 330.5888 399.6309 332.9746 c
396.0774 335.3484 398.2993 338.6745 394.7457 341.0484 c
391.1511 343.4497 388.9291 340.1235 385.3345 342.5249 c
381.7541 344.9166 383.976 348.2427 380.3957 350.6344 c
376.8289 353.0172 374.6069 349.691 371.04 352.0738 c
367.4857 354.4481 369.7076 357.7742 366.1532 360.1486 c
362.6103 362.5154 360.3883 359.1892 356.8454 361.556 c
353.2496 363.9581 355.4715 367.2841 351.8757 369.6862 c
348.2855 372.0845 346.0636 368.7584 342.4734 371.1567 c
338.8868 373.5526 341.1087 376.8787 337.5222 379.2746 c
333.9369 381.6696 331.715 378.3435 328.1298 380.7385 c
324.5433 383.1343 326.7652 386.4604 323.1787 388.8563 c
319.6568 391.209 317.4348 387.8829 313.9129 390.2356 c
310.3874 392.5907 312.6092 395.9168 309.0837 398.272 c
305.551 400.6319 303.329 397.3058 299.7962 399.6657 c
296.2519 402.0334 298.4738 405.3595 294.9295 407.7272 c
291.3685 410.106 289.1465 406.7799 285.5855 409.1587 c
282.0016 411.5529 284.2235 414.8789 280.6396 417.2731 c
277.1041 419.6349 274.8822 416.3087 271.3467 418.6705 c
267.7784 421.0542 270.0003 424.3803 266.4319 426.764 c
262.9038 429.1209 260.6818 425.7948 257.1537 428.1517 c
253.5777 430.5405 255.7996 433.8666 252.2236 436.2554 c
248.6739 438.6267 246.4519 435.3006 242.9022 437.6719 c
239.3728 440.0296 241.5947 443.3556 238.0653 445.7134 c
234.5483 448.0629 232.3263 444.7367 228.8092 447.0862 c
225.2937 449.4347 227.5156 452.7607 224 455.1092 c
220.471 457.4667 218.249 454.1405 214.72 456.498 c
211.1561 458.8788 213.378 462.2049 209.814 464.5857 c
206.2978 466.9346 204.0758 463.6085 200.5596 465.9574 c
197.0723 468.287 199.2942 471.6131 195.8069 473.9427 c
192.318 476.2734 190.096 472.9472 186.607 475.278 c
183.0638 477.6449 185.2857 480.971 181.7425 483.3379 c
178.2016 485.7033 175.9796 482.3772 172.4387 484.7426 c
168.9715 487.0588 171.1934 490.3849 167.7262 492.7011 c
164.482 494.8683 162.2865 491.557 159.0274 493.7016 c
158.921 493.7717 158.7871 493.8819 158.8762 493.7909 c
158.8763 493.7908 161.7194 496.6044 161.7195 496.6043 c
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
160.3053 493.1901 l
160.3053 497.1901 l
159.1943 493.527 l
162.7821 491.1303 165.0041 494.4564 168.5919 492.0597 c
172.1567 489.6783 169.9348 486.3522 173.4997 483.9708 c
177.0957 481.5686 179.3176 484.8948 182.9136 482.4925 c
186.4886 480.1044 184.2667 476.7783 187.8417 474.3901 c
191.3959 472.0159 193.6178 475.342 197.172 472.9678 c
200.7616 470.5698 198.5397 467.2437 202.1293 464.8458 c
205.7007 462.46 207.9227 465.7861 211.494 463.4004 c
215.0476 461.0265 212.8257 457.7005 216.3792 455.3266 c
219.9739 452.9253 222.1958 456.2514 225.7905 453.8501 c
229.3708 451.4584 227.1489 448.1323 230.7292 445.7406 c
234.2961 443.3578 236.5181 446.684 240.0849 444.3012 c
243.6393 441.9268 241.4174 438.6008 244.9717 436.2264 c
248.5147 433.8596 250.7366 437.1858 254.2796 434.819 c
257.8753 432.4169 255.6535 429.0908 259.2492 426.6888 c
262.8394 424.2905 265.0614 427.6166 268.6515 425.2183 c
272.2381 422.8224 270.0162 419.4963 273.6028 417.1004 c
277.188 414.7054 279.41 418.0315 282.9952 415.6365 c
286.5817 413.2406 284.3598 409.9146 287.9463 407.5187 c
291.4682 405.166 293.6902 408.4921 297.2121 406.1394 c
300.7376 403.7843 298.5157 400.4582 302.0412 398.103 c
305.574 395.7431 307.796 399.0692 311.3287 396.7093 c
314.873 394.3416 312.6511 391.0155 316.1954 388.6478 c
319.7564 386.269 321.9784 389.5951 325.5394 387.2163 c
329.1233 384.8221 326.9015 381.496 330.4854 379.1019 c
334.0208 376.7401 336.2428 380.0663 339.7782 377.7045 c
343.3466 375.3208 341.1247 371.9947 344.693 369.611 c
348.2212 367.2541 350.4431 370.5802 353.9713 368.2233 c
357.5473 365.8345 355.3254 362.5084 358.9013 360.1196 c
362.451 357.7483 364.673 361.0744 368.2227 358.7031 c
371.7521 356.3454 369.5302 353.0193 373.0596 350.6616 c
376.5767 348.3121 378.7987 351.6383 382.3157 349.2888 c
385.8313 346.9403 383.6094 343.6143 387.1249 341.2658 c
390.6539 338.9083 392.8759 342.2344 396.4049 339.877 c
399.9689 337.4962 397.747 334.1701 401.3109 331.7893 c
404.8271 329.4404 407.0491 332.7665 410.5653 330.4176 c
414.0526 328.088 411.8307 324.7619 415.318 322.4323 c
418.807 320.1016 421.029 323.4277 424.5179 321.097 c
428.0611 318.7301 425.8392 315.404 429.3824 313.0371 c
432.9234 310.6716 435.1453 313.9978 438.6862 311.6324 c
442.1535 309.3162 439.886 305.2525 443.6779 303.5182 c
447.3613 301.8336 448.8384 304.818 452.0975 302.6734 c
s
u
0 To
1 0 0 1 117.75 483.3228 0 Tp
TP
-21.0073 0 Td
0 Tr
0 O
1 g
(Bedford) Tx
(\r) TX
17.6719 -14.5 Td
(0) Tx
(\r) TX 
TO
0 R
0 G
165.0001 464.8227 m
171.627 464.8227 177 470.1955 177 476.8229 C
177 485.8226 L
177 492.45 171.627 497.8227 165.0001 497.8227 C
70.4999 497.8227 L
63.873 497.8227 58.5 492.45 58.5 485.8226 C
58.5 476.8229 L
58.5 470.1955 63.873 464.8227 70.4999 464.8227 C
165.0001 464.8227 L
b
U
u
0 To
1 0 0 1 493.0625 317.5552 0 Tp
TP
-20.3423 0 Td
0 Tr
(Altoona) Tx
(\r) TX
17.0068 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
540.3126 299.0552 m
546.9395 299.0552 552.3125 304.4279 552.3125 311.0553 C
552.3125 320.0551 L
552.3125 326.6824 546.9395 332.0552 540.3126 332.0552 C
445.8124 332.0552 L
439.1855 332.0552 433.8125 326.6824 433.8125 320.0551 C
433.8125 311.0553 L
433.8125 304.4279 439.1855 299.0552 445.8124 299.0552 C
540.3126 299.0552 L
b
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument

 endTexFig
 156 3955 a Fg(Figure)36 b(17.10.)j Fi(Lo)s(op)29 b(resulting)g(from)h
(adding)f Ff(x)1973 3969 y Fc(15)2081 3955 y Fi(to)h(the)f(basis)183
4171 y(T)-8 b(o)28 b(illustrate)g(the)f(pro)s(cess)g(of)h(\014nding)g
(a)g(new)g(basic)g(feasible)g(solution)0 4281 y(with)37
b(a)g(longer)g(lo)s(op,)h(w)m(e)g(pro)s(ceed)c(with)k(the)e(latter)g(c)
m(hoice.)61 b(W)-8 b(e)37 b(start)f(a)0 4390 y(\015o)m(w)h(of)g
Ff(")g Fi(on)g(the)f(edge)g(from)h(w)m(arehouse)f(1)h(to)g(store)f(5;)
41 b(that)35 b(is,)40 b(w)m(e)e(set)0 4500 y Ff(x)52
4514 y Fe(ij)142 4500 y Fi(=)25 b Ff(")p Fi(.)40 b(Then)28
b(w)m(e)g(subtract)e Ff(")i Fi(from)g Ff(x)1411 4514
y Fc(11)1517 4500 y Fi(b)s(ecause)e(w)m(e)j(cannot)d(exceed)h(the)0
4610 y(supply)34 b(of)f(w)m(arehouse)f(1.)51 b(Then)33
b(w)m(e)g(add)g Ff(")h Fi(to)f Ff(x)1772 4624 y Fc(21)1883
4610 y Fi(to)g(meet)g(the)f(demand)0 4719 y(at)e(store)f(1.)p
eop end
%%Page: 184 19
TeXDict begin 184 18 bop 0 91 a Fg(184)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)183
311 y Fi(W)d(e)24 b(con)m(tin)m(ue)g(in)h(this)g(manner)e(around)h(the)
f(lo)s(op,)j(subtracting)c Ff(")j Fi(from)0 420 y Ff(x)52
434 y Fc(24)130 420 y Fi(,)32 b(adding)e Ff(")h Fi(to)f
Ff(x)725 434 y Fc(34)803 420 y Fi(,)i(and,)f(\014nally)-8
b(,)33 b(subtracting)28 b Ff(")j Fi(from)g Ff(x)2186
434 y Fc(35)2295 420 y Fi(\(see)f(T)-8 b(able)0 530 y(17.11\).)447
740 y Fk(j)31 b Fi(55)166 b Fk(j)31 b Fi(30)167 b Fk(j)31
b Fi(40)167 b Fk(j)30 b Fi(65)167 b Fk(j)31 b Fi(60)167
b Fk(j)31 b Fi(30)166 b Fk(j)p 188 766 2324 4 v 371 835
a Fi(0)30 b Fk(j)h Fi(55)166 b Fk(j)31 b Fi(30)167 b
Fk(j)31 b Fi(40)167 b Fk(j)30 b Fi(50)167 b Fk(j)31 b
Fi(40)167 b Fk(j)31 b Fi(0)212 b Fk(j)447 926 y(j)31
b Fi(20)19 b Fk(\000)i Ff(")12 b Fk(j)100 b Fi(10)e Fk(j)h
Fi(20)g Fk(j)43 b Fi(\()p Fk(\000)p Fi(15\))11 b Fk(j)44
b Fi(\()p Fk(\000)p Fi(20\))11 b Fk(j)43 b Fi(\()p Fk(\000)p
Fi(30\))11 b Fk(j)31 b Fi(50)447 1017 y Fk(j)289 b(j)h(j)g(j)f(j)139
b Ff(")108 b Fk(j)289 b(j)p 188 1044 V 325 1112 a Fi(20)30
b Fk(j)h Fi(35)166 b Fk(j)31 b Fi(30)167 b Fk(j)31 b
Fi(100)121 b Fk(j)30 b Fi(45)167 b Fk(j)31 b Fi(60)167
b Fk(j)31 b Fi(0)212 b Fk(j)447 1204 y(j)60 b Fi(5)20
b(+)g Ff(")29 b Fk(j)79 b Fi(\(20\))47 b Fk(j)79 b Fi(\(80\))47
b Fk(j)37 b Fi(25)20 b Fk(\000)g Ff(")6 b Fk(j)79 b Fi(\(20\))47
b Fk(j)c Fi(\()p Fk(\000)p Fi(10\))11 b Fk(j)31 b Fi(30)447
1295 y Fk(j)289 b(j)h(j)g(j)f(j)h(j)f(j)p 188 1321 V
325 1390 a Fi(30)30 b Fk(j)h Fi(40)166 b Fk(j)31 b Fi(60)167
b Fk(j)31 b Fi(95)167 b Fk(j)30 b Fi(35)167 b Fk(j)31
b Fi(30)167 b Fk(j)31 b Fi(0)212 b Fk(j)447 1481 y(j)79
b Fi(\(15\))46 b Fk(j)79 b Fi(\(60\))47 b Fk(j)79 b Fi(\(85\))47
b Fk(j)60 b Fi(5)20 b(+)g Ff(")29 b Fk(j)38 b Fi(15)19
b Fk(\000)i Ff(")6 b Fk(j)114 b Fi(30)83 b Fk(j)31 b
Fi(50)447 1573 y Fk(j)289 b(j)h(j)g(j)f(j)h(j)f(j)p 188
1599 V 447 1668 a(j)114 b Fi(25)83 b Fk(j)115 b Fi(10)83
b Fk(j)115 b Fi(20)83 b Fk(j)114 b Fi(30)83 b Fk(j)115
b Fi(15)83 b Fk(j)114 b Fi(30)83 b Fk(j)1073 1887 y Fg(T)-9
b(able)36 b(17.11.)453 1996 y Fi(Adjusting)30 b(b)m(y)h
Ff(")f Fi(the)f(\015o)m(w)h(around)f(the)g(new)h(lo)s(op)183
2216 y(The)f(c)m(hange)g(in)i(the)e(v)-5 b(alue)30 b(of)g(the)f(ob)5
b(jectiv)m(e)29 b(function)g(is)183 2325 y Ff(")p Fi(\()p
Ff(c)302 2339 y Fc(15)398 2325 y Fk(\000)20 b Ff(c)529
2339 y Fc(35)626 2325 y Fi(+)h Ff(c)758 2339 y Fc(34)855
2325 y Fk(\000)f Ff(c)986 2339 y Fc(23)1083 2325 y Fi(+)h
Ff(c)1215 2339 y Fc(21)1312 2325 y Fk(\000)f Ff(c)1443
2339 y Fc(11)1520 2325 y Fi(\))183 2435 y(=)25 b Ff(")p
Fi(\(40)19 b Fk(\000)h Fi(30)g(+)g(35)g Fk(\000)g Fi(45)g(+)g(35)g
Fk(\000)g Fi(55\))k(=)h Fk(\000)p Fi(20)p Ff(")g Fi(=)g
Ff(w)2012 2449 y Fc(15)2090 2435 y Ff(":)183 2544 y Fi(In)32
b(this)h(case,)g(the)f(maxim)m(um)i(v)-5 b(alue)32 b(that)g
Ff(")h Fi(can)f(tak)m(e)g(is)i(15,)f(limited)0 2654 y(b)m(y)k(the)f
(demand)g(at)g(store)g(5.)60 b(Adjusting)36 b(the)g Ff(x)1773
2668 y Fe(ij)1875 2654 y Fi(as)g(prescrib)s(ed)f(b)m(y)i(the)0
2763 y(\015o)m(w)27 b(with)g Ff(")e Fi(=)g(15)i(results)f(in)h(a)g(new)
g(feasible)f(solution)h(that)e(decreases)g(the)0 2873
y(ob)5 b(jectiv)m(e)25 b(function)g(to)h(4125)12 b Fk(\000)g
Fi(20)g Fk(\001)g Fi(15)25 b(=)g(3825)g(\(T)-8 b(able)26
b(17.12\).)38 b(In)26 b(the)g(new)0 2983 y(solution,)33
b Ff(x)426 2997 y Fc(15)536 2983 y Fi(replaces)e Ff(x)936
2997 y Fc(35)1014 2983 y Fi(,)i(restoring)e(our)h(graphical)f(represen)
m(tation)f(to)0 3092 y(a)g(tree)f(\(Figure)g(17.13\).)p
318 3237 2065 4 v 318 3306 a Fk(j)h Fi(55)167 b Fk(j)31
b Fi(30)167 b Fk(j)30 b Fi(40)167 b Fk(j)31 b Fi(50)167
b Fk(j)31 b Fi(40)166 b Fk(j)31 b Fi(0)213 b Fk(j)318
3397 y(j)122 b Fi(5)f Fk(j)99 b Fi(10)g Fk(j)g Fi(20)f
Fk(j)290 b(j)99 b Fi(15)f Fk(j)290 b(j)31 b Fi(50)318
3489 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p 318 3515 V
318 3584 a(j)30 b Fi(35)167 b Fk(j)31 b Fi(30)167 b Fk(j)30
b Fi(100)121 b Fk(j)31 b Fi(45)167 b Fk(j)31 b Fi(60)166
b Fk(j)31 b Fi(0)213 b Fk(j)318 3675 y(j)99 b Fi(20)f
Fk(j)290 b(j)f(j)100 b Fi(10)e Fk(j)289 b(j)h(j)31 b
Fi(30)318 3766 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p 318
3793 V 318 3861 a(j)30 b Fi(40)167 b Fk(j)31 b Fi(60)167
b Fk(j)30 b Fi(95)167 b Fk(j)31 b Fi(35)167 b Fk(j)31
b Fi(30)166 b Fk(j)31 b Fi(0)213 b Fk(j)318 3953 y(j)289
b(j)h(j)f(j)100 b Fi(20)e Fk(j)289 b(j)100 b Fi(30)e
Fk(j)31 b Fi(50)318 4044 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p
318 4070 V 318 4139 a(j)99 b Fi(25)f Fk(j)h Fi(10)g Fk(j)g
Fi(20)f Fk(j)i Fi(30)e Fk(j)h Fi(15)f Fk(j)i Fi(30)e
Fk(j)285 4358 y Fg(T)-9 b(able)36 b(17.12.)j Fi(Third)30
b(feasible)g(solution)f(to)h(Example)g(2.4)p eop end
%%Page: 185 20
TeXDict begin 185 19 bop 1933 91 a Fk(x)p Fh(17.)41 b(Phase)32
b(2)91 b Fg(185)30 -342 y
 18945146 9472573 1315635 16050749 36377313 53020098 startTexFig
 30 -342 a
%%BeginDocument: ch6fig8.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(r) 6.0
%%For: (Christopher Byrne) (Penn State)
%%Title: (ch6fig8.eps)
%%CreationDate: (11/12/18) (3:52)
%%BoundingBox: 20 244 553 806
%%HiResBoundingBox: 20.8125 244.5552 552.8125 805.4043
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set)
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 ()
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 62 -44 733 238
%AI3_DocumentPreview: Header
%AI5_ArtSize: 504 324
%AI5_RulerUnits: 0
%AI5_ArtFlags: 0 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 300
%AI5_NumLayers: 1
%AI5_OpenToView: -126 708 -1 790 529 58 1 1 3 40
%AI5_OpenViewLayers: 7
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 23 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch aload pop pop
			4
			{
				4 index mul 4 1 roll
			} repeat
			5 -1 roll pop
			setcmykcolor
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 17 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
	
	/initialize
	{ 
		Adobe_ColorImage_AI6 begin
		Adobe_ColorImage_AI6
		{
			dup type /arraytype eq
			{
				dup xcheck
				{
					bind
				} if
			} if
			pop pop
		} forall
	} def
	/terminate { end } def
	
	currentdict /Adobe_ColorImage_AI6_Vars known not
	{
		/Adobe_ColorImage_AI6_Vars 14 dict def
	} if
	
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 0 def
		/sourcecount 0 def
		/sourcearray 4 array def
		/plateindex -1 def
		/XIMask 0 def
		/XIBinary 0 def
		/XIChannelCount 0 def
		/XIBitsPerPixel 0 def
		/XIImageHeight 0 def
		/XIImageWidth 0 def
		/XIImageMatrix null def
		/XIBuffer null def
		/XIDataProc null def
 end
	
	/WalkRGBString null def
	/WalkCMYKString null def
	
	/StuffRGBIntoGrayString null def
	/RGBToGrayImageProc null def
	/StuffCMYKIntoGrayString null def
	/CMYKToGrayImageProc null def
	/ColorImageCompositeEmulator null def
	
	/SeparateCMYKImageProc null def
	
	/FourEqual null def
	/TestPlateIndex null def
	
	currentdict /_colorimage known not
	{
		/colorimage where
		{
			/colorimage get /_colorimage exch def
		}
		{
			/_colorimage null def
		} ifelse
	} if
	
	/_currenttransfer systemdict /currenttransfer get def
	
	/colorimage null def
	/XI null def
	
	
	/WalkRGBString
	{
		0 3 index
	
		dup length 1 sub 0 3 3 -1 roll
		{
			3 getinterval { } forall
	
			5 index exec
	
			3 index
		} for
		
		 5 { pop } repeat
	
	} def
	
	
	/WalkCMYKString
	{
		0 3 index
	
		dup length 1 sub 0 4 3 -1 roll
		{
			4 getinterval { } forall
			
			6 index exec
			
			3 index
			
		} for
		
		5 { pop } repeat
		
	} def
	
	
	/StuffRGBIntoGrayString
	{
		.11 mul exch
		
		.59 mul add exch
		
		.3 mul add
		
		cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/RGBToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin 
			sourcearray 0 get exec
			dup length 3 idiv string
			dup 3 1 roll 
			
			/StuffRGBIntoGrayString load exch
			WalkRGBString
	 end
	} def
	
	
	/StuffCMYKIntoGrayString
	{
		exch .11 mul add
		
		exch .59 mul add
		
		exch .3 mul add
		
		dup 255 gt { pop 255 } if
		
		255 exch sub cvi 3 copy put
		
		pop 1 add
	} def
	
	
	/CMYKToGrayImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
			sourcearray 0 get exec
			dup length 4 idiv string
			dup 3 1 roll 
			
			/StuffCMYKIntoGrayString load exch
			WalkCMYKString
	 end
	} def
	
	
	/ColorImageCompositeEmulator
	{
		pop true eq
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
		}
		{
			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
			{
				Adobe_ColorImage_AI6_Vars begin
					sourcearray 0 3 -1 roll put
				
					channelcount 3 eq 
					{ 
						/RGBToGrayImageProc 
					}
					{ 
						/CMYKToGrayImageProc
					} ifelse
					load
			 end
			} if
			image
		} ifelse
	} def
	
	
	/SeparateCMYKImageProc
	{	
		Adobe_ColorImage_AI6_Vars begin
	
			sourcecount 0 ne
			{
				sourcearray plateindex get exec
			}
			{			
				sourcearray 0 get exec
				
				dup length 4 idiv string
				
				0 2 index
				
				plateindex 4 2 index length 1 sub
				{
					get 255 exch sub
					
					3 copy put pop 1 add
					
					2 index
				} for
	
				pop pop exch pop
			} ifelse
	 end
	} def
		
	
	/FourEqual
	{
		4 index ne
		{
			pop pop pop false
		}
		{
			4 index ne
			{
				pop pop false
			}
			{
				4 index ne
				{
					pop false
				}
				{
					4 index eq
				} ifelse
			} ifelse
		} ifelse
	} def
	
	
	/TestPlateIndex
	{
		Adobe_ColorImage_AI6_Vars begin
			/plateindex -1 def
	
			/setcmykcolor where
			{
				pop
				gsave
				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
				grestore
	
				1 0 0 0 FourEqual 
				{ 
					/plateindex 0 def
				}
				{
					0 1 0 0 FourEqual
					{ 
						/plateindex 1 def
					}
					{
						0 0 1 0 FourEqual
						{
							/plateindex 2 def
						}
						{
							0 0 0 1 FourEqual
							{ 
								/plateindex 3 def
							}
							{
								0 0 0 0 FourEqual
								{
									/plateindex 5 def
								} if
							} ifelse
						} ifelse
					} ifelse
				} ifelse
				pop pop pop pop
			} if
			plateindex
	 end
	} def
	
	
	/colorimage
	{
		Adobe_ColorImage_AI6_Vars begin
			/channelcount 1 index def
			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
	
			4 sourcecount add index dup 
			8 eq exch 1 eq or not
	 end
		
		{
			/_colorimage load null ne
			{
				_colorimage
			}
			{
				Adobe_ColorImage_AI6_Vars /sourcecount get
				7 add { pop } repeat
			} ifelse
		}
		{
			dup 3 eq
			TestPlateIndex
			dup -1 eq exch 5 eq or or
			{
				/_colorimage load null eq
				{
					ColorImageCompositeEmulator
				}
				{
					dup 1 eq
					{
						pop pop image
					}
					{
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							gsave
							
							0 _currenttransfer exec
							1 _currenttransfer exec
							eq
							{ 0 _currenttransfer exec 0.5 lt }
							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
							
							{ { pop 0 } } { { pop 1 } } ifelse
							systemdict /settransfer get exec
						} if
						
						_colorimage
						
						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
						{
							grestore
						} if
					} ifelse
				} ifelse
			}
			{
				dup 1 eq
				{
					pop pop
					image
				}
				{
					pop pop
	
					Adobe_ColorImage_AI6_Vars begin
						sourcecount -1 0
						{			
							exch sourcearray 3 1 roll put
						} for
	
						/SeparateCMYKImageProc load
				 end
	
					systemdict /image get exec
				} ifelse
			} ifelse
		} ifelse
	} def
	
	/XI
	{
		Adobe_ColorImage_AI6_Vars begin
			gsave
			/XIMask exch 0 ne def
			/XIBinary exch 0 ne def
			pop
			pop
			/XIChannelCount exch def
			/XIBitsPerPixel exch def
			/XIImageHeight exch def
			/XIImageWidth exch def
			pop pop pop pop
			/XIImageMatrix exch def
			
			XIBitsPerPixel 1 eq
			{
				XIImageWidth 8 div ceiling cvi
			}
			{
				XIImageWidth XIChannelCount mul
			} ifelse
			/XIBuffer exch string def
			
			XIBinary
			{
				/XIDataProc { currentfile XIBuffer readstring pop } def
				currentfile 128 string readline pop pop
			}
			{
				/XIDataProc { currentfile XIBuffer readhexstring pop } def
			} ifelse
			
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			
			XIMask
			{
				XIImageWidth XIImageHeight
				false
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
				
				imagemask
			}
			{
				XIImageWidth XIImageHeight
				XIBitsPerPixel
				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
				/XIDataProc load
				
				XIChannelCount 1 eq
				{
					
					gsave
					0 setgray
					
					image
					
					grestore
				}
				{
					false
					XIChannelCount
					colorimage
				} ifelse
			} ifelse
			grestore
	 end
	} def
	
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
8 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182828384858586878888898A8B8B8C8D8E8E8F9091919293949495
96979798999A9A9B9C9D9D9E9FA0A0A1A2A3A3A4A5A6A6A7A8A9A9AAABACACADAEAFAFB0B1B2B2B3
B4B5B5B6B7B8B8B9BABBBBBCBDBEBEBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0D0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A
4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B2
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B6B5B4B4B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777776757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404050505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E5E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7F7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060606070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A7A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666565646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
Pn
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
1 Ap
0 O
0 g
300 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
444.9972 310.0012 m
445.2769 310.354 L
166.5028 489.4988 L
166.2231 489.146 L
444.9972 310.0012 L
f
0 R
0 G
800 Ar
459.624 361.5 m
459.7474 361.5423 L
153.0009 405.0001 L
152.8776 404.9578 L
459.624 361.5 L
s
0 Ap
300 Ar
2 w
308.3125 419.625 m
S
0 To
1 0 0 1 20.8125 794.125 0 Tp
TP
0 Tr
0 O
0 g
800 Ar
1 w
/_Helvetica 12 Tf
0 Ts
100 Tz
0 Tt
1 TA
%_ 0 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
1 Ta
0 0 2 2 3 Th
0 Tq
14.5 0 Tl
0 Tc
0 Tw
(\r) TX
TO
0 To
1 0 0 1 119.0625 398.125 0 Tp
TP
0 Tr
1 g
(\r) TX
TO
0 To
1 0 0 1 116.8125 300.625 0 Tp
TP
0 Tr
0 g
(\r) TX
TO
1 Ap
0 R
0 G
492.7489 250.5064 m
492.5829 250.5929 L
145.4969 320.9999 L
145.6628 320.9134 L
492.7489 250.5064 L
s
502.5487 380.0587 m
502.0091 379.9988 L
133.2346 305.0981 L
133.7743 305.158 L
502.5487 380.0587 L
s
u
0 To
1 0 0 1 493.0625 372.5552 0 Tp
TP
-36.0102 0 Td
0 Tr
0 O
1 g
(State College) Tx
(\r) TX
32.6748 -14.5 Td
(1) Tx
(\r) TX 
TO
1 R
0 G
540.3126 354.0552 m
546.9395 354.0552 552.3125 359.4279 552.3125 366.0553 C
552.3125 375.0551 L
552.3125 381.6814 546.9395 387.0552 540.3126 387.0552 C
445.8124 387.0552 L
439.1857 387.0552 433.8125 381.6806 433.8125 375.0551 C
433.8125 366.0553 L
433.8125 359.4276 439.1857 354.0552 445.8124 354.0552 C
540.3126 354.0552 L
b
U
u
0 To
1 0 0 1 493.0625 263.5552 0 Tp
TP
-27.9946 0 Td
0 Tr
(Harrisburg) Tx
(\r) TX
24.6592 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
540.3126 245.0552 m
546.9395 245.0552 552.3125 250.4279 552.3125 257.0553 C
552.3125 266.0551 L
552.3125 272.6824 546.9395 278.0552 540.3126 278.0552 C
445.8124 278.0552 L
439.1855 278.0552 433.8125 272.6824 433.8125 266.0551 C
433.8125 257.0553 L
433.8125 250.4279 439.1855 245.0552 445.8124 245.0552 C
540.3126 245.0552 L
b
U
u
0 To
1 0 0 1 492.5 482 0 Tp
TP
-20.3423 0 Td
0 Tr
(Altoona) Tx
(\r) TX
17.0068 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
539.7501 463.5 m
546.377 463.5 551.75 468.8728 551.75 475.5001 C
551.75 484.4999 L
551.75 491.1272 546.377 496.5 539.7501 496.5 C
445.2499 496.5 L
438.623 496.5 433.25 491.1272 433.25 484.4999 C
433.25 475.5001 L
433.25 468.8728 438.623 463.5 445.2499 463.5 C
539.7501 463.5 L
b
U
0 g
300 Ar
434.422 482.382 m
434.422 482.9602 L
177.6413 482.9602 L
177.6413 482.382 L
434.422 482.382 L
f
u
0 To
1 0 0 1 120.0625 315.6177 0 Tp
TP
-24.0073 0 Td
0 Tr
1 g
800 Ar
(Scranton) Tx
(\r) TX
20.6719 -14.5 Td
(0) Tx
(\r) TX 
TO
0 R
0 G
165.3126 297.1177 m
171.9395 297.1177 177.3125 302.4904 177.3125 309.1178 C
177.3125 318.1176 L
177.3125 324.7449 171.9395 330.1177 165.3126 330.1177 C
70.8124 330.1177 L
64.1855 330.1177 58.8125 324.7449 58.8125 318.1176 C
58.8125 309.1178 L
58.8125 302.4904 64.1855 297.1177 70.8124 297.1177 C
165.3126 297.1177 L
b
U
u
0 To
1 0 0 1 493.0625 317.5552 0 Tp
TP
-20.3423 0 Td
0 Tr
(Altoona) Tx
(\r) TX
17.0068 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
540.3126 299.0552 m
546.9395 299.0552 552.3125 304.4279 552.3125 311.0553 C
552.3125 320.0551 L
552.3125 326.6824 546.9395 332.0552 540.3126 332.0552 C
445.8124 332.0552 L
439.1855 332.0552 433.8125 326.6824 433.8125 320.0551 C
433.8125 311.0553 L
433.8125 304.4279 439.1855 299.0552 445.8124 299.0552 C
540.3126 299.0552 L
b
U
0 R
478.407 544.2928 m
477.8674 544.2329 L
109.093 469.3322 L
109.6326 469.3921 L
478.407 544.2928 L
s
475.4385 414.2597 m
475.2725 414.35 L
128.1865 492.8653 L
128.3524 492.775 L
475.4385 414.2597 L
s
454.9997 544.9975 m
454.512 544.8064 L
154.5003 389.6275 L
154.988 389.8187 L
454.9997 544.9975 L
s
u
0 To
1 0 0 1 492.5 536 0 Tp
TP
-36.0102 0 Td
0 Tr
0 O
1 g
(State College) Tx
(\r) TX
32.6748 -14.5 Td
(1) Tx
(\r) TX 
TO
1 R
0 G
539.7501 517.5 m
546.377 517.5 551.75 522.8728 551.75 529.5001 C
551.75 538.4999 L
551.75 545.1262 546.377 550.5 539.7501 550.5 C
445.2499 550.5 L
438.6232 550.5 433.25 545.1254 433.25 538.4999 C
433.25 529.5001 L
433.25 522.8724 438.6232 517.5 445.2499 517.5 C
539.7501 517.5 L
b
U
u
0 To
1 0 0 1 117.75 483.3228 0 Tp
TP
-21.0073 0 Td
0 Tr
(Bedford) Tx
(\r) TX
17.6719 -14.5 Td
(0) Tx
(\r) TX 
TO
0 R
0 G
165.0001 464.8227 m
171.627 464.8227 177 470.1955 177 476.8229 C
177 485.8226 L
177 492.45 171.627 497.8227 165.0001 497.8227 C
70.4999 497.8227 L
63.873 497.8227 58.5 492.45 58.5 485.8226 C
58.5 476.8229 L
58.5 470.1955 63.873 464.8227 70.4999 464.8227 C
165.0001 464.8227 L
b
U
u
0 To
1 0 0 1 119.0625 403.125 0 Tp
TP
-21.0073 0 Td
0 Tr
(Bedford) Tx
(\r) TX
17.6719 -14.5 Td
(0) Tx
(\r) TX 
TO
0 R
0 G
166.3126 384.625 m
172.9395 384.625 178.3125 389.9978 178.3125 396.6251 C
178.3125 405.6249 L
178.3125 412.2522 172.9395 417.625 166.3126 417.625 C
71.8124 417.625 L
65.1855 417.625 59.8125 412.2522 59.8125 405.6249 C
59.8125 396.6251 L
59.8125 389.9978 65.1855 384.625 71.8124 384.625 C
166.3126 384.625 L
b
U
u
0 To
1 0 0 1 492.5 427 0 Tp
TP
-27.9946 0 Td
0 Tr
(Harrisburg) Tx
(\r) TX
24.6592 -14.5 Td
(2) Tx
(\r) TX 
TO
1 R
0 G
539.7501 408.5 m
546.377 408.5 551.75 413.8728 551.75 420.5001 C
551.75 429.4999 L
551.75 436.1272 546.377 441.5 539.7501 441.5 C
445.2499 441.5 L
438.623 441.5 433.25 436.1272 433.25 429.4999 C
433.25 420.5001 L
433.25 413.8728 438.623 408.5 445.2499 408.5 C
539.7501 408.5 L
b
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument

 endTexFig
 754 1174 a Fg(Figure)35 b(17.13.)k Fi(T)-8 b(ree)30
b(resulting)706 1283 y(from)g(deleting)f Ff(x)1319 1297
y Fc(35)1427 1283 y Fi(from)h(the)f(basis)183 1443 y(W)-8
b(e)28 b(pro)s(ceed)d(as)j(b)s(efore)e(to)h(\014nd)h(the)f(new)g(p)s
(oten)m(tials,)g(the)g(new)h Ff(w)2536 1457 y Fe(ij)2600
1443 y Fi(,)h(a)0 1552 y(negativ)m(e)i Ff(w)427 1566
y Fc(14)532 1552 y Fi(=)c Fk(\000)p Fi(15)p Ff(;)32 b
Fi(creating)e(the)g(lo)s(op)h(\(1)p Ff(;)15 b Fi(4\))p
Ff(;)g Fi(\(1)p Ff(;)g Fi(1\))p Ff(;)g Fi(\(2)p Ff(;)g
Fi(1\))p Ff(;)g Fi(\(2)p Ff(;)g Fi(4\),)30 b(and)0 1662
y(the)f(adjusted)g(\015o)m(w)h(around)f(the)g(lo)s(op)g(\(T)-8
b(able)30 b(17.14\).)447 1935 y Fk(j)h Fi(55)166 b Fk(j)31
b Fi(30)167 b Fk(j)31 b Fi(40)167 b Fk(j)30 b Fi(65)167
b Fk(j)31 b Fi(40)167 b Fk(j)31 b Fi(30)166 b Fk(j)p
188 1962 2324 4 v 371 2030 a Fi(0)30 b Fk(j)h Fi(55)166
b Fk(j)31 b Fi(30)167 b Fk(j)31 b Fi(40)167 b Fk(j)30
b Fi(50)167 b Fk(j)31 b Fi(40)167 b Fk(j)31 b Fi(0)212
b Fk(j)447 2122 y(j)45 b Fi(5)20 b Fk(\000)g Ff(")44
b Fk(j)100 b Fi(10)e Fk(j)h Fi(20)g Fk(j)43 b Fi(\()p
Fk(\000)p Fi(15\))11 b Fk(j)115 b Fi(15)83 b Fk(j)43
b Fi(\()p Fk(\000)p Fi(30\))11 b Fk(j)31 b Fi(50)447
2213 y Fk(j)p 503 2205 40 40 v 289 w(j)290 b(j)g(j)30
b Ff(")p 1580 2205 V 216 w Fk(j)290 b(j)f(j)p 188 2240
2324 4 v 325 2308 a Fi(20)30 b Fk(j)h Fi(35)166 b Fk(j)31
b Fi(30)167 b Fk(j)31 b Fi(100)121 b Fk(j)30 b Fi(45)167
b Fk(j)31 b Fi(60)167 b Fk(j)31 b Fi(0)212 b Fk(j)447
2399 y(j)37 b Fi(20)20 b(+)g Ff(")6 b Fk(j)79 b Fi(\(20\))47
b Fk(j)79 b Fi(\(80\))47 b Fk(j)37 b Fi(10)20 b Fk(\000)g
Ff(")6 b Fk(j)79 b Fi(\(40\))47 b Fk(j)c Fi(\()p Fk(\000)p
Fi(10\))11 b Fk(j)31 b Fi(30)447 2491 y Fk(j)p 503 2483
40 40 v 289 w(j)290 b(j)g(j)p 1602 2483 V 289 w(j)g(j)f(j)p
188 2517 2324 4 v 325 2586 a Fi(30)30 b Fk(j)h Fi(40)166
b Fk(j)31 b Fi(60)167 b Fk(j)31 b Fi(95)167 b Fk(j)30
b Fi(35)167 b Fk(j)31 b Fi(30)167 b Fk(j)31 b Fi(0)212
b Fk(j)447 2677 y(j)79 b Fi(\(15\))46 b Fk(j)79 b Fi(\(60\))47
b Fk(j)79 b Fi(\(85\))47 b Fk(j)114 b Fi(20)83 b Fk(j)c
Fi(\(20\))47 b Fk(j)114 b Fi(30)83 b Fk(j)31 b Fi(50)447
2768 y Fk(j)289 b(j)h(j)g(j)f(j)h(j)f(j)p 188 2795 V
447 2863 a(j)114 b Fi(25)83 b Fk(j)115 b Fi(10)83 b Fk(j)115
b Fi(20)83 b Fk(j)114 b Fi(30)83 b Fk(j)115 b Fi(15)83
b Fk(j)114 b Fi(30)83 b Fk(j)85 3059 y Fg(T)-9 b(able)36
b(17.14.)j Fi(Dual)30 b(v)-5 b(ariables)29 b(and)h(adjusted)e(\015o)m
(w)i(for)g(T)-8 b(able)30 b(17.13)183 3194 y(W)-8 b(e)38
b(set)g Ff(")g Fi(=)h(5,)i(the)c(maxim)m(um)j(as)e(constrained)e(b)m(y)
j(the)e(supply)i(at)0 3303 y(w)m(arehouse)h(1,)45 b(to)c(obtain)g(a)g
(new)g(feasible)g(solution)g(whic)m(h)h(reduces)e(the)0
3413 y(ob)5 b(jectiv)m(e)29 b(function)g(b)m(y)i Ff(w)938
3427 y Fc(14)1015 3413 y Ff(")25 b Fi(=)h(75)k(\(T)-8
b(able)29 b(17.15\).)p 318 3622 2065 4 v 318 3690 a Fk(j)h
Fi(55)167 b Fk(j)31 b Fi(30)167 b Fk(j)30 b Fi(40)167
b Fk(j)31 b Fi(50)167 b Fk(j)31 b Fi(40)166 b Fk(j)31
b Fi(0)213 b Fk(j)318 3782 y(j)289 b(j)99 b Fi(10)g Fk(j)g
Fi(20)f Fk(j)122 b Fi(5)g Fk(j)99 b Fi(15)f Fk(j)290
b(j)31 b Fi(50)318 3873 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p
318 3899 V 318 3968 a(j)30 b Fi(35)167 b Fk(j)31 b Fi(30)167
b Fk(j)30 b Fi(100)121 b Fk(j)31 b Fi(45)167 b Fk(j)31
b Fi(60)166 b Fk(j)31 b Fi(0)213 b Fk(j)318 4059 y(j)99
b Fi(25)f Fk(j)290 b(j)f(j)122 b Fi(5)g Fk(j)289 b(j)h(j)31
b Fi(30)318 4151 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p
318 4177 V 318 4245 a(j)30 b Fi(40)167 b Fk(j)31 b Fi(60)167
b Fk(j)30 b Fi(95)167 b Fk(j)31 b Fi(35)167 b Fk(j)31
b Fi(30)166 b Fk(j)31 b Fi(0)213 b Fk(j)318 4337 y(j)289
b(j)h(j)f(j)100 b Fi(20)e Fk(j)289 b(j)100 b Fi(30)e
Fk(j)31 b Fi(50)318 4428 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p
318 4455 V 318 4523 a(j)99 b Fi(25)f Fk(j)h Fi(10)g Fk(j)g
Fi(20)f Fk(j)i Fi(30)e Fk(j)h Fi(15)f Fk(j)i Fi(30)e
Fk(j)264 4719 y Fg(T)-9 b(able)36 b(17.15.)j Fi(F)-8
b(ourth)29 b(feasible)h(solution)f(to)h(Example)g(2.4)p
eop end
%%Page: 186 21
TeXDict begin 186 20 bop 0 91 a Fg(186)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)183
311 y Fi(W)d(e)29 b(compute)f(the)g(p)s(oten)m(tials,)g(the)h(new)g
Ff(w)1720 325 y Fe(ij)1784 311 y Ff(;)h Fi(a)g(new)e(negativ)m(e)h
Ff(w)2526 325 y Fc(16)2629 311 y Fi(=)0 420 y Fk(\000)p
Fi(15)h(and)f(the)h(new)f(\015o)m(w)i(of)f Ff(")g Fi(around)e(the)i(lo)
s(op)883 639 y(\(1)p Ff(;)15 b Fi(6\))p Ff(;)g Fi(\(1)p
Ff(;)g Fi(4\))p Ff(;)g Fi(\(3)p Ff(;)g Fi(4\))p Ff(;)g
Fi(\(3)p Ff(;)g Fi(6\))0 858 y(\(T)-8 b(able)30 b(17.16\).)447
1068 y Fk(j)h Fi(40)166 b Fk(j)31 b Fi(30)167 b Fk(j)31
b Fi(40)167 b Fk(j)30 b Fi(50)167 b Fk(j)31 b Fi(40)167
b Fk(j)31 b Fi(15)166 b Fk(j)p 188 1095 2324 4 v 371
1163 a Fi(0)30 b Fk(j)h Fi(55)166 b Fk(j)31 b Fi(30)167
b Fk(j)31 b Fi(40)167 b Fk(j)30 b Fi(50)167 b Fk(j)31
b Fi(40)167 b Fk(j)31 b Fi(0)212 b Fk(j)447 1255 y(j)64
b Fi(\(15\))d Fk(j)100 b Fi(10)e Fk(j)h Fi(20)g Fk(j)60
b Fi(5)20 b Fk(\000)g Ff(")29 b Fk(j)115 b Fi(15)83 b
Fk(j)43 b Fi(\()p Fk(\000)p Fi(15\))11 b Fk(j)31 b Fi(50)447
1346 y Fk(j)289 b(j)h(j)g(j)f(j)h(j)139 b Ff(")107 b
Fk(j)p 188 1373 V 371 1441 a Fi(5)30 b Fk(j)h Fi(35)166
b Fk(j)31 b Fi(30)167 b Fk(j)31 b Fi(100)121 b Fk(j)30
b Fi(45)167 b Fk(j)31 b Fi(60)167 b Fk(j)31 b Fi(0)212
b Fk(j)447 1532 y(j)114 b Fi(25)83 b Fk(j)102 b Fi(\(5\))70
b Fk(j)79 b Fi(\(65\))47 b Fk(j)137 b Fi(5)106 b Fk(j)79
b Fi(\(25\))47 b Fk(j)63 b Fi(\(-10\))32 b Fk(j)f Fi(30)447
1624 y Fk(j)289 b(j)h(j)g(j)f(j)h(j)f(j)p 188 1650 V
325 1719 a Fi(15)30 b Fk(j)h Fi(40)166 b Fk(j)31 b Fi(60)167
b Fk(j)31 b Fi(95)167 b Fk(j)30 b Fi(35)167 b Fk(j)31
b Fi(30)167 b Fk(j)31 b Fi(0)212 b Fk(j)447 1810 y(j)79
b Fi(\(15\))46 b Fk(j)79 b Fi(\(45\))47 b Fk(j)79 b Fi(\(70\))47
b Fk(j)37 b Fi(20)20 b(+)g Ff(")6 b Fk(j)102 b Fi(\(5\))70
b Fk(j)37 b Fi(30)20 b Fk(\000)g Ff(")6 b Fk(j)31 b Fi(50)447
1901 y Fk(j)289 b(j)h(j)g(j)f(j)h(j)f(j)p 188 1928 V
447 1996 a(j)114 b Fi(25)83 b Fk(j)115 b Fi(10)83 b Fk(j)115
b Fi(20)83 b Fk(j)114 b Fi(30)83 b Fk(j)115 b Fi(15)83
b Fk(j)114 b Fi(30)83 b Fk(j)85 2216 y Fg(T)-9 b(able)36
b(17.16.)j Fi(Dual)30 b(v)-5 b(ariables)29 b(and)h(adjusted)e(\015o)m
(w)i(for)g(T)-8 b(able)30 b(17.15)183 2435 y(Again)j
Ff(")g Fi(is)g(constrained)e(to)h(5)h(b)m(y)h(the)e(supply)h(at)f(w)m
(arehouse)g(1,)i(and)0 2544 y(setting)20 b Ff(")25 b
Fi(=)g(5)c(giv)m(es)g(a)g(new)g(feasible)f(solution)g(that)g(impro)m(v)
m(es)h(the)f(ob)5 b(jectiv)m(e)0 2654 y(function)29 b(b)m(y)i(75)e(\(T)
-8 b(able)30 b(17.17\).)p 318 2799 2065 4 v 309 2868
a Fk(j)39 b Fi(55)167 b Fk(j)31 b Fi(30)167 b Fk(j)30
b Fi(40)167 b Fk(j)31 b Fi(50)167 b Fk(j)31 b Fi(40)166
b Fk(j)31 b Fi(0)213 b Fk(j)309 2959 y(j)298 b(j)99 b
Fi(10)g Fk(j)g Fi(20)f Fk(j)290 b(j)99 b Fi(15)f Fk(j)122
b Fi(5)g Fk(j)31 b Fi(50)309 3050 y Fk(j)298 b(j)290
b(j)f(j)h(j)f(j)h(j)p 318 3077 V 309 3145 a(j)39 b Fi(35)167
b Fk(j)31 b Fi(30)167 b Fk(j)30 b Fi(100)121 b Fk(j)31
b Fi(45)167 b Fk(j)31 b Fi(60)166 b Fk(j)31 b Fi(0)213
b Fk(j)309 3237 y(j)108 b Fi(25)98 b Fk(j)290 b(j)f(j)122
b Fi(5)g Fk(j)289 b(j)h(j)31 b Fi(30)309 3328 y Fk(j)298
b(j)290 b(j)f(j)h(j)f(j)h(j)p 318 3354 V 309 3423 a(j)39
b Fi(40)167 b Fk(j)31 b Fi(60)167 b Fk(j)30 b Fi(95)167
b Fk(j)31 b Fi(35)167 b Fk(j)31 b Fi(30)166 b Fk(j)31
b Fi(0)213 b Fk(j)309 3514 y(j)298 b(j)290 b(j)f(j)100
b Fi(25)e Fk(j)289 b(j)100 b Fi(25)e Fk(j)31 b Fi(50)309
3605 y Fk(j)298 b(j)290 b(j)f(j)h(j)f(j)h(j)p 318 3632
V 309 3700 a(j)108 b Fi(25)98 b Fk(j)h Fi(10)g Fk(j)g
Fi(20)f Fk(j)i Fi(30)e Fk(j)h Fi(15)f Fk(j)i Fi(30)e
Fk(j)306 3920 y Fg(T)-9 b(able)36 b(17.17.)j Fi(Fifth)30
b(feasible)f(solution)h(to)f(Problem)h(2.4)p eop end
%%Page: 187 22
TeXDict begin 187 21 bop 1933 91 a Fk(x)p Fh(17.)41 b(Phase)32
b(2)91 b Fg(187)183 311 y Fi(W)-8 b(e)34 b(compute)e(again)h(the)g(new)
h(p)s(oten)m(tials)e(and)i(the)f(new)h Ff(w)2343 325
y Fe(ij)2407 311 y Fi(,)i(\014nd)d(a)0 420 y(negativ)m(e)39
b Ff(w)435 434 y Fc(35)554 420 y Fi(=)j Fk(\000)p Fi(10,)h(create)37
b(the)j(lo)s(op)f(\(3)p Ff(;)15 b Fi(5\))p Ff(;)g Fi(\(3)p
Ff(;)g Fi(6\))p Ff(;)g Fi(\(1)p Ff(;)g Fi(6\))p Ff(;)g
Fi(\(1)p Ff(;)g Fi(5\))p Ff(;)38 b Fi(and)0 530 y(set)f
Ff(x)202 544 y Fc(35)318 530 y Fi(=)i Ff(")p Fi(,)h Ff(x)588
544 y Fc(36)704 530 y Fi(=)e(25)25 b Fk(\000)g Ff(")p
Fi(,)40 b Ff(x)1186 544 y Fc(16)1302 530 y Fi(=)e(5)26
b(+)f Ff(")p Fi(,)40 b(and)d Ff(x)1924 544 y Fc(15)2040
530 y Fi(=)i(15)24 b Fk(\000)i Ff(")38 b Fi(\(T)-8 b(able)0
639 y(17.18\).)462 936 y Fk(j)31 b Fi(25)167 b Fk(j)30
b Fi(30)167 b Fk(j)31 b Fi(40)167 b Fk(j)31 b Fi(35)166
b Fk(j)31 b Fi(40)167 b Fk(j)31 b Fi(0)212 b Fk(j)p 203
963 2294 4 v 386 1031 a Fi(0)30 b Fk(j)h Fi(55)167 b
Fk(j)30 b Fi(30)167 b Fk(j)31 b Fi(40)167 b Fk(j)31 b
Fi(50)166 b Fk(j)31 b Fi(40)167 b Fk(j)31 b Fi(0)212
b Fk(j)462 1122 y(j)79 b Fi(\(30\))47 b Fk(j)114 b Fi(10)83
b Fk(j)115 b Fi(20)83 b Fk(j)c Fi(\(15\))46 b Fk(j)38
b Fi(15)19 b Fk(\000)i Ff(")6 b Fk(j)60 b Fi(5)20 b(+)g
Ff(")29 b Fk(j)i Fi(50)462 1214 y Fk(j)290 b(j)f(j)h(j)f(j)h(j)f(j)p
203 1240 V 269 1309 a(\000)p Fi(10)30 b Fk(j)h Fi(35)167
b Fk(j)30 b Fi(30)167 b Fk(j)31 b Fi(100)121 b Fk(j)31
b Fi(45)166 b Fk(j)31 b Fi(60)167 b Fk(j)31 b Fi(0)212
b Fk(j)462 1400 y(j)115 b Fi(25)83 b Fk(j)43 b Fi(\()p
Fk(\000)p Fi(10\))11 b Fk(j)79 b Fi(\(50\))47 b Fk(j)137
b Fi(5)106 b Fk(j)79 b Fi(\(10\))47 b Fk(j)c Fi(\()p
Fk(\000)p Fi(10\))11 b Fk(j)31 b Fi(30)462 1491 y Fk(j)290
b(j)f(j)h(j)f(j)h(j)f(j)p 203 1518 V 386 1586 a Fi(0)30
b Fk(j)h Fi(40)167 b Fk(j)30 b Fi(60)167 b Fk(j)31 b
Fi(95)167 b Fk(j)31 b Fi(35)166 b Fk(j)31 b Fi(30)167
b Fk(j)31 b Fi(0)212 b Fk(j)462 1678 y(j)79 b Fi(\(15\))47
b Fk(j)79 b Fi(\(30\))46 b Fk(j)79 b Fi(\(55\))47 b Fk(j)114
b Fi(25)83 b Fk(j)44 b Fi(\()p Fk(\000)p Fi(10\))11 b
Fk(j)37 b Fi(25)20 b Fk(\000)g Ff(")6 b Fk(j)31 b Fi(50)462
1769 y Fk(j)290 b(j)f(j)h(j)f(j)139 b Ff(")108 b Fk(j)289
b(j)p 203 1795 V 462 1864 a(j)115 b Fi(25)83 b Fk(j)114
b Fi(10)83 b Fk(j)115 b Fi(20)83 b Fk(j)114 b Fi(30)83
b Fk(j)115 b Fi(15)83 b Fk(j)114 b Fi(30)83 b Fk(j)85
2083 y Fg(T)-9 b(able)36 b(17.18.)j Fi(Dual)30 b(v)-5
b(ariables)29 b(and)h(adjusted)e(\015o)m(w)i(for)g(T)-8
b(able)30 b(17.17)183 2302 y(Setting)j Ff(")i Fi(to)f(the)g(maxim)m(um)
i(v)-5 b(alue)35 b(of)g(15,)h(constrained)d(b)m(y)i(the)f(de-)0
2412 y(mand)45 b(at)g(store)f(5,)49 b(yields)d(a)f(new)g(feasible)g
(solution)g(that)f(reduces)f(the)0 2521 y(transp)s(ortation)26
b(cost)k(b)m(y)g(150)g(\(T)-8 b(able)29 b(17.19\).)p
318 2753 2065 4 v 318 2822 a Fk(j)h Fi(55)167 b Fk(j)31
b Fi(30)167 b Fk(j)30 b Fi(40)167 b Fk(j)31 b Fi(50)167
b Fk(j)31 b Fi(40)166 b Fk(j)31 b Fi(0)213 b Fk(j)318
2913 y(j)289 b(j)99 b Fi(10)g Fk(j)g Fi(20)f Fk(j)290
b(j)f(j)100 b Fi(20)e Fk(j)31 b Fi(50)318 3005 y Fk(j)289
b(j)h(j)f(j)h(j)f(j)h(j)p 318 3031 V 318 3100 a(j)30
b Fi(35)167 b Fk(j)31 b Fi(30)167 b Fk(j)30 b Fi(100)121
b Fk(j)31 b Fi(45)167 b Fk(j)31 b Fi(60)166 b Fk(j)31
b Fi(0)213 b Fk(j)318 3191 y(j)99 b Fi(25)f Fk(j)290
b(j)f(j)122 b Fi(5)g Fk(j)289 b(j)h(j)31 b Fi(30)318
3282 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p 318 3309 V
318 3377 a(j)30 b Fi(40)167 b Fk(j)31 b Fi(60)167 b Fk(j)30
b Fi(95)167 b Fk(j)31 b Fi(35)167 b Fk(j)31 b Fi(30)166
b Fk(j)31 b Fi(0)213 b Fk(j)318 3468 y(j)289 b(j)h(j)f(j)100
b Fi(25)e Fk(j)h Fi(15)f Fk(j)i Fi(10)e Fk(j)31 b Fi(50)318
3560 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p 318 3586 V
318 3655 a(j)99 b Fi(25)f Fk(j)h Fi(10)g Fk(j)g Fi(20)f
Fk(j)i Fi(30)e Fk(j)h Fi(15)f Fk(j)i Fi(30)e Fk(j)294
3874 y Fg(T)-9 b(able)36 b(17.19.)j Fi(Sixth)30 b(feasible)g(solution)f
(to)h(Example)g(2.4)183 4093 y(Then)39 b(w)m(e)i(compute)d(the)i(new)g
(p)s(oten)m(tials)e Ff(u)1805 4107 y Fe(i)1877 4093 y
Fi(and)h Ff(v)2108 4107 y Fe(j)2188 4093 y Fi(and)g(the)h(new)0
4203 y(dual)35 b(slac)m(k)h(v)-5 b(ariables)35 b Ff(w)886
4217 y Fe(ij)951 4203 y Ff(:)h Fi(This)g(time)f(w)m(e)h(c)m(ho)s(ose)e
(p)s(osition)h(\(2)p Ff(;)15 b Fi(6\))34 b(where)0 4312
y Ff(w)65 4326 y Fc(26)169 4312 y Fi(=)27 b Fk(\000)p
Fi(10.)42 b(W)-8 b(e)31 b(adjust)e(the)h(\015o)m(w)h(around)f(the)g(lo)
s(op)g(b)m(y)h(setting)f Ff(x)2431 4326 y Fc(26)2535
4312 y Fi(=)c Ff(")p Fi(,)0 4422 y Ff(x)52 4436 y Fc(24)155
4422 y Fi(=)f(5)20 b Fk(\000)h Ff(")p Fi(,)30 b Ff(x)559
4436 y Fc(34)662 4422 y Fi(=)25 b(25)20 b(+)g Ff(")p
Fi(,)31 b(and)e Ff(x)1289 4436 y Fc(36)1392 4422 y Fi(=)d(10)19
b Fk(\000)i Ff(":)p eop end
%%Page: 188 23
TeXDict begin 188 22 bop 0 91 a Fg(188)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)183
311 y Fi(Here)30 b(is)g(the)g(new)f(table:)462 473 y
Fk(j)i Fi(25)167 b Fk(j)30 b Fi(30)167 b Fk(j)31 b Fi(40)167
b Fk(j)31 b Fi(35)166 b Fk(j)31 b Fi(30)167 b Fk(j)31
b Fi(0)212 b Fk(j)p 203 500 2294 4 v 386 568 a Fi(0)30
b Fk(j)h Fi(55)167 b Fk(j)30 b Fi(30)167 b Fk(j)31 b
Fi(40)167 b Fk(j)31 b Fi(50)166 b Fk(j)31 b Fi(40)167
b Fk(j)31 b Fi(0)212 b Fk(j)462 660 y(j)79 b Fi(\(30\))47
b Fk(j)114 b Fi(10)83 b Fk(j)115 b Fi(20)83 b Fk(j)c
Fi(\(15\))46 b Fk(j)79 b Fi(\(10\))47 b Fk(j)114 b Fi(20)83
b Fk(j)31 b Fi(50)462 751 y Fk(j)290 b(j)f(j)h(j)f(j)h(j)f(j)p
203 778 V 269 846 a(\000)p Fi(10)30 b Fk(j)h Fi(35)167
b Fk(j)30 b Fi(30)167 b Fk(j)31 b Fi(100)121 b Fk(j)31
b Fi(45)166 b Fk(j)31 b Fi(60)167 b Fk(j)31 b Fi(0)212
b Fk(j)462 937 y(j)115 b Fi(25)83 b Fk(j)43 b Fi(\()p
Fk(\000)p Fi(10\))11 b Fk(j)79 b Fi(\(50\))47 b Fk(j)60
b Fi(5)20 b Fk(\000)g Ff(")29 b Fk(j)79 b Fi(\(20\))47
b Fk(j)c Fi(\()p Fk(\000)p Fi(10\))11 b Fk(j)31 b Fi(30)462
1029 y Fk(j)290 b(j)f(j)h(j)f(j)h(j)139 b Ff(")107 b
Fk(j)p 203 1055 V 386 1124 a Fi(0)30 b Fk(j)h Fi(40)167
b Fk(j)30 b Fi(60)167 b Fk(j)31 b Fi(95)167 b Fk(j)31
b Fi(35)166 b Fk(j)31 b Fi(30)167 b Fk(j)31 b Fi(0)212
b Fk(j)462 1215 y(j)79 b Fi(\(15\))47 b Fk(j)79 b Fi(\(30\))46
b Fk(j)79 b Fi(\(55\))47 b Fk(j)37 b Fi(25)20 b(+)g Ff(")6
b Fk(j)115 b Fi(15)83 b Fk(j)37 b Fi(10)20 b Fk(\000)g
Ff(")6 b Fk(j)31 b Fi(50)462 1306 y Fk(j)290 b(j)f(j)h(j)f(j)h(j)f(j)p
203 1333 V 462 1401 a(j)115 b Fi(25)83 b Fk(j)114 b Fi(10)83
b Fk(j)115 b Fi(20)83 b Fk(j)114 b Fi(30)83 b Fk(j)115
b Fi(15)83 b Fk(j)114 b Fi(30)83 b Fk(j)85 1596 y Fg(T)-9
b(able)36 b(17.20.)j Fi(Dual)30 b(v)-5 b(ariables)29
b(and)h(adjusted)e(\015o)m(w)i(for)g(T)-8 b(able)30 b(17.19)183
1730 y(W)-8 b(e)20 b(set)g Ff(")g Fi(to)g(the)f(maxim)m(um)j(of)e(5,)j
(constrained)18 b(b)m(y)j(the)e(supply)i(at)e(store)0
1840 y(2,)31 b(to)g(get)f(a)h(feasible)f(solution)h(that)e(impro)m(v)m
(es)j(the)e(ob)5 b(jectiv)m(e)30 b(function)g(b)m(y)0
1950 y(50)g(\(T)-8 b(able)29 b(17.21\).)p 318 2071 2065
4 v 318 2139 a Fk(j)h Fi(55)167 b Fk(j)31 b Fi(30)167
b Fk(j)30 b Fi(40)167 b Fk(j)31 b Fi(50)167 b Fk(j)31
b Fi(40)166 b Fk(j)31 b Fi(0)213 b Fk(j)318 2230 y(j)289
b(j)99 b Fi(10)g Fk(j)g Fi(20)f Fk(j)290 b(j)f(j)100
b Fi(20)e Fk(j)31 b Fi(50)318 2322 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p
318 2348 V 318 2417 a(j)30 b Fi(35)167 b Fk(j)31 b Fi(30)167
b Fk(j)30 b Fi(100)121 b Fk(j)31 b Fi(45)167 b Fk(j)31
b Fi(60)166 b Fk(j)31 b Fi(0)213 b Fk(j)318 2508 y(j)99
b Fi(25)f Fk(j)290 b(j)f(j)h(j)f(j)122 b Fi(5)g Fk(j)31
b Fi(30)318 2599 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p
318 2626 V 318 2694 a(j)30 b Fi(40)167 b Fk(j)31 b Fi(60)167
b Fk(j)30 b Fi(95)167 b Fk(j)31 b Fi(35)167 b Fk(j)31
b Fi(30)166 b Fk(j)31 b Fi(0)213 b Fk(j)318 2786 y(j)289
b(j)h(j)f(j)100 b Fi(30)e Fk(j)h Fi(15)f Fk(j)122 b Fi(5)g
Fk(j)31 b Fi(50)318 2877 y Fk(j)289 b(j)h(j)f(j)h(j)f(j)h(j)p
318 2903 V 318 2972 a(j)99 b Fi(25)f Fk(j)h Fi(10)g Fk(j)g
Fi(20)f Fk(j)i Fi(30)e Fk(j)h Fi(15)f Fk(j)i Fi(30)e
Fk(j)243 3167 y Fg(T)-9 b(able)36 b(17.21.)j Fi(Sev)m(en)m(th)30
b(feasible)g(solution)f(to)h(Example)g(2.4)183 3301 y(W)-8
b(e)26 b(compute)f(again)h(the)f(p)s(oten)m(tials)g(and)h(the)f(dual)h
(slac)m(k)h(v)-5 b(ariables|)0 3411 y(that)29 b(is,)i(the)e
Ff(c)p Fi(-part)g(of)h(the)g(corresp)s(onding)d(tableau)h(\(T)-8
b(able)30 b(17.22\).)462 3596 y Fk(j)h Fi(35)167 b Fk(j)30
b Fi(30)167 b Fk(j)31 b Fi(40)167 b Fk(j)31 b Fi(35)166
b Fk(j)31 b Fi(30)167 b Fk(j)31 b Fi(0)212 b Fk(j)p 203
3623 2294 4 v 386 3691 a Fi(0)30 b Fk(j)h Fi(55)167 b
Fk(j)30 b Fi(30)167 b Fk(j)31 b Fi(40)167 b Fk(j)31 b
Fi(50)166 b Fk(j)31 b Fi(40)167 b Fk(j)31 b Fi(0)212
b Fk(j)462 3783 y(j)79 b Fi(\(20\))47 b Fk(j)114 b Fi(10)83
b Fk(j)115 b Fi(20)83 b Fk(j)c Fi(\(15\))46 b Fk(j)79
b Fi(\(10\))47 b Fk(j)114 b Fi(20)83 b Fk(j)31 b Fi(50)462
3874 y Fk(j)290 b(j)f(j)h(j)f(j)h(j)f(j)p 203 3901 V
386 3969 a Fi(0)30 b Fk(j)h Fi(35)167 b Fk(j)30 b Fi(30)167
b Fk(j)31 b Fi(100)121 b Fk(j)31 b Fi(45)166 b Fk(j)31
b Fi(60)167 b Fk(j)31 b Fi(0)212 b Fk(j)462 4060 y(j)115
b Fi(25)83 b Fk(j)102 b Fi(\(0\))69 b Fk(j)79 b Fi(\(60\))47
b Fk(j)79 b Fi(\(10\))46 b Fk(j)79 b Fi(\(30\))47 b Fk(j)137
b Fi(5)106 b Fk(j)31 b Fi(30)462 4152 y Fk(j)290 b(j)f(j)h(j)f(j)h(j)f
(j)p 203 4178 V 386 4247 a Fi(0)30 b Fk(j)h Fi(40)167
b Fk(j)30 b Fi(60)167 b Fk(j)31 b Fi(95)167 b Fk(j)31
b Fi(35)166 b Fk(j)31 b Fi(30)167 b Fk(j)31 b Fi(0)212
b Fk(j)462 4338 y(j)102 b Fi(\(5\))70 b Fk(j)79 b Fi(\(30\))46
b Fk(j)79 b Fi(\(55\))47 b Fk(j)114 b Fi(30)83 b Fk(j)115
b Fi(15)83 b Fk(j)137 b Fi(5)106 b Fk(j)31 b Fi(50)462
4429 y Fk(j)290 b(j)f(j)h(j)f(j)h(j)f(j)p 203 4456 V
462 4524 a(j)115 b Fi(25)83 b Fk(j)114 b Fi(10)83 b Fk(j)115
b Fi(20)83 b Fk(j)114 b Fi(30)83 b Fk(j)115 b Fi(15)83
b Fk(j)114 b Fi(30)83 b Fk(j)370 4719 y Fg(T)-9 b(able)36
b(17.22.)j Fi(P)m(oten)m(tials)30 b(and)g Ff(w)1636 4733
y Fe(ij)1731 4719 y Fi(for)g(T)-8 b(able)30 b(17.21)p
eop end
%%Page: 189 24
TeXDict begin 189 23 bop 1933 91 a Fk(x)p Fh(17.)41 b(Phase)32
b(2)91 b Fg(189)183 311 y Fi(Finally)39 b(all)g(the)f(basic)g
Ff(w)1105 325 y Fe(ij)1170 311 y Fi(,)j(whic)m(h)e(corresp)s(ond)d(to)i
(the)f Ff(c)p Fi(-part)h(of)g(a)0 420 y(standard)31 b(tableau,)h(are)f
(nonnegativ)m(e.)46 b(So)32 b(the)g(sev)m(en)m(th)g(feasible)g
(solution)0 530 y(is)c(optimal.)39 b(In)27 b(fact)f(this)g(is)i(the)e
(solution)g(found)g(b)m(y)i(an)e(educated)f(guess)h(in)0
639 y(Example)31 b(2.4,)g(although)e(educated)f(guesses)i(w)m(ould)h(b)
s(e)f(di\016cult)g(in)h(larger)0 749 y(problems.)45 b(The)31
b(transp)s(ortation)d(cost)j(is)i(10)20 b Fk(\001)i Fi(30)f(+)g(20)g
Fk(\001)h Fi(40)e(+)i(20)f Fk(\001)g Fi(0)g(+)h(25)f
Fk(\001)0 858 y Fi(35)j(+)i(5)e Fk(\001)i Fi(0)f(+)g(30)f
Fk(\001)i Fi(35)e(+)i(15)e Fk(\001)i Fi(30)e(+)h(5)g
Fk(\001)g Fi(0)38 b(=)f(3475.)62 b(Figure)36 b(17.23)h(sho)m(ws)g(a)0
968 y(graphical)29 b(represen)m(tation)e(of)j(our)g(optimal)g
(solution.)1384 1169 y Ff(c)25 b Fi(=)g(35)p Ff(;)15
b(x)26 b Fi(=)f(25)777 1279 y Ff(c)g Fi(=)g(30)p Ff(;)15
b(x)25 b Fi(=)h(10)1734 1461 y Ff(c)f Fi(=)g(40)p Ff(;)15
b(x)25 b Fi(=)h(20)1140 1644 y Ff(c)f Fi(=)g(0)p Ff(;)15
b(x)26 b Fi(=)f(20)777 1753 y Ff(x)g Fi(=)h(5)690 b Ff(c)25
b Fi(=)g(35)p Ff(;)15 b(x)25 b Fi(=)h(30)612 1863 y Ff(c)f
Fi(=)g(0)1912 1954 y Ff(c)g Fi(=)g(30)2031 2082 y Ff(x)g
Fi(=)h(15)777 2192 y Ff(c)f Fi(=)g(0)p Ff(;)15 b(x)26
b Fi(=)f(5)30 1008 y
 18945146 9472573 6051921 197345 21247508 9604136 startTexFig
 30 1008 a
%%BeginDocument: Fig.17.23.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 92 3 323 146
%%HiResBoundingBox: 92.375 3.1875 322.75 145.5
%%Creator: (Mathematica 4.1 for X)
%%CreationDate: (Sunday, September 8, 2002) (15:01:35)
%%Title: Clipboard
%%DocumentNeededResources: font CMR
%%DocumentSuppliedResources:
%%DocumentNeededFonts: CMR
%%DocumentSuppliedFonts:
%%DocumentFonts: CMR
%%EndComments
0 148.688 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/CMR findfont def
/Bold	/CMR-Bold findfont def
/Italic /CMR-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/MacintoshRomanEncoding [
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
	/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
	/zero/one/two/three/four/five/six/seven
	/eight/nine/colon/semicolon/less/equal/greater/question
	/at/A/B/C/D/E/F/G
	/H/I/J/K/L/M/N/O
	/P/Q/R/S/T/U/V/W
	/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
	/grave/a/b/c/d/e/f/g
	/h/i/j/k/l/m/n/o
	/p/q/r/s/t/u/v/w
	/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
	/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
	/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
	/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
	/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
	/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
	/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
	/.notdef/plusminus/.notdef/.notdef/yen/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/ordfeminine/ring/.notdef/ae/oslash
	/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft
	/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
	/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef
	/ydieresis/Ydieresis/.notdef/currency/guilsinglleft/guilsinglright/.notdef/.notdef
	/daggerdbl/dotaccent/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
	/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
	/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
	/macron/.notdef/.notdef/.notdef/ogonek/.notdef/.notdef/.notdef
] def
/WindowsANSIEncoding [
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
	/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
	/zero/one/two/three/four/five/six/seven
	/eight/nine/colon/semicolon/less/equal/greater/question
	/at/A/B/C/D/E/F/G
	/H/I/J/K/L/M/N/O
	/P/Q/R/S/T/U/V/W
	/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
	/grave/a/b/c/d/e/f/g
	/h/i/j/k/l/m/n/o
	/p/q/r/s/t/u/v/w
	/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
	/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
	/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/Zcaron/.notdef
	/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
	/tilde/trademark/scaron/guilsinglright/oe/.notdef/zcaron/Ydieresis
	/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
	/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
	/degree/plusminus/twosuperior/threesuperior/acute/.notdef/paragraph/dotaccent
	/ogonek/onesuperior/ring/guillemotright/onequarter/onehalf/threequarters/questiondown
	/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
	/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
	/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
	/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
	/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
	/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
	/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
	/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def
/Mnodistort true def
1.000000 1.000000 scale
92.375000 145.500000 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	142.312500 def
0 setgray
0 setlinewidth
/CMR findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /CMR findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font CMR
%%IncludeFont: CMR
/CMR findfont 10  scalefont  setfont
% Scaling calculations
0.0798319 0.560224 0.0462474 0.210216 [
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
0 g
.5 Mabswid
[ ] 0 setdash
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
16.425 1.46675 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
16.425 4.80015 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
16.425 8.13324 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
16.425 11.4666 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
16.425 14.8 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
16.425 18.1334 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
1.42497 4.80015 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
1.42497 9.8001 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
1.42497 14.8 1 0 365.73 arc
setmatrix s
.13585 .15136 m
.86415 .04625 L
s
.13585 .15136 m
.86415 .15136 L
s
.13585 .15136 m
.86415 .25646 L
s
.13585 .30902 m
.86415 .04625 L
s
.13585 .30902 m
.86415 .57179 L
s
.13585 .30902 m
.86415 .57179 L
s
.13585 .46668 m
.86415 .04625 L
s
.13585 .46668 m
.86415 .46668 L
s
.13585 .46668 m
.86415 .36157 L
s
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF

%%EndDocument

 endTexFig
 97 2402 a Fg(Figure)36 b(17.23.)j Fi(Optimal)30 b(solution)g(corresp)s
(onding)d(to)i(T)-8 b(able)30 b(17.22)2407 1125 y(25)183
1354 y(50)2141 b(10)2407 1573 y(20)183 1691 y(30)2400
1801 y(30)183 2020 y(50)g(15)2407 2249 y(30)183 2622
y(Since)29 b Ff(w)486 2636 y Fc(22)590 2622 y Fi(=)d(0,)31
b Ff(x)841 2636 y Fc(22)949 2622 y Fi(can)f(b)s(e)g(increased)e
(without)i(h)m(urting)f(the)h(ob)5 b(jec-)0 2732 y(tiv)m(e)36
b(function.)54 b(Other)35 b(optimal)g(solutions)f(ma)m(y)i(arise)f(if)h
(this)f Ff(x)2333 2746 y Fe(ij)2434 2732 y Fi(can)f(b)s(e)0
2841 y(increased)26 b(without)h(violating)h(an)m(y)h(constrain)m(ts.)38
b(W)-8 b(e)28 b(can)g(in)m(v)m(estigate)f(this)0 2951
y(p)s(ossibilit)m(y)37 b(b)m(y)g(considering)e(adding)g(an)h(edge)f(to)
h(our)g(graph)f(from)h(w)m(are-)0 3060 y(house)e(2)i(to)f(store)f(2,)j
(creating)d(the)g(lo)s(op)h(\(2)p Ff(;)15 b Fi(2\))p
Ff(;)g Fi(\(2)p Ff(;)g Fi(6\))p Ff(;)g Fi(\(1)p Ff(;)g
Fi(6\))p Ff(;)g Fi(\(1)p Ff(;)g Fi(2\).)54 b(It)36 b(is)0
3170 y(eviden)m(t)28 b(that)e(the)i(p)s(er-unit)e(cost)i(of)g(shipping)
f(from)h(w)m(arehouse)f(1)h(to)f(store)0 3280 y(2)e(equals)f(the)g
(cost)g(from)h(w)m(arehouse)e(2)i(to)f(store)g(2,)i(and)e(the)g(cost)g
(of)h(lea)m(ving)0 3389 y(units)i(in)h(sto)s(c)m(k|that)e(is,)j
(shipping)f(to)f(store)f(6)i(is)g(free)f(for)g(all)h(w)m(arehouses.)0
3499 y(Th)m(us)40 b(w)m(e)f(conclude)f(that)g(supplying)i(some)f(of)g
(the)g(demand)f(for)h(store)f(2)0 3608 y(from)30 b(w)m(arehouse)f(2)h
(instead)g(of)g(w)m(arehouse)f(1)h(and)g(lea)m(ving)h(few)m(er)f(units)
g(in)0 3718 y(sto)s(c)m(k)35 b(at)f(w)m(arehouse)g(2)h(and)g(more)g(in)
g(sto)s(c)m(k)g(at)g(w)m(arehouse)e(1)j(w)m(ould)f(not)0
3828 y(c)m(hange)g(the)f(transp)s(ortation)e(cost.)57
b(W)-8 b(e)36 b(can)f(only)h(adjust)f(the)g(allo)s(cation)0
3937 y(in)f(this)g(w)m(a)m(y)h(up)f(to)f(5)h(units,)h(b)s(ecause)c(w)m
(arehouse)i(2)h(only)g(has)f(5)h(units)g(to)0 4047 y(spare.)67
b(All)40 b(optimal)f(solutions)f(are)h(obtained)e(in)j(this)f(w)m(a)m
(y)-8 b(,)43 b(b)s(ecause)37 b(all)0 4156 y(other)29
b Ff(w)304 4170 y Fe(ij)399 4156 y Fi(are)g(strictly)h(p)s(ositiv)m(e.)
183 4266 y(By)g(putting)e(some)h(extra)g(n)m(um)m(b)s(ers)h(in)g(our)f
(graph,)g(w)m(e)h(can)f(represen)m(t)0 4376 y(the)34
b(full)h(solution)f(\(Figure)g(17.24\).)53 b(Eac)m(h)35
b(edge)e(in)j(the)d(graph)h(is)h(mark)m(ed)0 4485 y(b)m(y)c(the)f(n)m
(um)m(b)s(er)g Ff(x)670 4499 y Fe(ij)766 4485 y Fi(of)g(units)h(to)f(b)
s(e)g(shipp)s(ed)f(from)i(w)m(arehouse)e Ff(i)i Fi(to)f(store)0
4595 y Ff(j)5 b Fi(.)41 b(Remem)m(b)s(er)29 b(that)g(\\store)f(6")i(is)
h(\014ctitious.)p eop end
%%Page: 190 25
TeXDict begin 190 24 bop 0 91 a Fg(190)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)183
311 y Fi(So)36 b(for)f(eac)m(h)h Ff(i)p Fi(,)j Ff(x)820
325 y Fe(i)p Fc(6)923 311 y Fi(is)e(actually)f(the)f(n)m(um)m(b)s(er)h
(of)g(units)g(that)f(remain)0 420 y(in)k(sto)s(c)m(k)e(at)h(w)m
(arehouse)f Ff(i)p Fi(.)66 b(W)-8 b(e)39 b(can)e(mark)i(eac)m(h)e(w)m
(arehouse)g(with)h(total)0 530 y(supply)g(and)f(eac)m(h)g(store)f(with)
i(total)f(demand,)h(whic)m(h)g(at)f(store)g(6)g(equals)0
639 y(the)25 b(total)g(excess)h(supply)g(across)f(all)i(w)m(arehouses.)
38 b(W)-8 b(e)26 b(can)g(include)f(all)i(the)0 749 y(optimal)37
b(solutions)g(b)m(y)h(adding)e(the)h(edge)f(from)h(w)m(arehouse)f(2)h
(to)g(store)f(2)0 858 y(and)30 b(making)g Ff(x)552 872
y Fc(12)660 858 y Fi(and)f Ff(x)889 872 y Fc(22)997 858
y Fi(functions)g(of)h Ff(")g Fi(\(Figure)f(17.24\).)1833
1078 y(25)843 1187 y(10)19 b Fk(\000)i Ff(")2163 1333
y(")1833 1498 y Fi(20)e Fk(\000)i Ff(")1239 1607 y Fi(20)e(+)i
Ff(")513 1735 y Fi(5)f(+)g Ff(")954 b Fi(30)1912 1872
y(15)777 2046 y(5)30 921 y
 18945146 9472573 5986140 197345 21181726 9604136 startTexFig
 30 921 a
%%BeginDocument: Fig.17.24.eps
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 91 3 322 146
%%HiResBoundingBox: 91.5625 3.1875 321.938 145.5
%%Creator: (Mathematica 4.1 for X)
%%CreationDate: (Sunday, September 8, 2002) (16:28:39)
%%Title: Clipboard
%%DocumentNeededResources: font CMR
%%DocumentSuppliedResources:
%%DocumentNeededFonts: CMR
%%DocumentSuppliedFonts:
%%DocumentFonts: CMR
%%EndComments
0 148.688 translate 1 -1 scale
gsave
150 dict begin
/Mfixwid true def
/Mrot 0 def
/Mpstart {
    MathPictureStart
} bind def
/Mpend {
    MathPictureEnd
} bind def
/Mscale {
    0 1 0 1
    5 -1 roll
    MathScale
} bind def
/Plain	/CMR findfont def
/Bold	/CMR-Bold findfont def
/Italic /CMR-Oblique findfont def
/MathPictureStart {
	/Mimatrix
	 matrix currentmatrix
	def
	gsave
	newpath
	Mleft
	Mbottom
	translate
	/Mtmatrix
	matrix currentmatrix
	def
	Plain
	Mfontsize scalefont
	setfont
	0 setgray
	0 setlinewidth
} bind def
/MathPictureEnd {
	grestore
} bind def
/MathSubStart {
 	     Momatrix
        Mgmatrix Mtmatrix
        Mleft Mbottom
        Mwidth Mheight
        9 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        Mgmatrix setmatrix
        11 -2 roll
        moveto
        Mtmatrix setmatrix
        currentpoint
        2 copy translate
        /Mtmatrix matrix currentmatrix def
        /Mleft 0 def
        /Mbottom 0 def
        3 -1 roll
        exch sub
        /Mheight exch def
        sub
        /Mwidth exch def
} bind def
/MathSubEnd {
        /Mheight exch def
        /Mwidth exch def
        /Mbottom exch def
        /Mleft exch def
        /Mtmatrix exch def
        dup setmatrix
        /Mgmatrix exch def
	      /Momatrix exch def
} bind def
/Mdot {
	moveto
	0 0 rlineto
	stroke
} bind def
/Mtetra {
	moveto
	lineto
	lineto
	lineto
	fill
} bind def
/Metetra {
	moveto
	lineto
	lineto
	lineto
	closepath
	gsave
	fill
	grestore
	0 setgray
	stroke
} bind def
/Mistroke {
	flattenpath
	0 0 0
	{
	4 2 roll
	pop pop
	}
	{
	4 -1 roll
	2 index
	sub dup mul
	4 -1 roll
	2 index
	sub dup mul
	add sqrt
	4 -1 roll
	add
	3 1 roll
	}
	{
	stop
	}
	{
	stop
	}
	pathforall
	pop pop
	currentpoint
	stroke
	moveto
	currentdash
	3 -1 roll
	add
	setdash
} bind def
/Mfstroke {
	stroke
	currentdash
	pop 0
	setdash
} bind def
/Mrotsboxa {
	gsave
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	grestore
	Msboxa
	3  -1 roll
	/Mtmatrix
	exch def
	/Mrot
	0 def
} bind def
/Msboxa {
	newpath
	5 -1 roll
	Mvboxa
	pop
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Msboxa1
	5 -3 roll
	Msboxa1
	Mboxrot
	[
	7 -2 roll
	2 copy
	[
	3 1 roll
	10 -1 roll
	9 -1 roll
	]
	6 1 roll
	5 -2 roll
	]
} bind def
/Msboxa1 {
	sub
	2 div
	dup
	2 index
	1 add
	mul
	3 -1 roll
	-1 add
	3 -1 roll
	mul
} bind def
/Mvboxa	{
	Mfixwid
	{
	Mvboxa1
	}
	{
	dup
	Mwidthcal
	0 exch
	{
	add
	}
	forall
	exch
	Mvboxa1
	4 index
	7 -1 roll
	add
	4 -1 roll
	pop
	3 1 roll
	}
	ifelse
} bind def
/Mvboxa1 {
	gsave
	newpath
	[ true
	3 -1 roll
	{
	Mbbox
	5 -1 roll
	{
	0
	5 1 roll
	}
	{
	7 -1 roll
	exch sub
	(m) stringwidth pop
	.3 mul
	sub
	7 1 roll
	6 -1 roll
	4 -1 roll
	Mmin
	3 -1 roll
	5 index
	add
	5 -1 roll
	4 -1 roll
	Mmax
	4 -1 roll
	}
	ifelse
	false
	}
	forall
	{ stop } if
	counttomark
	1 add
	4 roll
	]
	grestore
} bind def
/Mbbox {
	0 0 moveto
	false charpath
	flattenpath
	pathbbox
	newpath
} bind def
/Mmin {
	2 copy
	gt
	{ exch } if
	pop
} bind def
/Mmax {
	2 copy
	lt
	{ exch } if
	pop
} bind def
/Mrotshowa {
	dup
	/Mrot
	exch def
	Mrotcheck
	Mtmatrix
	dup
	setmatrix
	7 1 roll
	4 index
	4 index
	translate
	rotate
	3 index
	-1 mul
	3 index
	-1 mul
	translate
	/Mtmatrix
	matrix
	currentmatrix
	def
	Mgmatrix setmatrix
	Mshowa
	/Mtmatrix
	exch def
	/Mrot 0 def
} bind def
/Mshowa {
	4 -2 roll
	moveto
	2 index
	Mtmatrix setmatrix
	Mvboxa
	7 1 roll
	Mboxout
	6 -1 roll
	5 -1 roll
	4 -1 roll
	Mshowa1
	4 1 roll
	Mshowa1
	rmoveto
	currentpoint
	Mfixwid
	{
	Mshowax
	}
	{
	Mshoway
	}
	ifelse
	pop pop pop pop
	Mgmatrix setmatrix
} bind def
/Mshowax {
	0 1
        4 index length
        -1 add
        {
        2 index
        4 index
        2 index
        get
        3 index
        add
        moveto
        4 index
        exch get
        show
        } for
} bind def
/Mshoway {
        3 index
        Mwidthcal
        5 1 roll
	0 1
	4 index length
	-1 add
	{
	2 index
	4 index
	2 index
	get
	3 index
	add
	moveto
	4 index
	exch get
	[
	6 index
	aload
	length
	2 add
	-1 roll
	{
	pop
	Strform
	stringwidth
	pop
	neg
	exch
	add
	0 rmoveto
	}
	exch
	kshow
	cleartomark
	} for
	pop
} bind def
/Mwidthcal {
	[
	exch
	{
	Mwidthcal1
	}
	forall
	]
	[
	exch
	dup
	Maxlen
	-1 add
	0 1
	3 -1 roll
	{
	[
	exch
	2 index
	{
	1 index
	Mget
	exch
	}
	forall
	pop
	Maxget
	exch
	}
	for
	pop
	]
	Mreva
} bind def
/Mreva	{
	[
	exch
	aload
	length
	-1 1
	{1 roll}
	for
	]
} bind def
/Mget	{
	1 index
	length
	-1 add
	1 index
	ge
	{
	get
	}
	{
	pop pop
	0
	}
	ifelse
} bind def
/Maxlen	{
	[
	exch
	{
	length
	}
	forall
	Maxget
} bind def
/Maxget	{
	counttomark
	-1 add
	1 1
	3 -1 roll
	{
	pop
	Mmax
	}
	for
	exch
	pop
} bind def
/Mwidthcal1 {
	[
	exch
	{
	Strform
	stringwidth
	pop
	}
	forall
	]
} bind def
/Strform {
	/tem (x) def
	tem 0
	3 -1 roll
	put
	tem
} bind def
/Mshowa1 {
	2 copy
	add
	4 1 roll
	sub
	mul
	sub
	-2 div
} bind def
/MathScale {
	Mwidth
	Mheight
	Mlp
	translate
	scale
	/yscale exch def
	/ybias exch def
	/xscale exch def
	/xbias exch def
	/Momatrix
	xscale yscale matrix scale
	xbias ybias matrix translate
	matrix concatmatrix def
	/Mgmatrix
	matrix currentmatrix
	def
} bind def
/Mlp {
	3 copy
	Mlpfirst
	{
	Mnodistort
	{
	Mmin
	dup
	} if
	4 index
	2 index
	2 index
	Mlprun
	11 index
	11 -1 roll
	10 -4 roll
	Mlp1
	8 index
	9 -5 roll
	Mlp1
	4 -1 roll
	and
	{ exit } if
	3 -1 roll
	pop pop
	} loop
	exch
	3 1 roll
	7 -3 roll
	pop pop pop
} bind def
/Mlpfirst {
	3 -1 roll
	dup length
	2 copy
	-2 add
	get
	aload
	pop pop pop
	4 -2 roll
	-1 add
	get
	aload
	pop pop pop
	6 -1 roll
	3 -1 roll
	5 -1 roll
	sub
	dup /MsaveAx exch def
	div
	4 1 roll
	exch sub
	dup /MsaveAy exch def
	div
} bind def
/Mlprun {
	2 copy
	4 index
	0 get
	dup
	4 1 roll
	Mlprun1
	3 copy
	8 -2 roll
	9 -1 roll
	{
	3 copy
	Mlprun1
	3 copy
	11 -3 roll
	/gt Mlpminmax
	8 3 roll
	11 -3 roll
	/lt Mlpminmax
	8 3 roll
	} forall
	pop pop pop pop
	3 1 roll
	pop pop
	aload pop
	5 -1 roll
	aload pop
	exch
	6 -1 roll
	Mlprun2
	8 2 roll
	4 -1 roll
	Mlprun2
	6 2 roll
	3 -1 roll
	Mlprun2
	4 2 roll
	exch
	Mlprun2
	6 2 roll
} bind def
/Mlprun1 {
	aload pop
	exch
	6 -1 roll
	5 -1 roll
	mul add
	4 -2 roll
	mul
	3 -1 roll
	add
} bind def
/Mlprun2 {
	2 copy
	add 2 div
	3 1 roll
	exch sub
} bind def
/Mlpminmax {
	cvx
	2 index
	6 index
	2 index
	exec
	{
	7 -3 roll
	4 -1 roll
	} if
	1 index
	5 index
	3 -1 roll
	exec
	{
	4 1 roll
	pop
	5 -1 roll
	aload
	pop pop
	4 -1 roll
	aload pop
	[
	8 -2 roll
	pop
	5 -2 roll
	pop
	6 -2 roll
	pop
	5 -1 roll
	]
	4 1 roll
	pop
	}
	{
	pop pop pop
	} ifelse
} bind def
/Mlp1 {
	5 index
	3 index	sub
	5 index
	2 index mul
	1 index
	le
	1 index
	0 le
	or
	dup
	not
	{
	1 index
	3 index	div
	.99999 mul
	8 -1 roll
	pop
	7 1 roll
	}
	if
	8 -1 roll
	2 div
	7 -2 roll
	pop sub
	5 index
	6 -3 roll
	pop pop
	mul sub
	exch
} bind def
/intop 0 def
/inrht 0 def
/inflag 0 def
/outflag 0 def
/xadrht 0 def
/xadlft 0 def
/yadtop 0 def
/yadbot 0 def
/Minner {
	outflag
	1
	eq
	{
	/outflag 0 def
	/intop 0 def
	/inrht 0 def
	} if
	5 index
	gsave
	Mtmatrix setmatrix
	Mvboxa pop
	grestore
	3 -1 roll
	pop
	dup
	intop
	gt
	{
	/intop
	exch def
	}
	{ pop }
	ifelse
	dup
	inrht
	gt
	{
	/inrht
	exch def
	}
	{ pop }
	ifelse
	pop
	/inflag
	1 def
} bind def
/Mouter {
	/xadrht 0 def
	/xadlft 0 def
	/yadtop 0 def
	/yadbot 0 def
	inflag
	1 eq
	{
	dup
	0 lt
	{
	dup
	intop
	mul
	neg
	/yadtop
	exch def
	} if
	dup
	0 gt
	{
	dup
	intop
	mul
	/yadbot
	exch def
	}
	if
	pop
	dup
	0 lt
	{
	dup
	inrht
	mul
	neg
	/xadrht
	exch def
	} if
	dup
	0 gt
	{
	dup
	inrht
	mul
	/xadlft
	exch def
	} if
	pop
	/outflag 1 def
	}
	{ pop pop}
	ifelse
	/inflag 0 def
	/inrht 0 def
	/intop 0 def
} bind def
/Mboxout {
	outflag
	1
	eq
	{
	4 -1
	roll
	xadlft
	leadjust
	add
	sub
	4 1 roll
	3 -1
	roll
	yadbot
	leadjust
	add
	sub
	3 1
	roll
	exch
	xadrht
	leadjust
	add
	add
	exch
	yadtop
	leadjust
	add
	add
	/outflag 0 def
	/xadlft 0 def
	/yadbot 0 def
	/xadrht 0 def
	/yadtop 0 def
	} if
} bind def
/leadjust {
	(m) stringwidth pop
	.5 mul
} bind def
/Mrotcheck {
	dup
	90
	eq
	{
	yadbot
	/yadbot
	xadrht
	def
	/xadrht
	yadtop
	def
	/yadtop
	xadlft
	def
	/xadlft
	exch
	def
	}
	if
	dup
	cos
	1 index
	sin
	Checkaux
	dup
	cos
	1 index
	sin neg
	exch
	Checkaux
	3 1 roll
	pop pop
} bind def
/Checkaux {
	4 index
	exch
	4 index
	mul
	3 1 roll
	mul add
	4 1 roll
} bind def
/Mboxrot {
	Mrot
	90 eq
	{
	brotaux
	4 2
	roll
	}
	if
	Mrot
	180 eq
	{
	4 2
        roll
	brotaux
	4 2
	roll
	brotaux
	}
	if
	Mrot
	270 eq
	{
	4 2
	roll
	brotaux
	}
	if
} bind def
/brotaux {
	neg
	exch
	neg
} bind def
/Mabsproc {
        0
        matrix defaultmatrix
        dtransform idtransform
        dup mul exch
        dup mul
        add sqrt
} bind def
/Mabswid {
        Mabsproc
        setlinewidth
} bind def
/Mabsdash {
        exch
        [
        exch
        {
        Mabsproc
        }
        forall
        ]
        exch
        setdash
} bind def
/MBeginOrig { Momatrix concat} bind def
/MEndOrig { Mgmatrix setmatrix} bind def
/sampledsound where
{ pop}
{ /sampledsound {
exch
pop
exch
5 1 roll
mul
4 idiv
mul
2 idiv
exch pop
exch
/Mtempproc exch def
{ Mtempproc pop }
repeat
} bind def
} ifelse
% Here are the short operators
/g { setgray} bind def
/k { setcmykcolor} bind def
/m { moveto} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/P { grestore} bind def
/s { stroke} bind def

/MFill {
	0 0 		moveto
	Mwidth 0 	lineto
	Mwidth Mheight 	lineto
	0 Mheight 	lineto
	fill
} bind def

/MPlotRegion {
	3 index
	Mwidth mul
	2 index
	Mheight mul
	translate
	exch sub
	Mheight mul
	/Mheight
	exch def
	exch sub
	Mwidth mul
	/Mwidth
	exch def
} bind def

/Mcharproc
{
  	currentfile
  	(x)
  	readhexstring
  	pop
  	0 get
  	exch
 	div
} bind def

/Mshadeproc
{
	dup
	3 1
	roll
	{
	dup
	Mcharproc
	3 1
	roll
	} repeat
	1 eq
	{
	setgray
	}
	{
	3 eq
	{
	setrgbcolor
	}
	{
	setcmykcolor
	} ifelse
	} ifelse
} bind def

/Mrectproc
{
	3 index
	2 index
	moveto
	2 index
	3 -1
	roll
	lineto
	dup
	3 1
	roll
	lineto
	lineto
	fill
} bind def

/_Mcolorimage
{
	7 1
	roll
	pop
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	9 index
	Mshadeproc
	Mrectproc
	} for
	pop
	} for
	pop pop pop pop
} bind def

/_Mimage
{
	pop
	matrix
	invertmatrix
	concat
	2 exch exp
	1 sub
	3 1 roll
	1 1
	2 index
	{
	1 1
	4 index
	{
	dup
	1 sub 
	exch
	2 index
	dup
	1 sub
	exch
	7 index
	Mcharproc
	setgray
	Mrectproc
	} for
	pop
	} for
	pop pop pop
} bind def

/Mimage {
	4 index
	4 index
	mul 1600 gt
	{ image }
	{ _Mimage }
	ifelse
} def

/Mcolorimage {
	6 index
	6 index
	mul 1600 gt
	{ colorimage }
	{ _Mcolorimage }
	ifelse
} def
/MacintoshRomanEncoding [
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
	/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
	/zero/one/two/three/four/five/six/seven
	/eight/nine/colon/semicolon/less/equal/greater/question
	/at/A/B/C/D/E/F/G
	/H/I/J/K/L/M/N/O
	/P/Q/R/S/T/U/V/W
	/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
	/grave/a/b/c/d/e/f/g
	/h/i/j/k/l/m/n/o
	/p/q/r/s/t/u/v/w
	/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
	/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
	/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
	/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
	/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
	/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
	/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
	/.notdef/plusminus/.notdef/.notdef/yen/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/ordfeminine/ring/.notdef/ae/oslash
	/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft
	/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe
	/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef
	/ydieresis/Ydieresis/.notdef/currency/guilsinglleft/guilsinglright/.notdef/.notdef
	/daggerdbl/dotaccent/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute
	/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex
	/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
	/macron/.notdef/.notdef/.notdef/ogonek/.notdef/.notdef/.notdef
] def
/WindowsANSIEncoding [
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
	/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
	/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
	/zero/one/two/three/four/five/six/seven
	/eight/nine/colon/semicolon/less/equal/greater/question
	/at/A/B/C/D/E/F/G
	/H/I/J/K/L/M/N/O
	/P/Q/R/S/T/U/V/W
	/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
	/grave/a/b/c/d/e/f/g
	/h/i/j/k/l/m/n/o
	/p/q/r/s/t/u/v/w
	/x/y/z/braceleft/bar/braceright/asciitilde/.notdef
	/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
	/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/Zcaron/.notdef
	/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
	/tilde/trademark/scaron/guilsinglright/oe/.notdef/zcaron/Ydieresis
	/.notdef/exclamdown/cent/sterling/currency/yen/brokenbar/section
	/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
	/degree/plusminus/twosuperior/threesuperior/acute/.notdef/paragraph/dotaccent
	/ogonek/onesuperior/ring/guillemotright/onequarter/onehalf/threequarters/questiondown
	/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
	/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
	/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
	/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
	/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
	/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
	/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
	/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def
/Mnodistort true def
1.000000 1.000000 scale
91.562500 145.500000 translate
1.000000 -1.000000 scale
-0.000000 -0.000000 translate
/Mleft		0.000000 def
/Mbottom	0.000000 def
/Mwidth		230.375000 def
/Mheight	142.312500 def
0 setgray
0 setlinewidth
/CMR findfont 12 scalefont setfont
/Mfontsize 12 def
/Plain /CMR findfont def

%!
%%Creator: Mathematica
%%AspectRatio: .61803 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font CMR
%%IncludeFont: CMR
/CMR findfont 10  scalefont  setfont
% Scaling calculations
0.0798319 0.560224 0.0462474 0.210216 [
[ 0 0 0 0 ]
[ 1 .61803 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
0 g
.5 Mabswid
[ ] 0 setdash
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
16.425 1.46675 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
16.425 4.80015 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
16.425 8.13324 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
16.425 11.4666 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
16.425 14.8 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
16.425 18.1334 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
1.42497 4.80015 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
1.42497 9.8001 1 0 365.73 arc
setmatrix s
newpath
matrix currentmatrix
0.0560224 0.0315323 scale
1.42497 14.8 1 0 365.73 arc
setmatrix s
.13585 .15136 m
.86415 .04625 L
s
.13585 .15136 m
.86415 .15136 L
s
.13585 .15136 m
.86415 .25646 L
s
.13585 .30902 m
.86415 .04625 L
s
.13585 .30902 m
.86415 .57179 L
s
.13585 .30902 m
.86415 .57179 L
s
.13585 .46668 m
.86415 .04625 L
s
.13585 .46668 m
.86415 .46668 L
s
.13585 .46668 m
.86415 .36157 L
s
.13585 .30902 m
.86415 .46668 L
s
% End of Graphics
MathPictureEnd

%%PSTrailer
end
grestore


%%EPS Trailer

%%Trailer
%%EOF

%%EndDocument

 endTexFig
 380 2394 a Fg(Figure)35 b(17.24.)k Fi(All)32 b(optimal)e(solutions,)g
(0)25 b Fk(\024)g Ff(")g Fk(\024)g Fi(5)2407 1052 y(25)183
1280 y(50)2141 b(10)2407 1499 y(20)183 1609 y(30)2400
1718 y(30)183 1938 y(50)g(15)2407 2157 y(30)183 2530
y(The)44 b(p)s(ossibilit)m(y)h(of)g(cycling)f(in)i(transp)s(ortation)40
b(problems)k(is)i(v)m(ery)0 2640 y(remote,)41 b(and)e(Bland's)g(metho)s
(d)f(prev)m(en)m(ts)g(it.)69 b(If)40 b(the)f(giv)m(en)g(supply)h(and)0
2750 y(demand)28 b(data)g(are)g(in)m(tegral,)h(then)f(the)g(optimal)h
(solution)f(is)i(also)e(in)m(tegral.)0 2859 y(Moreo)m(v)m(er,)37
b(the)e(size)h(of)g(in)m(tegers)f(in)i(feasible)e(solutions)h(do)s(es)e
(not)i(exceed)0 2969 y(the)29 b(size)h(of)g(in)m(tegers)f(in)i(the)e
(supply)i(and)e(demand.)183 3078 y(It)34 b(is)h(p)s(ossible)e(to)h(use)
g(old)g(p)s(oten)m(tials)f(to)g(compute)g(new)h(ones.)52
b(This)0 3188 y(decreases)28 b(the)h(amoun)m(t)h(of)g(computations)e
(but)h(increases)g(the)g(complexit)m(y)0 3297 y(of)h(the)f(metho)s(d)g
(and)g(creates)f(new)i(opp)s(ortunities)d(for)j(errors.)0
3434 y Fg(Remark)51 b(17.25.)174 b Fi(The)43 b(dual)h(simplex)h(metho)s
(d)d(for)h(transp)s(ortation)0 3544 y(problems)d(is)i(kno)m(wn)f(as)g
(the)g(Hungarian)f(metho)s(d.)72 b(It)40 b(is)i(based)e(on)h(the)0
3654 y(observ)-5 b(ation)27 b(that)h(adding)g(a)g(constan)m(t)g(to)g(a)
h(ro)m(w)g(or)f(a)h(column)f(of)h(the)f(cost)0 3763 y(matrix)44
b(do)s(es)e(not)h(c)m(hange)g(the)g(optimalit)m(y)h(region)f(b)s
(ecause)f(it)i(c)m(hanges)0 3873 y(the)g(ob)5 b(jectiv)m(e)43
b(function)g(b)m(y)j(a)e(constan)m(t.)83 b(If)44 b(w)m(e)h(manage)f(to)
g(obtain)f(a)0 3982 y(cost)c(matrix)h(with)f(all)i(en)m(tries)e
Fk(\025)j Fi(0)d(and)h(enough)e(zero)h(en)m(tries)g(to)g(place)0
4092 y(the)c(whole)g(\015o)m(w)h(at)f(the)g(p)s(ositions)f(with)i(zero)
e(costs,)j(then)d(w)m(e)i(obtain)f(an)0 4202 y(optimal)25
b(solution)f(\(with)h(zero)f(adjusted)f(total)h(cost\).)38
b(The)24 b(dual)h(metho)s(d)f(is)0 4311 y(particularly)36
b(advisable)h(for)h(transp)s(ortation)33 b(problems)k(that)f(come)h
(from)0 4421 y(job)k(assignmen)m(t)h(problems)f(\(see)g(the)g(next)g
(section\))f(where)h(degeneracy)0 4530 y(slo)m(ws)k(do)m(wn)f(the)f
(primal)h(metho)s(d.)81 b(In)44 b(those)f(problems,)k
Ff(m)i Fi(=)g Ff(n)44 b Fi(and)0 4640 y Ff(a)48 4654
y Fe(i)104 4640 y Fi(=)25 b Ff(b)239 4654 y Fe(j)303
4640 y Fi(=)h(1)k(for)g(all)h Ff(i;)15 b(j:)p eop end
%%Page: 191 26
TeXDict begin 191 25 bop 1933 91 a Fk(x)p Fh(17.)41 b(Phase)32
b(2)91 b Fg(191)183 311 y Fi(Here)25 b(w)m(e)i(outline)e(the)g
(Hungarian)g(metho)s(d)g(for)g(these)g(problems.)39 b(The)0
420 y(metho)s(d)25 b(w)m(orks)j(with)f(nonnegativ)m(e)e(matrices)i(ha)m
(ving)g(a)g(zero)f(in)i(ev)m(ery)f(ro)m(w)0 530 y(and)37
b(column.)62 b(T)-8 b(o)37 b(get)g(an)g(inital)g Ff(n)25
b Fk(\002)h Ff(n)37 b Fi(matrix,)i(w)m(e)f(subtract)d(the)i(least)0
639 y(elemen)m(t)27 b(of)g(eac)m(h)g(ro)m(w)h(from)g(that)e(ro)m(w)i
(of)f(the)g(cost)g(matrix)g([)p Ff(c)2195 653 y Fe(i;j)2281
639 y Fi(])p Ff(:)i Fi(Then)e(w)m(e)0 749 y(do)j(lik)m(ewise)h(for)f
(eac)m(h)f(column.)183 858 y(1.)52 b(Giv)m(en)35 b(an)m(y)f(matrix)g
Ff(C)41 b Fi(with)34 b(nonnegativ)m(e)f(en)m(tries,)i(w)m(e)f(dra)m(w)g
(the)0 968 y(minim)m(um)f(n)m(um)m(b)s(er)e Ff(t)h Fi(of)g(lines)g
(through)e(the)h(ro)m(ws)h(and)g(columns)f(to)g(co)m(v)m(er)0
1078 y(all)k(zeros)e(in)i Ff(C)q(:)g Fi(If)g Ff(t)d Fi(=)g
Ff(n;)i Fi(then)f(it)i(is)g(v)m(ery)f(easy)g(to)g(\014nd)g(a)g(basic)g
(feasible)0 1187 y(solution)24 b(as)g(in)h Fk(x)p Fi(16)f(selecting)f
(p)s(ositions)g(with)i(zero)e(costs)h(and)f(crossing)h(out)0
1297 y(these)29 b Ff(n)h Fi(lines)h(one)e(after)g(another.)39
b(Otherwise,)29 b(w)m(e)h(pro)s(ceed)e(to)i(Step)f(2.)183
1406 y(2.)60 b(No)m(w)37 b Ff(t)f(<)g(n:)h Fi(W)-8 b(e)37
b(compute)e(the)h(minim)m(um)i Ff(m)f Fi(of)f(all)h(unco)m(v)m(ered)0
1516 y(en)m(tries.)45 b(Then)31 b(w)m(e)i(subtract)c
Ff(m)k Fi(from)e(eac)m(h)g(unco)m(v)m(ered)g(en)m(try)h(and)f(add)g(it)
0 1626 y(to)c(eac)m(h)g(t)m(wice-co)m(v)m(ered)g(en)m(try)h(\(i.e.,)h
(co)m(v)m(ered)e(b)m(y)i(b)s(oth)d(a)i(horizon)m(tal)e(and)h(a)0
1735 y(v)m(ertical)j(line\).)40 b(Return)30 b(to)f(Step)g(1.)1079
1864 y Fj(Exercises.)0 1973 y Fg(1{2.)36 b Fi(Compute)21
b(the)f(feasible)h(solution)g(and)g(the)g(corresp)s(onding)d(dual)k
(basic)0 2083 y(solution)i(to)g(the)g(transp)s(ortation)d(problem,)k
(where)f(the)g(stars)g(\(*\))f(mark)i(the)0 2193 y(basic)36
b(v)-5 b(ariables)35 b(for)h(the)f(ro)m(w)h(problem.)57
b(Put)36 b(b)s(oth)e(basic)i(solutions)f(in)m(to)0 2302
y(the)29 b(same)h(table.)40 b(Are)30 b(those)f(solutions)h(optimal?)0
2412 y Fg(1.)p 771 2425 1158 4 v 762 2493 a Fk(j)h Fi(1)213
b Fk(j)30 b Fi(2)213 b Fk(j)31 b Fi(3)213 b Fk(j)762
2584 y(j)122 b Fi(*)g Fk(j)g Fi(*)f Fk(j)290 b(j)30 b
Fi(200)762 2676 y Fk(j)290 b(j)f(j)h(j)p 771 2702 V 762
2771 a(j)31 b Fi(1)213 b Fk(j)30 b Fi(2)213 b Fk(j)31
b Fi(2)213 b Fk(j)762 2862 y(j)290 b(j)122 b Fi(*)f Fk(j)h
Fi(*)g Fk(j)30 b Fi(300)762 2953 y Fk(j)290 b(j)f(j)h(j)p
771 2980 V 762 3048 a(j)76 b Fi(175)g Fk(j)g Fi(125)f
Fk(j)i Fi(200)e Fk(j)0 3189 y Fg(2.)p 771 3202 V 762
3270 a Fk(j)31 b Fi(1)213 b Fk(j)30 b Fi(2)213 b Fk(j)31
b Fi(3)213 b Fk(j)762 3361 y(j)290 b(j)122 b Fi(*)f Fk(j)h
Fi(*)g Fk(j)30 b Fi(200)762 3453 y Fk(j)290 b(j)f(j)h(j)p
771 3479 V 762 3548 a(j)31 b Fi(1)213 b Fk(j)30 b Fi(2)213
b Fk(j)31 b Fi(2)213 b Fk(j)762 3639 y(j)122 b Fi(*)g
Fk(j)g Fi(*)f Fk(j)290 b(j)30 b Fi(300)762 3730 y Fk(j)290
b(j)f(j)h(j)p 771 3757 V 762 3825 a(j)76 b Fi(175)g Fk(j)g
Fi(125)f Fk(j)i Fi(200)e Fk(j)0 4042 y Fg(3{5.)86 b Fi(Solv)m(e)30
b(the)g(transp)s(ortation)c(problems)j(in)i(Exercises)f(4{6)f(of)h
Fk(x)p Fi(16.)0 4171 y Fg(6{8.)39 b Fi(Solv)m(e)31 b(the)e(transp)s
(ortation)d(problem)k(in)g(Example)h(2.4)f(with)0 4281
y Fg(6.)68 b Fi(The)39 b(supply)h(30)f(replaced)f(b)m(y)i(30)26
b(+)g Ff(t)40 b Fi(where)e Ff(t)i Fi(is)g(a)g(parameter)d(and)0
4390 y Fk(j)p Ff(t)p Fk(j)26 b(\024)f Fi(1)0 4500 y Fg(7.)40
b Fi(The)30 b(supply)g(30)g(replaced)e(b)m(y)j(a)f(parameter)e
Ff(t)0 4610 y Fg(8.)40 b Fi(The)30 b(unit)g(cost)f Ff(c)731
4624 y Fc(23)833 4610 y Fi(=)d(100)j(is)i(replaced)d(b)m(y)j(a)f
(parameter)e Ff(t)0 4719 y(H)7 b(int)p Fi(:)42 b(Use)30
b(T)-8 b(able)30 b(17.22)g(to)f(start.)p eop end
%%Page: 192 27
TeXDict begin 192 26 bop 0 91 a Fg(192)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)0
311 y Fk(x)p Fj(18.)56 b(Job)42 b(Assignmen)l(t)g(Problem)0
443 y Fi(W)-8 b(e)43 b(in)m(tro)s(duced)e(this)i(class)g(of)f(problems)
h(in)g(Chapter)e(1)i(\(see)f(Example)0 553 y(2.5)35 b(and)g(Exercises)g
(6{9)f(in)i Fk(x)o Fi(2.\))56 b(In)35 b(general,)h(in)f(terms)g(of)g(v)
-5 b(ariables)35 b(and)0 662 y(constrain)m(ts,)29 b(the)g(problem)h
(can)f(b)s(e)g(stated)g(as)h(follo)m(ws.)41 b(W)-8 b(e)31
b(set)1114 842 y Ff(x)1166 856 y Fe(ij)1256 842 y Fi(=)25
b(0)30 b(or)g(1)881 b(\(18)p Ff(:)p Fi(1\))0 1022 y(dep)s(ending)29
b(on)i(whether)f(the)h(p)s(erson)f Ff(i)i Fi(is)g(assigned)f(to)g(do)g
(the)g(job)g Ff(j:)h Fi(The)0 1132 y(total)d(time)h(is)721
1155 y Fd(X)774 1349 y Fe(i)868 1155 y Fd(X)917 1349
y Fe(j)1015 1242 y Ff(c)1055 1256 y Fe(ij)1119 1242 y
Ff(x)1171 1256 y Fe(ij)1236 1242 y Fi(\(to)f(b)s(e)g(minimized\))p
Ff(:)488 b Fi(\(18)p Ff(:)p Fi(2\))183 1490 y(The)26
b(condition)g(that)f(ev)m(ery)i(p)s(erson)f Ff(i)h Fi(is)h(assigned)e
(to)g(exactly)h(one)f(job)0 1600 y(is)942 1732 y Fd(X)991
1927 y Fe(j)1089 1819 y Ff(x)1141 1833 y Fe(ij)1231 1819
y Fi(=)g(1)60 b(for)30 b(all)h Ff(i:)710 b Fi(\(18)p
Ff(:)p Fi(3\))183 2067 y(The)32 b(condition)f(that)h(exactly)g(one)g(p)
s(erson)f(is)j(assigned)e(to)g(ev)m(ery)h(job)0 2177
y Ff(j)i Fi(is)939 2309 y Fd(X)992 2504 y Fe(i)1086 2396
y Ff(x)1138 2410 y Fe(ij)1228 2396 y Fi(=)26 b(1)60 b(for)30
b(all)h Ff(j:)706 b Fi(\(18)p Ff(:)p Fi(4\))183 2637
y(Th)m(us,)32 b(the)e(problem)h(is)h(stated)e(as)h(an)g(optimization)f
(problem)g(\(18.1{)0 2747 y(18.4\).)42 b(The)31 b(ob)5
b(jectiv)m(e)30 b(function)g(\(18.2\))f(is)j(linear,)f(as)g(are)g(the)f
(constrain)m(ts)0 2856 y(\(18.3\))f(and)g(\(18.4\).)40
b(Ho)m(w)m(ev)m(er)31 b(constrain)m(ts)d(\(18.1\))h(are)h(not)f
(linear.)183 2966 y(In)h(view)i(of)e(\(18.3\))g(and)g(\(18.4\),)g
(constrain)m(ts)f(\(18.1\))h(can)g(b)s(e)g(replaced)0
3075 y(b)m(y)40 b(the)e(follo)m(wing)h(constrain)m(ts:)57
b Ff(x)1267 3089 y Fe(ij)1371 3075 y Fk(\025)40 b Fi(0)p
Ff(;)15 b(x)1620 3089 y Fe(ij)1724 3075 y Fi(are)39 b(in)m(tegers.)66
b(This)39 b(is)h(an)0 3185 y(example)30 b(of)g(an)g(in)m(teger)f
(programming)f(problem.)183 3295 y(If)h(w)m(e)h(drop)f(the)g(condition)
f(that)h Ff(x)1427 3309 y Fe(ij)1521 3295 y Fi(are)g(in)m(tegers)g(\(k)
m(eeping)g(the)g(con-)0 3404 y(ditions)i Ff(x)353 3418
y Fe(ij)444 3404 y Fk(\025)c Fi(0\))p Ff(;)k Fi(then)f(mathematically)g
(our)h(problem)f(lo)s(oks)h(lik)m(e)h(a)f(par-)0 3514
y(ticular)41 b(case)g(of)h(the)e(transp)s(ortation)e(problem)j(with)h
(all)g(giv)m(en)g(supplies)0 3623 y(and)26 b(demands)f(equal)h(to)g(1)g
(and)g(the)f(balance)g(condition)g(meaning)g(that)g(the)0
3733 y(n)m(um)m(b)s(er)30 b(of)g(p)s(ersons)e(equals)i(the)f(n)m(um)m
(b)s(er)h(of)g(jobs.)183 3842 y(Let)42 b(us)g(forget)f(ab)s(out)g(the)h
(in)m(tegrabilit)m(y)h(condition)e(and)h(solv)m(e)h(the)0
3952 y(resulting)30 b(linear)h(problem)f(b)m(y)h(the)f(simplex)i(metho)
s(d.)41 b(So)30 b(w)m(e)i(regard)d(eac)m(h)0 4062 y(w)m(ork)m(er)34
b(as)f(a)g(\\w)m(arehouse")e(supplying)i(w)m(ork)h(and)f(eac)m(h)g(job)
f(as)i(a)f(\\store")0 4171 y(with)26 b(a)h(demand)e(for)h(w)m(ork.)39
b(W)-8 b(e)27 b(set)f(b)s(oth)f(the)g(supply)h(of)h(eac)m(h)e(w)m(ork)m
(er)i(and)0 4281 y(the)37 b(demand)g(of)h(eac)m(h)g(job)g(equal)f(to)h
(1.)65 b(T)-8 b(otal)38 b(time)g(b)s(ecomes)e(the)h(total)0
4390 y(transp)s(ortation)26 b(cost.)183 4500 y(Because)31
b(in)m(tegral)i(data)g(guaran)m(tee)e(an)i(in)m(tegral)g(solution,)h
(our)f(opti-)0 4610 y(mal)f(solution)e(has)h(only)g(in)m(tegral)g(v)-5
b(alues)31 b(for)g(all)h(v)-5 b(ariables.)43 b(So)31
b(w)m(e)g(obtain)0 4719 y(an)f(optimal)g(solution)f(for)h(the)f(job)h
(assignmen)m(t)f(problem.)p eop end
%%Page: 193 28
TeXDict begin 193 27 bop 1258 91 a Fk(x)p Fh(18.)41 b(Job)33
b(Assignment)h(Pr)-5 b(oblem)90 b Fg(193)183 311 y Fi(Th)m(us,)30
b(w)m(e)h(ha)m(v)m(e)g(reduced)d(an)m(y)i(job)g(assignmen)m(t)g
(problem)f(to)h(a)g(trans-)0 420 y(p)s(ortation)g(problem.)47
b(A)33 b(v)-5 b(ariation)32 b(of)g(the)g(assignmen)m(t)g(problem)f(in)m
(v)m(olv)m(es)0 530 y(maximizing)25 b(the)e(sum)h Ff(S)30
b Fi(of)24 b(ratings)f(instead)h(of)g(minimizing)h(the)e(total)g(cost)0
639 y(\(instead)i(of)h(time\))g(of)h(completing)e(a)i(set)f(of)g(jobs.)
39 b(Using)27 b(a)g(standard)e(tric)m(k,)0 749 y(w)m(e)34
b(can)g(reduce)e(maximization)i(to)g(minimization.)52
b(The)34 b(resulting)f(trans-)0 858 y(p)s(ortation)h(problem)h(ma)m(y)i
(ha)m(v)m(e)f(negativ)m(e)f(co)s(e\016cien)m(ts)f Ff(c)2065
872 y Fe(ij)2166 858 y Fi(whic)m(h)i(w)m(e)g(did)0 968
y(not)i(see)h(in)g(previous)f(examples.)67 b(Ho)m(w)m(ev)m(er,)43
b(the)38 b(simplex)h(metho)s(d)e(do)s(es)0 1078 y(w)m(ork)29
b(the)e(same)h(w)m(a)m(y)i(no)e(matter)f(whether)f(co)s(e\016cien)m(ts)
h(are)h(p)s(ositiv)m(e,)h(neg-)0 1187 y(ativ)m(e,)j(or)f(zeros,)g(or)h
(an)m(y)f(mixture)g(of)h(those.)43 b(So)31 b(this)g(v)m(ersion)h(can)f
(b)s(e)f(also)0 1297 y(solv)m(ed)g(as)h(previously)-8
b(.)0 1433 y Fg(Problem)35 b(18.5.)k Fi(Solv)m(e)31 b(the)e(job)h
(assignmen)m(t)f(problem)925 1568 y Fd(\014)925 1623
y(\014)925 1678 y(\014)925 1733 y(\014)925 1788 y(\014)925
1842 y(\014)925 1897 y(\014)925 1952 y(\014)925 2007
y(\014)925 2061 y(\014)p 939 1567 822 4 v 1000 1646 a
Fi(2)122 b(2)f(2)h(1)f(2)1000 1756 y(2)h(3)f(1)h(2)f(4)1000
1865 y(2)h(0)f(1)h(1)f(1)1000 1975 y(2)h(3)f(4)h(3)f(3)1000
2084 y(3)h(2)f(1)h(2)f(1)p 939 2122 V 1745 1568 a Fd(\014)1745
1623 y(\014)1745 1678 y(\014)1745 1733 y(\014)1745 1788
y(\014)1745 1842 y(\014)1745 1897 y(\014)1745 1952 y(\014)1745
2007 y(\014)1745 2061 y(\014)0 2298 y Fi(where)30 b(the)f(table)h(data)
f(are)h(in)m(terpreted)f(as)h(cost)g(p)s(er)f(p)s(erson)g(p)s(er)h(job)
g(and)0 2407 y(the)f(goal)h(is)h(to)f(minimize)g(total)f(cost.)0
2543 y Fg(Solution.)49 b Fi(Unless)34 b(y)m(ou)f(lik)m(e)h(piv)m
(oting,)g(it)f(pa)m(ys)h(to)e(sp)s(end)f(more)i(time)g(on)0
2653 y(Phase)43 b(1)g(rather)e(than)h(use)h(the)g(north)m(w)m(est)e
(metho)s(d.)78 b(W)-8 b(e)44 b(observ)m(e)e(the)0 2762
y(minimal)28 b(cost)f(p)s(er)f(p)s(erson,)h(that)f(is,)j(the)e(minimal)
h(cost)f(in)g(eac)m(h)g(ro)m(w:)40 b(1,)28 b(1,)0 2872
y(0,)h(2,)g(1.)40 b(So)29 b(the)e(minimal)j(total)d(cost)h(is)h(at)f
(least)g(5)g(\(i.e.,)i(min)c Fk(\025)f Fi(5\))p Ff(:)j
Fi(Let)g(us)0 2981 y(try)f(to)g(get)g(this)g(cost)g(b)m(y)h(c)m(ho)s
(osing)e(a)h(p)s(osition)g(with)g(minimal)i(cost)d(in)i(eac)m(h)0
3091 y(ro)m(w.)44 b(This)32 b(w)m(orks)g(nicely)f(and)g(uniquely)g(un)m
(til)h(w)m(e)g(come)e(to)h(the)g(last)g(ro)m(w,)0 3201
y(where)f(there)f(are)h(t)m(w)m(o)h(p)s(ositions)f(with)h(cost)f(1.)42
b(But)30 b(one)h(of)f(them)g(collides)0 3310 y(with)37
b(the)g(selected)f(p)s(osition)h(in)h(the)e(second)h(ro)m(w,)j(so)d(w)m
(e)h(select)f(the)f(last)0 3420 y(p)s(osition)31 b(in)h(the)f(last)h
(ro)m(w.)46 b(Therefore,)31 b(w)m(e)h(get)f(an)h(optimal)g(solution)f
(and)0 3529 y(it)f(is)h(unique:)1000 3565 y Fd(\014)1000
3620 y(\014)1000 3675 y(\014)1000 3730 y(\014)1000 3785
y(\014)1000 3839 y(\014)1000 3894 y(\014)1000 3949 y(\014)1000
4004 y(\014)1000 4059 y(\014)p 1013 3564 670 4 v 1485
3643 a Fk(\003)1348 3753 y(\003)1211 3862 y(\003)1074
3972 y(\003)1622 4081 y(\003)p 1013 4119 V 1669 3565
a Fd(\014)1669 3620 y(\014)1669 3675 y(\014)1669 3730
y(\014)1669 3785 y(\014)1669 3839 y(\014)1669 3894 y(\014)1669
3949 y(\014)1669 4004 y(\014)1669 4059 y(\014)0 4255
y Fi(Note)39 b(that)g(there)f(are)h(5!)69 b(=)40 b(120)f(feasible)g
(solutions,)j(and)d(trying)g(all)h(of)0 4364 y(them)29
b(w)m(ould)i(tak)m(e)f(more)f(time)h(than)f(our)h(common-sense)f
(approac)m(h.)0 4500 y Fg(Problem)38 b(18.6.)49 b Fi(Solv)m(e)33
b(the)g(job)g(assignmen)m(t)f(problem)h(with)g(data)f(as)h(in)0
4610 y(Problem)g(18.5,)h(but)e(no)m(w)h(the)g(table)f(data)g(are)g(in)m
(terpreted)f(as)i(the)f(rating)0 4719 y(of)e(eac)m(h)f(w)m(ork)m(er)i
(on)f(eac)m(h)f(job)h(and)f(the)h(goal)g(is)g(to)g(maximize)g
(e\016ciency)-8 b(.)p eop end
%%Page: 194 29
TeXDict begin 194 28 bop 0 91 a Fg(194)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)0
311 y Fg(Solution.)40 b Fi(Again)26 b(b)s(efore)d(indulging)j(in)g(piv)
m(oting)g(w)m(e)g(try)f(to)h(use)f(common)0 420 y(sense.)55
b(Let)35 b(us)g(try)g(\014rst)g(to)f(c)m(ho)s(ose)g(the)g(b)s(est)g
(job)h(for)g(eac)m(h)f(w)m(ork)m(er)i(\(this)0 530 y(w)m(ork)m(ed)44
b(so)f(w)m(ell)i(in)e(the)g(previous)g(problem\).)79
b(Here)43 b(is)i(the)d(pattern)f(of)0 639 y(maximal)31
b(en)m(tries)e(in)i(ro)m(ws:)1017 718 y Fd(\014)1017
773 y(\014)1017 828 y(\014)1017 883 y(\014)1017 938 y(\014)1017
992 y(\014)1017 1047 y(\014)1017 1102 y(\014)1017 1157
y(\014)1017 1212 y(\014)p 1038 717 625 4 v 1099 796 a
Fk(\003)91 b(\003)g(\003)182 b(\003)1601 906 y(\003)1099
1015 y(\003)1373 1125 y(\003)1099 1234 y(\003)p 1038
1272 V 1653 718 a Fd(\014)1653 773 y(\014)1653 828 y(\014)1653
883 y(\014)1653 938 y(\014)1653 992 y(\014)1653 1047
y(\014)1653 1102 y(\014)1653 1157 y(\014)1653 1212 y(\014)0
1409 y Fi(W)-8 b(e)30 b(get)e(the)h(max)c Fk(\024)h Fi(2)19
b(+)g(4)f(+)i(2)e(+)i(4)e(+)i(3)25 b(=)g(15)p Ff(;)30
b Fi(but)e(there)g(is)j(no)e(w)m(a)m(y)i(to)e(do)0 1519
y(job)j(4)g(if)g(w)m(e)h(c)m(ho)s(ose)d(the)i(b)s(est)e(n)m(um)m(b)s
(er)i(in)g(eac)m(h)g(ro)m(w.)46 b(Let)32 b(us)g(then)f(try)h(to)0
1628 y(c)m(ho)s(ose)d(a)h(maximal)h(en)m(try)e(in)i(eac)m(h)e(column:)
1000 1725 y Fd(\014)1000 1780 y(\014)1000 1835 y(\014)1000
1889 y(\014)1000 1944 y(\014)1000 1999 y(\014)1000 2054
y(\014)1000 2109 y(\014)1000 2163 y(\014)1000 2218 y(\014)p
1013 1723 670 4 v 1211 1912 a Fk(\003)365 b(\003)1211
2131 y(\003)91 b(\003)g(\003)1074 2241 y(\003)p 1013
2278 V 1669 1725 a Fd(\014)1669 1780 y(\014)1669 1835
y(\014)1669 1889 y(\014)1669 1944 y(\014)1669 1999 y(\014)1669
2054 y(\014)1669 2109 y(\014)1669 2163 y(\014)1669 2218
y(\014)0 2416 y Fi(No)m(w)33 b(the)f(\014rst)f(and)h(third)g(w)m(ork)m
(ers)g(ha)m(v)m(e)h(nothing)e(to)h(do,)g(and)g(our)g(upp)s(er)0
2525 y(b)s(ound)f(for)h(the)g(maxim)m(um)h(is)h(max)29
b Fk(\024)g Fi(3)22 b(+)g(3)f(+)h(4)g(+)g(3)f(+)h(4)29
b(=)g(17)p Ff(;)k Fi(whic)m(h)g(is)0 2635 y(w)m(eak)m(er)d(than)f(the)h
(previous)f(b)s(ound.)183 2744 y(In)24 b(fact)g(since)g(c)m(ho)s(osing)
g(the)g(maximal)h(n)m(um)m(b)s(er)f(in)i(eac)m(h)e(ro)m(w)h(do)s(es)e
(not)0 2854 y(w)m(ork,)28 b(w)m(e)f(conclude)e(that)h(max)f
Ff(<)h Fi(15)p Ff(:)g Fi(Since)g(the)g(maxim)m(um)i(is)f(an)g(in)m
(teger,)0 2964 y(w)m(e)36 b(obtain)g(that)e(max)i Fk(\024)f
Fi(14)p Ff(:)h Fi(But)g(no)m(w)g(lo)s(oking)f(again)h(at)g(the)f(data)g
(and)0 3073 y(the)d(pattern)f(of)h(maximal)i(en)m(tries)e(in)i(eac)m(h)
e(ro)m(w,)i(w)m(e)f(easily)h(see)e(a)h(feasible)0 3183
y(solution)d(with)g(total)f(rating)g(14:)1002 3280 y
Fd(\014)1002 3334 y(\014)1002 3389 y(\014)1002 3444 y(\014)1002
3499 y(\014)1002 3554 y(\014)1002 3608 y(\014)1002 3663
y(\014)1002 3718 y(\014)1002 3773 y(\014)p 1015 3278
V 1213 3357 a Fk(\003)1624 3467 y(\003)1076 3576 y(\003)1350
3686 y(\003)1487 3796 y(\003)p 1015 3833 V 1668 3280
a Fd(\014)1668 3334 y(\014)1668 3389 y(\014)1668 3444
y(\014)1668 3499 y(\014)1668 3554 y(\014)1668 3608 y(\014)1668
3663 y(\014)1668 3718 y(\014)1668 3773 y(\014)0 3970
y Fi(where)h(the)g(w)m(ork)m(ers)i(1{4)e(tak)m(e)h(the)f(b)s(est)g
(jobs)h(for)g(eac)m(h)f(and)h(the)f(w)m(ork)m(er)h(5)0
4080 y(tak)m(es)f(the)f(second)g(b)s(est)g(job)h(4.)0
4211 y Fg(Problem)35 b(18.7.)k Fi(Minimize)30 b(total)g(grief)f(in)i
(the)e(matc)m(hing)g(problem.)1009 4308 y Fd(\014)1009
4363 y(\014)1009 4418 y(\014)1009 4473 y(\014)1009 4527
y(\014)1009 4582 y(\014)1009 4637 y(\014)1009 4692 y(\014)p
1022 4306 655 4 v 1083 4386 a Fi(1)122 b(1)f(2)g(1)1083
4495 y(2)h(3)f(2)g(3)1083 4605 y(4)h(3)f(3)g(4)1083 4715
y(4)h(4)f(5)g(6)p 1022 4752 V 1660 4308 a Fd(\014)1660
4363 y(\014)1660 4418 y(\014)1660 4473 y(\014)1660 4527
y(\014)1660 4582 y(\014)1660 4637 y(\014)1660 4692 y(\014)p
eop end
%%Page: 195 30
TeXDict begin 195 29 bop 1258 91 a Fk(x)p Fh(18.)41 b(Job)33
b(Assignment)h(Pr)-5 b(oblem)90 b Fg(195)0 311 y(Solution.)41
b Fi(T)-8 b(aking)30 b(a)h(minimal)g(en)m(try)1070 456
y Fd(\014)1070 511 y(\014)1070 566 y(\014)1070 620 y(\014)1070
675 y(\014)1070 730 y(\014)1070 785 y(\014)1070 840 y(\014)p
1083 454 533 4 v 1144 534 a Fk(\003)91 b(\003)g(\003)g(\003)1418
643 y(\003)p 1083 900 V 1599 456 a Fd(\014)1599 511 y(\014)1599
566 y(\014)1599 620 y(\014)1599 675 y(\014)1599 730 y(\014)1599
785 y(\014)1599 840 y(\014)0 1086 y Fi(in)32 b(eac)m(h)f(column)g(do)s
(es)f(not)h(pro)s(duce)f(an)m(y)h(feasible)h(solutions,)f(and)g(w)m(e)h
(get)0 1195 y(the)d(b)s(ound)g(min)c Ff(>)h Fi(5)p Ff(:)k
Fi(T)-8 b(aking)31 b(a)f(minimal)h(en)m(try)1070 1341
y Fd(\014)1070 1396 y(\014)1070 1451 y(\014)1070 1505
y(\014)1070 1560 y(\014)1070 1615 y(\014)1070 1670 y(\014)1070
1725 y(\014)p 1083 1339 V 1144 1419 a Fk(\003)91 b(\003)228
b(\003)1144 1528 y(\003)g(\003)1281 1638 y(\003)91 b(\003)1144
1747 y(\003)g(\003)p 1083 1785 V 1599 1341 a Fd(\014)1599
1396 y(\014)1599 1451 y(\014)1599 1505 y(\014)1599 1560
y(\014)1599 1615 y(\014)1599 1670 y(\014)1599 1725 y(\014)0
1971 y Fi(in)43 b(eac)m(h)f(ro)m(w)h(do)s(es)f(pro)s(duce)f(t)m(w)m(o)i
(optimal)f(solutions.)79 b(Ho)m(w)m(ev)m(er,)47 b(for)42
b(a)0 2080 y(c)m(hange,)27 b(w)m(e)h(ignore)e(the)h(optimal)g(solution)
g(and)g(use)g(the)g(simplex)h(metho)s(d.)0 2190 y(The)c(p)s(oin)m(t)g
(of)h(this)f(exercise)g(is)h(that)e(although)g(common)h(sense)g(and)g
(sp)s(ecial)0 2299 y(tric)m(ks)34 b(giv)m(e)f(shortcuts)f(for)g(some)h
(problems,)h(the)f(simplex)g(metho)s(d)f(w)m(orks)0 2409
y(for)e(ev)m(ery)g(linear)g(program.)183 2519 y(So)36
b(w)m(e)h(treat)f(this)h(problem)f(as)h(a)g(transp)s(ortation)c
(problem.)60 b(As)38 b(an)0 2628 y(initial)31 b(basic)f(solution)f(w)m
(e)i(tak)m(e)e(the)h(one)f(found)g(b)m(y)i(a)f(studen)m(t)f(in)i(2000:)
p 792 2768 759 4 v 792 3230 4 462 v 1555 3230 V 792 3234
759 4 v 873 2834 a Fc(1)914 2867 y Fi(1)1059 2834 y Fc(1)134
b(2)1270 2867 y Fi(0)1415 2834 y Fc(1)881 2943 y(2)142
b(3)g(2)134 b(3)1448 2976 y Fi(1)881 3053 y Fc(4)g(3)1092
3086 y Fi(1)1237 3053 y Fc(3)142 b(4)881 3162 y(4)134
b(4)1092 3195 y Fi(0)1229 3162 y Fc(5)1270 3195 y Fi(1)1407
3162 y Fc(6)1448 3195 y Fi(0)1661 2867 y(1)-62 b Fk(\000)50
b Fi(0)-61 b Fk(\000)1656 2976 y Fi(1)-55 b Fk(\000)1656
3086 y Fi(1)g Fk(\000)1656 3195 y Fi(1)i Fk(\000)51 b
Fi(0)-61 b Fk(\000)861 3323 y Fi(1)d Fk(\000)142 b Fi(1)-64
b Fk(\000)145 b Fi(1)-64 b Fk(\000)127 b Fi(1)-64 b Fk(\000)1097
3433 y Fi(0)-55 b Fk(\000)304 b Fi(0)-61 b Fk(\000)183
3592 y Fi(Note)34 b(that)g(the)g(total)g(cost)g(at)g(this)h(solution)f
(is)i(1)23 b(+)g(3)g(+)h(3)f(+)g(5)33 b(=)h(12)0 3702
y(whic)m(h)22 b(is)h(b)s(etter)c(than)i(1)t(+)t(3)t(+)t(3)t(+)t(6)k(=)g
(13)d(giv)m(en)g(b)m(y)h(the)e(north)m(w)m(est)g(metho)s(d.)p
eop end
%%Page: 196 31
TeXDict begin 196 30 bop 0 91 a Fg(196)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)183
311 y Fi(Then)29 b(w)m(e)i(\014nd)e(p)s(oten)m(tials)g(and)g
Ff(w)1402 325 y Fe(ij)1467 311 y Fi(:)p 792 569 1169
4 v 792 1077 4 509 v 1964 1077 V 792 1081 1169 4 v 893
541 a(5)183 b(5)273 b(6)h(7)713 693 y(4)713 802 y(4)713
912 y(2)713 1022 y(1)885 660 y Fc(1)926 693 y Fi(1)1098
660 y Fc(1)1139 693 y Fi(\(0\))1418 660 y Fc(2)1459 693
y Fi(0)1667 660 y Fc(1)1708 693 y Fi(\()p Fk(\000)p Fi(2\))849
769 y Fc(2)890 802 y Fi(\(1\))1098 769 y Fc(3)1139 802
y Fi(\(2\))1383 769 y Fc(2)1424 802 y Fi(\(0\))1739 769
y Fc(3)1779 802 y Fi(1)849 879 y Fc(4)890 912 y Fi(\(1\))1134
879 y Fc(3)1175 912 y Fi(1)1347 879 y Fc(3)1388 912 y
Fi(\()p Fk(\000)p Fi(1\))1667 879 y Fc(4)1708 912 y Fi(\()p
Fk(\000)p Fi(1\))849 988 y Fc(4)890 1022 y Fi(\(0\))1134
988 y Fc(4)1175 1022 y Fi(0)1418 988 y Fc(5)1459 1022
y Fi(1)1739 988 y Fc(6)1779 1022 y Fi(0)183 1236 y(The)33
b(\014rst)g(p)s(oten)m(tial)f(5)i(on)g(top)f(w)m(as)h(c)m(hosen)f
(arbitrarily)-8 b(.)51 b(No)m(w)35 b(there)0 1345 y(are)h(three)f
(negativ)m(e)g Ff(w)830 1359 y Fe(ij)895 1345 y Ff(:)i
Fi(W)-8 b(e)36 b(select)g(the)f(p)s(osition)g(\(3,)j(3\))e(with)g
(negativ)m(e)0 1455 y Ff(w)65 1469 y Fc(33)177 1455 y
Fi(=)e Fk(\000)p Fi(1)h(\(there)f(w)m(ere)h(t)m(w)m(o)h(other)e(p)s
(ossible)g(c)m(hoices\).)56 b(This)35 b(leads)g(to)g(a)0
1564 y(lo)s(op)e(of)h(length)g(4.)52 b(\(The)33 b(c)m(hoice)h(of)g
Ff(w)1395 1578 y Fc(14)1505 1564 y Fi(=)e Fk(\000)p Fi(2)i(w)m(ould)g
(lead)g(to)g(a)g(lo)s(op)f(of)0 1674 y(length)28 b(4)i(and)f(a)h
(degenerate)c(piv)m(ot)k(step.\))39 b(Here)29 b(is)i(an)e(adjustmen)m
(t)f(of)h(the)0 1784 y(\015o)m(w)h(along)g(the)f(lo)s(op:)p
726 1924 1222 4 v 726 2432 4 509 v 1951 2432 V 726 2436
1222 4 v 815 1996 a Fc(1)855 2029 y Fi(1)1070 1996 y
Fc(1)1111 2029 y Fi(\(0\))1437 1996 y Fc(2)1478 2029
y Fi(0)1692 1996 y Fc(1)1733 2029 y Fi(\()p Fk(\000)p
Fi(2\))779 2105 y Fc(2)820 2138 y Fi(\(1\))1070 2105
y Fc(3)1111 2138 y Fi(\(2\))1402 2105 y Fc(2)1443 2138
y Fi(\(0\))1763 2105 y Fc(3)1804 2138 y Fi(1)779 2215
y Fc(4)820 2248 y Fi(\(1\))1028 2215 y Fc(3)1069 2248
y Fi(1)20 b Fk(\000)g Ff(")1439 2215 y Fc(3)1480 2248
y Ff(")1692 2215 y Fc(4)1733 2248 y Fi(\()p Fk(\000)p
Fi(1\))779 2324 y Fc(4)820 2358 y Fi(\(0\))1028 2324
y Fc(4)1069 2358 y Fi(0)g(+)g Ff(")1360 2324 y Fc(5)1401
2358 y Fi(1)g Fk(\000)g Ff(")1763 2324 y Fc(6)1804 2358
y Fi(0)183 2577 y(W)-8 b(e)28 b(tak)m(e)f Ff(")e Fi(=)g(1)j(and)f
(deselect)f(the)h(p)s(osition)g(\(4,)h(3\))f([another)f(p)s(ossible)0
2686 y(c)m(hoice)k(w)m(as)i(the)e(p)s(osition)f(\(3,)i(2\)].)43
b(The)31 b(ob)5 b(jectiv)m(e)30 b(function)f(impro)m(v)m(ed)j(b)m(y)0
2796 y(1.)40 b(Here)28 b(are)f(our)g(new)h(basic)f(feasible)h
(solution,)g(new)f(p)s(oten)m(tials,)g(and)h(new)0 2906
y(adjustmen)m(t)g(along)i(a)g(lo)s(op)f(of)h(length)g(6:)p
759 3155 1320 4 v 759 3663 4 509 v 2083 3663 V 759 3667
1320 4 v 848 3094 a(5)273 b(6)h(6)g(8)644 3279 y(4)644
3389 y(5)644 3499 y(3)644 3608 y(2)877 3246 y Fc(1)918
3279 y Fi(1)1096 3246 y Fc(1)1137 3279 y Fi(\()p Fk(\000)p
Fi(1\))1423 3246 y Fc(2)1464 3279 y Fi(0)19 b Fk(\000)i
Ff(")1755 3246 y Fc(1)1796 3279 y Fi(\()p Fk(\000)p Fi(3\))29
b Ff(")841 3356 y Fc(2)882 3389 y Fi(\(2\))1132 3356
y Fc(3)1173 3389 y Fi(\(2\))1464 3356 y Fc(2)1505 3389
y Fi(\(1\))1862 3356 y Fc(3)1903 3389 y Fi(1)841 3465
y Fc(4)882 3499 y Fi(\(2\))1090 3465 y Fc(3)1131 3499
y Fi(0)20 b Fk(\000)h Ff(")1423 3465 y Fc(3)1464 3499
y Fi(1)e(+)i Ff(")1791 3465 y Fc(4)1832 3499 y Fi(\()p
Fk(\000)p Fi(1\))841 3575 y Fc(4)882 3608 y Fi(\(1\))1090
3575 y Fc(4)1131 3608 y Fi(1)f(+)h Ff(")1464 3575 y Fc(5)1505
3608 y Fi(\(1\))1785 3575 y Fc(6)1826 3608 y Fi(0)f Fk(\000)g
Ff(")183 3827 y Fi(W)-8 b(e)42 b(ha)m(v)m(e)g(selected)e(the)h(p)s
(osition)g(\(1,)k(4\))c(as)h(a)g(new)g(basic)f(p)s(osition)0
3937 y(\(there)25 b(w)m(ere)i(t)m(w)m(o)g(other)f(c)m(hoices\).)39
b(W)-8 b(e)27 b(m)m(ust)g(tak)m(e)g Ff(")e Fi(=)g(0)p
Ff(;)j Fi(so)f(it)g(is)h(going)f(to)0 4047 y(b)s(e)e(a)h(degenerate)c
(piv)m(ot)27 b(step)e(that)f(do)s(es)h(not)g(c)m(hange)g(the)g
(feasible)g(solution)0 4156 y(\(but)35 b(it)i(c)m(hanges)f(the)f
(basis,)k(i.e.,)h(the)35 b(set)h(of)h(basic)f(v)-5 b(ariables\).)59
b(No)m(w)38 b(w)m(e)0 4266 y(deselect)g(the)g(p)s(osition)g(\(4,)j(4\))
e([the)g(other)f(p)s(ossible)g(c)m(hoices)h(w)m(ere)f(\(1,)k(3\))0
4375 y(and)35 b(\(3,)j(2\)],)g(compute)c(again)h(the)g(new)h(p)s(oten)m
(tials)e(and)i Ff(w)2156 4389 y Fe(ij)2221 4375 y Ff(;)g
Fi(and)g(\014nd)f(a)0 4485 y(negativ)m(e)24 b Ff(w)420
4499 y Fe(ij)509 4485 y Fi(\(once)f(w)m(e)i(\014nd)g(one)f(w)m(e)h(do)f
(not)g(need)f(to)i(compute)e(other)g Ff(w)2600 4499 y
Fe(ij)2664 4485 y Fi(\))0 4594 y(and)30 b(the)f(corresp)s(onding)e(lo)s
(op.)p eop end
%%Page: 197 32
TeXDict begin 197 31 bop 1258 91 a Fk(x)p Fh(18.)41 b(Job)33
b(Assignment)h(Pr)-5 b(oblem)90 b Fg(197)183 311 y Fi(Here)30
b(is)g(our)g(next)f(table:)p 759 542 1320 4 v 759 1051
4 509 v 2083 1051 V 759 1055 1320 4 v 893 501 a(5)274
b(6)g(6)f(5)629 666 y(4)629 775 y(2)629 885 y(3)629 994
y(2)842 633 y Fc(1)883 666 y Fi(1)20 b Fk(\000)h Ff(")1190
633 y Fc(1)1231 666 y Fi(\()p Fk(\000)p Fi(1\))1581 633
y Fc(2)1622 666 y Fi(0)1830 633 y Fc(1)1871 666 y Fi(0)f(+)g
Ff(")827 742 y Fc(2)868 775 y Fi(\()p Fk(\000)p Fi(1\))p
Ff(")1190 742 y Fc(3)1231 775 y Fi(\()p Fk(\000)p Fi(1\))1510
742 y Fc(2)1551 775 y Fi(\()p Fk(\000)p Fi(2\))1830 742
y Fc(3)1871 775 y Fi(1)g Fk(\000)g Ff(")884 852 y Fc(4)925
885 y Fi(\(2\))1261 852 y Fc(3)1302 885 y Fi(0)1581 852
y Fc(3)1622 885 y Fi(1)1871 852 y Fc(4)1912 885 y Fi(\(2\))884
961 y Fc(4)925 994 y Fi(\(1\))1261 961 y Fc(4)1302 994
y Fi(1)1545 961 y Fc(5)1586 994 y Fi(\(1\))1871 961 y
Fc(6)1912 994 y Fi(\(3\))183 1214 y(W)-8 b(e)26 b(ha)m(v)m(e)h
(selected)e(the)h(p)s(osition)f(\(2,)i(1\),)g(and)f Ff(")f
Fi(=)h(1)p Ff(:)h Fi(W)-8 b(e)26 b(deselect)f(the)0 1323
y(p)s(osition)k(\(2,)h(4\).)40 b(Next)30 b(w)m(e)h(compute)d(new)i(p)s
(oten)m(tials)f(and)g Ff(w)2212 1337 y Fe(ij)2277 1323
y Fi(:)p 891 1581 1057 4 v 891 2090 4 509 v 1951 2090
V 891 2094 1057 4 v 893 1540 a(5)183 b(5)273 b(5)h(5)799
1705 y(4)799 1814 y(3)799 1924 y(2)799 2033 y(1)1032
1671 y Fc(1)1073 1705 y Fi(0)1246 1671 y Fc(1)1287 1705
y Fi(\(0\))1495 1671 y Fc(2)1536 1705 y Fi(\(1\))1779
1671 y Fc(1)1820 1705 y Fi(1)1032 1781 y Fc(2)1073 1814
y Fi(1)1246 1781 y Fc(3)1287 1814 y Fi(\(1\))1530 1781
y Fc(2)1571 1814 y Fi(0)1744 1781 y Fc(3)1785 1814 y
Fi(\(1\))997 1891 y Fc(4)1038 1924 y Fi(\(1\))1281 1891
y Fc(3)1322 1924 y Fi(0)1530 1891 y Fc(3)1571 1924 y
Fi(1)1744 1891 y Fc(4)1785 1924 y Fi(\(1\))997 2000 y
Fc(4)1038 2033 y Fi(\(0\))1281 2000 y Fc(4)1322 2033
y Fi(1)1495 2000 y Fc(5)1536 2033 y Fi(\(1\))1744 2000
y Fc(6)1785 2033 y Fi(\(2\))183 2302 y(No)m(w)36 b(all)f
Ff(w)592 2316 y Fe(ij)691 2302 y Fk(\025)e Fi(0,)k(so)e(the)f(table)h
(is)g(optimal.)56 b(The)34 b(optimal)h(assign-)0 2412
y(men)m(t)30 b(it)g(giv)m(es)h(is)1090 2448 y Fd(\014)1090
2503 y(\014)1090 2557 y(\014)1090 2612 y(\014)1090 2667
y(\014)1090 2722 y(\014)1090 2777 y(\014)1090 2831 y(\014)p
1106 2446 488 4 v 1533 2525 a Fk(\003)1121 2635 y(\003)1396
2745 y(\003)1259 2854 y(\003)p 1106 2892 V 1580 2448
a Fd(\014)1580 2503 y(\014)1580 2557 y(\014)1580 2612
y(\014)1580 2667 y(\014)1580 2722 y(\014)1580 2777 y(\014)1580
2831 y(\014)0 3032 y Fi(The)f(optimal)g(v)-5 b(alue)29
b(is)i(min)26 b(=)f(10)p Ff(:)0 3169 y Fg(Remark)39 b(18.8.)107
b Fi(An)m(y)35 b(job)e(assignmen)m(t)g(problem)f(with)i
Ff(n)f Fi(w)m(ork)m(ers)h(and)0 3278 y(jobs)29 b(has)g
Ff(n)p Fi(!)g(feasible)g(solutions.)39 b(After)29 b(it)g(is)h(written)e
(as)h(a)g(transp)s(ortation)0 3388 y(problem,)38 b(these)d(solutions)i
(b)s(ecome)d(the)i(v)m(ertices)g(of)h(the)f(feasible)g(region)0
3498 y(whic)m(h)41 b(is)g(a)f(simplex)h(of)f(dimension)g
Ff(n)p Fi(!)28 b Fk(\000)f Fi(1)40 b(\(in)h(particular,)g(an)f(in)m
(terv)-5 b(al)0 3607 y(when)33 b Ff(n)d Fi(=)h(2\))p
Ff(:)i Fi(F)-8 b(or)33 b(eac)m(h)g(v)m(ertex,)h(there)e(are)h(2)1690
3574 y Fe(n)p Fa(\000)p Fc(1)1867 3607 y Fi(c)m(hoices)f(for)h(the)g
(basis.)0 3717 y(There)23 b(are)g(\()p Ff(n)495 3684
y Fc(2)535 3717 y Fi(\)!)h(w)m(a)m(ys)h(to)e(place)g(the)g(basic)h(v)-5
b(ariables)23 b(at)h(the)f(left)g(margin)g(of)0 3826
y(the)j(standard)f(tableau,)h(and)g(\()p Ff(n)1144 3793
y Fc(2)1184 3826 y Fi(\)!)h(w)m(a)m(ys)h(to)e(place)g(the)g(non)m
(basic)g(v)-5 b(ariables)0 3936 y(at)40 b(the)f(top)h(margin.)71
b(So)40 b(w)m(e)g(can)g(imagine)g(\()p Ff(n)1738 3903
y Fc(2)1778 3936 y Fi(\)!)1839 3903 y Fc(2)1907 3936
y Fk(\001)28 b Fi(2)2006 3903 y Fe(n)p Fa(\000)p Fc(1)2176
3936 y Fk(\001)f Ff(n)p Fi(!)41 b(standard)0 4045 y(tableaux)25
b(for)g(the)g(problem.)38 b(F)-8 b(ortunately)g(,)26
b(the)f(simplex)h(metho)s(d)e(do)s(es)h(not)0 4155 y(need)31
b(to)h(go)g(through)e(all)j(these)e(tableaux.)46 b(In)32
b(fact,)g(the)f(simplex)i(metho)s(d)0 4265 y(for)d(transp)s(ortation)c
(problems)k(pro)m(v)m(ed)g(to)f(b)s(e)g(v)m(ery)i(e\016cien)m(t)f(in)g
(practice.)p eop end
%%Page: 198 33
TeXDict begin 198 32 bop 0 91 a Fg(198)90 b Fh(Chapter)32
b(6)g(T)-7 b(r)i(ansp)g(ortation)33 b(Pr)-5 b(oblems)1096
311 y Fj(Exercises)0 447 y Fg(1{4.)68 b Fi(Solv)m(e)41
b(the)e(job)g(assignmen)m(t)g(problem)g(where)g(the)g(table)g(data)g
(are)0 557 y(in)m(terpreted)34 b(as)i(cost)f(p)s(er)g(job)h(p)s(er)f(p)
s(erson)f(and)i(the)f(goal)g(is)i(to)f(minimize)0 667
y(total)29 b(cost.)0 804 y Fg(1.)925 822 y Fd(\014)925
877 y(\014)925 932 y(\014)925 986 y(\014)925 1041 y(\014)925
1096 y(\014)925 1151 y(\014)925 1205 y(\014)925 1260
y(\014)925 1315 y(\014)p 942 820 777 4 v 957 900 a Fi(1)121
b(2)h(3)f(1)h(2)957 1009 y(3)f(1)h(2)f(1)h(0)957 1119
y(0)f(1)h(3)f(2)h(1)957 1228 y(2)f(3)h(4)f(3)h(3)957
1338 y(1)f(3)h(3)f(1)h(2)p 942 1375 V 1704 822 a Fd(\014)1704
877 y(\014)1704 932 y(\014)1704 986 y(\014)1704 1041
y(\014)1704 1096 y(\014)1704 1151 y(\014)1704 1205 y(\014)1704
1260 y(\014)1704 1315 y(\014)1750 1119 y Ff(:)0 1511
y Fg(2.)841 1529 y Fd(\014)841 1584 y(\014)841 1639 y(\014)841
1694 y(\014)841 1748 y(\014)841 1803 y(\014)841 1858
y(\014)841 1913 y(\014)841 1968 y(\014)841 2022 y(\014)841
2077 y(\014)841 2132 y(\014)p 858 1527 944 4 v 873 1607
a Fi(4)g(2)f(2)g(2)h(1)f(2)873 1716 y(2)h(3)f(1)g(2)h(4)f(4)873
1826 y(2)h(0)f(1)g(1)h(1)f(4)873 1936 y(2)h(3)f(4)g(3)h(4)f(3)873
2045 y(3)h(2)f(1)g(2)h(4)f(1)873 2155 y(1)h(2)f(1)g(2)h(0)f(1)p
858 2192 V 1788 1529 a Fd(\014)1788 1584 y(\014)1788
1639 y(\014)1788 1694 y(\014)1788 1748 y(\014)1788 1803
y(\014)1788 1858 y(\014)1788 1913 y(\014)1788 1968 y(\014)1788
2022 y(\014)1788 2077 y(\014)1788 2132 y(\014)1834 1881
y Ff(:)0 2328 y Fg(3.)757 2346 y Fd(\014)757 2401 y(\014)757
2456 y(\014)757 2510 y(\014)757 2565 y(\014)757 2620
y(\014)757 2675 y(\014)757 2730 y(\014)757 2784 y(\014)757
2839 y(\014)757 2894 y(\014)757 2949 y(\014)757 3004
y(\014)757 3058 y(\014)p 774 2344 1112 4 v 789 2424 a
Fi(2)h(1)f(4)h(3)f(4)h(3)f(1)789 2533 y(4)h(2)f(2)h(2)f(1)h(5)f(2)789
2643 y(2)h(3)f(5)h(1)f(2)h(4)f(4)789 2752 y(5)h(2)f(0)h(1)f(1)h(1)f(4)
789 2862 y(2)h(3)f(4)h(3)f(4)h(3)f(5)789 2972 y(5)h(3)f(2)h(1)f(2)h(4)f
(1)789 3081 y(1)h(2)f(1)h(2)f(0)h(1)f(5)p 774 3119 V
1872 2346 a Fd(\014)1872 2401 y(\014)1872 2456 y(\014)1872
2510 y(\014)1872 2565 y(\014)1872 2620 y(\014)1872 2675
y(\014)1872 2730 y(\014)1872 2784 y(\014)1872 2839 y(\014)1872
2894 y(\014)1872 2949 y(\014)1872 3004 y(\014)1872 3058
y(\014)1917 2752 y Ff(:)0 3254 y Fg(4.)590 3272 y Fd(\014)590
3327 y(\014)590 3382 y(\014)590 3437 y(\014)590 3492
y(\014)590 3546 y(\014)590 3601 y(\014)590 3656 y(\014)590
3711 y(\014)590 3766 y(\014)590 3820 y(\014)590 3875
y(\014)590 3930 y(\014)590 3985 y(\014)590 4040 y(\014)590
4094 y(\014)590 4149 y(\014)590 4204 y(\014)p 607 3271
1446 4 v 622 3350 a Fi(0)g(2)h(2)f(4)h(0)f(1)h(5)f(1)g(4)622
3460 y(2)g(3)h(1)f(3)h(4)f(3)h(2)f(4)g(1)622 3569 y(2)g(1)h(4)f(3)h(4)f
(3)h(1)f(2)g(4)622 3679 y(4)g(2)h(4)f(2)h(2)f(2)h(1)f(5)g(2)622
3788 y(2)g(3)h(5)f(1)h(2)f(4)h(2)f(4)g(4)622 3898 y(5)g(2)h(2)f(4)h(0)f
(1)h(1)f(1)g(4)622 4008 y(2)g(3)h(4)f(3)h(4)f(3)h(2)f(4)g(5)622
4117 y(5)g(2)h(4)f(3)h(2)f(1)h(2)f(4)g(1)622 4227 y(1)g(2)h(1)f(2)h(0)f
(1)h(2)f(4)g(5)p 607 4264 V 2039 3272 a Fd(\014)2039
3327 y(\014)2039 3382 y(\014)2039 3437 y(\014)2039 3492
y(\014)2039 3546 y(\014)2039 3601 y(\014)2039 3656 y(\014)2039
3711 y(\014)2039 3766 y(\014)2039 3820 y(\014)2039 3875
y(\014)2039 3930 y(\014)2039 3985 y(\014)2039 4040 y(\014)2039
4094 y(\014)2039 4149 y(\014)2039 4204 y(\014)2085 3788
y Ff(:)0 4404 y Fg(5{8.)79 b Fi(Solv)m(e)43 b(the)g(job)g(assignmen)m
(t)f(problem)h(1{4)f(with)i(the)e(table)g(data)0 4514
y(in)m(terpreted)28 b(as)j(the)f(rating)g(of)h(eac)m(h)f(w)m(ork)m(er)h
(on)f(eac)m(h)h(job)f(and)g(the)g(goal)h(is)0 4624 y(to)f(maximize)g
(e\016ciency)-8 b(.)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
